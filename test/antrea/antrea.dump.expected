AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "208f3afd-4faf-5761-b65a-bf568a99ccb5"}, .name = "208f3afd-4faf-5761-b65a-bf568a99ccb5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-12]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-12")], .matchExpressions = []}}}}, .addresses = ["10.10.1.2"], .span = ["testNode-1"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2147989f-e6af-5749-ba0e-83f61f60fefe"}, .name = "2147989f-e6af-5749-ba0e-83f61f60fefe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-1]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-1")], .matchExpressions = []}}}}, .addresses = ["10.10.0.1"], .span = ["testNode-0"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "21968c46-41c3-5a04-a5cf-a647f6f656b6"}, .name = "21968c46-41c3-5a04-a5cf-a647f6f656b6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-3]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-3")], .matchExpressions = []}}}}, .addresses = ["10.10.0.3"], .span = ["testNode-0"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2c4f71d7-2a06-5e6d-b36c-6eb4e2e2f3cf"}, .name = "2c4f71d7-2a06-5e6d-b36c-6eb4e2e2f3cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-17]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-17")], .matchExpressions = []}}}}, .addresses = ["10.10.1.7"], .span = ["testNode-1"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2d81c219-d357-5304-a6cb-b8f2ebcc2294"}, .name = "2d81c219-d357-5304-a6cb-b8f2ebcc2294", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-14]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-14")], .matchExpressions = []}}}}, .addresses = ["10.10.1.4"], .span = ["testNode-1"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2f4c3477-a740-579b-8eb2-1a48a21f5fa0"}, .name = "2f4c3477-a740-579b-8eb2-1a48a21f5fa0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-5]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-5")], .matchExpressions = []}}}}, .addresses = ["10.10.0.5"], .span = ["testNode-0"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "48751966-7751-5e92-82c2-ca4e0df2c7e7"}, .name = "48751966-7751-5e92-82c2-ca4e0df2c7e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-4]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-4")], .matchExpressions = []}}}}, .addresses = ["10.10.0.4"], .span = ["testNode-0"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4cd21ab0-e6f3-5cbf-9d3f-baeec77a57f3"}, .name = "4cd21ab0-e6f3-5cbf-9d3f-baeec77a57f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-2]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-2")], .matchExpressions = []}}}}, .addresses = ["10.10.0.2"], .span = ["testNode-0"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "53c31970-d212-502d-a92f-f295fef40016"}, .name = "53c31970-d212-502d-a92f-f295fef40016", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-18]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-18")], .matchExpressions = []}}}}, .addresses = ["10.10.1.8"], .span = ["testNode-1"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "68c691f2-7eb5-5354-b3f7-88c4aa2ac23f"}, .name = "68c691f2-7eb5-5354-b3f7-88c4aa2ac23f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-22]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-22")], .matchExpressions = []}}}}, .addresses = ["10.10.2.2"], .span = ["testNode-2"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6da38bf0-1965-54d4-b4da-3981a9cb3abd"}, .name = "6da38bf0-1965-54d4-b4da-3981a9cb3abd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-7]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-7")], .matchExpressions = []}}}}, .addresses = ["10.10.0.7"], .span = ["testNode-0"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "84d95faa-012d-5288-ae40-788efddb92a0"}, .name = "84d95faa-012d-5288-ae40-788efddb92a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-23]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-23")], .matchExpressions = []}}}}, .addresses = ["10.10.2.3"], .span = ["testNode-2"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8729fd0a-5c54-5db9-af45-51cadb9497ad"}, .name = "8729fd0a-5c54-5db9-af45-51cadb9497ad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-8]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-8")], .matchExpressions = []}}}}, .addresses = ["10.10.0.8"], .span = ["testNode-0"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "893f2a29-28c2-5766-9b9a-b90764ba0e1f"}, .name = "893f2a29-28c2-5766-9b9a-b90764ba0e1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-15]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-15")], .matchExpressions = []}}}}, .addresses = ["10.10.1.5"], .span = ["testNode-1"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "93a645bc-031d-5524-82a0-ca445ae1d1d4"}, .name = "93a645bc-031d-5524-82a0-ca445ae1d1d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-9]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-9")], .matchExpressions = []}}}}, .addresses = ["10.10.0.9"], .span = ["testNode-0"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a86be111-0734-5db8-a656-ee4e8bf0aed7"}, .name = "a86be111-0734-5db8-a656-ee4e8bf0aed7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-21]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-21")], .matchExpressions = []}}}}, .addresses = ["10.10.2.1"], .span = ["testNode-2"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ab6503c0-5611-5c9a-a9d4-e544fa70549f"}, .name = "ab6503c0-5611-5c9a-a9d4-e544fa70549f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-10]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-10")], .matchExpressions = []}}}}, .addresses = ["10.10.1.0"], .span = ["testNode-0"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b1bca95d-220e-5b74-b38d-0de3c9090ed8"}, .name = "b1bca95d-220e-5b74-b38d-0de3c9090ed8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-11]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-11")], .matchExpressions = []}}}}, .addresses = ["10.10.1.1"], .span = ["testNode-1"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c30355fd-716b-5eaa-a629-601ff71fe936"}, .name = "c30355fd-716b-5eaa-a629-601ff71fe936", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-16]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-16")], .matchExpressions = []}}}}, .addresses = ["10.10.1.6"], .span = ["testNode-1"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c8d3f620-d41d-5ddf-bb54-94d2b26ee8cd"}, .name = "c8d3f620-d41d-5ddf-bb54-94d2b26ee8cd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-13]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-13")], .matchExpressions = []}}}}, .addresses = ["10.10.1.3"], .span = ["testNode-1"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e39017a8-50a8-542e-a4ef-0a3f387e7bf2"}, .name = "e39017a8-50a8-542e-a4ef-0a3f387e7bf2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-19]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-19")], .matchExpressions = []}}}}, .addresses = ["10.10.1.9"], .span = ["testNode-1"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ea45898f-2a72-5623-85ed-14b453031175"}, .name = "ea45898f-2a72-5623-85ed-14b453031175", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-20]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-20")], .matchExpressions = []}}}}, .addresses = ["10.10.2.0"], .span = ["testNode-1"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f35e9b05-11d6-5059-9067-bd9d8be5b836"}, .name = "f35e9b05-11d6-5059-9067-bd9d8be5b836", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-6]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-6")], .matchExpressions = []}}}}, .addresses = ["10.10.0.6"], .span = ["testNode-0"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "208f3afd-4faf-5761-b65a-bf568a99ccb5"}, .name = "208f3afd-4faf-5761-b65a-bf568a99ccb5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-12]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-12")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-12", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2147989f-e6af-5749-ba0e-83f61f60fefe"}, .name = "2147989f-e6af-5749-ba0e-83f61f60fefe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-1]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-1")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-1", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "21968c46-41c3-5a04-a5cf-a647f6f656b6"}, .name = "21968c46-41c3-5a04-a5cf-a647f6f656b6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-3]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-3")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-3", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2c4f71d7-2a06-5e6d-b36c-6eb4e2e2f3cf"}, .name = "2c4f71d7-2a06-5e6d-b36c-6eb4e2e2f3cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-17]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-17")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-17", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2d81c219-d357-5304-a6cb-b8f2ebcc2294"}, .name = "2d81c219-d357-5304-a6cb-b8f2ebcc2294", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-14]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-14")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-14", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2f4c3477-a740-579b-8eb2-1a48a21f5fa0"}, .name = "2f4c3477-a740-579b-8eb2-1a48a21f5fa0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-5]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-5")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-5", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "48751966-7751-5e92-82c2-ca4e0df2c7e7"}, .name = "48751966-7751-5e92-82c2-ca4e0df2c7e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-4]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-4")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-4", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4cd21ab0-e6f3-5cbf-9d3f-baeec77a57f3"}, .name = "4cd21ab0-e6f3-5cbf-9d3f-baeec77a57f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-2]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-2")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-2", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4fd8dd76-8a86-5dfc-8d03-690d43e9169c"}, .name = "4fd8dd76-8a86-5dfc-8d03-690d43e9169c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-0]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-0")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-0", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "53c31970-d212-502d-a92f-f295fef40016"}, .name = "53c31970-d212-502d-a92f-f295fef40016", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-18]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-18")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-18", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "68c691f2-7eb5-5354-b3f7-88c4aa2ac23f"}, .name = "68c691f2-7eb5-5354-b3f7-88c4aa2ac23f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-22]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-22")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-22", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6da38bf0-1965-54d4-b4da-3981a9cb3abd"}, .name = "6da38bf0-1965-54d4-b4da-3981a9cb3abd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-7]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-7")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-7", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8729fd0a-5c54-5db9-af45-51cadb9497ad"}, .name = "8729fd0a-5c54-5db9-af45-51cadb9497ad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-8]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-8")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-8", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "893f2a29-28c2-5766-9b9a-b90764ba0e1f"}, .name = "893f2a29-28c2-5766-9b9a-b90764ba0e1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-15]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-15")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-15", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "93a645bc-031d-5524-82a0-ca445ae1d1d4"}, .name = "93a645bc-031d-5524-82a0-ca445ae1d1d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-9]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-9")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-9", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a86be111-0734-5db8-a656-ee4e8bf0aed7"}, .name = "a86be111-0734-5db8-a656-ee4e8bf0aed7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-21]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-21")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-21", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ab6503c0-5611-5c9a-a9d4-e544fa70549f"}, .name = "ab6503c0-5611-5c9a-a9d4-e544fa70549f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-10]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-10")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-10", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b1bca95d-220e-5b74-b38d-0de3c9090ed8"}, .name = "b1bca95d-220e-5b74-b38d-0de3c9090ed8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-11]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-11")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-11", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c30355fd-716b-5eaa-a629-601ff71fe936"}, .name = "c30355fd-716b-5eaa-a629-601ff71fe936", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-16]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-16")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-16", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c8d3f620-d41d-5ddf-bb54-94d2b26ee8cd"}, .name = "c8d3f620-d41d-5ddf-bb54-94d2b26ee8cd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-13]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-13")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-13", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e39017a8-50a8-542e-a4ef-0a3f387e7bf2"}, .name = "e39017a8-50a8-542e-a4ef-0a3f387e7bf2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-19]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-19")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-19", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ea45898f-2a72-5623-85ed-14b453031175"}, .name = "ea45898f-2a72-5623-85ed-14b453031175", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-20]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-20")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-20", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f35e9b05-11d6-5059-9067-bd9d8be5b836"}, .name = "f35e9b05-11d6-5059-9067-bd9d8be5b836", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-6]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-6")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-6", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-0"}, .name = "testNP-0", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2147989f-e6af-5749-ba0e-83f61f60fefe"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4fd8dd76-8a86-5dfc-8d03-690d43e9169c"]}, .span = ["testNode-0"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-1"}, .name = "testNP-1", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4cd21ab0-e6f3-5cbf-9d3f-baeec77a57f3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2147989f-e6af-5749-ba0e-83f61f60fefe"]}, .span = ["testNode-0"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-10"}, .name = "testNP-10", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b1bca95d-220e-5b74-b38d-0de3c9090ed8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ab6503c0-5611-5c9a-a9d4-e544fa70549f"]}, .span = ["testNode-1"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-11"}, .name = "testNP-11", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["208f3afd-4faf-5761-b65a-bf568a99ccb5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b1bca95d-220e-5b74-b38d-0de3c9090ed8"]}, .span = ["testNode-1"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-12"}, .name = "testNP-12", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c8d3f620-d41d-5ddf-bb54-94d2b26ee8cd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["208f3afd-4faf-5761-b65a-bf568a99ccb5"]}, .span = ["testNode-1"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-13"}, .name = "testNP-13", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2d81c219-d357-5304-a6cb-b8f2ebcc2294"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c8d3f620-d41d-5ddf-bb54-94d2b26ee8cd"]}, .span = ["testNode-1"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-14"}, .name = "testNP-14", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["893f2a29-28c2-5766-9b9a-b90764ba0e1f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2d81c219-d357-5304-a6cb-b8f2ebcc2294"]}, .span = ["testNode-1"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-15"}, .name = "testNP-15", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c30355fd-716b-5eaa-a629-601ff71fe936"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["893f2a29-28c2-5766-9b9a-b90764ba0e1f"]}, .span = ["testNode-1"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-16"}, .name = "testNP-16", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2c4f71d7-2a06-5e6d-b36c-6eb4e2e2f3cf"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c30355fd-716b-5eaa-a629-601ff71fe936"]}, .span = ["testNode-1"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-17"}, .name = "testNP-17", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["53c31970-d212-502d-a92f-f295fef40016"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2c4f71d7-2a06-5e6d-b36c-6eb4e2e2f3cf"]}, .span = ["testNode-1"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-18"}, .name = "testNP-18", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e39017a8-50a8-542e-a4ef-0a3f387e7bf2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["53c31970-d212-502d-a92f-f295fef40016"]}, .span = ["testNode-1"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-19"}, .name = "testNP-19", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ea45898f-2a72-5623-85ed-14b453031175"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e39017a8-50a8-542e-a4ef-0a3f387e7bf2"]}, .span = ["testNode-1"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-2"}, .name = "testNP-2", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["21968c46-41c3-5a04-a5cf-a647f6f656b6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4cd21ab0-e6f3-5cbf-9d3f-baeec77a57f3"]}, .span = ["testNode-0"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-20"}, .name = "testNP-20", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a86be111-0734-5db8-a656-ee4e8bf0aed7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ea45898f-2a72-5623-85ed-14b453031175"]}, .span = ["testNode-2"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-21"}, .name = "testNP-21", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["68c691f2-7eb5-5354-b3f7-88c4aa2ac23f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a86be111-0734-5db8-a656-ee4e8bf0aed7"]}, .span = ["testNode-2"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-22"}, .name = "testNP-22", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["84d95faa-012d-5288-ae40-788efddb92a0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["68c691f2-7eb5-5354-b3f7-88c4aa2ac23f"]}, .span = ["testNode-2"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-3"}, .name = "testNP-3", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["48751966-7751-5e92-82c2-ca4e0df2c7e7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["21968c46-41c3-5a04-a5cf-a647f6f656b6"]}, .span = ["testNode-0"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-4"}, .name = "testNP-4", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2f4c3477-a740-579b-8eb2-1a48a21f5fa0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["48751966-7751-5e92-82c2-ca4e0df2c7e7"]}, .span = ["testNode-0"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-5"}, .name = "testNP-5", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f35e9b05-11d6-5059-9067-bd9d8be5b836"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2f4c3477-a740-579b-8eb2-1a48a21f5fa0"]}, .span = ["testNode-0"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-6"}, .name = "testNP-6", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6da38bf0-1965-54d4-b4da-3981a9cb3abd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f35e9b05-11d6-5059-9067-bd9d8be5b836"]}, .span = ["testNode-0"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-7"}, .name = "testNP-7", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8729fd0a-5c54-5db9-af45-51cadb9497ad"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6da38bf0-1965-54d4-b4da-3981a9cb3abd"]}, .span = ["testNode-0"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-8"}, .name = "testNP-8", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["93a645bc-031d-5524-82a0-ca445ae1d1d4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8729fd0a-5c54-5db9-af45-51cadb9497ad"]}, .span = ["testNode-0"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-9"}, .name = "testNP-9", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ab6503c0-5611-5c9a-a9d4-e544fa70549f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["93a645bc-031d-5524-82a0-ca445ae1d1d4"]}, .span = ["testNode-0"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0f9fbc5c-5a7b-5c5f-9aee-9a43fd621356"}, .name = "0f9fbc5c-5a7b-5c5f-9aee-9a43fd621356", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-50]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-50")], .matchExpressions = []}}}}, .addresses = ["10.10.5.0"], .span = ["testNode-4"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "210240b9-6894-57ce-9c87-05e71d4dfadb"}, .name = "210240b9-6894-57ce-9c87-05e71d4dfadb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-40]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-40")], .matchExpressions = []}}}}, .addresses = ["10.10.4.0"], .span = ["testNode-3"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "23869241-7820-549f-a94b-50ad97b9fb31"}, .name = "23869241-7820-549f-a94b-50ad97b9fb31", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-37]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-37")], .matchExpressions = []}}}}, .addresses = ["10.10.3.7"], .span = ["testNode-3"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2d7c595d-9ae7-5c49-a196-9bf7e286c7ae"}, .name = "2d7c595d-9ae7-5c49-a196-9bf7e286c7ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-51]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-51")], .matchExpressions = []}}}}, .addresses = ["10.10.5.1"], .span = ["testNode-5"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "33c89372-d5b7-5b27-9b11-7081dc6c75c6"}, .name = "33c89372-d5b7-5b27-9b11-7081dc6c75c6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-29]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-29")], .matchExpressions = []}}}}, .addresses = ["10.10.2.9"], .span = ["testNode-2"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "34c56586-0b5e-5952-a438-e695a1eaf662"}, .name = "34c56586-0b5e-5952-a438-e695a1eaf662", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-33]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-33")], .matchExpressions = []}}}}, .addresses = ["10.10.3.3"], .span = ["testNode-3"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3d076cea-adb0-5b25-a9c3-eb0fc9cc237f"}, .name = "3d076cea-adb0-5b25-a9c3-eb0fc9cc237f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-31]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-31")], .matchExpressions = []}}}}, .addresses = ["10.10.3.1"], .span = ["testNode-3"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "475c83de-e4e5-51b7-8e62-923c954d24a0"}, .name = "475c83de-e4e5-51b7-8e62-923c954d24a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-42]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-42")], .matchExpressions = []}}}}, .addresses = ["10.10.4.2"], .span = ["testNode-4"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "48aff4f5-0c50-54f0-af33-70e2ab77f5b0"}, .name = "48aff4f5-0c50-54f0-af33-70e2ab77f5b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-30]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-30")], .matchExpressions = []}}}}, .addresses = ["10.10.3.0"], .span = ["testNode-2"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4962d527-1649-5cd9-9aa6-95739cc1ed2f"}, .name = "4962d527-1649-5cd9-9aa6-95739cc1ed2f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-24]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-24")], .matchExpressions = []}}}}, .addresses = ["10.10.2.4"], .span = ["testNode-2"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "55a30f68-81ce-5650-b9a1-7f0b3689dde6"}, .name = "55a30f68-81ce-5650-b9a1-7f0b3689dde6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-55]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-55")], .matchExpressions = []}}}}, .addresses = ["10.10.5.5"], .span = ["testNode-5"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5a00ebaf-738c-52e4-aa5b-86f171891e67"}, .name = "5a00ebaf-738c-52e4-aa5b-86f171891e67", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-54]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-54")], .matchExpressions = []}}}}, .addresses = ["10.10.5.4"], .span = ["testNode-5"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "602c5722-753f-5d2c-ab9c-9991b7170ddb"}, .name = "602c5722-753f-5d2c-ab9c-9991b7170ddb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-41]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-41")], .matchExpressions = []}}}}, .addresses = ["10.10.4.1"], .span = ["testNode-4"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "641838ad-7bfd-5cd6-a02d-fb5f08f35318"}, .name = "641838ad-7bfd-5cd6-a02d-fb5f08f35318", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-38]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-38")], .matchExpressions = []}}}}, .addresses = ["10.10.3.8"], .span = ["testNode-3"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "66501457-d7ea-568b-9e57-2211ab397fce"}, .name = "66501457-d7ea-568b-9e57-2211ab397fce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-35]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-35")], .matchExpressions = []}}}}, .addresses = ["10.10.3.5"], .span = ["testNode-3"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6ce6739e-834b-5cc8-b9f6-0bd7d7a785dd"}, .name = "6ce6739e-834b-5cc8-b9f6-0bd7d7a785dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-32]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-32")], .matchExpressions = []}}}}, .addresses = ["10.10.3.2"], .span = ["testNode-3"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "71083daa-f480-59d1-a72a-046de2f709db"}, .name = "71083daa-f480-59d1-a72a-046de2f709db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-48]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-48")], .matchExpressions = []}}}}, .addresses = ["10.10.4.8"], .span = ["testNode-4"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "71b8a0db-408a-5bdd-954c-0a5c1eadc9d4"}, .name = "71b8a0db-408a-5bdd-954c-0a5c1eadc9d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-46]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-46")], .matchExpressions = []}}}}, .addresses = ["10.10.4.6"], .span = ["testNode-4"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "785109ce-b196-523d-a25e-126f78b2b7a6"}, .name = "785109ce-b196-523d-a25e-126f78b2b7a6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-53]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-53")], .matchExpressions = []}}}}, .addresses = ["10.10.5.3"], .span = ["testNode-5"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9485d685-c6cd-518f-8452-c787dcb05835"}, .name = "9485d685-c6cd-518f-8452-c787dcb05835", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-34]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-34")], .matchExpressions = []}}}}, .addresses = ["10.10.3.4"], .span = ["testNode-3"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "94d3564e-0363-5fa2-9f6d-be334db4bcb6"}, .name = "94d3564e-0363-5fa2-9f6d-be334db4bcb6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-49]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-49")], .matchExpressions = []}}}}, .addresses = ["10.10.4.9"], .span = ["testNode-4"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a82b6b17-7be3-5ebf-8d0d-3c47a657b459"}, .name = "a82b6b17-7be3-5ebf-8d0d-3c47a657b459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-52]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-52")], .matchExpressions = []}}}}, .addresses = ["10.10.5.2"], .span = ["testNode-5"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a9f74d5b-ce62-5626-8198-ce25bf81ad15"}, .name = "a9f74d5b-ce62-5626-8198-ce25bf81ad15", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-45]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-45")], .matchExpressions = []}}}}, .addresses = ["10.10.4.5"], .span = ["testNode-4"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bc921a89-938a-5c34-94cc-104ece73c6a4"}, .name = "bc921a89-938a-5c34-94cc-104ece73c6a4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-44]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-44")], .matchExpressions = []}}}}, .addresses = ["10.10.4.4"], .span = ["testNode-4"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ce44739f-83fa-5414-b860-366a7b1cee45"}, .name = "ce44739f-83fa-5414-b860-366a7b1cee45", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-28]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-28")], .matchExpressions = []}}}}, .addresses = ["10.10.2.8"], .span = ["testNode-2"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d7337363-189b-53ad-89fa-0f7cbfe68534"}, .name = "d7337363-189b-53ad-89fa-0f7cbfe68534", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-27]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-27")], .matchExpressions = []}}}}, .addresses = ["10.10.2.7"], .span = ["testNode-2"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "db0f718e-38be-519e-8247-4318117fe02a"}, .name = "db0f718e-38be-519e-8247-4318117fe02a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-39]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-39")], .matchExpressions = []}}}}, .addresses = ["10.10.3.9"], .span = ["testNode-3"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ed4f616f-9f03-59f5-8080-968295e9b45a"}, .name = "ed4f616f-9f03-59f5-8080-968295e9b45a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-47]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-47")], .matchExpressions = []}}}}, .addresses = ["10.10.4.7"], .span = ["testNode-4"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f489cdaa-c5e8-5a99-8070-b15ba9f0dcca"}, .name = "f489cdaa-c5e8-5a99-8070-b15ba9f0dcca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-26]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-26")], .matchExpressions = []}}}}, .addresses = ["10.10.2.6"], .span = ["testNode-2"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f9af42e5-d01e-5852-906f-94d78a462008"}, .name = "f9af42e5-d01e-5852-906f-94d78a462008", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-25]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-25")], .matchExpressions = []}}}}, .addresses = ["10.10.2.5"], .span = ["testNode-2"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fb1e260b-b5c2-546d-970a-3e472dd9fb2a"}, .name = "fb1e260b-b5c2-546d-970a-3e472dd9fb2a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-36]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-36")], .matchExpressions = []}}}}, .addresses = ["10.10.3.6"], .span = ["testNode-3"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fed401ba-d98f-5082-b730-1c9d3d891ae1"}, .name = "fed401ba-d98f-5082-b730-1c9d3d891ae1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-43]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-43")], .matchExpressions = []}}}}, .addresses = ["10.10.4.3"], .span = ["testNode-4"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0f9fbc5c-5a7b-5c5f-9aee-9a43fd621356"}, .name = "0f9fbc5c-5a7b-5c5f-9aee-9a43fd621356", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-50]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-50")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-50", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "210240b9-6894-57ce-9c87-05e71d4dfadb"}, .name = "210240b9-6894-57ce-9c87-05e71d4dfadb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-40]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-40")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-40", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "23869241-7820-549f-a94b-50ad97b9fb31"}, .name = "23869241-7820-549f-a94b-50ad97b9fb31", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-37]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-37")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-37", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2d7c595d-9ae7-5c49-a196-9bf7e286c7ae"}, .name = "2d7c595d-9ae7-5c49-a196-9bf7e286c7ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-51]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-51")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-51", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "33c89372-d5b7-5b27-9b11-7081dc6c75c6"}, .name = "33c89372-d5b7-5b27-9b11-7081dc6c75c6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-29]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-29")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-29", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "34c56586-0b5e-5952-a438-e695a1eaf662"}, .name = "34c56586-0b5e-5952-a438-e695a1eaf662", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-33]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-33")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-33", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3d076cea-adb0-5b25-a9c3-eb0fc9cc237f"}, .name = "3d076cea-adb0-5b25-a9c3-eb0fc9cc237f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-31]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-31")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-31", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "475c83de-e4e5-51b7-8e62-923c954d24a0"}, .name = "475c83de-e4e5-51b7-8e62-923c954d24a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-42]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-42")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-42", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "48aff4f5-0c50-54f0-af33-70e2ab77f5b0"}, .name = "48aff4f5-0c50-54f0-af33-70e2ab77f5b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-30]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-30")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-30", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4962d527-1649-5cd9-9aa6-95739cc1ed2f"}, .name = "4962d527-1649-5cd9-9aa6-95739cc1ed2f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-24]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-24")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-24", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5a00ebaf-738c-52e4-aa5b-86f171891e67"}, .name = "5a00ebaf-738c-52e4-aa5b-86f171891e67", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-54]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-54")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-54", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "602c5722-753f-5d2c-ab9c-9991b7170ddb"}, .name = "602c5722-753f-5d2c-ab9c-9991b7170ddb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-41]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-41")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-41", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "641838ad-7bfd-5cd6-a02d-fb5f08f35318"}, .name = "641838ad-7bfd-5cd6-a02d-fb5f08f35318", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-38]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-38")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-38", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "66501457-d7ea-568b-9e57-2211ab397fce"}, .name = "66501457-d7ea-568b-9e57-2211ab397fce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-35]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-35")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-35", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6ce6739e-834b-5cc8-b9f6-0bd7d7a785dd"}, .name = "6ce6739e-834b-5cc8-b9f6-0bd7d7a785dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-32]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-32")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-32", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "71083daa-f480-59d1-a72a-046de2f709db"}, .name = "71083daa-f480-59d1-a72a-046de2f709db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-48]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-48")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-48", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "71b8a0db-408a-5bdd-954c-0a5c1eadc9d4"}, .name = "71b8a0db-408a-5bdd-954c-0a5c1eadc9d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-46]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-46")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-46", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "785109ce-b196-523d-a25e-126f78b2b7a6"}, .name = "785109ce-b196-523d-a25e-126f78b2b7a6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-53]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-53")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-53", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "84d95faa-012d-5288-ae40-788efddb92a0"}, .name = "84d95faa-012d-5288-ae40-788efddb92a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-23]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-23")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-23", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9485d685-c6cd-518f-8452-c787dcb05835"}, .name = "9485d685-c6cd-518f-8452-c787dcb05835", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-34]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-34")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-34", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "94d3564e-0363-5fa2-9f6d-be334db4bcb6"}, .name = "94d3564e-0363-5fa2-9f6d-be334db4bcb6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-49]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-49")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-49", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a82b6b17-7be3-5ebf-8d0d-3c47a657b459"}, .name = "a82b6b17-7be3-5ebf-8d0d-3c47a657b459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-52]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-52")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-52", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a9f74d5b-ce62-5626-8198-ce25bf81ad15"}, .name = "a9f74d5b-ce62-5626-8198-ce25bf81ad15", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-45]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-45")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-45", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bc921a89-938a-5c34-94cc-104ece73c6a4"}, .name = "bc921a89-938a-5c34-94cc-104ece73c6a4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-44]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-44")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-44", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ce44739f-83fa-5414-b860-366a7b1cee45"}, .name = "ce44739f-83fa-5414-b860-366a7b1cee45", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-28]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-28")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-28", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d7337363-189b-53ad-89fa-0f7cbfe68534"}, .name = "d7337363-189b-53ad-89fa-0f7cbfe68534", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-27]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-27")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-27", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "db0f718e-38be-519e-8247-4318117fe02a"}, .name = "db0f718e-38be-519e-8247-4318117fe02a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-39]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-39")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-39", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ed4f616f-9f03-59f5-8080-968295e9b45a"}, .name = "ed4f616f-9f03-59f5-8080-968295e9b45a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-47]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-47")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-47", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f489cdaa-c5e8-5a99-8070-b15ba9f0dcca"}, .name = "f489cdaa-c5e8-5a99-8070-b15ba9f0dcca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-26]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-26")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-26", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f9af42e5-d01e-5852-906f-94d78a462008"}, .name = "f9af42e5-d01e-5852-906f-94d78a462008", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-25]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-25")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-25", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fb1e260b-b5c2-546d-970a-3e472dd9fb2a"}, .name = "fb1e260b-b5c2-546d-970a-3e472dd9fb2a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-36]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-36")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-36", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fed401ba-d98f-5082-b730-1c9d3d891ae1"}, .name = "fed401ba-d98f-5082-b730-1c9d3d891ae1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-43]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-43")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-43", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-23"}, .name = "testNP-23", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4962d527-1649-5cd9-9aa6-95739cc1ed2f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["84d95faa-012d-5288-ae40-788efddb92a0"]}, .span = ["testNode-2"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-24"}, .name = "testNP-24", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f9af42e5-d01e-5852-906f-94d78a462008"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4962d527-1649-5cd9-9aa6-95739cc1ed2f"]}, .span = ["testNode-2"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-25"}, .name = "testNP-25", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f489cdaa-c5e8-5a99-8070-b15ba9f0dcca"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f9af42e5-d01e-5852-906f-94d78a462008"]}, .span = ["testNode-2"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-26"}, .name = "testNP-26", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d7337363-189b-53ad-89fa-0f7cbfe68534"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f489cdaa-c5e8-5a99-8070-b15ba9f0dcca"]}, .span = ["testNode-2"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-27"}, .name = "testNP-27", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ce44739f-83fa-5414-b860-366a7b1cee45"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d7337363-189b-53ad-89fa-0f7cbfe68534"]}, .span = ["testNode-2"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-28"}, .name = "testNP-28", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["33c89372-d5b7-5b27-9b11-7081dc6c75c6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ce44739f-83fa-5414-b860-366a7b1cee45"]}, .span = ["testNode-2"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-29"}, .name = "testNP-29", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["48aff4f5-0c50-54f0-af33-70e2ab77f5b0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["33c89372-d5b7-5b27-9b11-7081dc6c75c6"]}, .span = ["testNode-2"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-30"}, .name = "testNP-30", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3d076cea-adb0-5b25-a9c3-eb0fc9cc237f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["48aff4f5-0c50-54f0-af33-70e2ab77f5b0"]}, .span = ["testNode-3"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-31"}, .name = "testNP-31", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6ce6739e-834b-5cc8-b9f6-0bd7d7a785dd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3d076cea-adb0-5b25-a9c3-eb0fc9cc237f"]}, .span = ["testNode-3"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-32"}, .name = "testNP-32", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["34c56586-0b5e-5952-a438-e695a1eaf662"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6ce6739e-834b-5cc8-b9f6-0bd7d7a785dd"]}, .span = ["testNode-3"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-33"}, .name = "testNP-33", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9485d685-c6cd-518f-8452-c787dcb05835"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["34c56586-0b5e-5952-a438-e695a1eaf662"]}, .span = ["testNode-3"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-34"}, .name = "testNP-34", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["66501457-d7ea-568b-9e57-2211ab397fce"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9485d685-c6cd-518f-8452-c787dcb05835"]}, .span = ["testNode-3"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-35"}, .name = "testNP-35", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fb1e260b-b5c2-546d-970a-3e472dd9fb2a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["66501457-d7ea-568b-9e57-2211ab397fce"]}, .span = ["testNode-3"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-36"}, .name = "testNP-36", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["23869241-7820-549f-a94b-50ad97b9fb31"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fb1e260b-b5c2-546d-970a-3e472dd9fb2a"]}, .span = ["testNode-3"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-37"}, .name = "testNP-37", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["641838ad-7bfd-5cd6-a02d-fb5f08f35318"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["23869241-7820-549f-a94b-50ad97b9fb31"]}, .span = ["testNode-3"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-38"}, .name = "testNP-38", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["db0f718e-38be-519e-8247-4318117fe02a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["641838ad-7bfd-5cd6-a02d-fb5f08f35318"]}, .span = ["testNode-3"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-39"}, .name = "testNP-39", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["210240b9-6894-57ce-9c87-05e71d4dfadb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["db0f718e-38be-519e-8247-4318117fe02a"]}, .span = ["testNode-3"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-40"}, .name = "testNP-40", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["602c5722-753f-5d2c-ab9c-9991b7170ddb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["210240b9-6894-57ce-9c87-05e71d4dfadb"]}, .span = ["testNode-4"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-41"}, .name = "testNP-41", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["475c83de-e4e5-51b7-8e62-923c954d24a0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["602c5722-753f-5d2c-ab9c-9991b7170ddb"]}, .span = ["testNode-4"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-42"}, .name = "testNP-42", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fed401ba-d98f-5082-b730-1c9d3d891ae1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["475c83de-e4e5-51b7-8e62-923c954d24a0"]}, .span = ["testNode-4"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-43"}, .name = "testNP-43", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bc921a89-938a-5c34-94cc-104ece73c6a4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fed401ba-d98f-5082-b730-1c9d3d891ae1"]}, .span = ["testNode-4"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-44"}, .name = "testNP-44", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a9f74d5b-ce62-5626-8198-ce25bf81ad15"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bc921a89-938a-5c34-94cc-104ece73c6a4"]}, .span = ["testNode-4"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-45"}, .name = "testNP-45", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["71b8a0db-408a-5bdd-954c-0a5c1eadc9d4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a9f74d5b-ce62-5626-8198-ce25bf81ad15"]}, .span = ["testNode-4"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-46"}, .name = "testNP-46", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ed4f616f-9f03-59f5-8080-968295e9b45a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["71b8a0db-408a-5bdd-954c-0a5c1eadc9d4"]}, .span = ["testNode-4"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-47"}, .name = "testNP-47", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["71083daa-f480-59d1-a72a-046de2f709db"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ed4f616f-9f03-59f5-8080-968295e9b45a"]}, .span = ["testNode-4"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-48"}, .name = "testNP-48", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["94d3564e-0363-5fa2-9f6d-be334db4bcb6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["71083daa-f480-59d1-a72a-046de2f709db"]}, .span = ["testNode-4"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-49"}, .name = "testNP-49", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0f9fbc5c-5a7b-5c5f-9aee-9a43fd621356"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["94d3564e-0363-5fa2-9f6d-be334db4bcb6"]}, .span = ["testNode-4"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-50"}, .name = "testNP-50", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2d7c595d-9ae7-5c49-a196-9bf7e286c7ae"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0f9fbc5c-5a7b-5c5f-9aee-9a43fd621356"]}, .span = ["testNode-5"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-51"}, .name = "testNP-51", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a82b6b17-7be3-5ebf-8d0d-3c47a657b459"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2d7c595d-9ae7-5c49-a196-9bf7e286c7ae"]}, .span = ["testNode-5"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-52"}, .name = "testNP-52", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["785109ce-b196-523d-a25e-126f78b2b7a6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a82b6b17-7be3-5ebf-8d0d-3c47a657b459"]}, .span = ["testNode-5"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-53"}, .name = "testNP-53", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5a00ebaf-738c-52e4-aa5b-86f171891e67"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["785109ce-b196-523d-a25e-126f78b2b7a6"]}, .span = ["testNode-5"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-54"}, .name = "testNP-54", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["55a30f68-81ce-5650-b9a1-7f0b3689dde6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5a00ebaf-738c-52e4-aa5b-86f171891e67"]}, .span = ["testNode-5"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1132ef39-23a8-50b0-832a-4e2d43e672b0"}, .name = "1132ef39-23a8-50b0-832a-4e2d43e672b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-85]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-85")], .matchExpressions = []}}}}, .addresses = ["10.10.8.5"], .span = ["testNode-8"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1a7851fa-a0ed-5c12-b4e0-6131bc09537e"}, .name = "1a7851fa-a0ed-5c12-b4e0-6131bc09537e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-78]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-78")], .matchExpressions = []}}}}, .addresses = ["10.10.7.8"], .span = ["testNode-7"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1c975463-0c20-5ec3-9552-7dc30a671eab"}, .name = "1c975463-0c20-5ec3-9552-7dc30a671eab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-64]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-64")], .matchExpressions = []}}}}, .addresses = ["10.10.6.4"], .span = ["testNode-6"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1d0f8788-a5a7-56a5-842e-dfef785034b1"}, .name = "1d0f8788-a5a7-56a5-842e-dfef785034b1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-61]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-61")], .matchExpressions = []}}}}, .addresses = ["10.10.6.1"], .span = ["testNode-6"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1dae3d30-30b8-5bff-a131-5db10e5e5837"}, .name = "1dae3d30-30b8-5bff-a131-5db10e5e5837", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-59]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-59")], .matchExpressions = []}}}}, .addresses = ["10.10.5.9"], .span = ["testNode-5"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1f0cec39-f9a3-5773-a5f8-d75c15ebc195"}, .name = "1f0cec39-f9a3-5773-a5f8-d75c15ebc195", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-60]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-60")], .matchExpressions = []}}}}, .addresses = ["10.10.6.0"], .span = ["testNode-5"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "20f53c16-05ce-54e7-ae47-396d24111604"}, .name = "20f53c16-05ce-54e7-ae47-396d24111604", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-66]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-66")], .matchExpressions = []}}}}, .addresses = ["10.10.6.6"], .span = ["testNode-6"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "351946b5-58ff-5208-85f5-88334f3e3451"}, .name = "351946b5-58ff-5208-85f5-88334f3e3451", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-75]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-75")], .matchExpressions = []}}}}, .addresses = ["10.10.7.5"], .span = ["testNode-7"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3eb6c25e-0252-58bf-b260-387044d53667"}, .name = "3eb6c25e-0252-58bf-b260-387044d53667", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-67]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-67")], .matchExpressions = []}}}}, .addresses = ["10.10.6.7"], .span = ["testNode-6"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4c5fc267-d043-5294-9044-61ec13124b6d"}, .name = "4c5fc267-d043-5294-9044-61ec13124b6d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-80]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-80")], .matchExpressions = []}}}}, .addresses = ["10.10.8.0"], .span = ["testNode-7"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "547c302e-bf61-5241-be2f-d5d117fa27d3"}, .name = "547c302e-bf61-5241-be2f-d5d117fa27d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-72]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-72")], .matchExpressions = []}}}}, .addresses = ["10.10.7.2"], .span = ["testNode-7"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "66e00457-0849-5184-bf00-abca386fc613"}, .name = "66e00457-0849-5184-bf00-abca386fc613", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-81]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-81")], .matchExpressions = []}}}}, .addresses = ["10.10.8.1"], .span = ["testNode-8"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "71b0271b-444a-5dfd-bd9a-20a347925a84"}, .name = "71b0271b-444a-5dfd-bd9a-20a347925a84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-58]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-58")], .matchExpressions = []}}}}, .addresses = ["10.10.5.8"], .span = ["testNode-5"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "724801bc-ac83-557b-b23e-987677738d87"}, .name = "724801bc-ac83-557b-b23e-987677738d87", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-65]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-65")], .matchExpressions = []}}}}, .addresses = ["10.10.6.5"], .span = ["testNode-6"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "75e75e2b-cc28-5038-bc0c-b760d589dbc3"}, .name = "75e75e2b-cc28-5038-bc0c-b760d589dbc3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-79]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-79")], .matchExpressions = []}}}}, .addresses = ["10.10.7.9"], .span = ["testNode-7"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "87abc5e5-eac1-5746-8fcc-5a7c58a66130"}, .name = "87abc5e5-eac1-5746-8fcc-5a7c58a66130", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-83]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-83")], .matchExpressions = []}}}}, .addresses = ["10.10.8.3"], .span = ["testNode-8"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "95a27b70-9e78-5dc7-826b-fb7baa062f41"}, .name = "95a27b70-9e78-5dc7-826b-fb7baa062f41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-82]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-82")], .matchExpressions = []}}}}, .addresses = ["10.10.8.2"], .span = ["testNode-8"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "98321256-678d-57ed-a5f3-fc3d3571ebaa"}, .name = "98321256-678d-57ed-a5f3-fc3d3571ebaa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-63]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-63")], .matchExpressions = []}}}}, .addresses = ["10.10.6.3"], .span = ["testNode-6"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9bc6b652-a82f-57cd-9a60-91ce90eb3785"}, .name = "9bc6b652-a82f-57cd-9a60-91ce90eb3785", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-73]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-73")], .matchExpressions = []}}}}, .addresses = ["10.10.7.3"], .span = ["testNode-7"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a2225ae3-9b53-5d5f-866f-fb4c2eabdc4a"}, .name = "a2225ae3-9b53-5d5f-866f-fb4c2eabdc4a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-57]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-57")], .matchExpressions = []}}}}, .addresses = ["10.10.5.7"], .span = ["testNode-5"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a28f565b-d559-57df-ba26-e0167663a7a9"}, .name = "a28f565b-d559-57df-ba26-e0167663a7a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-74]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-74")], .matchExpressions = []}}}}, .addresses = ["10.10.7.4"], .span = ["testNode-7"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a9772eb5-79d4-5e3e-9b39-c76348a18dce"}, .name = "a9772eb5-79d4-5e3e-9b39-c76348a18dce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-68]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-68")], .matchExpressions = []}}}}, .addresses = ["10.10.6.8"], .span = ["testNode-6"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b5cfaa7e-2d4a-5223-8550-75d22758ad09"}, .name = "b5cfaa7e-2d4a-5223-8550-75d22758ad09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-76]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-76")], .matchExpressions = []}}}}, .addresses = ["10.10.7.6"], .span = ["testNode-7"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b72103a0-bf2c-5823-b0f8-5ba0e64b36b3"}, .name = "b72103a0-bf2c-5823-b0f8-5ba0e64b36b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-87]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-87")], .matchExpressions = []}}}}, .addresses = ["10.10.8.7"], .span = ["testNode-8"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "be36e14b-32d0-59d6-a7c5-aafc86f1a9d1"}, .name = "be36e14b-32d0-59d6-a7c5-aafc86f1a9d1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-84]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-84")], .matchExpressions = []}}}}, .addresses = ["10.10.8.4"], .span = ["testNode-8"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c9ed6d19-c495-52d4-b1b7-1750965a71f9"}, .name = "c9ed6d19-c495-52d4-b1b7-1750965a71f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-86]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-86")], .matchExpressions = []}}}}, .addresses = ["10.10.8.6"], .span = ["testNode-8"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cbe789bf-430c-5438-a094-736e589d4406"}, .name = "cbe789bf-430c-5438-a094-736e589d4406", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-70]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-70")], .matchExpressions = []}}}}, .addresses = ["10.10.7.0"], .span = ["testNode-6"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d38dae7c-8908-5aeb-85fa-35c607f3e0ce"}, .name = "d38dae7c-8908-5aeb-85fa-35c607f3e0ce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-71]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-71")], .matchExpressions = []}}}}, .addresses = ["10.10.7.1"], .span = ["testNode-7"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dc35e506-127b-51f2-a292-a61d8edb6c43"}, .name = "dc35e506-127b-51f2-a292-a61d8edb6c43", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-69]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-69")], .matchExpressions = []}}}}, .addresses = ["10.10.6.9"], .span = ["testNode-6"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e9ece707-d3a9-56b7-b64f-5e06272be2ae"}, .name = "e9ece707-d3a9-56b7-b64f-5e06272be2ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-56]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-56")], .matchExpressions = []}}}}, .addresses = ["10.10.5.6"], .span = ["testNode-5"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f3ae1307-2bd5-5fc8-81c8-d5945eaa33fb"}, .name = "f3ae1307-2bd5-5fc8-81c8-d5945eaa33fb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-77]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-77")], .matchExpressions = []}}}}, .addresses = ["10.10.7.7"], .span = ["testNode-7"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f3f45705-4e21-5ed2-9f79-2f41496f57c6"}, .name = "f3f45705-4e21-5ed2-9f79-2f41496f57c6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-62]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-62")], .matchExpressions = []}}}}, .addresses = ["10.10.6.2"], .span = ["testNode-6"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1132ef39-23a8-50b0-832a-4e2d43e672b0"}, .name = "1132ef39-23a8-50b0-832a-4e2d43e672b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-85]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-85")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-85", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1a7851fa-a0ed-5c12-b4e0-6131bc09537e"}, .name = "1a7851fa-a0ed-5c12-b4e0-6131bc09537e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-78]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-78")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-78", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1c975463-0c20-5ec3-9552-7dc30a671eab"}, .name = "1c975463-0c20-5ec3-9552-7dc30a671eab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-64]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-64")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-64", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1d0f8788-a5a7-56a5-842e-dfef785034b1"}, .name = "1d0f8788-a5a7-56a5-842e-dfef785034b1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-61]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-61")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-61", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1dae3d30-30b8-5bff-a131-5db10e5e5837"}, .name = "1dae3d30-30b8-5bff-a131-5db10e5e5837", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-59]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-59")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-59", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1f0cec39-f9a3-5773-a5f8-d75c15ebc195"}, .name = "1f0cec39-f9a3-5773-a5f8-d75c15ebc195", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-60]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-60")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-60", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "20f53c16-05ce-54e7-ae47-396d24111604"}, .name = "20f53c16-05ce-54e7-ae47-396d24111604", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-66]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-66")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-66", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "351946b5-58ff-5208-85f5-88334f3e3451"}, .name = "351946b5-58ff-5208-85f5-88334f3e3451", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-75]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-75")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-75", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3eb6c25e-0252-58bf-b260-387044d53667"}, .name = "3eb6c25e-0252-58bf-b260-387044d53667", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-67]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-67")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-67", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4c5fc267-d043-5294-9044-61ec13124b6d"}, .name = "4c5fc267-d043-5294-9044-61ec13124b6d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-80]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-80")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-80", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "547c302e-bf61-5241-be2f-d5d117fa27d3"}, .name = "547c302e-bf61-5241-be2f-d5d117fa27d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-72]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-72")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-72", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "55a30f68-81ce-5650-b9a1-7f0b3689dde6"}, .name = "55a30f68-81ce-5650-b9a1-7f0b3689dde6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-55]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-55")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-55", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "66e00457-0849-5184-bf00-abca386fc613"}, .name = "66e00457-0849-5184-bf00-abca386fc613", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-81]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-81")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-81", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "71b0271b-444a-5dfd-bd9a-20a347925a84"}, .name = "71b0271b-444a-5dfd-bd9a-20a347925a84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-58]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-58")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-58", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "724801bc-ac83-557b-b23e-987677738d87"}, .name = "724801bc-ac83-557b-b23e-987677738d87", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-65]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-65")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-65", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "75e75e2b-cc28-5038-bc0c-b760d589dbc3"}, .name = "75e75e2b-cc28-5038-bc0c-b760d589dbc3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-79]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-79")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-79", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "87abc5e5-eac1-5746-8fcc-5a7c58a66130"}, .name = "87abc5e5-eac1-5746-8fcc-5a7c58a66130", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-83]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-83")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-83", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "95a27b70-9e78-5dc7-826b-fb7baa062f41"}, .name = "95a27b70-9e78-5dc7-826b-fb7baa062f41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-82]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-82")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-82", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "98321256-678d-57ed-a5f3-fc3d3571ebaa"}, .name = "98321256-678d-57ed-a5f3-fc3d3571ebaa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-63]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-63")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-63", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9bc6b652-a82f-57cd-9a60-91ce90eb3785"}, .name = "9bc6b652-a82f-57cd-9a60-91ce90eb3785", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-73]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-73")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-73", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a2225ae3-9b53-5d5f-866f-fb4c2eabdc4a"}, .name = "a2225ae3-9b53-5d5f-866f-fb4c2eabdc4a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-57]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-57")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-57", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a28f565b-d559-57df-ba26-e0167663a7a9"}, .name = "a28f565b-d559-57df-ba26-e0167663a7a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-74]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-74")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-74", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a9772eb5-79d4-5e3e-9b39-c76348a18dce"}, .name = "a9772eb5-79d4-5e3e-9b39-c76348a18dce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-68]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-68")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-68", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b5cfaa7e-2d4a-5223-8550-75d22758ad09"}, .name = "b5cfaa7e-2d4a-5223-8550-75d22758ad09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-76]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-76")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-76", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "be36e14b-32d0-59d6-a7c5-aafc86f1a9d1"}, .name = "be36e14b-32d0-59d6-a7c5-aafc86f1a9d1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-84]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-84")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-84", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c9ed6d19-c495-52d4-b1b7-1750965a71f9"}, .name = "c9ed6d19-c495-52d4-b1b7-1750965a71f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-86]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-86")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-86", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cbe789bf-430c-5438-a094-736e589d4406"}, .name = "cbe789bf-430c-5438-a094-736e589d4406", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-70]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-70")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-70", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d38dae7c-8908-5aeb-85fa-35c607f3e0ce"}, .name = "d38dae7c-8908-5aeb-85fa-35c607f3e0ce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-71]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-71")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-71", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dc35e506-127b-51f2-a292-a61d8edb6c43"}, .name = "dc35e506-127b-51f2-a292-a61d8edb6c43", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-69]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-69")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-69", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e9ece707-d3a9-56b7-b64f-5e06272be2ae"}, .name = "e9ece707-d3a9-56b7-b64f-5e06272be2ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-56]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-56")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-56", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f3ae1307-2bd5-5fc8-81c8-d5945eaa33fb"}, .name = "f3ae1307-2bd5-5fc8-81c8-d5945eaa33fb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-77]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-77")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-77", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f3f45705-4e21-5ed2-9f79-2f41496f57c6"}, .name = "f3f45705-4e21-5ed2-9f79-2f41496f57c6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-62]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-62")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-62", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-55"}, .name = "testNP-55", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e9ece707-d3a9-56b7-b64f-5e06272be2ae"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["55a30f68-81ce-5650-b9a1-7f0b3689dde6"]}, .span = ["testNode-5"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-56"}, .name = "testNP-56", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a2225ae3-9b53-5d5f-866f-fb4c2eabdc4a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e9ece707-d3a9-56b7-b64f-5e06272be2ae"]}, .span = ["testNode-5"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-57"}, .name = "testNP-57", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["71b0271b-444a-5dfd-bd9a-20a347925a84"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a2225ae3-9b53-5d5f-866f-fb4c2eabdc4a"]}, .span = ["testNode-5"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-58"}, .name = "testNP-58", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1dae3d30-30b8-5bff-a131-5db10e5e5837"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["71b0271b-444a-5dfd-bd9a-20a347925a84"]}, .span = ["testNode-5"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-59"}, .name = "testNP-59", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1f0cec39-f9a3-5773-a5f8-d75c15ebc195"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1dae3d30-30b8-5bff-a131-5db10e5e5837"]}, .span = ["testNode-5"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-60"}, .name = "testNP-60", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1d0f8788-a5a7-56a5-842e-dfef785034b1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1f0cec39-f9a3-5773-a5f8-d75c15ebc195"]}, .span = ["testNode-6"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-61"}, .name = "testNP-61", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f3f45705-4e21-5ed2-9f79-2f41496f57c6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1d0f8788-a5a7-56a5-842e-dfef785034b1"]}, .span = ["testNode-6"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-62"}, .name = "testNP-62", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["98321256-678d-57ed-a5f3-fc3d3571ebaa"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f3f45705-4e21-5ed2-9f79-2f41496f57c6"]}, .span = ["testNode-6"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-63"}, .name = "testNP-63", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1c975463-0c20-5ec3-9552-7dc30a671eab"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["98321256-678d-57ed-a5f3-fc3d3571ebaa"]}, .span = ["testNode-6"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-64"}, .name = "testNP-64", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["724801bc-ac83-557b-b23e-987677738d87"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1c975463-0c20-5ec3-9552-7dc30a671eab"]}, .span = ["testNode-6"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-65"}, .name = "testNP-65", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["20f53c16-05ce-54e7-ae47-396d24111604"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["724801bc-ac83-557b-b23e-987677738d87"]}, .span = ["testNode-6"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-66"}, .name = "testNP-66", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3eb6c25e-0252-58bf-b260-387044d53667"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["20f53c16-05ce-54e7-ae47-396d24111604"]}, .span = ["testNode-6"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-67"}, .name = "testNP-67", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a9772eb5-79d4-5e3e-9b39-c76348a18dce"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3eb6c25e-0252-58bf-b260-387044d53667"]}, .span = ["testNode-6"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-68"}, .name = "testNP-68", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dc35e506-127b-51f2-a292-a61d8edb6c43"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a9772eb5-79d4-5e3e-9b39-c76348a18dce"]}, .span = ["testNode-6"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-69"}, .name = "testNP-69", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cbe789bf-430c-5438-a094-736e589d4406"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dc35e506-127b-51f2-a292-a61d8edb6c43"]}, .span = ["testNode-6"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-70"}, .name = "testNP-70", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d38dae7c-8908-5aeb-85fa-35c607f3e0ce"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cbe789bf-430c-5438-a094-736e589d4406"]}, .span = ["testNode-7"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-71"}, .name = "testNP-71", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["547c302e-bf61-5241-be2f-d5d117fa27d3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d38dae7c-8908-5aeb-85fa-35c607f3e0ce"]}, .span = ["testNode-7"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-72"}, .name = "testNP-72", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9bc6b652-a82f-57cd-9a60-91ce90eb3785"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["547c302e-bf61-5241-be2f-d5d117fa27d3"]}, .span = ["testNode-7"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-73"}, .name = "testNP-73", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a28f565b-d559-57df-ba26-e0167663a7a9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9bc6b652-a82f-57cd-9a60-91ce90eb3785"]}, .span = ["testNode-7"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-74"}, .name = "testNP-74", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["351946b5-58ff-5208-85f5-88334f3e3451"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a28f565b-d559-57df-ba26-e0167663a7a9"]}, .span = ["testNode-7"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-75"}, .name = "testNP-75", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b5cfaa7e-2d4a-5223-8550-75d22758ad09"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["351946b5-58ff-5208-85f5-88334f3e3451"]}, .span = ["testNode-7"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-76"}, .name = "testNP-76", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f3ae1307-2bd5-5fc8-81c8-d5945eaa33fb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b5cfaa7e-2d4a-5223-8550-75d22758ad09"]}, .span = ["testNode-7"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-77"}, .name = "testNP-77", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1a7851fa-a0ed-5c12-b4e0-6131bc09537e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f3ae1307-2bd5-5fc8-81c8-d5945eaa33fb"]}, .span = ["testNode-7"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-78"}, .name = "testNP-78", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["75e75e2b-cc28-5038-bc0c-b760d589dbc3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1a7851fa-a0ed-5c12-b4e0-6131bc09537e"]}, .span = ["testNode-7"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-79"}, .name = "testNP-79", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4c5fc267-d043-5294-9044-61ec13124b6d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["75e75e2b-cc28-5038-bc0c-b760d589dbc3"]}, .span = ["testNode-7"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-80"}, .name = "testNP-80", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["66e00457-0849-5184-bf00-abca386fc613"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4c5fc267-d043-5294-9044-61ec13124b6d"]}, .span = ["testNode-8"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-81"}, .name = "testNP-81", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["95a27b70-9e78-5dc7-826b-fb7baa062f41"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["66e00457-0849-5184-bf00-abca386fc613"]}, .span = ["testNode-8"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-82"}, .name = "testNP-82", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["87abc5e5-eac1-5746-8fcc-5a7c58a66130"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["95a27b70-9e78-5dc7-826b-fb7baa062f41"]}, .span = ["testNode-8"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-83"}, .name = "testNP-83", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["be36e14b-32d0-59d6-a7c5-aafc86f1a9d1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["87abc5e5-eac1-5746-8fcc-5a7c58a66130"]}, .span = ["testNode-8"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-84"}, .name = "testNP-84", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1132ef39-23a8-50b0-832a-4e2d43e672b0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["be36e14b-32d0-59d6-a7c5-aafc86f1a9d1"]}, .span = ["testNode-8"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-85"}, .name = "testNP-85", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c9ed6d19-c495-52d4-b1b7-1750965a71f9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1132ef39-23a8-50b0-832a-4e2d43e672b0"]}, .span = ["testNode-8"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-86"}, .name = "testNP-86", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b72103a0-bf2c-5823-b0f8-5ba0e64b36b3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c9ed6d19-c495-52d4-b1b7-1750965a71f9"]}, .span = ["testNode-8"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "10b59112-a57e-5d49-968b-9f862c18d974"}, .name = "10b59112-a57e-5d49-968b-9f862c18d974", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-90]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-90")], .matchExpressions = []}}}}, .addresses = ["10.10.9.0"], .span = ["testNode-8"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1be816da-1b7c-51a7-b348-474c6219c3de"}, .name = "1be816da-1b7c-51a7-b348-474c6219c3de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-116]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-116")], .matchExpressions = []}}}}, .addresses = ["10.10.11.6"], .span = ["testNode-11"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1e435a5d-47b4-5c5a-bee8-24096b4dc8a9"}, .name = "1e435a5d-47b4-5c5a-bee8-24096b4dc8a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-108]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-108")], .matchExpressions = []}}}}, .addresses = ["10.10.10.8"], .span = ["testNode-10"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2460f5dd-bde1-5ee0-9f92-4e516f71e307"}, .name = "2460f5dd-bde1-5ee0-9f92-4e516f71e307", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-105]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-105")], .matchExpressions = []}}}}, .addresses = ["10.10.10.5"], .span = ["testNode-10"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2d6dfac2-8829-539a-b265-c63a13346b09"}, .name = "2d6dfac2-8829-539a-b265-c63a13346b09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-93]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-93")], .matchExpressions = []}}}}, .addresses = ["10.10.9.3"], .span = ["testNode-9"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "30dca5ab-9fda-5d4c-8615-48e88970ce52"}, .name = "30dca5ab-9fda-5d4c-8615-48e88970ce52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-92]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-92")], .matchExpressions = []}}}}, .addresses = ["10.10.9.2"], .span = ["testNode-9"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "35cb1ca6-4dc8-5e2d-97fa-2f3a7bc9a542"}, .name = "35cb1ca6-4dc8-5e2d-97fa-2f3a7bc9a542", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-97]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-97")], .matchExpressions = []}}}}, .addresses = ["10.10.9.7"], .span = ["testNode-9"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "398e6939-9175-5476-888b-77fd6b52270f"}, .name = "398e6939-9175-5476-888b-77fd6b52270f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-107]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-107")], .matchExpressions = []}}}}, .addresses = ["10.10.10.7"], .span = ["testNode-10"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3f13776d-7893-50d4-8996-a85dfef34459"}, .name = "3f13776d-7893-50d4-8996-a85dfef34459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-113]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-113")], .matchExpressions = []}}}}, .addresses = ["10.10.11.3"], .span = ["testNode-11"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "41e4bb6c-03e1-5ba9-a6f3-2d070417bfb8"}, .name = "41e4bb6c-03e1-5ba9-a6f3-2d070417bfb8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-111]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-111")], .matchExpressions = []}}}}, .addresses = ["10.10.11.1"], .span = ["testNode-11"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4918f96c-ce60-5e9a-a85d-2dfff6c6106e"}, .name = "4918f96c-ce60-5e9a-a85d-2dfff6c6106e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-101]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-101")], .matchExpressions = []}}}}, .addresses = ["10.10.10.1"], .span = ["testNode-10"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4e39750f-48ff-5a5e-adb8-a9a10a577af4"}, .name = "4e39750f-48ff-5a5e-adb8-a9a10a577af4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-109]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-109")], .matchExpressions = []}}}}, .addresses = ["10.10.10.9"], .span = ["testNode-10"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5062681d-34e1-5c2a-8279-f82765d643d5"}, .name = "5062681d-34e1-5c2a-8279-f82765d643d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-104]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-104")], .matchExpressions = []}}}}, .addresses = ["10.10.10.4"], .span = ["testNode-10"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "531f863f-1131-55d0-9c8e-2446ef21de09"}, .name = "531f863f-1131-55d0-9c8e-2446ef21de09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-112]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-112")], .matchExpressions = []}}}}, .addresses = ["10.10.11.2"], .span = ["testNode-11"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5d97f3f8-cfb6-5a84-9c49-c43cb45fbcd6"}, .name = "5d97f3f8-cfb6-5a84-9c49-c43cb45fbcd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-118]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-118")], .matchExpressions = []}}}}, .addresses = ["10.10.11.8"], .span = ["testNode-11"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "66b6f1bc-f1f0-50be-a451-a991f5bf4a0b"}, .name = "66b6f1bc-f1f0-50be-a451-a991f5bf4a0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-95]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-95")], .matchExpressions = []}}}}, .addresses = ["10.10.9.5"], .span = ["testNode-9"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "67b263a9-d60a-56b3-9aa8-7c0af1d64459"}, .name = "67b263a9-d60a-56b3-9aa8-7c0af1d64459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-106]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-106")], .matchExpressions = []}}}}, .addresses = ["10.10.10.6"], .span = ["testNode-10"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6e418e67-6108-51aa-9efd-15ab697d244e"}, .name = "6e418e67-6108-51aa-9efd-15ab697d244e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-91]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-91")], .matchExpressions = []}}}}, .addresses = ["10.10.9.1"], .span = ["testNode-9"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "75faa48f-e4d8-507d-a68b-66e729b79084"}, .name = "75faa48f-e4d8-507d-a68b-66e729b79084", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-110]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-110")], .matchExpressions = []}}}}, .addresses = ["10.10.11.0"], .span = ["testNode-10"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8017f305-3d4a-55a4-bbb0-a99fc77d7f75"}, .name = "8017f305-3d4a-55a4-bbb0-a99fc77d7f75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-114]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-114")], .matchExpressions = []}}}}, .addresses = ["10.10.11.4"], .span = ["testNode-11"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "879c3085-735c-5bf2-bc12-c6460ffd58d7"}, .name = "879c3085-735c-5bf2-bc12-c6460ffd58d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-98]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-98")], .matchExpressions = []}}}}, .addresses = ["10.10.9.8"], .span = ["testNode-9"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8b3f7a81-161a-51ff-8401-2d1875f5e429"}, .name = "8b3f7a81-161a-51ff-8401-2d1875f5e429", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-102]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-102")], .matchExpressions = []}}}}, .addresses = ["10.10.10.2"], .span = ["testNode-10"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8d5c17dc-85b5-55db-ba20-2565a735cb5b"}, .name = "8d5c17dc-85b5-55db-ba20-2565a735cb5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-96]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-96")], .matchExpressions = []}}}}, .addresses = ["10.10.9.6"], .span = ["testNode-9"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9f5874ca-a706-5d9a-8b0a-27075810d9d8"}, .name = "9f5874ca-a706-5d9a-8b0a-27075810d9d8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-119]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-119")], .matchExpressions = []}}}}, .addresses = ["10.10.11.9"], .span = ["testNode-11"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a08d9a49-92c3-5076-8b73-15bfeafb0f46"}, .name = "a08d9a49-92c3-5076-8b73-15bfeafb0f46", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-103]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-103")], .matchExpressions = []}}}}, .addresses = ["10.10.10.3"], .span = ["testNode-10"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a87c4deb-1fb9-5126-b493-cda9d5907866"}, .name = "a87c4deb-1fb9-5126-b493-cda9d5907866", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-88]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-88")], .matchExpressions = []}}}}, .addresses = ["10.10.8.8"], .span = ["testNode-8"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b787ad4d-f2ec-58ae-8a53-eb5575093bf4"}, .name = "b787ad4d-f2ec-58ae-8a53-eb5575093bf4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-89]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-89")], .matchExpressions = []}}}}, .addresses = ["10.10.8.9"], .span = ["testNode-8"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c3df4641-d2bb-5aa9-930e-51d73740a87d"}, .name = "c3df4641-d2bb-5aa9-930e-51d73740a87d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-100]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-100")], .matchExpressions = []}}}}, .addresses = ["10.10.10.0"], .span = ["testNode-9"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d7425640-2e50-5a48-b84f-318532f355d4"}, .name = "d7425640-2e50-5a48-b84f-318532f355d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-99]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-99")], .matchExpressions = []}}}}, .addresses = ["10.10.9.9"], .span = ["testNode-9"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ed48d86d-2640-5a21-9f41-3f5ddedbb8db"}, .name = "ed48d86d-2640-5a21-9f41-3f5ddedbb8db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-117]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-117")], .matchExpressions = []}}}}, .addresses = ["10.10.11.7"], .span = ["testNode-11"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f3a4ed7e-bf9b-51b2-a75d-becfe6013225"}, .name = "f3a4ed7e-bf9b-51b2-a75d-becfe6013225", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-94]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-94")], .matchExpressions = []}}}}, .addresses = ["10.10.9.4"], .span = ["testNode-9"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fc24a88e-5356-50e7-bb4d-a5394fcf47cf"}, .name = "fc24a88e-5356-50e7-bb4d-a5394fcf47cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-115]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-115")], .matchExpressions = []}}}}, .addresses = ["10.10.11.5"], .span = ["testNode-11"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "10b59112-a57e-5d49-968b-9f862c18d974"}, .name = "10b59112-a57e-5d49-968b-9f862c18d974", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-90]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-90")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-90", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1be816da-1b7c-51a7-b348-474c6219c3de"}, .name = "1be816da-1b7c-51a7-b348-474c6219c3de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-116]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-116")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-116", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1e435a5d-47b4-5c5a-bee8-24096b4dc8a9"}, .name = "1e435a5d-47b4-5c5a-bee8-24096b4dc8a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-108]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-108")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-108", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2460f5dd-bde1-5ee0-9f92-4e516f71e307"}, .name = "2460f5dd-bde1-5ee0-9f92-4e516f71e307", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-105]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-105")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-105", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2d6dfac2-8829-539a-b265-c63a13346b09"}, .name = "2d6dfac2-8829-539a-b265-c63a13346b09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-93]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-93")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-93", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "30dca5ab-9fda-5d4c-8615-48e88970ce52"}, .name = "30dca5ab-9fda-5d4c-8615-48e88970ce52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-92]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-92")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-92", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "35cb1ca6-4dc8-5e2d-97fa-2f3a7bc9a542"}, .name = "35cb1ca6-4dc8-5e2d-97fa-2f3a7bc9a542", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-97]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-97")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-97", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "398e6939-9175-5476-888b-77fd6b52270f"}, .name = "398e6939-9175-5476-888b-77fd6b52270f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-107]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-107")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-107", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3f13776d-7893-50d4-8996-a85dfef34459"}, .name = "3f13776d-7893-50d4-8996-a85dfef34459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-113]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-113")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-113", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "41e4bb6c-03e1-5ba9-a6f3-2d070417bfb8"}, .name = "41e4bb6c-03e1-5ba9-a6f3-2d070417bfb8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-111]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-111")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-111", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4918f96c-ce60-5e9a-a85d-2dfff6c6106e"}, .name = "4918f96c-ce60-5e9a-a85d-2dfff6c6106e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-101]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-101")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-101", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4e39750f-48ff-5a5e-adb8-a9a10a577af4"}, .name = "4e39750f-48ff-5a5e-adb8-a9a10a577af4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-109]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-109")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-109", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5062681d-34e1-5c2a-8279-f82765d643d5"}, .name = "5062681d-34e1-5c2a-8279-f82765d643d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-104]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-104")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-104", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "531f863f-1131-55d0-9c8e-2446ef21de09"}, .name = "531f863f-1131-55d0-9c8e-2446ef21de09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-112]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-112")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-112", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5d97f3f8-cfb6-5a84-9c49-c43cb45fbcd6"}, .name = "5d97f3f8-cfb6-5a84-9c49-c43cb45fbcd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-118]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-118")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-118", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "66b6f1bc-f1f0-50be-a451-a991f5bf4a0b"}, .name = "66b6f1bc-f1f0-50be-a451-a991f5bf4a0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-95]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-95")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-95", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "67b263a9-d60a-56b3-9aa8-7c0af1d64459"}, .name = "67b263a9-d60a-56b3-9aa8-7c0af1d64459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-106]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-106")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-106", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6e418e67-6108-51aa-9efd-15ab697d244e"}, .name = "6e418e67-6108-51aa-9efd-15ab697d244e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-91]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-91")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-91", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "75faa48f-e4d8-507d-a68b-66e729b79084"}, .name = "75faa48f-e4d8-507d-a68b-66e729b79084", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-110]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-110")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-110", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8017f305-3d4a-55a4-bbb0-a99fc77d7f75"}, .name = "8017f305-3d4a-55a4-bbb0-a99fc77d7f75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-114]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-114")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-114", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "879c3085-735c-5bf2-bc12-c6460ffd58d7"}, .name = "879c3085-735c-5bf2-bc12-c6460ffd58d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-98]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-98")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-98", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8b3f7a81-161a-51ff-8401-2d1875f5e429"}, .name = "8b3f7a81-161a-51ff-8401-2d1875f5e429", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-102]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-102")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-102", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8d5c17dc-85b5-55db-ba20-2565a735cb5b"}, .name = "8d5c17dc-85b5-55db-ba20-2565a735cb5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-96]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-96")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-96", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a08d9a49-92c3-5076-8b73-15bfeafb0f46"}, .name = "a08d9a49-92c3-5076-8b73-15bfeafb0f46", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-103]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-103")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-103", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a87c4deb-1fb9-5126-b493-cda9d5907866"}, .name = "a87c4deb-1fb9-5126-b493-cda9d5907866", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-88]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-88")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-88", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b72103a0-bf2c-5823-b0f8-5ba0e64b36b3"}, .name = "b72103a0-bf2c-5823-b0f8-5ba0e64b36b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-87]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-87")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-87", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b787ad4d-f2ec-58ae-8a53-eb5575093bf4"}, .name = "b787ad4d-f2ec-58ae-8a53-eb5575093bf4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-89]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-89")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-89", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c3df4641-d2bb-5aa9-930e-51d73740a87d"}, .name = "c3df4641-d2bb-5aa9-930e-51d73740a87d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-100]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-100")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-100", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d7425640-2e50-5a48-b84f-318532f355d4"}, .name = "d7425640-2e50-5a48-b84f-318532f355d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-99]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-99")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-99", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ed48d86d-2640-5a21-9f41-3f5ddedbb8db"}, .name = "ed48d86d-2640-5a21-9f41-3f5ddedbb8db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-117]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-117")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-117", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f3a4ed7e-bf9b-51b2-a75d-becfe6013225"}, .name = "f3a4ed7e-bf9b-51b2-a75d-becfe6013225", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-94]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-94")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-94", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fc24a88e-5356-50e7-bb4d-a5394fcf47cf"}, .name = "fc24a88e-5356-50e7-bb4d-a5394fcf47cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-115]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-115")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-115", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-100"}, .name = "testNP-100", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4918f96c-ce60-5e9a-a85d-2dfff6c6106e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c3df4641-d2bb-5aa9-930e-51d73740a87d"]}, .span = ["testNode-10"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-101"}, .name = "testNP-101", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8b3f7a81-161a-51ff-8401-2d1875f5e429"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4918f96c-ce60-5e9a-a85d-2dfff6c6106e"]}, .span = ["testNode-10"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-102"}, .name = "testNP-102", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a08d9a49-92c3-5076-8b73-15bfeafb0f46"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8b3f7a81-161a-51ff-8401-2d1875f5e429"]}, .span = ["testNode-10"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-103"}, .name = "testNP-103", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5062681d-34e1-5c2a-8279-f82765d643d5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a08d9a49-92c3-5076-8b73-15bfeafb0f46"]}, .span = ["testNode-10"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-104"}, .name = "testNP-104", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2460f5dd-bde1-5ee0-9f92-4e516f71e307"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5062681d-34e1-5c2a-8279-f82765d643d5"]}, .span = ["testNode-10"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-105"}, .name = "testNP-105", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["67b263a9-d60a-56b3-9aa8-7c0af1d64459"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2460f5dd-bde1-5ee0-9f92-4e516f71e307"]}, .span = ["testNode-10"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-106"}, .name = "testNP-106", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["398e6939-9175-5476-888b-77fd6b52270f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["67b263a9-d60a-56b3-9aa8-7c0af1d64459"]}, .span = ["testNode-10"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-107"}, .name = "testNP-107", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1e435a5d-47b4-5c5a-bee8-24096b4dc8a9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["398e6939-9175-5476-888b-77fd6b52270f"]}, .span = ["testNode-10"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-108"}, .name = "testNP-108", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4e39750f-48ff-5a5e-adb8-a9a10a577af4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1e435a5d-47b4-5c5a-bee8-24096b4dc8a9"]}, .span = ["testNode-10"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-109"}, .name = "testNP-109", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["75faa48f-e4d8-507d-a68b-66e729b79084"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4e39750f-48ff-5a5e-adb8-a9a10a577af4"]}, .span = ["testNode-10"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-110"}, .name = "testNP-110", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["41e4bb6c-03e1-5ba9-a6f3-2d070417bfb8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["75faa48f-e4d8-507d-a68b-66e729b79084"]}, .span = ["testNode-11"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-111"}, .name = "testNP-111", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["531f863f-1131-55d0-9c8e-2446ef21de09"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["41e4bb6c-03e1-5ba9-a6f3-2d070417bfb8"]}, .span = ["testNode-11"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-112"}, .name = "testNP-112", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3f13776d-7893-50d4-8996-a85dfef34459"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["531f863f-1131-55d0-9c8e-2446ef21de09"]}, .span = ["testNode-11"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-113"}, .name = "testNP-113", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8017f305-3d4a-55a4-bbb0-a99fc77d7f75"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3f13776d-7893-50d4-8996-a85dfef34459"]}, .span = ["testNode-11"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-114"}, .name = "testNP-114", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fc24a88e-5356-50e7-bb4d-a5394fcf47cf"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8017f305-3d4a-55a4-bbb0-a99fc77d7f75"]}, .span = ["testNode-11"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-115"}, .name = "testNP-115", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1be816da-1b7c-51a7-b348-474c6219c3de"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fc24a88e-5356-50e7-bb4d-a5394fcf47cf"]}, .span = ["testNode-11"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-116"}, .name = "testNP-116", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ed48d86d-2640-5a21-9f41-3f5ddedbb8db"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1be816da-1b7c-51a7-b348-474c6219c3de"]}, .span = ["testNode-11"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-117"}, .name = "testNP-117", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5d97f3f8-cfb6-5a84-9c49-c43cb45fbcd6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ed48d86d-2640-5a21-9f41-3f5ddedbb8db"]}, .span = ["testNode-11"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-118"}, .name = "testNP-118", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9f5874ca-a706-5d9a-8b0a-27075810d9d8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5d97f3f8-cfb6-5a84-9c49-c43cb45fbcd6"]}, .span = ["testNode-11"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-87"}, .name = "testNP-87", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a87c4deb-1fb9-5126-b493-cda9d5907866"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b72103a0-bf2c-5823-b0f8-5ba0e64b36b3"]}, .span = ["testNode-8"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-88"}, .name = "testNP-88", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b787ad4d-f2ec-58ae-8a53-eb5575093bf4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a87c4deb-1fb9-5126-b493-cda9d5907866"]}, .span = ["testNode-8"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-89"}, .name = "testNP-89", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["10b59112-a57e-5d49-968b-9f862c18d974"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b787ad4d-f2ec-58ae-8a53-eb5575093bf4"]}, .span = ["testNode-8"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-90"}, .name = "testNP-90", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6e418e67-6108-51aa-9efd-15ab697d244e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["10b59112-a57e-5d49-968b-9f862c18d974"]}, .span = ["testNode-9"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-91"}, .name = "testNP-91", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["30dca5ab-9fda-5d4c-8615-48e88970ce52"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6e418e67-6108-51aa-9efd-15ab697d244e"]}, .span = ["testNode-9"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-92"}, .name = "testNP-92", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2d6dfac2-8829-539a-b265-c63a13346b09"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["30dca5ab-9fda-5d4c-8615-48e88970ce52"]}, .span = ["testNode-9"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-93"}, .name = "testNP-93", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f3a4ed7e-bf9b-51b2-a75d-becfe6013225"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2d6dfac2-8829-539a-b265-c63a13346b09"]}, .span = ["testNode-9"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-94"}, .name = "testNP-94", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["66b6f1bc-f1f0-50be-a451-a991f5bf4a0b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f3a4ed7e-bf9b-51b2-a75d-becfe6013225"]}, .span = ["testNode-9"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-95"}, .name = "testNP-95", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8d5c17dc-85b5-55db-ba20-2565a735cb5b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["66b6f1bc-f1f0-50be-a451-a991f5bf4a0b"]}, .span = ["testNode-9"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-96"}, .name = "testNP-96", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["35cb1ca6-4dc8-5e2d-97fa-2f3a7bc9a542"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8d5c17dc-85b5-55db-ba20-2565a735cb5b"]}, .span = ["testNode-9"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-97"}, .name = "testNP-97", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["879c3085-735c-5bf2-bc12-c6460ffd58d7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["35cb1ca6-4dc8-5e2d-97fa-2f3a7bc9a542"]}, .span = ["testNode-9"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-98"}, .name = "testNP-98", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d7425640-2e50-5a48-b84f-318532f355d4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["879c3085-735c-5bf2-bc12-c6460ffd58d7"]}, .span = ["testNode-9"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-99"}, .name = "testNP-99", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c3df4641-d2bb-5aa9-930e-51d73740a87d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d7425640-2e50-5a48-b84f-318532f355d4"]}, .span = ["testNode-9"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "03e49b54-6729-5e12-8d61-f782ee539650"}, .name = "03e49b54-6729-5e12-8d61-f782ee539650", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-141]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-141")], .matchExpressions = []}}}}, .addresses = ["10.10.14.1"], .span = ["testNode-14"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "11f3401e-7ad6-5382-8c45-71974428e3c4"}, .name = "11f3401e-7ad6-5382-8c45-71974428e3c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-132]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-132")], .matchExpressions = []}}}}, .addresses = ["10.10.13.2"], .span = ["testNode-13"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "19f52090-285c-5684-861f-5e37131d390f"}, .name = "19f52090-285c-5684-861f-5e37131d390f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-137]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-137")], .matchExpressions = []}}}}, .addresses = ["10.10.13.7"], .span = ["testNode-13"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "24581ca6-ed7c-5737-94ef-e306779dae8b"}, .name = "24581ca6-ed7c-5737-94ef-e306779dae8b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-138]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-138")], .matchExpressions = []}}}}, .addresses = ["10.10.13.8"], .span = ["testNode-13"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "426f3de4-0c3d-56af-b8de-ee0d5a35ca8b"}, .name = "426f3de4-0c3d-56af-b8de-ee0d5a35ca8b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-142]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-142")], .matchExpressions = []}}}}, .addresses = ["10.10.14.2"], .span = ["testNode-14"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "42a664bb-7479-5e6c-bc90-d47696558019"}, .name = "42a664bb-7479-5e6c-bc90-d47696558019", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-146]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-146")], .matchExpressions = []}}}}, .addresses = ["10.10.14.6"], .span = ["testNode-14"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4de5254f-140b-5efb-8f31-8c35be80198a"}, .name = "4de5254f-140b-5efb-8f31-8c35be80198a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-139]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-139")], .matchExpressions = []}}}}, .addresses = ["10.10.13.9"], .span = ["testNode-13"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4f35dbdb-51a8-526d-8499-46af611d9c78"}, .name = "4f35dbdb-51a8-526d-8499-46af611d9c78", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-149]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-149")], .matchExpressions = []}}}}, .addresses = ["10.10.14.9"], .span = ["testNode-14"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4f668fe7-976a-55cd-8e8f-464d4ed8373d"}, .name = "4f668fe7-976a-55cd-8e8f-464d4ed8373d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-151]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-151")], .matchExpressions = []}}}}, .addresses = ["10.10.15.1"], .span = ["testNode-15"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "529fe570-ec28-5fac-acdd-44b8870d6108"}, .name = "529fe570-ec28-5fac-acdd-44b8870d6108", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-126]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-126")], .matchExpressions = []}}}}, .addresses = ["10.10.12.6"], .span = ["testNode-12"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "604b7ae8-c85d-5292-8a2e-da3fd3cdcbe4"}, .name = "604b7ae8-c85d-5292-8a2e-da3fd3cdcbe4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-147]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-147")], .matchExpressions = []}}}}, .addresses = ["10.10.14.7"], .span = ["testNode-14"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "65bd741e-bf4a-57bd-b810-965b3fb7e619"}, .name = "65bd741e-bf4a-57bd-b810-965b3fb7e619", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-122]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-122")], .matchExpressions = []}}}}, .addresses = ["10.10.12.2"], .span = ["testNode-12"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6ab84c4f-df5f-5774-a9ff-25cc55b46ff8"}, .name = "6ab84c4f-df5f-5774-a9ff-25cc55b46ff8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-144]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-144")], .matchExpressions = []}}}}, .addresses = ["10.10.14.4"], .span = ["testNode-14"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "72d207a7-a39f-5992-b79f-cd6d08bb402a"}, .name = "72d207a7-a39f-5992-b79f-cd6d08bb402a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-133]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-133")], .matchExpressions = []}}}}, .addresses = ["10.10.13.3"], .span = ["testNode-13"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7a612d99-6fd0-5c13-b062-6498518fb30a"}, .name = "7a612d99-6fd0-5c13-b062-6498518fb30a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-121]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-121")], .matchExpressions = []}}}}, .addresses = ["10.10.12.1"], .span = ["testNode-12"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7a6aaed2-c276-574a-b2df-601fdc3f5104"}, .name = "7a6aaed2-c276-574a-b2df-601fdc3f5104", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-124]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-124")], .matchExpressions = []}}}}, .addresses = ["10.10.12.4"], .span = ["testNode-12"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7e7a9320-c4cd-517f-a01e-978c0ced3771"}, .name = "7e7a9320-c4cd-517f-a01e-978c0ced3771", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-131]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-131")], .matchExpressions = []}}}}, .addresses = ["10.10.13.1"], .span = ["testNode-13"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "80d5c095-c7ec-5cb5-8ce4-dc8bbc7de41f"}, .name = "80d5c095-c7ec-5cb5-8ce4-dc8bbc7de41f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-150]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-150")], .matchExpressions = []}}}}, .addresses = ["10.10.15.0"], .span = ["testNode-14"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8560ea08-8412-5100-b137-dac29e35fa23"}, .name = "8560ea08-8412-5100-b137-dac29e35fa23", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-123]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-123")], .matchExpressions = []}}}}, .addresses = ["10.10.12.3"], .span = ["testNode-12"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "87f0e55c-6c51-5e85-9d7d-493146f7f46e"}, .name = "87f0e55c-6c51-5e85-9d7d-493146f7f46e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-127]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-127")], .matchExpressions = []}}}}, .addresses = ["10.10.12.7"], .span = ["testNode-12"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a3426a67-ac84-50b5-abd6-4f86f99a1c95"}, .name = "a3426a67-ac84-50b5-abd6-4f86f99a1c95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-140]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-140")], .matchExpressions = []}}}}, .addresses = ["10.10.14.0"], .span = ["testNode-13"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a4e510b0-76a7-5988-8174-b0d8161e0ff1"}, .name = "a4e510b0-76a7-5988-8174-b0d8161e0ff1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-135]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-135")], .matchExpressions = []}}}}, .addresses = ["10.10.13.5"], .span = ["testNode-13"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "af21e800-ff3a-53a1-8640-448f384f20ba"}, .name = "af21e800-ff3a-53a1-8640-448f384f20ba", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-130]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-130")], .matchExpressions = []}}}}, .addresses = ["10.10.13.0"], .span = ["testNode-12"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b6adf8a6-f496-58ad-8918-5d70e040fe00"}, .name = "b6adf8a6-f496-58ad-8918-5d70e040fe00", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-136]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-136")], .matchExpressions = []}}}}, .addresses = ["10.10.13.6"], .span = ["testNode-13"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c64c2040-82c5-5dbb-9ce9-412bdb6f665e"}, .name = "c64c2040-82c5-5dbb-9ce9-412bdb6f665e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-134]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-134")], .matchExpressions = []}}}}, .addresses = ["10.10.13.4"], .span = ["testNode-13"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c83caa8e-9d9b-5aad-93fc-641e567a7a8f"}, .name = "c83caa8e-9d9b-5aad-93fc-641e567a7a8f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-125]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-125")], .matchExpressions = []}}}}, .addresses = ["10.10.12.5"], .span = ["testNode-12"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cdc1dd63-75b7-554c-88c5-3fcac40d6e12"}, .name = "cdc1dd63-75b7-554c-88c5-3fcac40d6e12", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-128]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-128")], .matchExpressions = []}}}}, .addresses = ["10.10.12.8"], .span = ["testNode-12"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d75961d2-c492-5966-8737-2caa0f8e4e91"}, .name = "d75961d2-c492-5966-8737-2caa0f8e4e91", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-148]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-148")], .matchExpressions = []}}}}, .addresses = ["10.10.14.8"], .span = ["testNode-14"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ddc28bc8-1071-5af0-89be-79967257532e"}, .name = "ddc28bc8-1071-5af0-89be-79967257532e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-143]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-143")], .matchExpressions = []}}}}, .addresses = ["10.10.14.3"], .span = ["testNode-14"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ef5132fe-043c-5862-aa70-bf9ed5b832c2"}, .name = "ef5132fe-043c-5862-aa70-bf9ed5b832c2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-129]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-129")], .matchExpressions = []}}}}, .addresses = ["10.10.12.9"], .span = ["testNode-12"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f8fd2286-9b94-5d2f-a4c9-15f522768c90"}, .name = "f8fd2286-9b94-5d2f-a4c9-15f522768c90", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-120]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-120")], .matchExpressions = []}}}}, .addresses = ["10.10.12.0"], .span = ["testNode-11"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fcb01e76-dc36-5ccd-81b4-eb8de4328f3c"}, .name = "fcb01e76-dc36-5ccd-81b4-eb8de4328f3c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-145]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-145")], .matchExpressions = []}}}}, .addresses = ["10.10.14.5"], .span = ["testNode-14"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "03e49b54-6729-5e12-8d61-f782ee539650"}, .name = "03e49b54-6729-5e12-8d61-f782ee539650", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-141]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-141")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-141", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "11f3401e-7ad6-5382-8c45-71974428e3c4"}, .name = "11f3401e-7ad6-5382-8c45-71974428e3c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-132]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-132")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-132", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "19f52090-285c-5684-861f-5e37131d390f"}, .name = "19f52090-285c-5684-861f-5e37131d390f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-137]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-137")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-137", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "24581ca6-ed7c-5737-94ef-e306779dae8b"}, .name = "24581ca6-ed7c-5737-94ef-e306779dae8b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-138]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-138")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-138", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "426f3de4-0c3d-56af-b8de-ee0d5a35ca8b"}, .name = "426f3de4-0c3d-56af-b8de-ee0d5a35ca8b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-142]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-142")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-142", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "42a664bb-7479-5e6c-bc90-d47696558019"}, .name = "42a664bb-7479-5e6c-bc90-d47696558019", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-146]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-146")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-146", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4de5254f-140b-5efb-8f31-8c35be80198a"}, .name = "4de5254f-140b-5efb-8f31-8c35be80198a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-139]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-139")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-139", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4f35dbdb-51a8-526d-8499-46af611d9c78"}, .name = "4f35dbdb-51a8-526d-8499-46af611d9c78", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-149]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-149")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-149", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "529fe570-ec28-5fac-acdd-44b8870d6108"}, .name = "529fe570-ec28-5fac-acdd-44b8870d6108", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-126]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-126")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-126", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "604b7ae8-c85d-5292-8a2e-da3fd3cdcbe4"}, .name = "604b7ae8-c85d-5292-8a2e-da3fd3cdcbe4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-147]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-147")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-147", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "65bd741e-bf4a-57bd-b810-965b3fb7e619"}, .name = "65bd741e-bf4a-57bd-b810-965b3fb7e619", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-122]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-122")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-122", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6ab84c4f-df5f-5774-a9ff-25cc55b46ff8"}, .name = "6ab84c4f-df5f-5774-a9ff-25cc55b46ff8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-144]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-144")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-144", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "72d207a7-a39f-5992-b79f-cd6d08bb402a"}, .name = "72d207a7-a39f-5992-b79f-cd6d08bb402a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-133]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-133")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-133", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7a612d99-6fd0-5c13-b062-6498518fb30a"}, .name = "7a612d99-6fd0-5c13-b062-6498518fb30a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-121]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-121")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-121", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7a6aaed2-c276-574a-b2df-601fdc3f5104"}, .name = "7a6aaed2-c276-574a-b2df-601fdc3f5104", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-124]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-124")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-124", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7e7a9320-c4cd-517f-a01e-978c0ced3771"}, .name = "7e7a9320-c4cd-517f-a01e-978c0ced3771", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-131]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-131")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-131", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "80d5c095-c7ec-5cb5-8ce4-dc8bbc7de41f"}, .name = "80d5c095-c7ec-5cb5-8ce4-dc8bbc7de41f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-150]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-150")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-150", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8560ea08-8412-5100-b137-dac29e35fa23"}, .name = "8560ea08-8412-5100-b137-dac29e35fa23", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-123]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-123")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-123", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "87f0e55c-6c51-5e85-9d7d-493146f7f46e"}, .name = "87f0e55c-6c51-5e85-9d7d-493146f7f46e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-127]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-127")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-127", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9f5874ca-a706-5d9a-8b0a-27075810d9d8"}, .name = "9f5874ca-a706-5d9a-8b0a-27075810d9d8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-119]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-119")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-119", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a3426a67-ac84-50b5-abd6-4f86f99a1c95"}, .name = "a3426a67-ac84-50b5-abd6-4f86f99a1c95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-140]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-140")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-140", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a4e510b0-76a7-5988-8174-b0d8161e0ff1"}, .name = "a4e510b0-76a7-5988-8174-b0d8161e0ff1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-135]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-135")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-135", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "af21e800-ff3a-53a1-8640-448f384f20ba"}, .name = "af21e800-ff3a-53a1-8640-448f384f20ba", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-130]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-130")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-130", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b6adf8a6-f496-58ad-8918-5d70e040fe00"}, .name = "b6adf8a6-f496-58ad-8918-5d70e040fe00", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-136]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-136")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-136", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c64c2040-82c5-5dbb-9ce9-412bdb6f665e"}, .name = "c64c2040-82c5-5dbb-9ce9-412bdb6f665e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-134]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-134")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-134", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c83caa8e-9d9b-5aad-93fc-641e567a7a8f"}, .name = "c83caa8e-9d9b-5aad-93fc-641e567a7a8f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-125]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-125")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-125", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cdc1dd63-75b7-554c-88c5-3fcac40d6e12"}, .name = "cdc1dd63-75b7-554c-88c5-3fcac40d6e12", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-128]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-128")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-128", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d75961d2-c492-5966-8737-2caa0f8e4e91"}, .name = "d75961d2-c492-5966-8737-2caa0f8e4e91", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-148]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-148")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-148", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ddc28bc8-1071-5af0-89be-79967257532e"}, .name = "ddc28bc8-1071-5af0-89be-79967257532e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-143]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-143")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-143", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ef5132fe-043c-5862-aa70-bf9ed5b832c2"}, .name = "ef5132fe-043c-5862-aa70-bf9ed5b832c2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-129]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-129")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-129", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f8fd2286-9b94-5d2f-a4c9-15f522768c90"}, .name = "f8fd2286-9b94-5d2f-a4c9-15f522768c90", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-120]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-120")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-120", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fcb01e76-dc36-5ccd-81b4-eb8de4328f3c"}, .name = "fcb01e76-dc36-5ccd-81b4-eb8de4328f3c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-145]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-145")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-145", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-119"}, .name = "testNP-119", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f8fd2286-9b94-5d2f-a4c9-15f522768c90"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9f5874ca-a706-5d9a-8b0a-27075810d9d8"]}, .span = ["testNode-11"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-120"}, .name = "testNP-120", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7a612d99-6fd0-5c13-b062-6498518fb30a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f8fd2286-9b94-5d2f-a4c9-15f522768c90"]}, .span = ["testNode-12"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-121"}, .name = "testNP-121", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["65bd741e-bf4a-57bd-b810-965b3fb7e619"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7a612d99-6fd0-5c13-b062-6498518fb30a"]}, .span = ["testNode-12"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-122"}, .name = "testNP-122", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8560ea08-8412-5100-b137-dac29e35fa23"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["65bd741e-bf4a-57bd-b810-965b3fb7e619"]}, .span = ["testNode-12"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-123"}, .name = "testNP-123", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7a6aaed2-c276-574a-b2df-601fdc3f5104"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8560ea08-8412-5100-b137-dac29e35fa23"]}, .span = ["testNode-12"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-124"}, .name = "testNP-124", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c83caa8e-9d9b-5aad-93fc-641e567a7a8f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7a6aaed2-c276-574a-b2df-601fdc3f5104"]}, .span = ["testNode-12"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-125"}, .name = "testNP-125", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["529fe570-ec28-5fac-acdd-44b8870d6108"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c83caa8e-9d9b-5aad-93fc-641e567a7a8f"]}, .span = ["testNode-12"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-126"}, .name = "testNP-126", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["87f0e55c-6c51-5e85-9d7d-493146f7f46e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["529fe570-ec28-5fac-acdd-44b8870d6108"]}, .span = ["testNode-12"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-127"}, .name = "testNP-127", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cdc1dd63-75b7-554c-88c5-3fcac40d6e12"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["87f0e55c-6c51-5e85-9d7d-493146f7f46e"]}, .span = ["testNode-12"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-128"}, .name = "testNP-128", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ef5132fe-043c-5862-aa70-bf9ed5b832c2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cdc1dd63-75b7-554c-88c5-3fcac40d6e12"]}, .span = ["testNode-12"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-129"}, .name = "testNP-129", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["af21e800-ff3a-53a1-8640-448f384f20ba"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ef5132fe-043c-5862-aa70-bf9ed5b832c2"]}, .span = ["testNode-12"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-130"}, .name = "testNP-130", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7e7a9320-c4cd-517f-a01e-978c0ced3771"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["af21e800-ff3a-53a1-8640-448f384f20ba"]}, .span = ["testNode-13"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-131"}, .name = "testNP-131", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["11f3401e-7ad6-5382-8c45-71974428e3c4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7e7a9320-c4cd-517f-a01e-978c0ced3771"]}, .span = ["testNode-13"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-132"}, .name = "testNP-132", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["72d207a7-a39f-5992-b79f-cd6d08bb402a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["11f3401e-7ad6-5382-8c45-71974428e3c4"]}, .span = ["testNode-13"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-133"}, .name = "testNP-133", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c64c2040-82c5-5dbb-9ce9-412bdb6f665e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["72d207a7-a39f-5992-b79f-cd6d08bb402a"]}, .span = ["testNode-13"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-134"}, .name = "testNP-134", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a4e510b0-76a7-5988-8174-b0d8161e0ff1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c64c2040-82c5-5dbb-9ce9-412bdb6f665e"]}, .span = ["testNode-13"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-135"}, .name = "testNP-135", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b6adf8a6-f496-58ad-8918-5d70e040fe00"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a4e510b0-76a7-5988-8174-b0d8161e0ff1"]}, .span = ["testNode-13"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-136"}, .name = "testNP-136", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["19f52090-285c-5684-861f-5e37131d390f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b6adf8a6-f496-58ad-8918-5d70e040fe00"]}, .span = ["testNode-13"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-137"}, .name = "testNP-137", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["24581ca6-ed7c-5737-94ef-e306779dae8b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["19f52090-285c-5684-861f-5e37131d390f"]}, .span = ["testNode-13"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-138"}, .name = "testNP-138", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4de5254f-140b-5efb-8f31-8c35be80198a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["24581ca6-ed7c-5737-94ef-e306779dae8b"]}, .span = ["testNode-13"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-139"}, .name = "testNP-139", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a3426a67-ac84-50b5-abd6-4f86f99a1c95"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4de5254f-140b-5efb-8f31-8c35be80198a"]}, .span = ["testNode-13"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-140"}, .name = "testNP-140", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["03e49b54-6729-5e12-8d61-f782ee539650"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a3426a67-ac84-50b5-abd6-4f86f99a1c95"]}, .span = ["testNode-14"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-141"}, .name = "testNP-141", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["426f3de4-0c3d-56af-b8de-ee0d5a35ca8b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["03e49b54-6729-5e12-8d61-f782ee539650"]}, .span = ["testNode-14"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-142"}, .name = "testNP-142", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ddc28bc8-1071-5af0-89be-79967257532e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["426f3de4-0c3d-56af-b8de-ee0d5a35ca8b"]}, .span = ["testNode-14"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-143"}, .name = "testNP-143", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6ab84c4f-df5f-5774-a9ff-25cc55b46ff8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ddc28bc8-1071-5af0-89be-79967257532e"]}, .span = ["testNode-14"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-144"}, .name = "testNP-144", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fcb01e76-dc36-5ccd-81b4-eb8de4328f3c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6ab84c4f-df5f-5774-a9ff-25cc55b46ff8"]}, .span = ["testNode-14"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-145"}, .name = "testNP-145", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["42a664bb-7479-5e6c-bc90-d47696558019"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fcb01e76-dc36-5ccd-81b4-eb8de4328f3c"]}, .span = ["testNode-14"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-146"}, .name = "testNP-146", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["604b7ae8-c85d-5292-8a2e-da3fd3cdcbe4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["42a664bb-7479-5e6c-bc90-d47696558019"]}, .span = ["testNode-14"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-147"}, .name = "testNP-147", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d75961d2-c492-5966-8737-2caa0f8e4e91"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["604b7ae8-c85d-5292-8a2e-da3fd3cdcbe4"]}, .span = ["testNode-14"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-148"}, .name = "testNP-148", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4f35dbdb-51a8-526d-8499-46af611d9c78"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d75961d2-c492-5966-8737-2caa0f8e4e91"]}, .span = ["testNode-14"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-149"}, .name = "testNP-149", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["80d5c095-c7ec-5cb5-8ce4-dc8bbc7de41f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4f35dbdb-51a8-526d-8499-46af611d9c78"]}, .span = ["testNode-14"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-150"}, .name = "testNP-150", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4f668fe7-976a-55cd-8e8f-464d4ed8373d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["80d5c095-c7ec-5cb5-8ce4-dc8bbc7de41f"]}, .span = ["testNode-15"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0780f699-f6e9-5158-ad62-c012c34da8e7"}, .name = "0780f699-f6e9-5158-ad62-c012c34da8e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-179]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-179")], .matchExpressions = []}}}}, .addresses = ["10.10.17.9"], .span = ["testNode-17"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "07a8fcfd-8014-5a34-a8bd-13c6c03c89c0"}, .name = "07a8fcfd-8014-5a34-a8bd-13c6c03c89c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-181]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-181")], .matchExpressions = []}}}}, .addresses = ["10.10.18.1"], .span = ["testNode-18"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1b7f97a5-596f-5d36-9973-c53a4ac5c695"}, .name = "1b7f97a5-596f-5d36-9973-c53a4ac5c695", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-171]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-171")], .matchExpressions = []}}}}, .addresses = ["10.10.17.1"], .span = ["testNode-17"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "24fa442f-2cd2-541e-9765-3d4849131cd5"}, .name = "24fa442f-2cd2-541e-9765-3d4849131cd5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-169]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-169")], .matchExpressions = []}}}}, .addresses = ["10.10.16.9"], .span = ["testNode-16"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2f32884d-930f-5128-9be6-c381f8cbafd3"}, .name = "2f32884d-930f-5128-9be6-c381f8cbafd3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-154]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-154")], .matchExpressions = []}}}}, .addresses = ["10.10.15.4"], .span = ["testNode-15"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "300f8933-6918-5c2a-9d54-003daf562271"}, .name = "300f8933-6918-5c2a-9d54-003daf562271", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-166]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-166")], .matchExpressions = []}}}}, .addresses = ["10.10.16.6"], .span = ["testNode-16"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3239de67-04a5-5398-89c0-6b0dfa4da238"}, .name = "3239de67-04a5-5398-89c0-6b0dfa4da238", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-165]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-165")], .matchExpressions = []}}}}, .addresses = ["10.10.16.5"], .span = ["testNode-16"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3365f5f5-f370-5479-90bc-b38d0e8b9b3c"}, .name = "3365f5f5-f370-5479-90bc-b38d0e8b9b3c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-174]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-174")], .matchExpressions = []}}}}, .addresses = ["10.10.17.4"], .span = ["testNode-17"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "408035a5-0b4c-599f-a516-938d95dc268f"}, .name = "408035a5-0b4c-599f-a516-938d95dc268f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-160]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-160")], .matchExpressions = []}}}}, .addresses = ["10.10.16.0"], .span = ["testNode-15"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "40baec0e-95e4-5295-806c-91c9d764414f"}, .name = "40baec0e-95e4-5295-806c-91c9d764414f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-178]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-178")], .matchExpressions = []}}}}, .addresses = ["10.10.17.8"], .span = ["testNode-17"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "443fdf9f-19c2-5a22-8bd7-43e3e4457931"}, .name = "443fdf9f-19c2-5a22-8bd7-43e3e4457931", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-163]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-163")], .matchExpressions = []}}}}, .addresses = ["10.10.16.3"], .span = ["testNode-16"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4c297f4e-4bdd-511c-85f6-43b9a4194d32"}, .name = "4c297f4e-4bdd-511c-85f6-43b9a4194d32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-155]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-155")], .matchExpressions = []}}}}, .addresses = ["10.10.15.5"], .span = ["testNode-15"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4cb5e2ff-79de-563a-9956-a634c80863b5"}, .name = "4cb5e2ff-79de-563a-9956-a634c80863b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-175]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-175")], .matchExpressions = []}}}}, .addresses = ["10.10.17.5"], .span = ["testNode-17"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5711bdd9-7b7c-5dc7-9a4a-8d3d208127c7"}, .name = "5711bdd9-7b7c-5dc7-9a4a-8d3d208127c7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-158]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-158")], .matchExpressions = []}}}}, .addresses = ["10.10.15.8"], .span = ["testNode-15"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "63e80977-fc88-57e2-9ab0-f8fe8fa6bb75"}, .name = "63e80977-fc88-57e2-9ab0-f8fe8fa6bb75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-162]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-162")], .matchExpressions = []}}}}, .addresses = ["10.10.16.2"], .span = ["testNode-16"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6b1af6fc-e75e-5e52-84bb-2829d56b9e68"}, .name = "6b1af6fc-e75e-5e52-84bb-2829d56b9e68", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-176]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-176")], .matchExpressions = []}}}}, .addresses = ["10.10.17.6"], .span = ["testNode-17"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6d6bd21c-f2c1-516e-a5cb-81c72bc417b8"}, .name = "6d6bd21c-f2c1-516e-a5cb-81c72bc417b8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-152]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-152")], .matchExpressions = []}}}}, .addresses = ["10.10.15.2"], .span = ["testNode-15"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "769af438-e108-5287-a978-31ac710b46fb"}, .name = "769af438-e108-5287-a978-31ac710b46fb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-183]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-183")], .matchExpressions = []}}}}, .addresses = ["10.10.18.3"], .span = ["testNode-18"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8cda303a-bbf0-52d3-9fe9-378528fa9f1f"}, .name = "8cda303a-bbf0-52d3-9fe9-378528fa9f1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-164]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-164")], .matchExpressions = []}}}}, .addresses = ["10.10.16.4"], .span = ["testNode-16"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a2c0ddbd-27ca-5a9b-a410-20a188a1171d"}, .name = "a2c0ddbd-27ca-5a9b-a410-20a188a1171d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-173]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-173")], .matchExpressions = []}}}}, .addresses = ["10.10.17.3"], .span = ["testNode-17"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a8cfccc3-0404-525a-b3d3-284dd5c38257"}, .name = "a8cfccc3-0404-525a-b3d3-284dd5c38257", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-180]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-180")], .matchExpressions = []}}}}, .addresses = ["10.10.18.0"], .span = ["testNode-17"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b30d6aa7-f2f6-5bce-ba24-615b7eba3103"}, .name = "b30d6aa7-f2f6-5bce-ba24-615b7eba3103", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-161]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-161")], .matchExpressions = []}}}}, .addresses = ["10.10.16.1"], .span = ["testNode-16"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b8974eff-5e85-5907-bda4-4bd7b8ac6687"}, .name = "b8974eff-5e85-5907-bda4-4bd7b8ac6687", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-168]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-168")], .matchExpressions = []}}}}, .addresses = ["10.10.16.8"], .span = ["testNode-16"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bff693b4-df3f-5e7c-b929-9d26f3aab586"}, .name = "bff693b4-df3f-5e7c-b929-9d26f3aab586", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-177]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-177")], .matchExpressions = []}}}}, .addresses = ["10.10.17.7"], .span = ["testNode-17"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c8a7b51b-b949-51bc-82ea-3fd6f5e86973"}, .name = "c8a7b51b-b949-51bc-82ea-3fd6f5e86973", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-159]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-159")], .matchExpressions = []}}}}, .addresses = ["10.10.15.9"], .span = ["testNode-15"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ccbd00da-4e21-58a1-83e6-f6ebc038945b"}, .name = "ccbd00da-4e21-58a1-83e6-f6ebc038945b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-170]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-170")], .matchExpressions = []}}}}, .addresses = ["10.10.17.0"], .span = ["testNode-16"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d4d1d1c3-3e8b-59c0-aa4d-09d26aa0f8f6"}, .name = "d4d1d1c3-3e8b-59c0-aa4d-09d26aa0f8f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-172]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-172")], .matchExpressions = []}}}}, .addresses = ["10.10.17.2"], .span = ["testNode-17"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d778a7fa-39fa-5b01-ae44-33c20b301e92"}, .name = "d778a7fa-39fa-5b01-ae44-33c20b301e92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-157]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-157")], .matchExpressions = []}}}}, .addresses = ["10.10.15.7"], .span = ["testNode-15"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e2d588c5-5a40-5ebf-bb15-6c653c573e34"}, .name = "e2d588c5-5a40-5ebf-bb15-6c653c573e34", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-156]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-156")], .matchExpressions = []}}}}, .addresses = ["10.10.15.6"], .span = ["testNode-15"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "eab2a7f1-a404-59d7-8f5f-7ec0bdbdb0b8"}, .name = "eab2a7f1-a404-59d7-8f5f-7ec0bdbdb0b8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-167]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-167")], .matchExpressions = []}}}}, .addresses = ["10.10.16.7"], .span = ["testNode-16"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f1ae3082-14a4-598f-b762-2e7287c81ffe"}, .name = "f1ae3082-14a4-598f-b762-2e7287c81ffe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-182]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-182")], .matchExpressions = []}}}}, .addresses = ["10.10.18.2"], .span = ["testNode-18"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f6853f7d-2dd9-58d9-b1d7-d873db3f6bd0"}, .name = "f6853f7d-2dd9-58d9-b1d7-d873db3f6bd0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-153]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-153")], .matchExpressions = []}}}}, .addresses = ["10.10.15.3"], .span = ["testNode-15"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0780f699-f6e9-5158-ad62-c012c34da8e7"}, .name = "0780f699-f6e9-5158-ad62-c012c34da8e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-179]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-179")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-179", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "07a8fcfd-8014-5a34-a8bd-13c6c03c89c0"}, .name = "07a8fcfd-8014-5a34-a8bd-13c6c03c89c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-181]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-181")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-181", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1b7f97a5-596f-5d36-9973-c53a4ac5c695"}, .name = "1b7f97a5-596f-5d36-9973-c53a4ac5c695", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-171]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-171")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-171", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "24fa442f-2cd2-541e-9765-3d4849131cd5"}, .name = "24fa442f-2cd2-541e-9765-3d4849131cd5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-169]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-169")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-169", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2f32884d-930f-5128-9be6-c381f8cbafd3"}, .name = "2f32884d-930f-5128-9be6-c381f8cbafd3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-154]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-154")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-154", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "300f8933-6918-5c2a-9d54-003daf562271"}, .name = "300f8933-6918-5c2a-9d54-003daf562271", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-166]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-166")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-166", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3239de67-04a5-5398-89c0-6b0dfa4da238"}, .name = "3239de67-04a5-5398-89c0-6b0dfa4da238", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-165]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-165")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-165", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3365f5f5-f370-5479-90bc-b38d0e8b9b3c"}, .name = "3365f5f5-f370-5479-90bc-b38d0e8b9b3c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-174]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-174")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-174", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "408035a5-0b4c-599f-a516-938d95dc268f"}, .name = "408035a5-0b4c-599f-a516-938d95dc268f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-160]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-160")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-160", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "40baec0e-95e4-5295-806c-91c9d764414f"}, .name = "40baec0e-95e4-5295-806c-91c9d764414f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-178]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-178")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-178", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "443fdf9f-19c2-5a22-8bd7-43e3e4457931"}, .name = "443fdf9f-19c2-5a22-8bd7-43e3e4457931", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-163]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-163")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-163", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4c297f4e-4bdd-511c-85f6-43b9a4194d32"}, .name = "4c297f4e-4bdd-511c-85f6-43b9a4194d32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-155]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-155")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-155", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4cb5e2ff-79de-563a-9956-a634c80863b5"}, .name = "4cb5e2ff-79de-563a-9956-a634c80863b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-175]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-175")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-175", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4f668fe7-976a-55cd-8e8f-464d4ed8373d"}, .name = "4f668fe7-976a-55cd-8e8f-464d4ed8373d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-151]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-151")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-151", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5711bdd9-7b7c-5dc7-9a4a-8d3d208127c7"}, .name = "5711bdd9-7b7c-5dc7-9a4a-8d3d208127c7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-158]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-158")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-158", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "63e80977-fc88-57e2-9ab0-f8fe8fa6bb75"}, .name = "63e80977-fc88-57e2-9ab0-f8fe8fa6bb75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-162]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-162")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-162", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6b1af6fc-e75e-5e52-84bb-2829d56b9e68"}, .name = "6b1af6fc-e75e-5e52-84bb-2829d56b9e68", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-176]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-176")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-176", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6d6bd21c-f2c1-516e-a5cb-81c72bc417b8"}, .name = "6d6bd21c-f2c1-516e-a5cb-81c72bc417b8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-152]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-152")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-152", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8cda303a-bbf0-52d3-9fe9-378528fa9f1f"}, .name = "8cda303a-bbf0-52d3-9fe9-378528fa9f1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-164]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-164")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-164", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a2c0ddbd-27ca-5a9b-a410-20a188a1171d"}, .name = "a2c0ddbd-27ca-5a9b-a410-20a188a1171d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-173]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-173")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-173", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a8cfccc3-0404-525a-b3d3-284dd5c38257"}, .name = "a8cfccc3-0404-525a-b3d3-284dd5c38257", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-180]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-180")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-180", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b30d6aa7-f2f6-5bce-ba24-615b7eba3103"}, .name = "b30d6aa7-f2f6-5bce-ba24-615b7eba3103", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-161]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-161")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-161", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b8974eff-5e85-5907-bda4-4bd7b8ac6687"}, .name = "b8974eff-5e85-5907-bda4-4bd7b8ac6687", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-168]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-168")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-168", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bff693b4-df3f-5e7c-b929-9d26f3aab586"}, .name = "bff693b4-df3f-5e7c-b929-9d26f3aab586", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-177]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-177")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-177", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c8a7b51b-b949-51bc-82ea-3fd6f5e86973"}, .name = "c8a7b51b-b949-51bc-82ea-3fd6f5e86973", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-159]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-159")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-159", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ccbd00da-4e21-58a1-83e6-f6ebc038945b"}, .name = "ccbd00da-4e21-58a1-83e6-f6ebc038945b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-170]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-170")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-170", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d4d1d1c3-3e8b-59c0-aa4d-09d26aa0f8f6"}, .name = "d4d1d1c3-3e8b-59c0-aa4d-09d26aa0f8f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-172]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-172")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-172", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d778a7fa-39fa-5b01-ae44-33c20b301e92"}, .name = "d778a7fa-39fa-5b01-ae44-33c20b301e92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-157]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-157")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-157", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e2d588c5-5a40-5ebf-bb15-6c653c573e34"}, .name = "e2d588c5-5a40-5ebf-bb15-6c653c573e34", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-156]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-156")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-156", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "eab2a7f1-a404-59d7-8f5f-7ec0bdbdb0b8"}, .name = "eab2a7f1-a404-59d7-8f5f-7ec0bdbdb0b8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-167]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-167")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-167", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f1ae3082-14a4-598f-b762-2e7287c81ffe"}, .name = "f1ae3082-14a4-598f-b762-2e7287c81ffe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-182]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-182")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-182", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f6853f7d-2dd9-58d9-b1d7-d873db3f6bd0"}, .name = "f6853f7d-2dd9-58d9-b1d7-d873db3f6bd0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-153]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-153")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-153", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-151"}, .name = "testNP-151", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6d6bd21c-f2c1-516e-a5cb-81c72bc417b8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4f668fe7-976a-55cd-8e8f-464d4ed8373d"]}, .span = ["testNode-15"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-152"}, .name = "testNP-152", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f6853f7d-2dd9-58d9-b1d7-d873db3f6bd0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6d6bd21c-f2c1-516e-a5cb-81c72bc417b8"]}, .span = ["testNode-15"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-153"}, .name = "testNP-153", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2f32884d-930f-5128-9be6-c381f8cbafd3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f6853f7d-2dd9-58d9-b1d7-d873db3f6bd0"]}, .span = ["testNode-15"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-154"}, .name = "testNP-154", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4c297f4e-4bdd-511c-85f6-43b9a4194d32"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2f32884d-930f-5128-9be6-c381f8cbafd3"]}, .span = ["testNode-15"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-155"}, .name = "testNP-155", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e2d588c5-5a40-5ebf-bb15-6c653c573e34"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4c297f4e-4bdd-511c-85f6-43b9a4194d32"]}, .span = ["testNode-15"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-156"}, .name = "testNP-156", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d778a7fa-39fa-5b01-ae44-33c20b301e92"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e2d588c5-5a40-5ebf-bb15-6c653c573e34"]}, .span = ["testNode-15"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-157"}, .name = "testNP-157", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5711bdd9-7b7c-5dc7-9a4a-8d3d208127c7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d778a7fa-39fa-5b01-ae44-33c20b301e92"]}, .span = ["testNode-15"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-158"}, .name = "testNP-158", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c8a7b51b-b949-51bc-82ea-3fd6f5e86973"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5711bdd9-7b7c-5dc7-9a4a-8d3d208127c7"]}, .span = ["testNode-15"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-159"}, .name = "testNP-159", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["408035a5-0b4c-599f-a516-938d95dc268f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c8a7b51b-b949-51bc-82ea-3fd6f5e86973"]}, .span = ["testNode-15"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-160"}, .name = "testNP-160", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b30d6aa7-f2f6-5bce-ba24-615b7eba3103"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["408035a5-0b4c-599f-a516-938d95dc268f"]}, .span = ["testNode-16"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-161"}, .name = "testNP-161", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["63e80977-fc88-57e2-9ab0-f8fe8fa6bb75"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b30d6aa7-f2f6-5bce-ba24-615b7eba3103"]}, .span = ["testNode-16"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-162"}, .name = "testNP-162", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["443fdf9f-19c2-5a22-8bd7-43e3e4457931"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["63e80977-fc88-57e2-9ab0-f8fe8fa6bb75"]}, .span = ["testNode-16"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-163"}, .name = "testNP-163", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8cda303a-bbf0-52d3-9fe9-378528fa9f1f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["443fdf9f-19c2-5a22-8bd7-43e3e4457931"]}, .span = ["testNode-16"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-164"}, .name = "testNP-164", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3239de67-04a5-5398-89c0-6b0dfa4da238"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8cda303a-bbf0-52d3-9fe9-378528fa9f1f"]}, .span = ["testNode-16"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-165"}, .name = "testNP-165", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["300f8933-6918-5c2a-9d54-003daf562271"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3239de67-04a5-5398-89c0-6b0dfa4da238"]}, .span = ["testNode-16"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-166"}, .name = "testNP-166", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["eab2a7f1-a404-59d7-8f5f-7ec0bdbdb0b8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["300f8933-6918-5c2a-9d54-003daf562271"]}, .span = ["testNode-16"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-167"}, .name = "testNP-167", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b8974eff-5e85-5907-bda4-4bd7b8ac6687"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["eab2a7f1-a404-59d7-8f5f-7ec0bdbdb0b8"]}, .span = ["testNode-16"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-168"}, .name = "testNP-168", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["24fa442f-2cd2-541e-9765-3d4849131cd5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b8974eff-5e85-5907-bda4-4bd7b8ac6687"]}, .span = ["testNode-16"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-169"}, .name = "testNP-169", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ccbd00da-4e21-58a1-83e6-f6ebc038945b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["24fa442f-2cd2-541e-9765-3d4849131cd5"]}, .span = ["testNode-16"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-170"}, .name = "testNP-170", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1b7f97a5-596f-5d36-9973-c53a4ac5c695"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ccbd00da-4e21-58a1-83e6-f6ebc038945b"]}, .span = ["testNode-17"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-171"}, .name = "testNP-171", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d4d1d1c3-3e8b-59c0-aa4d-09d26aa0f8f6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1b7f97a5-596f-5d36-9973-c53a4ac5c695"]}, .span = ["testNode-17"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-172"}, .name = "testNP-172", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a2c0ddbd-27ca-5a9b-a410-20a188a1171d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d4d1d1c3-3e8b-59c0-aa4d-09d26aa0f8f6"]}, .span = ["testNode-17"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-173"}, .name = "testNP-173", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3365f5f5-f370-5479-90bc-b38d0e8b9b3c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a2c0ddbd-27ca-5a9b-a410-20a188a1171d"]}, .span = ["testNode-17"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-174"}, .name = "testNP-174", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4cb5e2ff-79de-563a-9956-a634c80863b5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3365f5f5-f370-5479-90bc-b38d0e8b9b3c"]}, .span = ["testNode-17"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-175"}, .name = "testNP-175", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6b1af6fc-e75e-5e52-84bb-2829d56b9e68"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4cb5e2ff-79de-563a-9956-a634c80863b5"]}, .span = ["testNode-17"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-176"}, .name = "testNP-176", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bff693b4-df3f-5e7c-b929-9d26f3aab586"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6b1af6fc-e75e-5e52-84bb-2829d56b9e68"]}, .span = ["testNode-17"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-177"}, .name = "testNP-177", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["40baec0e-95e4-5295-806c-91c9d764414f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bff693b4-df3f-5e7c-b929-9d26f3aab586"]}, .span = ["testNode-17"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-178"}, .name = "testNP-178", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0780f699-f6e9-5158-ad62-c012c34da8e7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["40baec0e-95e4-5295-806c-91c9d764414f"]}, .span = ["testNode-17"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-179"}, .name = "testNP-179", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a8cfccc3-0404-525a-b3d3-284dd5c38257"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0780f699-f6e9-5158-ad62-c012c34da8e7"]}, .span = ["testNode-17"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-180"}, .name = "testNP-180", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["07a8fcfd-8014-5a34-a8bd-13c6c03c89c0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a8cfccc3-0404-525a-b3d3-284dd5c38257"]}, .span = ["testNode-18"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-181"}, .name = "testNP-181", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f1ae3082-14a4-598f-b762-2e7287c81ffe"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["07a8fcfd-8014-5a34-a8bd-13c6c03c89c0"]}, .span = ["testNode-18"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-182"}, .name = "testNP-182", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["769af438-e108-5287-a978-31ac710b46fb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f1ae3082-14a4-598f-b762-2e7287c81ffe"]}, .span = ["testNode-18"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "020d29e9-0d59-56f2-be4f-80e1ca9f7324"}, .name = "020d29e9-0d59-56f2-be4f-80e1ca9f7324", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-184]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-184")], .matchExpressions = []}}}}, .addresses = ["10.10.18.4"], .span = ["testNode-18"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0cfb85fe-e1fa-5967-bee3-5530bc9b0038"}, .name = "0cfb85fe-e1fa-5967-bee3-5530bc9b0038", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-185]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-185")], .matchExpressions = []}}}}, .addresses = ["10.10.18.5"], .span = ["testNode-18"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0f4b2596-a4ed-55a9-bf6e-e3af9547edc0"}, .name = "0f4b2596-a4ed-55a9-bf6e-e3af9547edc0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-188]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-188")], .matchExpressions = []}}}}, .addresses = ["10.10.18.8"], .span = ["testNode-18"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1354dfc4-d07d-599b-9202-2a047d7887b2"}, .name = "1354dfc4-d07d-599b-9202-2a047d7887b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-198]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-198")], .matchExpressions = []}}}}, .addresses = ["10.10.19.8"], .span = ["testNode-19"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1753b9da-5ccf-53e6-b0fb-d05a9c7baeab"}, .name = "1753b9da-5ccf-53e6-b0fb-d05a9c7baeab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-201]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-201")], .matchExpressions = []}}}}, .addresses = ["10.10.20.1"], .span = ["testNode-20"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "195b0d0c-b87d-5d28-9286-324a27604bc6"}, .name = "195b0d0c-b87d-5d28-9286-324a27604bc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-203]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-203")], .matchExpressions = []}}}}, .addresses = ["10.10.20.3"], .span = ["testNode-20"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1ec66c94-f36e-5c6f-af53-9982c106d92b"}, .name = "1ec66c94-f36e-5c6f-af53-9982c106d92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-211]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-211")], .matchExpressions = []}}}}, .addresses = ["10.10.21.1"], .span = ["testNode-21"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "28385eef-7119-578d-b809-9694ba7a8f16"}, .name = "28385eef-7119-578d-b809-9694ba7a8f16", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-194]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-194")], .matchExpressions = []}}}}, .addresses = ["10.10.19.4"], .span = ["testNode-19"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2b1b9fe7-7a74-57c5-9583-858774654c70"}, .name = "2b1b9fe7-7a74-57c5-9583-858774654c70", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-193]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-193")], .matchExpressions = []}}}}, .addresses = ["10.10.19.3"], .span = ["testNode-19"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "33e664f1-3b9a-575d-a9d1-a8332819cc7a"}, .name = "33e664f1-3b9a-575d-a9d1-a8332819cc7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-191]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-191")], .matchExpressions = []}}}}, .addresses = ["10.10.19.1"], .span = ["testNode-19"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3921fc8d-a686-5d41-b716-bc5b4ef1f544"}, .name = "3921fc8d-a686-5d41-b716-bc5b4ef1f544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-202]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-202")], .matchExpressions = []}}}}, .addresses = ["10.10.20.2"], .span = ["testNode-20"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3f0884f0-cc39-51b6-b019-74e3b40de51a"}, .name = "3f0884f0-cc39-51b6-b019-74e3b40de51a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-204]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-204")], .matchExpressions = []}}}}, .addresses = ["10.10.20.4"], .span = ["testNode-20"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4851ef1b-a775-5343-b0c7-53be5c924be1"}, .name = "4851ef1b-a775-5343-b0c7-53be5c924be1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-209]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-209")], .matchExpressions = []}}}}, .addresses = ["10.10.20.9"], .span = ["testNode-20"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "49ca4e77-1929-5c26-943c-472b2f1f196d"}, .name = "49ca4e77-1929-5c26-943c-472b2f1f196d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-196]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-196")], .matchExpressions = []}}}}, .addresses = ["10.10.19.6"], .span = ["testNode-19"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5a3c3917-155a-502d-bc7e-0656e685b6d5"}, .name = "5a3c3917-155a-502d-bc7e-0656e685b6d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-208]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-208")], .matchExpressions = []}}}}, .addresses = ["10.10.20.8"], .span = ["testNode-20"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "79e24dbc-1919-5e6c-b7c1-9d4fe977a00b"}, .name = "79e24dbc-1919-5e6c-b7c1-9d4fe977a00b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-197]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-197")], .matchExpressions = []}}}}, .addresses = ["10.10.19.7"], .span = ["testNode-19"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8b40256f-1904-56da-8ebb-021e3b859d5e"}, .name = "8b40256f-1904-56da-8ebb-021e3b859d5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-210]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-210")], .matchExpressions = []}}}}, .addresses = ["10.10.21.0"], .span = ["testNode-20"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9b0ff54c-090b-5ae2-8883-8c9f80e245bc"}, .name = "9b0ff54c-090b-5ae2-8883-8c9f80e245bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-200]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-200")], .matchExpressions = []}}}}, .addresses = ["10.10.20.0"], .span = ["testNode-19"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ab251978-7739-5005-b186-1b8b695e9ff7"}, .name = "ab251978-7739-5005-b186-1b8b695e9ff7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-207]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-207")], .matchExpressions = []}}}}, .addresses = ["10.10.20.7"], .span = ["testNode-20"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "afa64984-2df6-5f21-9d9c-7ab14dc108f4"}, .name = "afa64984-2df6-5f21-9d9c-7ab14dc108f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-190]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-190")], .matchExpressions = []}}}}, .addresses = ["10.10.19.0"], .span = ["testNode-18"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b1fcb01a-565c-5b61-becc-800d4492eb33"}, .name = "b1fcb01a-565c-5b61-becc-800d4492eb33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-189]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-189")], .matchExpressions = []}}}}, .addresses = ["10.10.18.9"], .span = ["testNode-18"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b6558d90-dfdf-57f0-a0f0-47b447973e52"}, .name = "b6558d90-dfdf-57f0-a0f0-47b447973e52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-205]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-205")], .matchExpressions = []}}}}, .addresses = ["10.10.20.5"], .span = ["testNode-20"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b6bd599b-8fbe-5e7c-978a-d72910190a25"}, .name = "b6bd599b-8fbe-5e7c-978a-d72910190a25", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-206]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-206")], .matchExpressions = []}}}}, .addresses = ["10.10.20.6"], .span = ["testNode-20"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b71aafae-50e7-5119-9d3a-52b08374c3a9"}, .name = "b71aafae-50e7-5119-9d3a-52b08374c3a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-212]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-212")], .matchExpressions = []}}}}, .addresses = ["10.10.21.2"], .span = ["testNode-21"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "be90137d-1291-5421-be9a-568c1d5576dd"}, .name = "be90137d-1291-5421-be9a-568c1d5576dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-199]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-199")], .matchExpressions = []}}}}, .addresses = ["10.10.19.9"], .span = ["testNode-19"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bf93e384-8ebe-5643-85f5-1f91edd0f14b"}, .name = "bf93e384-8ebe-5643-85f5-1f91edd0f14b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-192]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-192")], .matchExpressions = []}}}}, .addresses = ["10.10.19.2"], .span = ["testNode-19"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ce0ff344-2eaf-5ade-9cd0-be745f89ee6c"}, .name = "ce0ff344-2eaf-5ade-9cd0-be745f89ee6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-215]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-215")], .matchExpressions = []}}}}, .addresses = ["10.10.21.5"], .span = ["testNode-21"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e33c9672-9427-5cbe-abab-4284039d39b9"}, .name = "e33c9672-9427-5cbe-abab-4284039d39b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-195]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-195")], .matchExpressions = []}}}}, .addresses = ["10.10.19.5"], .span = ["testNode-19"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f07da573-7e4c-5433-bf13-8fa09504fc0f"}, .name = "f07da573-7e4c-5433-bf13-8fa09504fc0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-214]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-214")], .matchExpressions = []}}}}, .addresses = ["10.10.21.4"], .span = ["testNode-21"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f320cdee-caa8-577e-8561-bbcc5a6cd900"}, .name = "f320cdee-caa8-577e-8561-bbcc5a6cd900", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-213]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-213")], .matchExpressions = []}}}}, .addresses = ["10.10.21.3"], .span = ["testNode-21"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f4a63453-6945-5801-9c67-f941d090041b"}, .name = "f4a63453-6945-5801-9c67-f941d090041b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-187]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-187")], .matchExpressions = []}}}}, .addresses = ["10.10.18.7"], .span = ["testNode-18"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fc09e241-cdaa-52a0-9cc4-04d72757d13b"}, .name = "fc09e241-cdaa-52a0-9cc4-04d72757d13b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-186]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-186")], .matchExpressions = []}}}}, .addresses = ["10.10.18.6"], .span = ["testNode-18"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "020d29e9-0d59-56f2-be4f-80e1ca9f7324"}, .name = "020d29e9-0d59-56f2-be4f-80e1ca9f7324", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-184]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-184")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-184", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0cfb85fe-e1fa-5967-bee3-5530bc9b0038"}, .name = "0cfb85fe-e1fa-5967-bee3-5530bc9b0038", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-185]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-185")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-185", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0f4b2596-a4ed-55a9-bf6e-e3af9547edc0"}, .name = "0f4b2596-a4ed-55a9-bf6e-e3af9547edc0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-188]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-188")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-188", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1354dfc4-d07d-599b-9202-2a047d7887b2"}, .name = "1354dfc4-d07d-599b-9202-2a047d7887b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-198]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-198")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-198", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1753b9da-5ccf-53e6-b0fb-d05a9c7baeab"}, .name = "1753b9da-5ccf-53e6-b0fb-d05a9c7baeab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-201]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-201")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-201", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "195b0d0c-b87d-5d28-9286-324a27604bc6"}, .name = "195b0d0c-b87d-5d28-9286-324a27604bc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-203]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-203")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-203", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1ec66c94-f36e-5c6f-af53-9982c106d92b"}, .name = "1ec66c94-f36e-5c6f-af53-9982c106d92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-211]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-211")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-211", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "28385eef-7119-578d-b809-9694ba7a8f16"}, .name = "28385eef-7119-578d-b809-9694ba7a8f16", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-194]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-194")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-194", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2b1b9fe7-7a74-57c5-9583-858774654c70"}, .name = "2b1b9fe7-7a74-57c5-9583-858774654c70", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-193]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-193")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-193", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "33e664f1-3b9a-575d-a9d1-a8332819cc7a"}, .name = "33e664f1-3b9a-575d-a9d1-a8332819cc7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-191]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-191")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-191", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3921fc8d-a686-5d41-b716-bc5b4ef1f544"}, .name = "3921fc8d-a686-5d41-b716-bc5b4ef1f544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-202]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-202")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-202", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3f0884f0-cc39-51b6-b019-74e3b40de51a"}, .name = "3f0884f0-cc39-51b6-b019-74e3b40de51a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-204]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-204")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-204", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4851ef1b-a775-5343-b0c7-53be5c924be1"}, .name = "4851ef1b-a775-5343-b0c7-53be5c924be1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-209]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-209")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-209", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "49ca4e77-1929-5c26-943c-472b2f1f196d"}, .name = "49ca4e77-1929-5c26-943c-472b2f1f196d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-196]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-196")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-196", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5a3c3917-155a-502d-bc7e-0656e685b6d5"}, .name = "5a3c3917-155a-502d-bc7e-0656e685b6d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-208]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-208")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-208", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "769af438-e108-5287-a978-31ac710b46fb"}, .name = "769af438-e108-5287-a978-31ac710b46fb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-183]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-183")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-183", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "79e24dbc-1919-5e6c-b7c1-9d4fe977a00b"}, .name = "79e24dbc-1919-5e6c-b7c1-9d4fe977a00b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-197]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-197")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-197", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8b40256f-1904-56da-8ebb-021e3b859d5e"}, .name = "8b40256f-1904-56da-8ebb-021e3b859d5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-210]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-210")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-210", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9b0ff54c-090b-5ae2-8883-8c9f80e245bc"}, .name = "9b0ff54c-090b-5ae2-8883-8c9f80e245bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-200]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-200")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-200", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ab251978-7739-5005-b186-1b8b695e9ff7"}, .name = "ab251978-7739-5005-b186-1b8b695e9ff7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-207]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-207")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-207", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "afa64984-2df6-5f21-9d9c-7ab14dc108f4"}, .name = "afa64984-2df6-5f21-9d9c-7ab14dc108f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-190]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-190")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-190", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b1fcb01a-565c-5b61-becc-800d4492eb33"}, .name = "b1fcb01a-565c-5b61-becc-800d4492eb33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-189]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-189")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-189", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b6558d90-dfdf-57f0-a0f0-47b447973e52"}, .name = "b6558d90-dfdf-57f0-a0f0-47b447973e52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-205]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-205")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-205", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b6bd599b-8fbe-5e7c-978a-d72910190a25"}, .name = "b6bd599b-8fbe-5e7c-978a-d72910190a25", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-206]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-206")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-206", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b71aafae-50e7-5119-9d3a-52b08374c3a9"}, .name = "b71aafae-50e7-5119-9d3a-52b08374c3a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-212]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-212")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-212", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "be90137d-1291-5421-be9a-568c1d5576dd"}, .name = "be90137d-1291-5421-be9a-568c1d5576dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-199]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-199")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-199", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bf93e384-8ebe-5643-85f5-1f91edd0f14b"}, .name = "bf93e384-8ebe-5643-85f5-1f91edd0f14b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-192]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-192")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-192", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e33c9672-9427-5cbe-abab-4284039d39b9"}, .name = "e33c9672-9427-5cbe-abab-4284039d39b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-195]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-195")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-195", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f07da573-7e4c-5433-bf13-8fa09504fc0f"}, .name = "f07da573-7e4c-5433-bf13-8fa09504fc0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-214]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-214")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-214", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f320cdee-caa8-577e-8561-bbcc5a6cd900"}, .name = "f320cdee-caa8-577e-8561-bbcc5a6cd900", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-213]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-213")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-213", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f4a63453-6945-5801-9c67-f941d090041b"}, .name = "f4a63453-6945-5801-9c67-f941d090041b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-187]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-187")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-187", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fc09e241-cdaa-52a0-9cc4-04d72757d13b"}, .name = "fc09e241-cdaa-52a0-9cc4-04d72757d13b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-186]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-186")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-186", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-183"}, .name = "testNP-183", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["020d29e9-0d59-56f2-be4f-80e1ca9f7324"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["769af438-e108-5287-a978-31ac710b46fb"]}, .span = ["testNode-18"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-184"}, .name = "testNP-184", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0cfb85fe-e1fa-5967-bee3-5530bc9b0038"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["020d29e9-0d59-56f2-be4f-80e1ca9f7324"]}, .span = ["testNode-18"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-185"}, .name = "testNP-185", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fc09e241-cdaa-52a0-9cc4-04d72757d13b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0cfb85fe-e1fa-5967-bee3-5530bc9b0038"]}, .span = ["testNode-18"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-186"}, .name = "testNP-186", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f4a63453-6945-5801-9c67-f941d090041b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fc09e241-cdaa-52a0-9cc4-04d72757d13b"]}, .span = ["testNode-18"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-187"}, .name = "testNP-187", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0f4b2596-a4ed-55a9-bf6e-e3af9547edc0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f4a63453-6945-5801-9c67-f941d090041b"]}, .span = ["testNode-18"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-188"}, .name = "testNP-188", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b1fcb01a-565c-5b61-becc-800d4492eb33"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0f4b2596-a4ed-55a9-bf6e-e3af9547edc0"]}, .span = ["testNode-18"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-189"}, .name = "testNP-189", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["afa64984-2df6-5f21-9d9c-7ab14dc108f4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b1fcb01a-565c-5b61-becc-800d4492eb33"]}, .span = ["testNode-18"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-190"}, .name = "testNP-190", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["33e664f1-3b9a-575d-a9d1-a8332819cc7a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["afa64984-2df6-5f21-9d9c-7ab14dc108f4"]}, .span = ["testNode-19"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-191"}, .name = "testNP-191", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bf93e384-8ebe-5643-85f5-1f91edd0f14b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["33e664f1-3b9a-575d-a9d1-a8332819cc7a"]}, .span = ["testNode-19"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-192"}, .name = "testNP-192", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2b1b9fe7-7a74-57c5-9583-858774654c70"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bf93e384-8ebe-5643-85f5-1f91edd0f14b"]}, .span = ["testNode-19"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-193"}, .name = "testNP-193", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["28385eef-7119-578d-b809-9694ba7a8f16"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2b1b9fe7-7a74-57c5-9583-858774654c70"]}, .span = ["testNode-19"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-194"}, .name = "testNP-194", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e33c9672-9427-5cbe-abab-4284039d39b9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["28385eef-7119-578d-b809-9694ba7a8f16"]}, .span = ["testNode-19"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-195"}, .name = "testNP-195", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["49ca4e77-1929-5c26-943c-472b2f1f196d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e33c9672-9427-5cbe-abab-4284039d39b9"]}, .span = ["testNode-19"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-196"}, .name = "testNP-196", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["79e24dbc-1919-5e6c-b7c1-9d4fe977a00b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["49ca4e77-1929-5c26-943c-472b2f1f196d"]}, .span = ["testNode-19"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-197"}, .name = "testNP-197", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1354dfc4-d07d-599b-9202-2a047d7887b2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["79e24dbc-1919-5e6c-b7c1-9d4fe977a00b"]}, .span = ["testNode-19"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-198"}, .name = "testNP-198", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["be90137d-1291-5421-be9a-568c1d5576dd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1354dfc4-d07d-599b-9202-2a047d7887b2"]}, .span = ["testNode-19"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-199"}, .name = "testNP-199", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9b0ff54c-090b-5ae2-8883-8c9f80e245bc"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["be90137d-1291-5421-be9a-568c1d5576dd"]}, .span = ["testNode-19"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-200"}, .name = "testNP-200", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1753b9da-5ccf-53e6-b0fb-d05a9c7baeab"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9b0ff54c-090b-5ae2-8883-8c9f80e245bc"]}, .span = ["testNode-20"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-201"}, .name = "testNP-201", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3921fc8d-a686-5d41-b716-bc5b4ef1f544"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1753b9da-5ccf-53e6-b0fb-d05a9c7baeab"]}, .span = ["testNode-20"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-202"}, .name = "testNP-202", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["195b0d0c-b87d-5d28-9286-324a27604bc6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3921fc8d-a686-5d41-b716-bc5b4ef1f544"]}, .span = ["testNode-20"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-203"}, .name = "testNP-203", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3f0884f0-cc39-51b6-b019-74e3b40de51a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["195b0d0c-b87d-5d28-9286-324a27604bc6"]}, .span = ["testNode-20"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-204"}, .name = "testNP-204", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b6558d90-dfdf-57f0-a0f0-47b447973e52"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3f0884f0-cc39-51b6-b019-74e3b40de51a"]}, .span = ["testNode-20"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-205"}, .name = "testNP-205", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b6bd599b-8fbe-5e7c-978a-d72910190a25"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b6558d90-dfdf-57f0-a0f0-47b447973e52"]}, .span = ["testNode-20"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-206"}, .name = "testNP-206", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ab251978-7739-5005-b186-1b8b695e9ff7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b6bd599b-8fbe-5e7c-978a-d72910190a25"]}, .span = ["testNode-20"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-207"}, .name = "testNP-207", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5a3c3917-155a-502d-bc7e-0656e685b6d5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ab251978-7739-5005-b186-1b8b695e9ff7"]}, .span = ["testNode-20"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-208"}, .name = "testNP-208", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4851ef1b-a775-5343-b0c7-53be5c924be1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5a3c3917-155a-502d-bc7e-0656e685b6d5"]}, .span = ["testNode-20"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-209"}, .name = "testNP-209", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8b40256f-1904-56da-8ebb-021e3b859d5e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4851ef1b-a775-5343-b0c7-53be5c924be1"]}, .span = ["testNode-20"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-210"}, .name = "testNP-210", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1ec66c94-f36e-5c6f-af53-9982c106d92b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8b40256f-1904-56da-8ebb-021e3b859d5e"]}, .span = ["testNode-21"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-211"}, .name = "testNP-211", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b71aafae-50e7-5119-9d3a-52b08374c3a9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1ec66c94-f36e-5c6f-af53-9982c106d92b"]}, .span = ["testNode-21"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-212"}, .name = "testNP-212", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f320cdee-caa8-577e-8561-bbcc5a6cd900"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b71aafae-50e7-5119-9d3a-52b08374c3a9"]}, .span = ["testNode-21"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-213"}, .name = "testNP-213", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f07da573-7e4c-5433-bf13-8fa09504fc0f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f320cdee-caa8-577e-8561-bbcc5a6cd900"]}, .span = ["testNode-21"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-214"}, .name = "testNP-214", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ce0ff344-2eaf-5ade-9cd0-be745f89ee6c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f07da573-7e4c-5433-bf13-8fa09504fc0f"]}, .span = ["testNode-21"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "03c30831-91b6-580f-a2e1-24562dcc1da1"}, .name = "03c30831-91b6-580f-a2e1-24562dcc1da1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-241]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-241")], .matchExpressions = []}}}}, .addresses = ["10.10.24.1"], .span = ["testNode-24"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0f032ba9-271b-5ea5-a68c-a17f073e0684"}, .name = "0f032ba9-271b-5ea5-a68c-a17f073e0684", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-220]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-220")], .matchExpressions = []}}}}, .addresses = ["10.10.22.0"], .span = ["testNode-21"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "12363c7f-6a05-50df-bc3c-49a85d7c9fed"}, .name = "12363c7f-6a05-50df-bc3c-49a85d7c9fed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-234]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-234")], .matchExpressions = []}}}}, .addresses = ["10.10.23.4"], .span = ["testNode-23"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "18ad0ba6-aaa4-574f-a7e5-5380d9decdae"}, .name = "18ad0ba6-aaa4-574f-a7e5-5380d9decdae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-244]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-244")], .matchExpressions = []}}}}, .addresses = ["10.10.24.4"], .span = ["testNode-24"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "25e29314-9597-55b2-b357-ce6cad43a1df"}, .name = "25e29314-9597-55b2-b357-ce6cad43a1df", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-225]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-225")], .matchExpressions = []}}}}, .addresses = ["10.10.22.5"], .span = ["testNode-22"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2f31d01d-e600-5abf-a95d-7f691b736b75"}, .name = "2f31d01d-e600-5abf-a95d-7f691b736b75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-247]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-247")], .matchExpressions = []}}}}, .addresses = ["10.10.24.7"], .span = ["testNode-24"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "30f5106e-9e8f-5329-a04f-f5223d313f94"}, .name = "30f5106e-9e8f-5329-a04f-f5223d313f94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-223]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-223")], .matchExpressions = []}}}}, .addresses = ["10.10.22.3"], .span = ["testNode-22"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3b3928b2-19ee-5d88-8ffb-4da451fabbc2"}, .name = "3b3928b2-19ee-5d88-8ffb-4da451fabbc2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-229]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-229")], .matchExpressions = []}}}}, .addresses = ["10.10.22.9"], .span = ["testNode-22"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3cf363d5-9f6d-5fbe-bce8-ead2115f300b"}, .name = "3cf363d5-9f6d-5fbe-bce8-ead2115f300b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-227]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-227")], .matchExpressions = []}}}}, .addresses = ["10.10.22.7"], .span = ["testNode-22"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4a4af55a-eac9-527c-8aee-491684848e3a"}, .name = "4a4af55a-eac9-527c-8aee-491684848e3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-233]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-233")], .matchExpressions = []}}}}, .addresses = ["10.10.23.3"], .span = ["testNode-23"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5b27e3c4-7fb5-5646-9309-e6b53a932e56"}, .name = "5b27e3c4-7fb5-5646-9309-e6b53a932e56", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-228]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-228")], .matchExpressions = []}}}}, .addresses = ["10.10.22.8"], .span = ["testNode-22"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6325a183-1cca-5fa2-93a7-8d93436debc6"}, .name = "6325a183-1cca-5fa2-93a7-8d93436debc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-237]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-237")], .matchExpressions = []}}}}, .addresses = ["10.10.23.7"], .span = ["testNode-23"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7e09417a-9bf1-5ba5-9fa1-211122179e6c"}, .name = "7e09417a-9bf1-5ba5-9fa1-211122179e6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-239]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-239")], .matchExpressions = []}}}}, .addresses = ["10.10.23.9"], .span = ["testNode-23"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8f496125-eb17-5c5e-8643-dd1f181798ab"}, .name = "8f496125-eb17-5c5e-8643-dd1f181798ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-243]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-243")], .matchExpressions = []}}}}, .addresses = ["10.10.24.3"], .span = ["testNode-24"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "969d4a4d-0d73-5ff1-ac23-9a3c6060fa32"}, .name = "969d4a4d-0d73-5ff1-ac23-9a3c6060fa32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-238]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-238")], .matchExpressions = []}}}}, .addresses = ["10.10.23.8"], .span = ["testNode-23"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "96cf2a9c-7745-5799-805c-f5491131be7a"}, .name = "96cf2a9c-7745-5799-805c-f5491131be7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-235]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-235")], .matchExpressions = []}}}}, .addresses = ["10.10.23.5"], .span = ["testNode-23"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "96ef11fc-8238-5331-acdc-7a54fa317a5e"}, .name = "96ef11fc-8238-5331-acdc-7a54fa317a5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-224]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-224")], .matchExpressions = []}}}}, .addresses = ["10.10.22.4"], .span = ["testNode-22"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "af7d4a1c-0403-5ead-b5ab-424c37808ecb"}, .name = "af7d4a1c-0403-5ead-b5ab-424c37808ecb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-245]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-245")], .matchExpressions = []}}}}, .addresses = ["10.10.24.5"], .span = ["testNode-24"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b7bbd971-6410-546b-bdec-d44038b03226"}, .name = "b7bbd971-6410-546b-bdec-d44038b03226", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-246]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-246")], .matchExpressions = []}}}}, .addresses = ["10.10.24.6"], .span = ["testNode-24"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bf4b8e21-c64f-52cb-a0e0-5c7a300ef5eb"}, .name = "bf4b8e21-c64f-52cb-a0e0-5c7a300ef5eb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-222]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-222")], .matchExpressions = []}}}}, .addresses = ["10.10.22.2"], .span = ["testNode-22"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c307d582-5f15-57ff-9bc8-84b78be06d82"}, .name = "c307d582-5f15-57ff-9bc8-84b78be06d82", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-232]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-232")], .matchExpressions = []}}}}, .addresses = ["10.10.23.2"], .span = ["testNode-23"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c9e17850-2963-5c1f-aba2-fe7636551e9c"}, .name = "c9e17850-2963-5c1f-aba2-fe7636551e9c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-236]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-236")], .matchExpressions = []}}}}, .addresses = ["10.10.23.6"], .span = ["testNode-23"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cce6e1d9-a389-58ee-bf74-9faadfa24055"}, .name = "cce6e1d9-a389-58ee-bf74-9faadfa24055", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-217]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-217")], .matchExpressions = []}}}}, .addresses = ["10.10.21.7"], .span = ["testNode-21"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cd184987-3c4e-52a2-82de-406b959e19b5"}, .name = "cd184987-3c4e-52a2-82de-406b959e19b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-218]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-218")], .matchExpressions = []}}}}, .addresses = ["10.10.21.8"], .span = ["testNode-21"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "db570279-dd87-5b76-8602-bd407ca2586d"}, .name = "db570279-dd87-5b76-8602-bd407ca2586d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-230]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-230")], .matchExpressions = []}}}}, .addresses = ["10.10.23.0"], .span = ["testNode-22"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dfeba82d-1edf-50bf-8ab9-0f84b7d679b4"}, .name = "dfeba82d-1edf-50bf-8ab9-0f84b7d679b4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-226]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-226")], .matchExpressions = []}}}}, .addresses = ["10.10.22.6"], .span = ["testNode-22"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e0b6d092-d299-5591-ac2f-94ba68eac577"}, .name = "e0b6d092-d299-5591-ac2f-94ba68eac577", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-216]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-216")], .matchExpressions = []}}}}, .addresses = ["10.10.21.6"], .span = ["testNode-21"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e403cccb-89fd-5709-a1f4-49bbfcf39a51"}, .name = "e403cccb-89fd-5709-a1f4-49bbfcf39a51", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-242]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-242")], .matchExpressions = []}}}}, .addresses = ["10.10.24.2"], .span = ["testNode-24"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e61a021b-d18d-5759-bc20-c440a1def743"}, .name = "e61a021b-d18d-5759-bc20-c440a1def743", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-219]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-219")], .matchExpressions = []}}}}, .addresses = ["10.10.21.9"], .span = ["testNode-21"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f170bb2c-7146-5078-9c22-3bfd840e2691"}, .name = "f170bb2c-7146-5078-9c22-3bfd840e2691", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-240]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-240")], .matchExpressions = []}}}}, .addresses = ["10.10.24.0"], .span = ["testNode-23"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f4c6592f-9d24-5299-a825-1b870d36158f"}, .name = "f4c6592f-9d24-5299-a825-1b870d36158f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-231]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-231")], .matchExpressions = []}}}}, .addresses = ["10.10.23.1"], .span = ["testNode-23"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "faec8054-e271-5a63-8328-d0b7a1decbb9"}, .name = "faec8054-e271-5a63-8328-d0b7a1decbb9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-221]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-221")], .matchExpressions = []}}}}, .addresses = ["10.10.22.1"], .span = ["testNode-22"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "03c30831-91b6-580f-a2e1-24562dcc1da1"}, .name = "03c30831-91b6-580f-a2e1-24562dcc1da1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-241]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-241")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-241", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0f032ba9-271b-5ea5-a68c-a17f073e0684"}, .name = "0f032ba9-271b-5ea5-a68c-a17f073e0684", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-220]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-220")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-220", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "12363c7f-6a05-50df-bc3c-49a85d7c9fed"}, .name = "12363c7f-6a05-50df-bc3c-49a85d7c9fed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-234]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-234")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-234", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "18ad0ba6-aaa4-574f-a7e5-5380d9decdae"}, .name = "18ad0ba6-aaa4-574f-a7e5-5380d9decdae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-244]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-244")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-244", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "25e29314-9597-55b2-b357-ce6cad43a1df"}, .name = "25e29314-9597-55b2-b357-ce6cad43a1df", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-225]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-225")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-225", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "30f5106e-9e8f-5329-a04f-f5223d313f94"}, .name = "30f5106e-9e8f-5329-a04f-f5223d313f94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-223]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-223")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-223", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3b3928b2-19ee-5d88-8ffb-4da451fabbc2"}, .name = "3b3928b2-19ee-5d88-8ffb-4da451fabbc2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-229]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-229")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-229", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3cf363d5-9f6d-5fbe-bce8-ead2115f300b"}, .name = "3cf363d5-9f6d-5fbe-bce8-ead2115f300b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-227]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-227")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-227", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4a4af55a-eac9-527c-8aee-491684848e3a"}, .name = "4a4af55a-eac9-527c-8aee-491684848e3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-233]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-233")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-233", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5b27e3c4-7fb5-5646-9309-e6b53a932e56"}, .name = "5b27e3c4-7fb5-5646-9309-e6b53a932e56", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-228]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-228")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-228", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6325a183-1cca-5fa2-93a7-8d93436debc6"}, .name = "6325a183-1cca-5fa2-93a7-8d93436debc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-237]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-237")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-237", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7e09417a-9bf1-5ba5-9fa1-211122179e6c"}, .name = "7e09417a-9bf1-5ba5-9fa1-211122179e6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-239]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-239")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-239", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8f496125-eb17-5c5e-8643-dd1f181798ab"}, .name = "8f496125-eb17-5c5e-8643-dd1f181798ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-243]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-243")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-243", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "969d4a4d-0d73-5ff1-ac23-9a3c6060fa32"}, .name = "969d4a4d-0d73-5ff1-ac23-9a3c6060fa32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-238]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-238")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-238", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "96cf2a9c-7745-5799-805c-f5491131be7a"}, .name = "96cf2a9c-7745-5799-805c-f5491131be7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-235]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-235")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-235", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "96ef11fc-8238-5331-acdc-7a54fa317a5e"}, .name = "96ef11fc-8238-5331-acdc-7a54fa317a5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-224]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-224")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-224", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "af7d4a1c-0403-5ead-b5ab-424c37808ecb"}, .name = "af7d4a1c-0403-5ead-b5ab-424c37808ecb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-245]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-245")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-245", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b7bbd971-6410-546b-bdec-d44038b03226"}, .name = "b7bbd971-6410-546b-bdec-d44038b03226", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-246]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-246")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-246", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bf4b8e21-c64f-52cb-a0e0-5c7a300ef5eb"}, .name = "bf4b8e21-c64f-52cb-a0e0-5c7a300ef5eb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-222]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-222")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-222", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c307d582-5f15-57ff-9bc8-84b78be06d82"}, .name = "c307d582-5f15-57ff-9bc8-84b78be06d82", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-232]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-232")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-232", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c9e17850-2963-5c1f-aba2-fe7636551e9c"}, .name = "c9e17850-2963-5c1f-aba2-fe7636551e9c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-236]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-236")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-236", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cce6e1d9-a389-58ee-bf74-9faadfa24055"}, .name = "cce6e1d9-a389-58ee-bf74-9faadfa24055", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-217]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-217")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-217", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cd184987-3c4e-52a2-82de-406b959e19b5"}, .name = "cd184987-3c4e-52a2-82de-406b959e19b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-218]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-218")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-218", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ce0ff344-2eaf-5ade-9cd0-be745f89ee6c"}, .name = "ce0ff344-2eaf-5ade-9cd0-be745f89ee6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-215]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-215")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-215", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "db570279-dd87-5b76-8602-bd407ca2586d"}, .name = "db570279-dd87-5b76-8602-bd407ca2586d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-230]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-230")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-230", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dfeba82d-1edf-50bf-8ab9-0f84b7d679b4"}, .name = "dfeba82d-1edf-50bf-8ab9-0f84b7d679b4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-226]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-226")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-226", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e0b6d092-d299-5591-ac2f-94ba68eac577"}, .name = "e0b6d092-d299-5591-ac2f-94ba68eac577", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-216]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-216")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-216", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e403cccb-89fd-5709-a1f4-49bbfcf39a51"}, .name = "e403cccb-89fd-5709-a1f4-49bbfcf39a51", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-242]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-242")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-242", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e61a021b-d18d-5759-bc20-c440a1def743"}, .name = "e61a021b-d18d-5759-bc20-c440a1def743", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-219]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-219")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-219", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f170bb2c-7146-5078-9c22-3bfd840e2691"}, .name = "f170bb2c-7146-5078-9c22-3bfd840e2691", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-240]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-240")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-240", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f4c6592f-9d24-5299-a825-1b870d36158f"}, .name = "f4c6592f-9d24-5299-a825-1b870d36158f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-231]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-231")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-231", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "faec8054-e271-5a63-8328-d0b7a1decbb9"}, .name = "faec8054-e271-5a63-8328-d0b7a1decbb9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-221]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-221")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-221", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-215"}, .name = "testNP-215", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e0b6d092-d299-5591-ac2f-94ba68eac577"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ce0ff344-2eaf-5ade-9cd0-be745f89ee6c"]}, .span = ["testNode-21"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-216"}, .name = "testNP-216", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cce6e1d9-a389-58ee-bf74-9faadfa24055"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e0b6d092-d299-5591-ac2f-94ba68eac577"]}, .span = ["testNode-21"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-217"}, .name = "testNP-217", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cd184987-3c4e-52a2-82de-406b959e19b5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cce6e1d9-a389-58ee-bf74-9faadfa24055"]}, .span = ["testNode-21"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-218"}, .name = "testNP-218", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e61a021b-d18d-5759-bc20-c440a1def743"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cd184987-3c4e-52a2-82de-406b959e19b5"]}, .span = ["testNode-21"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-219"}, .name = "testNP-219", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0f032ba9-271b-5ea5-a68c-a17f073e0684"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e61a021b-d18d-5759-bc20-c440a1def743"]}, .span = ["testNode-21"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-220"}, .name = "testNP-220", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["faec8054-e271-5a63-8328-d0b7a1decbb9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0f032ba9-271b-5ea5-a68c-a17f073e0684"]}, .span = ["testNode-22"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-221"}, .name = "testNP-221", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bf4b8e21-c64f-52cb-a0e0-5c7a300ef5eb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["faec8054-e271-5a63-8328-d0b7a1decbb9"]}, .span = ["testNode-22"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-222"}, .name = "testNP-222", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["30f5106e-9e8f-5329-a04f-f5223d313f94"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bf4b8e21-c64f-52cb-a0e0-5c7a300ef5eb"]}, .span = ["testNode-22"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-223"}, .name = "testNP-223", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["96ef11fc-8238-5331-acdc-7a54fa317a5e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["30f5106e-9e8f-5329-a04f-f5223d313f94"]}, .span = ["testNode-22"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-224"}, .name = "testNP-224", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["25e29314-9597-55b2-b357-ce6cad43a1df"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["96ef11fc-8238-5331-acdc-7a54fa317a5e"]}, .span = ["testNode-22"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-225"}, .name = "testNP-225", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dfeba82d-1edf-50bf-8ab9-0f84b7d679b4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["25e29314-9597-55b2-b357-ce6cad43a1df"]}, .span = ["testNode-22"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-226"}, .name = "testNP-226", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3cf363d5-9f6d-5fbe-bce8-ead2115f300b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dfeba82d-1edf-50bf-8ab9-0f84b7d679b4"]}, .span = ["testNode-22"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-227"}, .name = "testNP-227", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5b27e3c4-7fb5-5646-9309-e6b53a932e56"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3cf363d5-9f6d-5fbe-bce8-ead2115f300b"]}, .span = ["testNode-22"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-228"}, .name = "testNP-228", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3b3928b2-19ee-5d88-8ffb-4da451fabbc2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5b27e3c4-7fb5-5646-9309-e6b53a932e56"]}, .span = ["testNode-22"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-229"}, .name = "testNP-229", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["db570279-dd87-5b76-8602-bd407ca2586d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3b3928b2-19ee-5d88-8ffb-4da451fabbc2"]}, .span = ["testNode-22"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-230"}, .name = "testNP-230", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f4c6592f-9d24-5299-a825-1b870d36158f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["db570279-dd87-5b76-8602-bd407ca2586d"]}, .span = ["testNode-23"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-231"}, .name = "testNP-231", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c307d582-5f15-57ff-9bc8-84b78be06d82"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f4c6592f-9d24-5299-a825-1b870d36158f"]}, .span = ["testNode-23"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-232"}, .name = "testNP-232", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4a4af55a-eac9-527c-8aee-491684848e3a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c307d582-5f15-57ff-9bc8-84b78be06d82"]}, .span = ["testNode-23"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-233"}, .name = "testNP-233", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["12363c7f-6a05-50df-bc3c-49a85d7c9fed"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4a4af55a-eac9-527c-8aee-491684848e3a"]}, .span = ["testNode-23"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-234"}, .name = "testNP-234", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["96cf2a9c-7745-5799-805c-f5491131be7a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["12363c7f-6a05-50df-bc3c-49a85d7c9fed"]}, .span = ["testNode-23"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-235"}, .name = "testNP-235", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c9e17850-2963-5c1f-aba2-fe7636551e9c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["96cf2a9c-7745-5799-805c-f5491131be7a"]}, .span = ["testNode-23"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-236"}, .name = "testNP-236", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6325a183-1cca-5fa2-93a7-8d93436debc6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c9e17850-2963-5c1f-aba2-fe7636551e9c"]}, .span = ["testNode-23"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-237"}, .name = "testNP-237", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["969d4a4d-0d73-5ff1-ac23-9a3c6060fa32"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6325a183-1cca-5fa2-93a7-8d93436debc6"]}, .span = ["testNode-23"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-238"}, .name = "testNP-238", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7e09417a-9bf1-5ba5-9fa1-211122179e6c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["969d4a4d-0d73-5ff1-ac23-9a3c6060fa32"]}, .span = ["testNode-23"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-239"}, .name = "testNP-239", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f170bb2c-7146-5078-9c22-3bfd840e2691"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7e09417a-9bf1-5ba5-9fa1-211122179e6c"]}, .span = ["testNode-23"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-240"}, .name = "testNP-240", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["03c30831-91b6-580f-a2e1-24562dcc1da1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f170bb2c-7146-5078-9c22-3bfd840e2691"]}, .span = ["testNode-24"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-241"}, .name = "testNP-241", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e403cccb-89fd-5709-a1f4-49bbfcf39a51"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["03c30831-91b6-580f-a2e1-24562dcc1da1"]}, .span = ["testNode-24"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-242"}, .name = "testNP-242", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8f496125-eb17-5c5e-8643-dd1f181798ab"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e403cccb-89fd-5709-a1f4-49bbfcf39a51"]}, .span = ["testNode-24"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-243"}, .name = "testNP-243", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["18ad0ba6-aaa4-574f-a7e5-5380d9decdae"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8f496125-eb17-5c5e-8643-dd1f181798ab"]}, .span = ["testNode-24"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-244"}, .name = "testNP-244", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["af7d4a1c-0403-5ead-b5ab-424c37808ecb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["18ad0ba6-aaa4-574f-a7e5-5380d9decdae"]}, .span = ["testNode-24"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-245"}, .name = "testNP-245", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b7bbd971-6410-546b-bdec-d44038b03226"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["af7d4a1c-0403-5ead-b5ab-424c37808ecb"]}, .span = ["testNode-24"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-246"}, .name = "testNP-246", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2f31d01d-e600-5abf-a95d-7f691b736b75"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b7bbd971-6410-546b-bdec-d44038b03226"]}, .span = ["testNode-24"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1046e105-938c-51f2-b9a2-7cb6d3d6f3a7"}, .name = "1046e105-938c-51f2-b9a2-7cb6d3d6f3a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-253]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-253")], .matchExpressions = []}}}}, .addresses = ["10.10.25.3"], .span = ["testNode-25"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1d000c95-4daa-53e8-8849-adc210cc89ae"}, .name = "1d000c95-4daa-53e8-8849-adc210cc89ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-268]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-268")], .matchExpressions = []}}}}, .addresses = ["10.10.26.8"], .span = ["testNode-26"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "252988af-827c-5c19-874a-2b41c094a567"}, .name = "252988af-827c-5c19-874a-2b41c094a567", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-257]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-257")], .matchExpressions = []}}}}, .addresses = ["10.10.25.7"], .span = ["testNode-25"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "28c1693e-9f7f-598e-b11f-78f7d0b3663e"}, .name = "28c1693e-9f7f-598e-b11f-78f7d0b3663e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-260]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-260")], .matchExpressions = []}}}}, .addresses = ["10.10.26.0"], .span = ["testNode-25"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3743225e-5982-515c-8798-cd2d602abc0e"}, .name = "3743225e-5982-515c-8798-cd2d602abc0e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-250]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-250")], .matchExpressions = []}}}}, .addresses = ["10.10.25.0"], .span = ["testNode-24"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4089121a-75ca-5f8e-a05e-a3c9775c538d"}, .name = "4089121a-75ca-5f8e-a05e-a3c9775c538d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-266]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-266")], .matchExpressions = []}}}}, .addresses = ["10.10.26.6"], .span = ["testNode-26"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "44710353-c3a3-594d-91e3-188bce89c2e8"}, .name = "44710353-c3a3-594d-91e3-188bce89c2e8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-251]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-251")], .matchExpressions = []}}}}, .addresses = ["10.10.25.1"], .span = ["testNode-25"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4f30bdd6-6eb9-576f-820b-06f111a31100"}, .name = "4f30bdd6-6eb9-576f-820b-06f111a31100", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-262]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-262")], .matchExpressions = []}}}}, .addresses = ["10.10.26.2"], .span = ["testNode-26"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5031874f-b679-5ac2-abbf-affbdd110aa5"}, .name = "5031874f-b679-5ac2-abbf-affbdd110aa5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-265]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-265")], .matchExpressions = []}}}}, .addresses = ["10.10.26.5"], .span = ["testNode-26"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5fbd046a-a401-5321-8e1c-d14171e05b51"}, .name = "5fbd046a-a401-5321-8e1c-d14171e05b51", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-263]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-263")], .matchExpressions = []}}}}, .addresses = ["10.10.26.3"], .span = ["testNode-26"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "66a7e8ad-365f-56cc-a437-39062f7d0c7f"}, .name = "66a7e8ad-365f-56cc-a437-39062f7d0c7f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-272]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-272")], .matchExpressions = []}}}}, .addresses = ["10.10.27.2"], .span = ["testNode-27"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "69361e9c-1095-5e70-bed3-1e101dd52e49"}, .name = "69361e9c-1095-5e70-bed3-1e101dd52e49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-249]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-249")], .matchExpressions = []}}}}, .addresses = ["10.10.24.9"], .span = ["testNode-24"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6fd5e87f-9bf5-51c5-9f33-e0465acd4f3a"}, .name = "6fd5e87f-9bf5-51c5-9f33-e0465acd4f3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-270]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-270")], .matchExpressions = []}}}}, .addresses = ["10.10.27.0"], .span = ["testNode-26"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "75258fb6-3b10-56b5-bb55-e60abd84638b"}, .name = "75258fb6-3b10-56b5-bb55-e60abd84638b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-254]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-254")], .matchExpressions = []}}}}, .addresses = ["10.10.25.4"], .span = ["testNode-25"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "76c862b9-bfd6-5bf9-9b43-cb1fbcbca5a6"}, .name = "76c862b9-bfd6-5bf9-9b43-cb1fbcbca5a6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-252]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-252")], .matchExpressions = []}}}}, .addresses = ["10.10.25.2"], .span = ["testNode-25"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "76daf596-83d2-5607-bcdc-95e838a0a93d"}, .name = "76daf596-83d2-5607-bcdc-95e838a0a93d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-274]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-274")], .matchExpressions = []}}}}, .addresses = ["10.10.27.4"], .span = ["testNode-27"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8afa0b81-c994-5d3c-be76-bfb62cfd2abb"}, .name = "8afa0b81-c994-5d3c-be76-bfb62cfd2abb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-273]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-273")], .matchExpressions = []}}}}, .addresses = ["10.10.27.3"], .span = ["testNode-27"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "910e6b35-104a-5787-b0a5-e0a02a996aa7"}, .name = "910e6b35-104a-5787-b0a5-e0a02a996aa7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-278]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-278")], .matchExpressions = []}}}}, .addresses = ["10.10.27.8"], .span = ["testNode-27"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9e156ff4-26ce-5a44-9eab-44feb066dd0b"}, .name = "9e156ff4-26ce-5a44-9eab-44feb066dd0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-261]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-261")], .matchExpressions = []}}}}, .addresses = ["10.10.26.1"], .span = ["testNode-26"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a1a57ff1-2217-59c3-9b5f-84ae0610926d"}, .name = "a1a57ff1-2217-59c3-9b5f-84ae0610926d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-277]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-277")], .matchExpressions = []}}}}, .addresses = ["10.10.27.7"], .span = ["testNode-27"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a9d1cdf9-051d-5eb8-8a31-55cb54f19b86"}, .name = "a9d1cdf9-051d-5eb8-8a31-55cb54f19b86", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-269]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-269")], .matchExpressions = []}}}}, .addresses = ["10.10.26.9"], .span = ["testNode-26"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ab4db34c-4f8e-5a49-92fd-e280ff8610af"}, .name = "ab4db34c-4f8e-5a49-92fd-e280ff8610af", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-271]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-271")], .matchExpressions = []}}}}, .addresses = ["10.10.27.1"], .span = ["testNode-27"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b3950538-7b64-5a87-bb38-37e2fcd4577e"}, .name = "b3950538-7b64-5a87-bb38-37e2fcd4577e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-258]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-258")], .matchExpressions = []}}}}, .addresses = ["10.10.25.8"], .span = ["testNode-25"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b6499d7c-5393-5f94-b3e2-5b90801a284a"}, .name = "b6499d7c-5393-5f94-b3e2-5b90801a284a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-279]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-279")], .matchExpressions = []}}}}, .addresses = ["10.10.27.9"], .span = ["testNode-27"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bbd75deb-2c15-5e08-a6f1-37aaa90ceeb3"}, .name = "bbd75deb-2c15-5e08-a6f1-37aaa90ceeb3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-255]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-255")], .matchExpressions = []}}}}, .addresses = ["10.10.25.5"], .span = ["testNode-25"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e66ee496-dc95-5ad9-b85a-3b1ed35a5cfb"}, .name = "e66ee496-dc95-5ad9-b85a-3b1ed35a5cfb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-267]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-267")], .matchExpressions = []}}}}, .addresses = ["10.10.26.7"], .span = ["testNode-26"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "eb41ee19-8b4d-56bc-9bc6-6baa5fdcc2a4"}, .name = "eb41ee19-8b4d-56bc-9bc6-6baa5fdcc2a4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-256]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-256")], .matchExpressions = []}}}}, .addresses = ["10.10.25.6"], .span = ["testNode-25"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ed4ee79b-f5da-5c29-9934-d38e15f2f157"}, .name = "ed4ee79b-f5da-5c29-9934-d38e15f2f157", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-264]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-264")], .matchExpressions = []}}}}, .addresses = ["10.10.26.4"], .span = ["testNode-26"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f1abb1fc-ef88-52a9-806e-ca9360600fe8"}, .name = "f1abb1fc-ef88-52a9-806e-ca9360600fe8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-248]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-248")], .matchExpressions = []}}}}, .addresses = ["10.10.24.8"], .span = ["testNode-24"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f1c59909-0f1a-5693-b2ba-a4b4ef40df30"}, .name = "f1c59909-0f1a-5693-b2ba-a4b4ef40df30", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-276]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-276")], .matchExpressions = []}}}}, .addresses = ["10.10.27.6"], .span = ["testNode-27"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f1e7cddd-c6e8-5717-8129-e2f531b580cb"}, .name = "f1e7cddd-c6e8-5717-8129-e2f531b580cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-275]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-275")], .matchExpressions = []}}}}, .addresses = ["10.10.27.5"], .span = ["testNode-27"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fbd0c9ef-bc08-536a-91f3-d7c220ecb186"}, .name = "fbd0c9ef-bc08-536a-91f3-d7c220ecb186", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-259]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-259")], .matchExpressions = []}}}}, .addresses = ["10.10.25.9"], .span = ["testNode-25"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1046e105-938c-51f2-b9a2-7cb6d3d6f3a7"}, .name = "1046e105-938c-51f2-b9a2-7cb6d3d6f3a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-253]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-253")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-253", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1d000c95-4daa-53e8-8849-adc210cc89ae"}, .name = "1d000c95-4daa-53e8-8849-adc210cc89ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-268]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-268")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-268", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "252988af-827c-5c19-874a-2b41c094a567"}, .name = "252988af-827c-5c19-874a-2b41c094a567", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-257]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-257")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-257", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "28c1693e-9f7f-598e-b11f-78f7d0b3663e"}, .name = "28c1693e-9f7f-598e-b11f-78f7d0b3663e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-260]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-260")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-260", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2f31d01d-e600-5abf-a95d-7f691b736b75"}, .name = "2f31d01d-e600-5abf-a95d-7f691b736b75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-247]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-247")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-247", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3743225e-5982-515c-8798-cd2d602abc0e"}, .name = "3743225e-5982-515c-8798-cd2d602abc0e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-250]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-250")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-250", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4089121a-75ca-5f8e-a05e-a3c9775c538d"}, .name = "4089121a-75ca-5f8e-a05e-a3c9775c538d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-266]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-266")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-266", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "44710353-c3a3-594d-91e3-188bce89c2e8"}, .name = "44710353-c3a3-594d-91e3-188bce89c2e8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-251]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-251")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-251", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4f30bdd6-6eb9-576f-820b-06f111a31100"}, .name = "4f30bdd6-6eb9-576f-820b-06f111a31100", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-262]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-262")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-262", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5031874f-b679-5ac2-abbf-affbdd110aa5"}, .name = "5031874f-b679-5ac2-abbf-affbdd110aa5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-265]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-265")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-265", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5fbd046a-a401-5321-8e1c-d14171e05b51"}, .name = "5fbd046a-a401-5321-8e1c-d14171e05b51", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-263]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-263")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-263", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "66a7e8ad-365f-56cc-a437-39062f7d0c7f"}, .name = "66a7e8ad-365f-56cc-a437-39062f7d0c7f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-272]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-272")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-272", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "69361e9c-1095-5e70-bed3-1e101dd52e49"}, .name = "69361e9c-1095-5e70-bed3-1e101dd52e49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-249]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-249")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-249", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6fd5e87f-9bf5-51c5-9f33-e0465acd4f3a"}, .name = "6fd5e87f-9bf5-51c5-9f33-e0465acd4f3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-270]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-270")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-270", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "75258fb6-3b10-56b5-bb55-e60abd84638b"}, .name = "75258fb6-3b10-56b5-bb55-e60abd84638b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-254]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-254")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-254", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "76c862b9-bfd6-5bf9-9b43-cb1fbcbca5a6"}, .name = "76c862b9-bfd6-5bf9-9b43-cb1fbcbca5a6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-252]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-252")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-252", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "76daf596-83d2-5607-bcdc-95e838a0a93d"}, .name = "76daf596-83d2-5607-bcdc-95e838a0a93d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-274]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-274")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-274", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8afa0b81-c994-5d3c-be76-bfb62cfd2abb"}, .name = "8afa0b81-c994-5d3c-be76-bfb62cfd2abb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-273]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-273")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-273", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "910e6b35-104a-5787-b0a5-e0a02a996aa7"}, .name = "910e6b35-104a-5787-b0a5-e0a02a996aa7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-278]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-278")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-278", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9e156ff4-26ce-5a44-9eab-44feb066dd0b"}, .name = "9e156ff4-26ce-5a44-9eab-44feb066dd0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-261]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-261")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-261", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a1a57ff1-2217-59c3-9b5f-84ae0610926d"}, .name = "a1a57ff1-2217-59c3-9b5f-84ae0610926d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-277]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-277")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-277", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a9d1cdf9-051d-5eb8-8a31-55cb54f19b86"}, .name = "a9d1cdf9-051d-5eb8-8a31-55cb54f19b86", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-269]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-269")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-269", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ab4db34c-4f8e-5a49-92fd-e280ff8610af"}, .name = "ab4db34c-4f8e-5a49-92fd-e280ff8610af", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-271]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-271")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-271", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b3950538-7b64-5a87-bb38-37e2fcd4577e"}, .name = "b3950538-7b64-5a87-bb38-37e2fcd4577e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-258]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-258")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-258", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bbd75deb-2c15-5e08-a6f1-37aaa90ceeb3"}, .name = "bbd75deb-2c15-5e08-a6f1-37aaa90ceeb3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-255]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-255")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-255", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e66ee496-dc95-5ad9-b85a-3b1ed35a5cfb"}, .name = "e66ee496-dc95-5ad9-b85a-3b1ed35a5cfb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-267]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-267")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-267", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "eb41ee19-8b4d-56bc-9bc6-6baa5fdcc2a4"}, .name = "eb41ee19-8b4d-56bc-9bc6-6baa5fdcc2a4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-256]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-256")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-256", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ed4ee79b-f5da-5c29-9934-d38e15f2f157"}, .name = "ed4ee79b-f5da-5c29-9934-d38e15f2f157", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-264]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-264")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-264", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f1abb1fc-ef88-52a9-806e-ca9360600fe8"}, .name = "f1abb1fc-ef88-52a9-806e-ca9360600fe8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-248]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-248")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-248", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f1c59909-0f1a-5693-b2ba-a4b4ef40df30"}, .name = "f1c59909-0f1a-5693-b2ba-a4b4ef40df30", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-276]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-276")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-276", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f1e7cddd-c6e8-5717-8129-e2f531b580cb"}, .name = "f1e7cddd-c6e8-5717-8129-e2f531b580cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-275]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-275")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-275", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fbd0c9ef-bc08-536a-91f3-d7c220ecb186"}, .name = "fbd0c9ef-bc08-536a-91f3-d7c220ecb186", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-259]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-259")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-259", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-247"}, .name = "testNP-247", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f1abb1fc-ef88-52a9-806e-ca9360600fe8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2f31d01d-e600-5abf-a95d-7f691b736b75"]}, .span = ["testNode-24"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-248"}, .name = "testNP-248", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["69361e9c-1095-5e70-bed3-1e101dd52e49"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f1abb1fc-ef88-52a9-806e-ca9360600fe8"]}, .span = ["testNode-24"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-249"}, .name = "testNP-249", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3743225e-5982-515c-8798-cd2d602abc0e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["69361e9c-1095-5e70-bed3-1e101dd52e49"]}, .span = ["testNode-24"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-250"}, .name = "testNP-250", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["44710353-c3a3-594d-91e3-188bce89c2e8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3743225e-5982-515c-8798-cd2d602abc0e"]}, .span = ["testNode-25"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-251"}, .name = "testNP-251", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["76c862b9-bfd6-5bf9-9b43-cb1fbcbca5a6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["44710353-c3a3-594d-91e3-188bce89c2e8"]}, .span = ["testNode-25"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-252"}, .name = "testNP-252", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1046e105-938c-51f2-b9a2-7cb6d3d6f3a7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["76c862b9-bfd6-5bf9-9b43-cb1fbcbca5a6"]}, .span = ["testNode-25"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-253"}, .name = "testNP-253", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["75258fb6-3b10-56b5-bb55-e60abd84638b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1046e105-938c-51f2-b9a2-7cb6d3d6f3a7"]}, .span = ["testNode-25"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-254"}, .name = "testNP-254", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bbd75deb-2c15-5e08-a6f1-37aaa90ceeb3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["75258fb6-3b10-56b5-bb55-e60abd84638b"]}, .span = ["testNode-25"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-255"}, .name = "testNP-255", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["eb41ee19-8b4d-56bc-9bc6-6baa5fdcc2a4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bbd75deb-2c15-5e08-a6f1-37aaa90ceeb3"]}, .span = ["testNode-25"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-256"}, .name = "testNP-256", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["252988af-827c-5c19-874a-2b41c094a567"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["eb41ee19-8b4d-56bc-9bc6-6baa5fdcc2a4"]}, .span = ["testNode-25"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-257"}, .name = "testNP-257", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b3950538-7b64-5a87-bb38-37e2fcd4577e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["252988af-827c-5c19-874a-2b41c094a567"]}, .span = ["testNode-25"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-258"}, .name = "testNP-258", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fbd0c9ef-bc08-536a-91f3-d7c220ecb186"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b3950538-7b64-5a87-bb38-37e2fcd4577e"]}, .span = ["testNode-25"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-259"}, .name = "testNP-259", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["28c1693e-9f7f-598e-b11f-78f7d0b3663e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fbd0c9ef-bc08-536a-91f3-d7c220ecb186"]}, .span = ["testNode-25"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-260"}, .name = "testNP-260", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9e156ff4-26ce-5a44-9eab-44feb066dd0b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["28c1693e-9f7f-598e-b11f-78f7d0b3663e"]}, .span = ["testNode-26"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-261"}, .name = "testNP-261", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4f30bdd6-6eb9-576f-820b-06f111a31100"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9e156ff4-26ce-5a44-9eab-44feb066dd0b"]}, .span = ["testNode-26"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-262"}, .name = "testNP-262", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5fbd046a-a401-5321-8e1c-d14171e05b51"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4f30bdd6-6eb9-576f-820b-06f111a31100"]}, .span = ["testNode-26"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-263"}, .name = "testNP-263", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ed4ee79b-f5da-5c29-9934-d38e15f2f157"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5fbd046a-a401-5321-8e1c-d14171e05b51"]}, .span = ["testNode-26"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-264"}, .name = "testNP-264", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5031874f-b679-5ac2-abbf-affbdd110aa5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ed4ee79b-f5da-5c29-9934-d38e15f2f157"]}, .span = ["testNode-26"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-265"}, .name = "testNP-265", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4089121a-75ca-5f8e-a05e-a3c9775c538d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5031874f-b679-5ac2-abbf-affbdd110aa5"]}, .span = ["testNode-26"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-266"}, .name = "testNP-266", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e66ee496-dc95-5ad9-b85a-3b1ed35a5cfb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4089121a-75ca-5f8e-a05e-a3c9775c538d"]}, .span = ["testNode-26"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-267"}, .name = "testNP-267", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1d000c95-4daa-53e8-8849-adc210cc89ae"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e66ee496-dc95-5ad9-b85a-3b1ed35a5cfb"]}, .span = ["testNode-26"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-268"}, .name = "testNP-268", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a9d1cdf9-051d-5eb8-8a31-55cb54f19b86"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1d000c95-4daa-53e8-8849-adc210cc89ae"]}, .span = ["testNode-26"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-269"}, .name = "testNP-269", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6fd5e87f-9bf5-51c5-9f33-e0465acd4f3a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a9d1cdf9-051d-5eb8-8a31-55cb54f19b86"]}, .span = ["testNode-26"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-270"}, .name = "testNP-270", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ab4db34c-4f8e-5a49-92fd-e280ff8610af"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6fd5e87f-9bf5-51c5-9f33-e0465acd4f3a"]}, .span = ["testNode-27"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-271"}, .name = "testNP-271", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["66a7e8ad-365f-56cc-a437-39062f7d0c7f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ab4db34c-4f8e-5a49-92fd-e280ff8610af"]}, .span = ["testNode-27"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-272"}, .name = "testNP-272", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8afa0b81-c994-5d3c-be76-bfb62cfd2abb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["66a7e8ad-365f-56cc-a437-39062f7d0c7f"]}, .span = ["testNode-27"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-273"}, .name = "testNP-273", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["76daf596-83d2-5607-bcdc-95e838a0a93d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8afa0b81-c994-5d3c-be76-bfb62cfd2abb"]}, .span = ["testNode-27"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-274"}, .name = "testNP-274", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f1e7cddd-c6e8-5717-8129-e2f531b580cb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["76daf596-83d2-5607-bcdc-95e838a0a93d"]}, .span = ["testNode-27"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-275"}, .name = "testNP-275", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f1c59909-0f1a-5693-b2ba-a4b4ef40df30"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f1e7cddd-c6e8-5717-8129-e2f531b580cb"]}, .span = ["testNode-27"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-276"}, .name = "testNP-276", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a1a57ff1-2217-59c3-9b5f-84ae0610926d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f1c59909-0f1a-5693-b2ba-a4b4ef40df30"]}, .span = ["testNode-27"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-277"}, .name = "testNP-277", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["910e6b35-104a-5787-b0a5-e0a02a996aa7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a1a57ff1-2217-59c3-9b5f-84ae0610926d"]}, .span = ["testNode-27"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-278"}, .name = "testNP-278", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b6499d7c-5393-5f94-b3e2-5b90801a284a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["910e6b35-104a-5787-b0a5-e0a02a996aa7"]}, .span = ["testNode-27"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "04827c12-8834-5b78-aaf4-13a23b580cfa"}, .name = "04827c12-8834-5b78-aaf4-13a23b580cfa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-307]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-307")], .matchExpressions = []}}}}, .addresses = ["10.10.30.7"], .span = ["testNode-30"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "09d3e153-0eab-5d9f-b6a1-ded45eafea58"}, .name = "09d3e153-0eab-5d9f-b6a1-ded45eafea58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-280]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-280")], .matchExpressions = []}}}}, .addresses = ["10.10.28.0"], .span = ["testNode-27"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0f87d503-ec80-5aa3-a688-8e1d94b260c1"}, .name = "0f87d503-ec80-5aa3-a688-8e1d94b260c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-285]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-285")], .matchExpressions = []}}}}, .addresses = ["10.10.28.5"], .span = ["testNode-28"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "13647042-d81e-5bc0-a488-6e89ffbdded0"}, .name = "13647042-d81e-5bc0-a488-6e89ffbdded0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-308]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-308")], .matchExpressions = []}}}}, .addresses = ["10.10.30.8"], .span = ["testNode-30"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1ae7ad27-c08a-5897-8f8e-53b3f0bc298f"}, .name = "1ae7ad27-c08a-5897-8f8e-53b3f0bc298f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-311]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-311")], .matchExpressions = []}}}}, .addresses = ["10.10.31.1"], .span = ["testNode-31"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1f07c1d4-1329-5b42-b57e-4d849cbe1d1d"}, .name = "1f07c1d4-1329-5b42-b57e-4d849cbe1d1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-303]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-303")], .matchExpressions = []}}}}, .addresses = ["10.10.30.3"], .span = ["testNode-30"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2923a2b9-94c5-58d4-9d3c-3cf29feb2a59"}, .name = "2923a2b9-94c5-58d4-9d3c-3cf29feb2a59", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-300]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-300")], .matchExpressions = []}}}}, .addresses = ["10.10.30.0"], .span = ["testNode-29"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2a1b0785-8c58-523d-9f54-767680124ed9"}, .name = "2a1b0785-8c58-523d-9f54-767680124ed9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-290]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-290")], .matchExpressions = []}}}}, .addresses = ["10.10.29.0"], .span = ["testNode-28"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "34c915dd-cc6d-5a19-97fb-17c1208c2346"}, .name = "34c915dd-cc6d-5a19-97fb-17c1208c2346", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-287]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-287")], .matchExpressions = []}}}}, .addresses = ["10.10.28.7"], .span = ["testNode-28"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4f866be1-7dc0-5f46-a7d1-08e0e2752603"}, .name = "4f866be1-7dc0-5f46-a7d1-08e0e2752603", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-309]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-309")], .matchExpressions = []}}}}, .addresses = ["10.10.30.9"], .span = ["testNode-30"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "54360a2c-7954-5bdf-8772-3a22e051a979"}, .name = "54360a2c-7954-5bdf-8772-3a22e051a979", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-302]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-302")], .matchExpressions = []}}}}, .addresses = ["10.10.30.2"], .span = ["testNode-30"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "61c1c6bc-dd19-5e48-b06e-aecc4efc77a7"}, .name = "61c1c6bc-dd19-5e48-b06e-aecc4efc77a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-291]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-291")], .matchExpressions = []}}}}, .addresses = ["10.10.29.1"], .span = ["testNode-29"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "62b8d8a6-3d39-5505-8060-58ec197192e1"}, .name = "62b8d8a6-3d39-5505-8060-58ec197192e1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-288]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-288")], .matchExpressions = []}}}}, .addresses = ["10.10.28.8"], .span = ["testNode-28"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "633f85d6-137e-59cd-8d38-78ae94c35df8"}, .name = "633f85d6-137e-59cd-8d38-78ae94c35df8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-304]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-304")], .matchExpressions = []}}}}, .addresses = ["10.10.30.4"], .span = ["testNode-30"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "749f1310-23ed-5f5c-94e8-1bdc3af407cb"}, .name = "749f1310-23ed-5f5c-94e8-1bdc3af407cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-296]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-296")], .matchExpressions = []}}}}, .addresses = ["10.10.29.6"], .span = ["testNode-29"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "89fcbb82-ccbe-5bb4-b942-08bc7ca3e1cf"}, .name = "89fcbb82-ccbe-5bb4-b942-08bc7ca3e1cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-283]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-283")], .matchExpressions = []}}}}, .addresses = ["10.10.28.3"], .span = ["testNode-28"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "aede1b9f-e8ff-5860-9bd4-fe58d7778187"}, .name = "aede1b9f-e8ff-5860-9bd4-fe58d7778187", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-286]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-286")], .matchExpressions = []}}}}, .addresses = ["10.10.28.6"], .span = ["testNode-28"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b3c83e85-baf8-5ec6-922e-528d510c6b40"}, .name = "b3c83e85-baf8-5ec6-922e-528d510c6b40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-293]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-293")], .matchExpressions = []}}}}, .addresses = ["10.10.29.3"], .span = ["testNode-29"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c1f45caf-1be9-56e8-88f8-42b3b2a12275"}, .name = "c1f45caf-1be9-56e8-88f8-42b3b2a12275", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-306]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-306")], .matchExpressions = []}}}}, .addresses = ["10.10.30.6"], .span = ["testNode-30"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c5e4ca67-72f4-5e68-b605-8f9396c4298f"}, .name = "c5e4ca67-72f4-5e68-b605-8f9396c4298f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-299]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-299")], .matchExpressions = []}}}}, .addresses = ["10.10.29.9"], .span = ["testNode-29"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c82e0678-bfff-57a3-88a2-b806f1e5aae0"}, .name = "c82e0678-bfff-57a3-88a2-b806f1e5aae0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-305]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-305")], .matchExpressions = []}}}}, .addresses = ["10.10.30.5"], .span = ["testNode-30"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cadbea6e-d3b9-5caf-a5e2-20d0dc81079f"}, .name = "cadbea6e-d3b9-5caf-a5e2-20d0dc81079f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-282]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-282")], .matchExpressions = []}}}}, .addresses = ["10.10.28.2"], .span = ["testNode-28"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cafe0372-7b41-5768-93b7-a40709563c33"}, .name = "cafe0372-7b41-5768-93b7-a40709563c33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-284]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-284")], .matchExpressions = []}}}}, .addresses = ["10.10.28.4"], .span = ["testNode-28"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cf495622-9442-57ec-a381-7588122951ed"}, .name = "cf495622-9442-57ec-a381-7588122951ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-297]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-297")], .matchExpressions = []}}}}, .addresses = ["10.10.29.7"], .span = ["testNode-29"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d0b62e6a-3ca5-5779-b226-f501695f7c66"}, .name = "d0b62e6a-3ca5-5779-b226-f501695f7c66", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-281]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-281")], .matchExpressions = []}}}}, .addresses = ["10.10.28.1"], .span = ["testNode-28"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d3266260-b666-54f8-8144-4db8db24578f"}, .name = "d3266260-b666-54f8-8144-4db8db24578f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-292]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-292")], .matchExpressions = []}}}}, .addresses = ["10.10.29.2"], .span = ["testNode-29"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "db636b9e-6fe7-5d33-a6f8-3cccfcbea99a"}, .name = "db636b9e-6fe7-5d33-a6f8-3cccfcbea99a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-294]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-294")], .matchExpressions = []}}}}, .addresses = ["10.10.29.4"], .span = ["testNode-29"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e64245f9-b730-56a4-b311-a818f36640fe"}, .name = "e64245f9-b730-56a4-b311-a818f36640fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-298]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-298")], .matchExpressions = []}}}}, .addresses = ["10.10.29.8"], .span = ["testNode-29"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ec2708d6-c4c9-5490-a15c-686ece151d7f"}, .name = "ec2708d6-c4c9-5490-a15c-686ece151d7f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-289]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-289")], .matchExpressions = []}}}}, .addresses = ["10.10.28.9"], .span = ["testNode-28"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f0c5bdca-4d21-545a-88ff-12f1347a4ae6"}, .name = "f0c5bdca-4d21-545a-88ff-12f1347a4ae6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-301]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-301")], .matchExpressions = []}}}}, .addresses = ["10.10.30.1"], .span = ["testNode-30"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f0d7b431-cdc6-5739-ac1b-b3e4ec9bb731"}, .name = "f0d7b431-cdc6-5739-ac1b-b3e4ec9bb731", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-295]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-295")], .matchExpressions = []}}}}, .addresses = ["10.10.29.5"], .span = ["testNode-29"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ffb9a16e-a6c4-54f3-b569-9ed72b59d84d"}, .name = "ffb9a16e-a6c4-54f3-b569-9ed72b59d84d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-310]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-310")], .matchExpressions = []}}}}, .addresses = ["10.10.31.0"], .span = ["testNode-30"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "04827c12-8834-5b78-aaf4-13a23b580cfa"}, .name = "04827c12-8834-5b78-aaf4-13a23b580cfa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-307]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-307")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-307", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "09d3e153-0eab-5d9f-b6a1-ded45eafea58"}, .name = "09d3e153-0eab-5d9f-b6a1-ded45eafea58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-280]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-280")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-280", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0f87d503-ec80-5aa3-a688-8e1d94b260c1"}, .name = "0f87d503-ec80-5aa3-a688-8e1d94b260c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-285]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-285")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-285", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "13647042-d81e-5bc0-a488-6e89ffbdded0"}, .name = "13647042-d81e-5bc0-a488-6e89ffbdded0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-308]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-308")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-308", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1f07c1d4-1329-5b42-b57e-4d849cbe1d1d"}, .name = "1f07c1d4-1329-5b42-b57e-4d849cbe1d1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-303]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-303")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-303", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2923a2b9-94c5-58d4-9d3c-3cf29feb2a59"}, .name = "2923a2b9-94c5-58d4-9d3c-3cf29feb2a59", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-300]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-300")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-300", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2a1b0785-8c58-523d-9f54-767680124ed9"}, .name = "2a1b0785-8c58-523d-9f54-767680124ed9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-290]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-290")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-290", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "34c915dd-cc6d-5a19-97fb-17c1208c2346"}, .name = "34c915dd-cc6d-5a19-97fb-17c1208c2346", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-287]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-287")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-287", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4f866be1-7dc0-5f46-a7d1-08e0e2752603"}, .name = "4f866be1-7dc0-5f46-a7d1-08e0e2752603", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-309]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-309")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-309", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "54360a2c-7954-5bdf-8772-3a22e051a979"}, .name = "54360a2c-7954-5bdf-8772-3a22e051a979", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-302]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-302")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-302", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "61c1c6bc-dd19-5e48-b06e-aecc4efc77a7"}, .name = "61c1c6bc-dd19-5e48-b06e-aecc4efc77a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-291]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-291")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-291", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "62b8d8a6-3d39-5505-8060-58ec197192e1"}, .name = "62b8d8a6-3d39-5505-8060-58ec197192e1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-288]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-288")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-288", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "633f85d6-137e-59cd-8d38-78ae94c35df8"}, .name = "633f85d6-137e-59cd-8d38-78ae94c35df8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-304]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-304")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-304", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "749f1310-23ed-5f5c-94e8-1bdc3af407cb"}, .name = "749f1310-23ed-5f5c-94e8-1bdc3af407cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-296]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-296")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-296", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "89fcbb82-ccbe-5bb4-b942-08bc7ca3e1cf"}, .name = "89fcbb82-ccbe-5bb4-b942-08bc7ca3e1cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-283]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-283")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-283", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "aede1b9f-e8ff-5860-9bd4-fe58d7778187"}, .name = "aede1b9f-e8ff-5860-9bd4-fe58d7778187", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-286]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-286")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-286", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b3c83e85-baf8-5ec6-922e-528d510c6b40"}, .name = "b3c83e85-baf8-5ec6-922e-528d510c6b40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-293]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-293")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-293", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b6499d7c-5393-5f94-b3e2-5b90801a284a"}, .name = "b6499d7c-5393-5f94-b3e2-5b90801a284a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-279]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-279")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-279", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c1f45caf-1be9-56e8-88f8-42b3b2a12275"}, .name = "c1f45caf-1be9-56e8-88f8-42b3b2a12275", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-306]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-306")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-306", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c5e4ca67-72f4-5e68-b605-8f9396c4298f"}, .name = "c5e4ca67-72f4-5e68-b605-8f9396c4298f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-299]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-299")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-299", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c82e0678-bfff-57a3-88a2-b806f1e5aae0"}, .name = "c82e0678-bfff-57a3-88a2-b806f1e5aae0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-305]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-305")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-305", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cadbea6e-d3b9-5caf-a5e2-20d0dc81079f"}, .name = "cadbea6e-d3b9-5caf-a5e2-20d0dc81079f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-282]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-282")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-282", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cafe0372-7b41-5768-93b7-a40709563c33"}, .name = "cafe0372-7b41-5768-93b7-a40709563c33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-284]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-284")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-284", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cf495622-9442-57ec-a381-7588122951ed"}, .name = "cf495622-9442-57ec-a381-7588122951ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-297]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-297")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-297", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d0b62e6a-3ca5-5779-b226-f501695f7c66"}, .name = "d0b62e6a-3ca5-5779-b226-f501695f7c66", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-281]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-281")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-281", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d3266260-b666-54f8-8144-4db8db24578f"}, .name = "d3266260-b666-54f8-8144-4db8db24578f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-292]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-292")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-292", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "db636b9e-6fe7-5d33-a6f8-3cccfcbea99a"}, .name = "db636b9e-6fe7-5d33-a6f8-3cccfcbea99a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-294]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-294")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-294", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e64245f9-b730-56a4-b311-a818f36640fe"}, .name = "e64245f9-b730-56a4-b311-a818f36640fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-298]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-298")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-298", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ec2708d6-c4c9-5490-a15c-686ece151d7f"}, .name = "ec2708d6-c4c9-5490-a15c-686ece151d7f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-289]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-289")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-289", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f0c5bdca-4d21-545a-88ff-12f1347a4ae6"}, .name = "f0c5bdca-4d21-545a-88ff-12f1347a4ae6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-301]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-301")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-301", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f0d7b431-cdc6-5739-ac1b-b3e4ec9bb731"}, .name = "f0d7b431-cdc6-5739-ac1b-b3e4ec9bb731", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-295]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-295")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-295", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ffb9a16e-a6c4-54f3-b569-9ed72b59d84d"}, .name = "ffb9a16e-a6c4-54f3-b569-9ed72b59d84d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-310]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-310")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-310", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-279"}, .name = "testNP-279", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["09d3e153-0eab-5d9f-b6a1-ded45eafea58"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b6499d7c-5393-5f94-b3e2-5b90801a284a"]}, .span = ["testNode-27"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-280"}, .name = "testNP-280", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d0b62e6a-3ca5-5779-b226-f501695f7c66"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["09d3e153-0eab-5d9f-b6a1-ded45eafea58"]}, .span = ["testNode-28"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-281"}, .name = "testNP-281", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cadbea6e-d3b9-5caf-a5e2-20d0dc81079f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d0b62e6a-3ca5-5779-b226-f501695f7c66"]}, .span = ["testNode-28"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-282"}, .name = "testNP-282", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["89fcbb82-ccbe-5bb4-b942-08bc7ca3e1cf"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cadbea6e-d3b9-5caf-a5e2-20d0dc81079f"]}, .span = ["testNode-28"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-283"}, .name = "testNP-283", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cafe0372-7b41-5768-93b7-a40709563c33"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["89fcbb82-ccbe-5bb4-b942-08bc7ca3e1cf"]}, .span = ["testNode-28"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-284"}, .name = "testNP-284", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0f87d503-ec80-5aa3-a688-8e1d94b260c1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cafe0372-7b41-5768-93b7-a40709563c33"]}, .span = ["testNode-28"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-285"}, .name = "testNP-285", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["aede1b9f-e8ff-5860-9bd4-fe58d7778187"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0f87d503-ec80-5aa3-a688-8e1d94b260c1"]}, .span = ["testNode-28"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-286"}, .name = "testNP-286", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["34c915dd-cc6d-5a19-97fb-17c1208c2346"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["aede1b9f-e8ff-5860-9bd4-fe58d7778187"]}, .span = ["testNode-28"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-287"}, .name = "testNP-287", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["62b8d8a6-3d39-5505-8060-58ec197192e1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["34c915dd-cc6d-5a19-97fb-17c1208c2346"]}, .span = ["testNode-28"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-288"}, .name = "testNP-288", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ec2708d6-c4c9-5490-a15c-686ece151d7f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["62b8d8a6-3d39-5505-8060-58ec197192e1"]}, .span = ["testNode-28"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-289"}, .name = "testNP-289", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2a1b0785-8c58-523d-9f54-767680124ed9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ec2708d6-c4c9-5490-a15c-686ece151d7f"]}, .span = ["testNode-28"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-290"}, .name = "testNP-290", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["61c1c6bc-dd19-5e48-b06e-aecc4efc77a7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2a1b0785-8c58-523d-9f54-767680124ed9"]}, .span = ["testNode-29"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-291"}, .name = "testNP-291", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d3266260-b666-54f8-8144-4db8db24578f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["61c1c6bc-dd19-5e48-b06e-aecc4efc77a7"]}, .span = ["testNode-29"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-292"}, .name = "testNP-292", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b3c83e85-baf8-5ec6-922e-528d510c6b40"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d3266260-b666-54f8-8144-4db8db24578f"]}, .span = ["testNode-29"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-293"}, .name = "testNP-293", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["db636b9e-6fe7-5d33-a6f8-3cccfcbea99a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b3c83e85-baf8-5ec6-922e-528d510c6b40"]}, .span = ["testNode-29"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-294"}, .name = "testNP-294", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f0d7b431-cdc6-5739-ac1b-b3e4ec9bb731"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["db636b9e-6fe7-5d33-a6f8-3cccfcbea99a"]}, .span = ["testNode-29"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-295"}, .name = "testNP-295", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["749f1310-23ed-5f5c-94e8-1bdc3af407cb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f0d7b431-cdc6-5739-ac1b-b3e4ec9bb731"]}, .span = ["testNode-29"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-296"}, .name = "testNP-296", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cf495622-9442-57ec-a381-7588122951ed"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["749f1310-23ed-5f5c-94e8-1bdc3af407cb"]}, .span = ["testNode-29"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-297"}, .name = "testNP-297", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e64245f9-b730-56a4-b311-a818f36640fe"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cf495622-9442-57ec-a381-7588122951ed"]}, .span = ["testNode-29"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-298"}, .name = "testNP-298", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c5e4ca67-72f4-5e68-b605-8f9396c4298f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e64245f9-b730-56a4-b311-a818f36640fe"]}, .span = ["testNode-29"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-299"}, .name = "testNP-299", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2923a2b9-94c5-58d4-9d3c-3cf29feb2a59"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c5e4ca67-72f4-5e68-b605-8f9396c4298f"]}, .span = ["testNode-29"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-300"}, .name = "testNP-300", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f0c5bdca-4d21-545a-88ff-12f1347a4ae6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2923a2b9-94c5-58d4-9d3c-3cf29feb2a59"]}, .span = ["testNode-30"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-301"}, .name = "testNP-301", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["54360a2c-7954-5bdf-8772-3a22e051a979"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f0c5bdca-4d21-545a-88ff-12f1347a4ae6"]}, .span = ["testNode-30"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-302"}, .name = "testNP-302", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1f07c1d4-1329-5b42-b57e-4d849cbe1d1d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["54360a2c-7954-5bdf-8772-3a22e051a979"]}, .span = ["testNode-30"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-303"}, .name = "testNP-303", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["633f85d6-137e-59cd-8d38-78ae94c35df8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1f07c1d4-1329-5b42-b57e-4d849cbe1d1d"]}, .span = ["testNode-30"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-304"}, .name = "testNP-304", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c82e0678-bfff-57a3-88a2-b806f1e5aae0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["633f85d6-137e-59cd-8d38-78ae94c35df8"]}, .span = ["testNode-30"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-305"}, .name = "testNP-305", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c1f45caf-1be9-56e8-88f8-42b3b2a12275"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c82e0678-bfff-57a3-88a2-b806f1e5aae0"]}, .span = ["testNode-30"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-306"}, .name = "testNP-306", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["04827c12-8834-5b78-aaf4-13a23b580cfa"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c1f45caf-1be9-56e8-88f8-42b3b2a12275"]}, .span = ["testNode-30"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-307"}, .name = "testNP-307", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["13647042-d81e-5bc0-a488-6e89ffbdded0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["04827c12-8834-5b78-aaf4-13a23b580cfa"]}, .span = ["testNode-30"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-308"}, .name = "testNP-308", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4f866be1-7dc0-5f46-a7d1-08e0e2752603"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["13647042-d81e-5bc0-a488-6e89ffbdded0"]}, .span = ["testNode-30"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-309"}, .name = "testNP-309", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ffb9a16e-a6c4-54f3-b569-9ed72b59d84d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4f866be1-7dc0-5f46-a7d1-08e0e2752603"]}, .span = ["testNode-30"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-310"}, .name = "testNP-310", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1ae7ad27-c08a-5897-8f8e-53b3f0bc298f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ffb9a16e-a6c4-54f3-b569-9ed72b59d84d"]}, .span = ["testNode-31"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0622ca77-ea88-56f5-9b85-5d3e1949cb14"}, .name = "0622ca77-ea88-56f5-9b85-5d3e1949cb14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-341]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-341")], .matchExpressions = []}}}}, .addresses = ["10.10.34.1"], .span = ["testNode-34"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "14b6433f-13ec-52f2-84ad-e1ac2264a8ea"}, .name = "14b6433f-13ec-52f2-84ad-e1ac2264a8ea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-317]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-317")], .matchExpressions = []}}}}, .addresses = ["10.10.31.7"], .span = ["testNode-31"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "14d11b3f-177b-5b7f-a489-faf82db28522"}, .name = "14d11b3f-177b-5b7f-a489-faf82db28522", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-336]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-336")], .matchExpressions = []}}}}, .addresses = ["10.10.33.6"], .span = ["testNode-33"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "15b81544-1fa6-52c1-8122-bf92b33b7487"}, .name = "15b81544-1fa6-52c1-8122-bf92b33b7487", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-320]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-320")], .matchExpressions = []}}}}, .addresses = ["10.10.32.0"], .span = ["testNode-31"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "168aa805-2746-5c72-934e-eb04f710c762"}, .name = "168aa805-2746-5c72-934e-eb04f710c762", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-331]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-331")], .matchExpressions = []}}}}, .addresses = ["10.10.33.1"], .span = ["testNode-33"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1be9909a-f805-5a65-a182-12dfdd134ba7"}, .name = "1be9909a-f805-5a65-a182-12dfdd134ba7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-318]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-318")], .matchExpressions = []}}}}, .addresses = ["10.10.31.8"], .span = ["testNode-31"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "291575ba-268e-5347-88c2-4efe6d8793ab"}, .name = "291575ba-268e-5347-88c2-4efe6d8793ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-337]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-337")], .matchExpressions = []}}}}, .addresses = ["10.10.33.7"], .span = ["testNode-33"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "40f01ec2-a95e-5c7e-85cb-8c9543bcd35c"}, .name = "40f01ec2-a95e-5c7e-85cb-8c9543bcd35c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-327]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-327")], .matchExpressions = []}}}}, .addresses = ["10.10.32.7"], .span = ["testNode-32"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4da84640-576a-5937-b204-f52f78ea3736"}, .name = "4da84640-576a-5937-b204-f52f78ea3736", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-343]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-343")], .matchExpressions = []}}}}, .addresses = ["10.10.34.3"], .span = ["testNode-34"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "524bd920-497c-5a79-9482-4730b381fad4"}, .name = "524bd920-497c-5a79-9482-4730b381fad4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-339]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-339")], .matchExpressions = []}}}}, .addresses = ["10.10.33.9"], .span = ["testNode-33"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "535ae5cb-5535-5a53-a721-3fb07b71ac40"}, .name = "535ae5cb-5535-5a53-a721-3fb07b71ac40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-340]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-340")], .matchExpressions = []}}}}, .addresses = ["10.10.34.0"], .span = ["testNode-33"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "541ef843-2371-5bba-8ee4-f7763d970fa6"}, .name = "541ef843-2371-5bba-8ee4-f7763d970fa6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-322]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-322")], .matchExpressions = []}}}}, .addresses = ["10.10.32.2"], .span = ["testNode-32"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "56ccd122-bd82-5f69-9650-8ba3897dc10d"}, .name = "56ccd122-bd82-5f69-9650-8ba3897dc10d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-315]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-315")], .matchExpressions = []}}}}, .addresses = ["10.10.31.5"], .span = ["testNode-31"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5c3b3b30-b3a1-5a0c-b052-ca65f877c73e"}, .name = "5c3b3b30-b3a1-5a0c-b052-ca65f877c73e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-314]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-314")], .matchExpressions = []}}}}, .addresses = ["10.10.31.4"], .span = ["testNode-31"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5d58fc5f-fa22-552b-8d5c-fca0c86f3bbe"}, .name = "5d58fc5f-fa22-552b-8d5c-fca0c86f3bbe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-323]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-323")], .matchExpressions = []}}}}, .addresses = ["10.10.32.3"], .span = ["testNode-32"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5ebdad12-c5fb-57e6-bc25-0c590fac8e4c"}, .name = "5ebdad12-c5fb-57e6-bc25-0c590fac8e4c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-338]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-338")], .matchExpressions = []}}}}, .addresses = ["10.10.33.8"], .span = ["testNode-33"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6524cb14-d79b-5c8d-9d5d-9c9b5051f2ef"}, .name = "6524cb14-d79b-5c8d-9d5d-9c9b5051f2ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-328]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-328")], .matchExpressions = []}}}}, .addresses = ["10.10.32.8"], .span = ["testNode-32"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6ed3632f-896b-5527-ba9f-a78568e64764"}, .name = "6ed3632f-896b-5527-ba9f-a78568e64764", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-326]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-326")], .matchExpressions = []}}}}, .addresses = ["10.10.32.6"], .span = ["testNode-32"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "70679cbc-7724-55bf-972e-7cc0262e4948"}, .name = "70679cbc-7724-55bf-972e-7cc0262e4948", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-330]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-330")], .matchExpressions = []}}}}, .addresses = ["10.10.33.0"], .span = ["testNode-32"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7eb32b19-8544-5c7c-93e4-2b34b4eef721"}, .name = "7eb32b19-8544-5c7c-93e4-2b34b4eef721", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-316]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-316")], .matchExpressions = []}}}}, .addresses = ["10.10.31.6"], .span = ["testNode-31"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "80c8573b-7c4c-51dd-b183-2619e511d6c0"}, .name = "80c8573b-7c4c-51dd-b183-2619e511d6c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-342]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-342")], .matchExpressions = []}}}}, .addresses = ["10.10.34.2"], .span = ["testNode-34"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "84139e66-ca7e-595e-9b8d-56a4ffc9bb48"}, .name = "84139e66-ca7e-595e-9b8d-56a4ffc9bb48", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-319]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-319")], .matchExpressions = []}}}}, .addresses = ["10.10.31.9"], .span = ["testNode-31"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "95a4b722-ad92-5054-8f8a-a1e6dee7a45a"}, .name = "95a4b722-ad92-5054-8f8a-a1e6dee7a45a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-321]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-321")], .matchExpressions = []}}}}, .addresses = ["10.10.32.1"], .span = ["testNode-32"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a5768ada-4cb4-5d11-b90d-72963504a188"}, .name = "a5768ada-4cb4-5d11-b90d-72963504a188", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-312]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-312")], .matchExpressions = []}}}}, .addresses = ["10.10.31.2"], .span = ["testNode-31"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a75351a4-1505-59ff-b02a-61bc98a1731d"}, .name = "a75351a4-1505-59ff-b02a-61bc98a1731d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-334]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-334")], .matchExpressions = []}}}}, .addresses = ["10.10.33.4"], .span = ["testNode-33"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a8a24c12-4a7b-5c3d-b44a-3bf6f18e75ee"}, .name = "a8a24c12-4a7b-5c3d-b44a-3bf6f18e75ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-324]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-324")], .matchExpressions = []}}}}, .addresses = ["10.10.32.4"], .span = ["testNode-32"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ba4e676a-d4cb-5006-bf88-ded93f6d4e56"}, .name = "ba4e676a-d4cb-5006-bf88-ded93f6d4e56", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-313]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-313")], .matchExpressions = []}}}}, .addresses = ["10.10.31.3"], .span = ["testNode-31"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cebbfc08-f37e-5e72-bbed-09c8bf14093f"}, .name = "cebbfc08-f37e-5e72-bbed-09c8bf14093f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-325]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-325")], .matchExpressions = []}}}}, .addresses = ["10.10.32.5"], .span = ["testNode-32"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cf194dd7-bac5-5b8f-8f0a-53b725e63452"}, .name = "cf194dd7-bac5-5b8f-8f0a-53b725e63452", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-329]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-329")], .matchExpressions = []}}}}, .addresses = ["10.10.32.9"], .span = ["testNode-32"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "eedc0444-1ce9-5021-9f14-95dce9a5c697"}, .name = "eedc0444-1ce9-5021-9f14-95dce9a5c697", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-333]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-333")], .matchExpressions = []}}}}, .addresses = ["10.10.33.3"], .span = ["testNode-33"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fa105b92-431e-5fed-ac1a-4021e55d7364"}, .name = "fa105b92-431e-5fed-ac1a-4021e55d7364", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-335]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-335")], .matchExpressions = []}}}}, .addresses = ["10.10.33.5"], .span = ["testNode-33"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fef47bfc-bc28-5f02-9354-7ce265e5a12e"}, .name = "fef47bfc-bc28-5f02-9354-7ce265e5a12e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-332]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-332")], .matchExpressions = []}}}}, .addresses = ["10.10.33.2"], .span = ["testNode-33"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0622ca77-ea88-56f5-9b85-5d3e1949cb14"}, .name = "0622ca77-ea88-56f5-9b85-5d3e1949cb14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-341]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-341")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-341", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "14b6433f-13ec-52f2-84ad-e1ac2264a8ea"}, .name = "14b6433f-13ec-52f2-84ad-e1ac2264a8ea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-317]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-317")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-317", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "14d11b3f-177b-5b7f-a489-faf82db28522"}, .name = "14d11b3f-177b-5b7f-a489-faf82db28522", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-336]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-336")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-336", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "15b81544-1fa6-52c1-8122-bf92b33b7487"}, .name = "15b81544-1fa6-52c1-8122-bf92b33b7487", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-320]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-320")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-320", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "168aa805-2746-5c72-934e-eb04f710c762"}, .name = "168aa805-2746-5c72-934e-eb04f710c762", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-331]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-331")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-331", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1ae7ad27-c08a-5897-8f8e-53b3f0bc298f"}, .name = "1ae7ad27-c08a-5897-8f8e-53b3f0bc298f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-311]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-311")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-311", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1be9909a-f805-5a65-a182-12dfdd134ba7"}, .name = "1be9909a-f805-5a65-a182-12dfdd134ba7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-318]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-318")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-318", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "291575ba-268e-5347-88c2-4efe6d8793ab"}, .name = "291575ba-268e-5347-88c2-4efe6d8793ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-337]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-337")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-337", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "40f01ec2-a95e-5c7e-85cb-8c9543bcd35c"}, .name = "40f01ec2-a95e-5c7e-85cb-8c9543bcd35c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-327]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-327")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-327", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "524bd920-497c-5a79-9482-4730b381fad4"}, .name = "524bd920-497c-5a79-9482-4730b381fad4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-339]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-339")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-339", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "535ae5cb-5535-5a53-a721-3fb07b71ac40"}, .name = "535ae5cb-5535-5a53-a721-3fb07b71ac40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-340]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-340")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-340", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "541ef843-2371-5bba-8ee4-f7763d970fa6"}, .name = "541ef843-2371-5bba-8ee4-f7763d970fa6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-322]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-322")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-322", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "56ccd122-bd82-5f69-9650-8ba3897dc10d"}, .name = "56ccd122-bd82-5f69-9650-8ba3897dc10d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-315]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-315")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-315", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5c3b3b30-b3a1-5a0c-b052-ca65f877c73e"}, .name = "5c3b3b30-b3a1-5a0c-b052-ca65f877c73e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-314]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-314")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-314", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5d58fc5f-fa22-552b-8d5c-fca0c86f3bbe"}, .name = "5d58fc5f-fa22-552b-8d5c-fca0c86f3bbe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-323]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-323")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-323", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5ebdad12-c5fb-57e6-bc25-0c590fac8e4c"}, .name = "5ebdad12-c5fb-57e6-bc25-0c590fac8e4c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-338]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-338")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-338", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6524cb14-d79b-5c8d-9d5d-9c9b5051f2ef"}, .name = "6524cb14-d79b-5c8d-9d5d-9c9b5051f2ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-328]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-328")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-328", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6ed3632f-896b-5527-ba9f-a78568e64764"}, .name = "6ed3632f-896b-5527-ba9f-a78568e64764", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-326]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-326")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-326", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "70679cbc-7724-55bf-972e-7cc0262e4948"}, .name = "70679cbc-7724-55bf-972e-7cc0262e4948", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-330]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-330")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-330", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7eb32b19-8544-5c7c-93e4-2b34b4eef721"}, .name = "7eb32b19-8544-5c7c-93e4-2b34b4eef721", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-316]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-316")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-316", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "80c8573b-7c4c-51dd-b183-2619e511d6c0"}, .name = "80c8573b-7c4c-51dd-b183-2619e511d6c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-342]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-342")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-342", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "84139e66-ca7e-595e-9b8d-56a4ffc9bb48"}, .name = "84139e66-ca7e-595e-9b8d-56a4ffc9bb48", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-319]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-319")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-319", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "95a4b722-ad92-5054-8f8a-a1e6dee7a45a"}, .name = "95a4b722-ad92-5054-8f8a-a1e6dee7a45a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-321]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-321")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-321", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a5768ada-4cb4-5d11-b90d-72963504a188"}, .name = "a5768ada-4cb4-5d11-b90d-72963504a188", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-312]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-312")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-312", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a75351a4-1505-59ff-b02a-61bc98a1731d"}, .name = "a75351a4-1505-59ff-b02a-61bc98a1731d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-334]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-334")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-334", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a8a24c12-4a7b-5c3d-b44a-3bf6f18e75ee"}, .name = "a8a24c12-4a7b-5c3d-b44a-3bf6f18e75ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-324]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-324")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-324", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ba4e676a-d4cb-5006-bf88-ded93f6d4e56"}, .name = "ba4e676a-d4cb-5006-bf88-ded93f6d4e56", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-313]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-313")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-313", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cebbfc08-f37e-5e72-bbed-09c8bf14093f"}, .name = "cebbfc08-f37e-5e72-bbed-09c8bf14093f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-325]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-325")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-325", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cf194dd7-bac5-5b8f-8f0a-53b725e63452"}, .name = "cf194dd7-bac5-5b8f-8f0a-53b725e63452", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-329]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-329")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-329", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "eedc0444-1ce9-5021-9f14-95dce9a5c697"}, .name = "eedc0444-1ce9-5021-9f14-95dce9a5c697", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-333]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-333")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-333", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fa105b92-431e-5fed-ac1a-4021e55d7364"}, .name = "fa105b92-431e-5fed-ac1a-4021e55d7364", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-335]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-335")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-335", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fef47bfc-bc28-5f02-9354-7ce265e5a12e"}, .name = "fef47bfc-bc28-5f02-9354-7ce265e5a12e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-332]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-332")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-332", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-311"}, .name = "testNP-311", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a5768ada-4cb4-5d11-b90d-72963504a188"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1ae7ad27-c08a-5897-8f8e-53b3f0bc298f"]}, .span = ["testNode-31"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-312"}, .name = "testNP-312", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ba4e676a-d4cb-5006-bf88-ded93f6d4e56"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a5768ada-4cb4-5d11-b90d-72963504a188"]}, .span = ["testNode-31"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-313"}, .name = "testNP-313", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5c3b3b30-b3a1-5a0c-b052-ca65f877c73e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ba4e676a-d4cb-5006-bf88-ded93f6d4e56"]}, .span = ["testNode-31"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-314"}, .name = "testNP-314", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["56ccd122-bd82-5f69-9650-8ba3897dc10d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5c3b3b30-b3a1-5a0c-b052-ca65f877c73e"]}, .span = ["testNode-31"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-315"}, .name = "testNP-315", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7eb32b19-8544-5c7c-93e4-2b34b4eef721"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["56ccd122-bd82-5f69-9650-8ba3897dc10d"]}, .span = ["testNode-31"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-316"}, .name = "testNP-316", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["14b6433f-13ec-52f2-84ad-e1ac2264a8ea"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7eb32b19-8544-5c7c-93e4-2b34b4eef721"]}, .span = ["testNode-31"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-317"}, .name = "testNP-317", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1be9909a-f805-5a65-a182-12dfdd134ba7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["14b6433f-13ec-52f2-84ad-e1ac2264a8ea"]}, .span = ["testNode-31"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-318"}, .name = "testNP-318", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["84139e66-ca7e-595e-9b8d-56a4ffc9bb48"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1be9909a-f805-5a65-a182-12dfdd134ba7"]}, .span = ["testNode-31"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-319"}, .name = "testNP-319", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["15b81544-1fa6-52c1-8122-bf92b33b7487"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["84139e66-ca7e-595e-9b8d-56a4ffc9bb48"]}, .span = ["testNode-31"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-320"}, .name = "testNP-320", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["95a4b722-ad92-5054-8f8a-a1e6dee7a45a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["15b81544-1fa6-52c1-8122-bf92b33b7487"]}, .span = ["testNode-32"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-321"}, .name = "testNP-321", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["541ef843-2371-5bba-8ee4-f7763d970fa6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["95a4b722-ad92-5054-8f8a-a1e6dee7a45a"]}, .span = ["testNode-32"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-322"}, .name = "testNP-322", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5d58fc5f-fa22-552b-8d5c-fca0c86f3bbe"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["541ef843-2371-5bba-8ee4-f7763d970fa6"]}, .span = ["testNode-32"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-323"}, .name = "testNP-323", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a8a24c12-4a7b-5c3d-b44a-3bf6f18e75ee"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5d58fc5f-fa22-552b-8d5c-fca0c86f3bbe"]}, .span = ["testNode-32"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-324"}, .name = "testNP-324", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cebbfc08-f37e-5e72-bbed-09c8bf14093f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a8a24c12-4a7b-5c3d-b44a-3bf6f18e75ee"]}, .span = ["testNode-32"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-325"}, .name = "testNP-325", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6ed3632f-896b-5527-ba9f-a78568e64764"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cebbfc08-f37e-5e72-bbed-09c8bf14093f"]}, .span = ["testNode-32"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-326"}, .name = "testNP-326", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["40f01ec2-a95e-5c7e-85cb-8c9543bcd35c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6ed3632f-896b-5527-ba9f-a78568e64764"]}, .span = ["testNode-32"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-327"}, .name = "testNP-327", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6524cb14-d79b-5c8d-9d5d-9c9b5051f2ef"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["40f01ec2-a95e-5c7e-85cb-8c9543bcd35c"]}, .span = ["testNode-32"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-328"}, .name = "testNP-328", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cf194dd7-bac5-5b8f-8f0a-53b725e63452"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6524cb14-d79b-5c8d-9d5d-9c9b5051f2ef"]}, .span = ["testNode-32"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-329"}, .name = "testNP-329", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["70679cbc-7724-55bf-972e-7cc0262e4948"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cf194dd7-bac5-5b8f-8f0a-53b725e63452"]}, .span = ["testNode-32"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-330"}, .name = "testNP-330", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["168aa805-2746-5c72-934e-eb04f710c762"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["70679cbc-7724-55bf-972e-7cc0262e4948"]}, .span = ["testNode-33"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-331"}, .name = "testNP-331", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fef47bfc-bc28-5f02-9354-7ce265e5a12e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["168aa805-2746-5c72-934e-eb04f710c762"]}, .span = ["testNode-33"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-332"}, .name = "testNP-332", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["eedc0444-1ce9-5021-9f14-95dce9a5c697"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fef47bfc-bc28-5f02-9354-7ce265e5a12e"]}, .span = ["testNode-33"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-333"}, .name = "testNP-333", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a75351a4-1505-59ff-b02a-61bc98a1731d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["eedc0444-1ce9-5021-9f14-95dce9a5c697"]}, .span = ["testNode-33"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-334"}, .name = "testNP-334", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fa105b92-431e-5fed-ac1a-4021e55d7364"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a75351a4-1505-59ff-b02a-61bc98a1731d"]}, .span = ["testNode-33"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-335"}, .name = "testNP-335", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["14d11b3f-177b-5b7f-a489-faf82db28522"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fa105b92-431e-5fed-ac1a-4021e55d7364"]}, .span = ["testNode-33"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-336"}, .name = "testNP-336", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["291575ba-268e-5347-88c2-4efe6d8793ab"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["14d11b3f-177b-5b7f-a489-faf82db28522"]}, .span = ["testNode-33"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-337"}, .name = "testNP-337", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5ebdad12-c5fb-57e6-bc25-0c590fac8e4c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["291575ba-268e-5347-88c2-4efe6d8793ab"]}, .span = ["testNode-33"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-338"}, .name = "testNP-338", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["524bd920-497c-5a79-9482-4730b381fad4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5ebdad12-c5fb-57e6-bc25-0c590fac8e4c"]}, .span = ["testNode-33"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-339"}, .name = "testNP-339", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["535ae5cb-5535-5a53-a721-3fb07b71ac40"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["524bd920-497c-5a79-9482-4730b381fad4"]}, .span = ["testNode-33"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-340"}, .name = "testNP-340", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0622ca77-ea88-56f5-9b85-5d3e1949cb14"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["535ae5cb-5535-5a53-a721-3fb07b71ac40"]}, .span = ["testNode-34"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-341"}, .name = "testNP-341", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["80c8573b-7c4c-51dd-b183-2619e511d6c0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0622ca77-ea88-56f5-9b85-5d3e1949cb14"]}, .span = ["testNode-34"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-342"}, .name = "testNP-342", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4da84640-576a-5937-b204-f52f78ea3736"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["80c8573b-7c4c-51dd-b183-2619e511d6c0"]}, .span = ["testNode-34"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "11855802-3ee1-5dfa-826b-b32f0fa49a49"}, .name = "11855802-3ee1-5dfa-826b-b32f0fa49a49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-345]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-345")], .matchExpressions = []}}}}, .addresses = ["10.10.34.5"], .span = ["testNode-34"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1dc3ab11-44b6-562d-8368-ec8960367505"}, .name = "1dc3ab11-44b6-562d-8368-ec8960367505", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-364]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-364")], .matchExpressions = []}}}}, .addresses = ["10.10.36.4"], .span = ["testNode-36"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2037a85c-4419-539f-9062-53066da2367e"}, .name = "2037a85c-4419-539f-9062-53066da2367e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-350]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-350")], .matchExpressions = []}}}}, .addresses = ["10.10.35.0"], .span = ["testNode-34"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "20f4eecf-d187-51b3-b3b5-acfa9207e219"}, .name = "20f4eecf-d187-51b3-b3b5-acfa9207e219", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-372]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-372")], .matchExpressions = []}}}}, .addresses = ["10.10.37.2"], .span = ["testNode-37"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "367f024c-9e28-51b1-9440-f3610253ec50"}, .name = "367f024c-9e28-51b1-9440-f3610253ec50", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-346]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-346")], .matchExpressions = []}}}}, .addresses = ["10.10.34.6"], .span = ["testNode-34"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4e93bc66-c667-59b8-83c7-4c2f0db92b11"}, .name = "4e93bc66-c667-59b8-83c7-4c2f0db92b11", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-348]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-348")], .matchExpressions = []}}}}, .addresses = ["10.10.34.8"], .span = ["testNode-34"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4fe2f7e4-1901-5cc4-b05f-0073bec70070"}, .name = "4fe2f7e4-1901-5cc4-b05f-0073bec70070", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-375]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-375")], .matchExpressions = []}}}}, .addresses = ["10.10.37.5"], .span = ["testNode-37"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "52483149-a2c5-5e14-8ce0-87292d78e9f7"}, .name = "52483149-a2c5-5e14-8ce0-87292d78e9f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-353]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-353")], .matchExpressions = []}}}}, .addresses = ["10.10.35.3"], .span = ["testNode-35"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5ff36918-de7e-50f8-b674-89b7896c335f"}, .name = "5ff36918-de7e-50f8-b674-89b7896c335f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-361]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-361")], .matchExpressions = []}}}}, .addresses = ["10.10.36.1"], .span = ["testNode-36"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "649e663c-7902-5f6a-b621-2a2627cb4973"}, .name = "649e663c-7902-5f6a-b621-2a2627cb4973", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-344]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-344")], .matchExpressions = []}}}}, .addresses = ["10.10.34.4"], .span = ["testNode-34"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "667d61a0-d979-5f78-85a3-469b35bc9f21"}, .name = "667d61a0-d979-5f78-85a3-469b35bc9f21", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-347]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-347")], .matchExpressions = []}}}}, .addresses = ["10.10.34.7"], .span = ["testNode-34"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6ae95ac3-9478-5ddb-b790-65b9bb698a98"}, .name = "6ae95ac3-9478-5ddb-b790-65b9bb698a98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-351]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-351")], .matchExpressions = []}}}}, .addresses = ["10.10.35.1"], .span = ["testNode-35"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "71747a3c-0210-5ca6-b9d9-06d219e1015c"}, .name = "71747a3c-0210-5ca6-b9d9-06d219e1015c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-360]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-360")], .matchExpressions = []}}}}, .addresses = ["10.10.36.0"], .span = ["testNode-35"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "740cff36-5dbb-576d-a05e-1a43aa5bf510"}, .name = "740cff36-5dbb-576d-a05e-1a43aa5bf510", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-374]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-374")], .matchExpressions = []}}}}, .addresses = ["10.10.37.4"], .span = ["testNode-37"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "798052dd-47af-5971-9527-c1b7902bd7d4"}, .name = "798052dd-47af-5971-9527-c1b7902bd7d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-358]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-358")], .matchExpressions = []}}}}, .addresses = ["10.10.35.8"], .span = ["testNode-35"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "834ae5e9-8c30-5d93-a80f-5024f4caec94"}, .name = "834ae5e9-8c30-5d93-a80f-5024f4caec94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-349]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-349")], .matchExpressions = []}}}}, .addresses = ["10.10.34.9"], .span = ["testNode-34"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "861b069b-33ab-550d-b698-2d04d0a731c0"}, .name = "861b069b-33ab-550d-b698-2d04d0a731c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-354]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-354")], .matchExpressions = []}}}}, .addresses = ["10.10.35.4"], .span = ["testNode-35"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9613ebd5-a001-5394-99d1-785aa7b15b55"}, .name = "9613ebd5-a001-5394-99d1-785aa7b15b55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-357]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-357")], .matchExpressions = []}}}}, .addresses = ["10.10.35.7"], .span = ["testNode-35"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a33fbe46-e55c-55c1-b5da-11027d592ee0"}, .name = "a33fbe46-e55c-55c1-b5da-11027d592ee0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-366]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-366")], .matchExpressions = []}}}}, .addresses = ["10.10.36.6"], .span = ["testNode-36"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a7b34bc4-b9ce-5d27-a937-262e38daae22"}, .name = "a7b34bc4-b9ce-5d27-a937-262e38daae22", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-355]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-355")], .matchExpressions = []}}}}, .addresses = ["10.10.35.5"], .span = ["testNode-35"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b188f5e1-fde5-5a4e-a352-41509f988802"}, .name = "b188f5e1-fde5-5a4e-a352-41509f988802", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-356]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-356")], .matchExpressions = []}}}}, .addresses = ["10.10.35.6"], .span = ["testNode-35"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b5d1094f-2cb6-510d-9805-da70ee098622"}, .name = "b5d1094f-2cb6-510d-9805-da70ee098622", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-363]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-363")], .matchExpressions = []}}}}, .addresses = ["10.10.36.3"], .span = ["testNode-36"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d277a699-72f4-5235-b75b-d30225b5af68"}, .name = "d277a699-72f4-5235-b75b-d30225b5af68", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-368]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-368")], .matchExpressions = []}}}}, .addresses = ["10.10.36.8"], .span = ["testNode-36"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d9dfcf74-1179-5764-9b7f-de3f7de2548d"}, .name = "d9dfcf74-1179-5764-9b7f-de3f7de2548d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-362]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-362")], .matchExpressions = []}}}}, .addresses = ["10.10.36.2"], .span = ["testNode-36"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "db82c707-005a-5d3e-9ca4-37b2dc33ca66"}, .name = "db82c707-005a-5d3e-9ca4-37b2dc33ca66", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-369]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-369")], .matchExpressions = []}}}}, .addresses = ["10.10.36.9"], .span = ["testNode-36"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ddc3ff50-3578-5622-b267-07f75659916d"}, .name = "ddc3ff50-3578-5622-b267-07f75659916d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-352]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-352")], .matchExpressions = []}}}}, .addresses = ["10.10.35.2"], .span = ["testNode-35"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f00fe199-b9f7-513a-ba79-1777f31ebc6f"}, .name = "f00fe199-b9f7-513a-ba79-1777f31ebc6f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-370]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-370")], .matchExpressions = []}}}}, .addresses = ["10.10.37.0"], .span = ["testNode-36"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f3759ccf-89e1-5a87-9b66-2d1e42057971"}, .name = "f3759ccf-89e1-5a87-9b66-2d1e42057971", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-373]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-373")], .matchExpressions = []}}}}, .addresses = ["10.10.37.3"], .span = ["testNode-37"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f3d5fdd6-dd2c-5432-a528-b3a0c78cf6f7"}, .name = "f3d5fdd6-dd2c-5432-a528-b3a0c78cf6f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-359]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-359")], .matchExpressions = []}}}}, .addresses = ["10.10.35.9"], .span = ["testNode-35"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f5d02a30-a188-5059-a878-fd0f73fb4558"}, .name = "f5d02a30-a188-5059-a878-fd0f73fb4558", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-367]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-367")], .matchExpressions = []}}}}, .addresses = ["10.10.36.7"], .span = ["testNode-36"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fb41fb3a-8b6f-5569-971d-88811ca3b8a2"}, .name = "fb41fb3a-8b6f-5569-971d-88811ca3b8a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-365]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-365")], .matchExpressions = []}}}}, .addresses = ["10.10.36.5"], .span = ["testNode-36"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fd0d8c9b-07fe-5743-babc-94fd14fb0217"}, .name = "fd0d8c9b-07fe-5743-babc-94fd14fb0217", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-371]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-371")], .matchExpressions = []}}}}, .addresses = ["10.10.37.1"], .span = ["testNode-37"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "11855802-3ee1-5dfa-826b-b32f0fa49a49"}, .name = "11855802-3ee1-5dfa-826b-b32f0fa49a49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-345]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-345")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-345", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1dc3ab11-44b6-562d-8368-ec8960367505"}, .name = "1dc3ab11-44b6-562d-8368-ec8960367505", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-364]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-364")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-364", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2037a85c-4419-539f-9062-53066da2367e"}, .name = "2037a85c-4419-539f-9062-53066da2367e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-350]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-350")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-350", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "20f4eecf-d187-51b3-b3b5-acfa9207e219"}, .name = "20f4eecf-d187-51b3-b3b5-acfa9207e219", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-372]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-372")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-372", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "367f024c-9e28-51b1-9440-f3610253ec50"}, .name = "367f024c-9e28-51b1-9440-f3610253ec50", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-346]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-346")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-346", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4da84640-576a-5937-b204-f52f78ea3736"}, .name = "4da84640-576a-5937-b204-f52f78ea3736", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-343]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-343")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-343", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4e93bc66-c667-59b8-83c7-4c2f0db92b11"}, .name = "4e93bc66-c667-59b8-83c7-4c2f0db92b11", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-348]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-348")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-348", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "52483149-a2c5-5e14-8ce0-87292d78e9f7"}, .name = "52483149-a2c5-5e14-8ce0-87292d78e9f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-353]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-353")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-353", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5ff36918-de7e-50f8-b674-89b7896c335f"}, .name = "5ff36918-de7e-50f8-b674-89b7896c335f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-361]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-361")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-361", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "649e663c-7902-5f6a-b621-2a2627cb4973"}, .name = "649e663c-7902-5f6a-b621-2a2627cb4973", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-344]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-344")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-344", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "667d61a0-d979-5f78-85a3-469b35bc9f21"}, .name = "667d61a0-d979-5f78-85a3-469b35bc9f21", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-347]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-347")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-347", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6ae95ac3-9478-5ddb-b790-65b9bb698a98"}, .name = "6ae95ac3-9478-5ddb-b790-65b9bb698a98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-351]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-351")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-351", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "71747a3c-0210-5ca6-b9d9-06d219e1015c"}, .name = "71747a3c-0210-5ca6-b9d9-06d219e1015c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-360]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-360")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-360", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "740cff36-5dbb-576d-a05e-1a43aa5bf510"}, .name = "740cff36-5dbb-576d-a05e-1a43aa5bf510", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-374]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-374")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-374", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "798052dd-47af-5971-9527-c1b7902bd7d4"}, .name = "798052dd-47af-5971-9527-c1b7902bd7d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-358]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-358")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-358", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "834ae5e9-8c30-5d93-a80f-5024f4caec94"}, .name = "834ae5e9-8c30-5d93-a80f-5024f4caec94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-349]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-349")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-349", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "861b069b-33ab-550d-b698-2d04d0a731c0"}, .name = "861b069b-33ab-550d-b698-2d04d0a731c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-354]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-354")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-354", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9613ebd5-a001-5394-99d1-785aa7b15b55"}, .name = "9613ebd5-a001-5394-99d1-785aa7b15b55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-357]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-357")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-357", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a33fbe46-e55c-55c1-b5da-11027d592ee0"}, .name = "a33fbe46-e55c-55c1-b5da-11027d592ee0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-366]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-366")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-366", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a7b34bc4-b9ce-5d27-a937-262e38daae22"}, .name = "a7b34bc4-b9ce-5d27-a937-262e38daae22", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-355]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-355")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-355", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b188f5e1-fde5-5a4e-a352-41509f988802"}, .name = "b188f5e1-fde5-5a4e-a352-41509f988802", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-356]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-356")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-356", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b5d1094f-2cb6-510d-9805-da70ee098622"}, .name = "b5d1094f-2cb6-510d-9805-da70ee098622", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-363]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-363")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-363", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d277a699-72f4-5235-b75b-d30225b5af68"}, .name = "d277a699-72f4-5235-b75b-d30225b5af68", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-368]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-368")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-368", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d9dfcf74-1179-5764-9b7f-de3f7de2548d"}, .name = "d9dfcf74-1179-5764-9b7f-de3f7de2548d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-362]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-362")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-362", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "db82c707-005a-5d3e-9ca4-37b2dc33ca66"}, .name = "db82c707-005a-5d3e-9ca4-37b2dc33ca66", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-369]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-369")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-369", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ddc3ff50-3578-5622-b267-07f75659916d"}, .name = "ddc3ff50-3578-5622-b267-07f75659916d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-352]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-352")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-352", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f00fe199-b9f7-513a-ba79-1777f31ebc6f"}, .name = "f00fe199-b9f7-513a-ba79-1777f31ebc6f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-370]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-370")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-370", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f3759ccf-89e1-5a87-9b66-2d1e42057971"}, .name = "f3759ccf-89e1-5a87-9b66-2d1e42057971", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-373]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-373")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-373", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f3d5fdd6-dd2c-5432-a528-b3a0c78cf6f7"}, .name = "f3d5fdd6-dd2c-5432-a528-b3a0c78cf6f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-359]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-359")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-359", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f5d02a30-a188-5059-a878-fd0f73fb4558"}, .name = "f5d02a30-a188-5059-a878-fd0f73fb4558", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-367]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-367")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-367", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fb41fb3a-8b6f-5569-971d-88811ca3b8a2"}, .name = "fb41fb3a-8b6f-5569-971d-88811ca3b8a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-365]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-365")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-365", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fd0d8c9b-07fe-5743-babc-94fd14fb0217"}, .name = "fd0d8c9b-07fe-5743-babc-94fd14fb0217", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-371]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-371")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-371", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-343"}, .name = "testNP-343", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["649e663c-7902-5f6a-b621-2a2627cb4973"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4da84640-576a-5937-b204-f52f78ea3736"]}, .span = ["testNode-34"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-344"}, .name = "testNP-344", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["11855802-3ee1-5dfa-826b-b32f0fa49a49"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["649e663c-7902-5f6a-b621-2a2627cb4973"]}, .span = ["testNode-34"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-345"}, .name = "testNP-345", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["367f024c-9e28-51b1-9440-f3610253ec50"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["11855802-3ee1-5dfa-826b-b32f0fa49a49"]}, .span = ["testNode-34"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-346"}, .name = "testNP-346", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["667d61a0-d979-5f78-85a3-469b35bc9f21"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["367f024c-9e28-51b1-9440-f3610253ec50"]}, .span = ["testNode-34"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-347"}, .name = "testNP-347", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4e93bc66-c667-59b8-83c7-4c2f0db92b11"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["667d61a0-d979-5f78-85a3-469b35bc9f21"]}, .span = ["testNode-34"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-348"}, .name = "testNP-348", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["834ae5e9-8c30-5d93-a80f-5024f4caec94"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4e93bc66-c667-59b8-83c7-4c2f0db92b11"]}, .span = ["testNode-34"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-349"}, .name = "testNP-349", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2037a85c-4419-539f-9062-53066da2367e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["834ae5e9-8c30-5d93-a80f-5024f4caec94"]}, .span = ["testNode-34"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-350"}, .name = "testNP-350", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6ae95ac3-9478-5ddb-b790-65b9bb698a98"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2037a85c-4419-539f-9062-53066da2367e"]}, .span = ["testNode-35"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-351"}, .name = "testNP-351", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ddc3ff50-3578-5622-b267-07f75659916d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6ae95ac3-9478-5ddb-b790-65b9bb698a98"]}, .span = ["testNode-35"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-352"}, .name = "testNP-352", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["52483149-a2c5-5e14-8ce0-87292d78e9f7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ddc3ff50-3578-5622-b267-07f75659916d"]}, .span = ["testNode-35"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-353"}, .name = "testNP-353", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["861b069b-33ab-550d-b698-2d04d0a731c0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["52483149-a2c5-5e14-8ce0-87292d78e9f7"]}, .span = ["testNode-35"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-354"}, .name = "testNP-354", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a7b34bc4-b9ce-5d27-a937-262e38daae22"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["861b069b-33ab-550d-b698-2d04d0a731c0"]}, .span = ["testNode-35"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-355"}, .name = "testNP-355", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b188f5e1-fde5-5a4e-a352-41509f988802"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a7b34bc4-b9ce-5d27-a937-262e38daae22"]}, .span = ["testNode-35"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-356"}, .name = "testNP-356", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9613ebd5-a001-5394-99d1-785aa7b15b55"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b188f5e1-fde5-5a4e-a352-41509f988802"]}, .span = ["testNode-35"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-357"}, .name = "testNP-357", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["798052dd-47af-5971-9527-c1b7902bd7d4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9613ebd5-a001-5394-99d1-785aa7b15b55"]}, .span = ["testNode-35"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-358"}, .name = "testNP-358", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f3d5fdd6-dd2c-5432-a528-b3a0c78cf6f7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["798052dd-47af-5971-9527-c1b7902bd7d4"]}, .span = ["testNode-35"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-359"}, .name = "testNP-359", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["71747a3c-0210-5ca6-b9d9-06d219e1015c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f3d5fdd6-dd2c-5432-a528-b3a0c78cf6f7"]}, .span = ["testNode-35"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-360"}, .name = "testNP-360", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5ff36918-de7e-50f8-b674-89b7896c335f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["71747a3c-0210-5ca6-b9d9-06d219e1015c"]}, .span = ["testNode-36"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-361"}, .name = "testNP-361", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d9dfcf74-1179-5764-9b7f-de3f7de2548d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5ff36918-de7e-50f8-b674-89b7896c335f"]}, .span = ["testNode-36"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-362"}, .name = "testNP-362", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b5d1094f-2cb6-510d-9805-da70ee098622"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d9dfcf74-1179-5764-9b7f-de3f7de2548d"]}, .span = ["testNode-36"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-363"}, .name = "testNP-363", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1dc3ab11-44b6-562d-8368-ec8960367505"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b5d1094f-2cb6-510d-9805-da70ee098622"]}, .span = ["testNode-36"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-364"}, .name = "testNP-364", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fb41fb3a-8b6f-5569-971d-88811ca3b8a2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1dc3ab11-44b6-562d-8368-ec8960367505"]}, .span = ["testNode-36"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-365"}, .name = "testNP-365", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a33fbe46-e55c-55c1-b5da-11027d592ee0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fb41fb3a-8b6f-5569-971d-88811ca3b8a2"]}, .span = ["testNode-36"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-366"}, .name = "testNP-366", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f5d02a30-a188-5059-a878-fd0f73fb4558"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a33fbe46-e55c-55c1-b5da-11027d592ee0"]}, .span = ["testNode-36"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-367"}, .name = "testNP-367", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d277a699-72f4-5235-b75b-d30225b5af68"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f5d02a30-a188-5059-a878-fd0f73fb4558"]}, .span = ["testNode-36"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-368"}, .name = "testNP-368", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["db82c707-005a-5d3e-9ca4-37b2dc33ca66"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d277a699-72f4-5235-b75b-d30225b5af68"]}, .span = ["testNode-36"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-369"}, .name = "testNP-369", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f00fe199-b9f7-513a-ba79-1777f31ebc6f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["db82c707-005a-5d3e-9ca4-37b2dc33ca66"]}, .span = ["testNode-36"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-370"}, .name = "testNP-370", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fd0d8c9b-07fe-5743-babc-94fd14fb0217"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f00fe199-b9f7-513a-ba79-1777f31ebc6f"]}, .span = ["testNode-37"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-371"}, .name = "testNP-371", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["20f4eecf-d187-51b3-b3b5-acfa9207e219"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fd0d8c9b-07fe-5743-babc-94fd14fb0217"]}, .span = ["testNode-37"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-372"}, .name = "testNP-372", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f3759ccf-89e1-5a87-9b66-2d1e42057971"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["20f4eecf-d187-51b3-b3b5-acfa9207e219"]}, .span = ["testNode-37"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-373"}, .name = "testNP-373", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["740cff36-5dbb-576d-a05e-1a43aa5bf510"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f3759ccf-89e1-5a87-9b66-2d1e42057971"]}, .span = ["testNode-37"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-374"}, .name = "testNP-374", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4fe2f7e4-1901-5cc4-b05f-0073bec70070"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["740cff36-5dbb-576d-a05e-1a43aa5bf510"]}, .span = ["testNode-37"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "04ca1faa-65a0-5ba2-b304-d8187b0ec45f"}, .name = "04ca1faa-65a0-5ba2-b304-d8187b0ec45f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-379]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-379")], .matchExpressions = []}}}}, .addresses = ["10.10.37.9"], .span = ["testNode-37"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "135b0d1b-5b5f-5d43-9c35-7664a89200a8"}, .name = "135b0d1b-5b5f-5d43-9c35-7664a89200a8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-382]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-382")], .matchExpressions = []}}}}, .addresses = ["10.10.38.2"], .span = ["testNode-38"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "34d7c4ee-d19c-55b7-a7e8-a201cce65c58"}, .name = "34d7c4ee-d19c-55b7-a7e8-a201cce65c58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-381]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-381")], .matchExpressions = []}}}}, .addresses = ["10.10.38.1"], .span = ["testNode-38"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3d1509d8-a285-5518-be92-86414c6998b7"}, .name = "3d1509d8-a285-5518-be92-86414c6998b7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-376]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-376")], .matchExpressions = []}}}}, .addresses = ["10.10.37.6"], .span = ["testNode-37"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "42ed0545-3f16-5e73-8b34-6ae0b61ab2f8"}, .name = "42ed0545-3f16-5e73-8b34-6ae0b61ab2f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-377]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-377")], .matchExpressions = []}}}}, .addresses = ["10.10.37.7"], .span = ["testNode-37"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4890bcb7-78c1-5b3c-96fb-47f0be2dcbc2"}, .name = "4890bcb7-78c1-5b3c-96fb-47f0be2dcbc2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-399]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-399")], .matchExpressions = []}}}}, .addresses = ["10.10.39.9"], .span = ["testNode-39"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4d17717e-f78b-57c9-b591-db530602f7ed"}, .name = "4d17717e-f78b-57c9-b591-db530602f7ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-386]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-386")], .matchExpressions = []}}}}, .addresses = ["10.10.38.6"], .span = ["testNode-38"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "55203360-b26b-52d5-a9ab-627fd76129a0"}, .name = "55203360-b26b-52d5-a9ab-627fd76129a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-398]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-398")], .matchExpressions = []}}}}, .addresses = ["10.10.39.8"], .span = ["testNode-39"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "66221c2b-b200-541f-aa2b-c0908d5c2f69"}, .name = "66221c2b-b200-541f-aa2b-c0908d5c2f69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-407]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-407")], .matchExpressions = []}}}}, .addresses = ["10.10.40.7"], .span = ["testNode-40"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7173f1b8-4f9d-5a94-bc8b-d772a28d488e"}, .name = "7173f1b8-4f9d-5a94-bc8b-d772a28d488e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-392]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-392")], .matchExpressions = []}}}}, .addresses = ["10.10.39.2"], .span = ["testNode-39"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "777ca61b-322d-5bba-a70b-b7e1623f3af8"}, .name = "777ca61b-322d-5bba-a70b-b7e1623f3af8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-385]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-385")], .matchExpressions = []}}}}, .addresses = ["10.10.38.5"], .span = ["testNode-38"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7909e946-8a01-5551-a3d0-54852e359918"}, .name = "7909e946-8a01-5551-a3d0-54852e359918", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-389]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-389")], .matchExpressions = []}}}}, .addresses = ["10.10.38.9"], .span = ["testNode-38"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7db41759-a1f5-5138-9e53-f36553ac9a94"}, .name = "7db41759-a1f5-5138-9e53-f36553ac9a94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-388]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-388")], .matchExpressions = []}}}}, .addresses = ["10.10.38.8"], .span = ["testNode-38"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7e2849cb-ee50-53eb-b072-4e0f8330ae0d"}, .name = "7e2849cb-ee50-53eb-b072-4e0f8330ae0d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-406]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-406")], .matchExpressions = []}}}}, .addresses = ["10.10.40.6"], .span = ["testNode-40"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8d3e9ee6-9489-5667-bb55-4c45886f5760"}, .name = "8d3e9ee6-9489-5667-bb55-4c45886f5760", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-393]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-393")], .matchExpressions = []}}}}, .addresses = ["10.10.39.3"], .span = ["testNode-39"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "93fddede-665f-54fa-b60f-1b2172a46ee6"}, .name = "93fddede-665f-54fa-b60f-1b2172a46ee6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-401]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-401")], .matchExpressions = []}}}}, .addresses = ["10.10.40.1"], .span = ["testNode-40"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9c906fbd-123d-501a-80d1-7bfd6a0f13ef"}, .name = "9c906fbd-123d-501a-80d1-7bfd6a0f13ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-400]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-400")], .matchExpressions = []}}}}, .addresses = ["10.10.40.0"], .span = ["testNode-39"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a46499d7-8e51-52f2-8e00-7670cfe88b35"}, .name = "a46499d7-8e51-52f2-8e00-7670cfe88b35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-395]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-395")], .matchExpressions = []}}}}, .addresses = ["10.10.39.5"], .span = ["testNode-39"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a8c0f886-7ea0-510f-9c2b-f5140e1ab374"}, .name = "a8c0f886-7ea0-510f-9c2b-f5140e1ab374", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-403]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-403")], .matchExpressions = []}}}}, .addresses = ["10.10.40.3"], .span = ["testNode-40"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a9bbca51-a207-5d2c-8caf-1ba1264e7231"}, .name = "a9bbca51-a207-5d2c-8caf-1ba1264e7231", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-380]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-380")], .matchExpressions = []}}}}, .addresses = ["10.10.38.0"], .span = ["testNode-37"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bb63d5fb-9781-514f-ab4f-cff5d4b269fe"}, .name = "bb63d5fb-9781-514f-ab4f-cff5d4b269fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-378]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-378")], .matchExpressions = []}}}}, .addresses = ["10.10.37.8"], .span = ["testNode-37"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c4701c1d-34bb-5757-bf28-dc70456f291a"}, .name = "c4701c1d-34bb-5757-bf28-dc70456f291a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-387]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-387")], .matchExpressions = []}}}}, .addresses = ["10.10.38.7"], .span = ["testNode-38"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c4d77be9-7f17-5a12-ac01-ed5650600fc6"}, .name = "c4d77be9-7f17-5a12-ac01-ed5650600fc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-405]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-405")], .matchExpressions = []}}}}, .addresses = ["10.10.40.5"], .span = ["testNode-40"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cf5e71e1-5bbf-5fb5-8363-120ee0eb7cfb"}, .name = "cf5e71e1-5bbf-5fb5-8363-120ee0eb7cfb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-390]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-390")], .matchExpressions = []}}}}, .addresses = ["10.10.39.0"], .span = ["testNode-38"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d0b20cf7-ab9e-5aac-a853-9153f16165fa"}, .name = "d0b20cf7-ab9e-5aac-a853-9153f16165fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-402]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-402")], .matchExpressions = []}}}}, .addresses = ["10.10.40.2"], .span = ["testNode-40"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d2371954-b622-588e-81e9-5434d4935a1a"}, .name = "d2371954-b622-588e-81e9-5434d4935a1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-383]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-383")], .matchExpressions = []}}}}, .addresses = ["10.10.38.3"], .span = ["testNode-38"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d2f69a2e-1a7f-5e6c-a0f0-86875d71ab16"}, .name = "d2f69a2e-1a7f-5e6c-a0f0-86875d71ab16", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-384]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-384")], .matchExpressions = []}}}}, .addresses = ["10.10.38.4"], .span = ["testNode-38"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d7a17941-c2ea-575a-8d95-0a951dfb4ae4"}, .name = "d7a17941-c2ea-575a-8d95-0a951dfb4ae4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-394]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-394")], .matchExpressions = []}}}}, .addresses = ["10.10.39.4"], .span = ["testNode-39"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dbe3ea42-3c0d-5b74-91c2-14501cdea12b"}, .name = "dbe3ea42-3c0d-5b74-91c2-14501cdea12b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-391]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-391")], .matchExpressions = []}}}}, .addresses = ["10.10.39.1"], .span = ["testNode-39"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e868c34f-55bb-5f69-9952-a0c438f47316"}, .name = "e868c34f-55bb-5f69-9952-a0c438f47316", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-404]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-404")], .matchExpressions = []}}}}, .addresses = ["10.10.40.4"], .span = ["testNode-40"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "efc46206-46a5-5a11-895f-6d443d347d24"}, .name = "efc46206-46a5-5a11-895f-6d443d347d24", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-397]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-397")], .matchExpressions = []}}}}, .addresses = ["10.10.39.7"], .span = ["testNode-39"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f97f5251-3bc6-5335-b68e-ba0aaf265ce2"}, .name = "f97f5251-3bc6-5335-b68e-ba0aaf265ce2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-396]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-396")], .matchExpressions = []}}}}, .addresses = ["10.10.39.6"], .span = ["testNode-39"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "04ca1faa-65a0-5ba2-b304-d8187b0ec45f"}, .name = "04ca1faa-65a0-5ba2-b304-d8187b0ec45f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-379]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-379")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-379", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "135b0d1b-5b5f-5d43-9c35-7664a89200a8"}, .name = "135b0d1b-5b5f-5d43-9c35-7664a89200a8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-382]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-382")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-382", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "34d7c4ee-d19c-55b7-a7e8-a201cce65c58"}, .name = "34d7c4ee-d19c-55b7-a7e8-a201cce65c58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-381]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-381")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-381", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3d1509d8-a285-5518-be92-86414c6998b7"}, .name = "3d1509d8-a285-5518-be92-86414c6998b7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-376]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-376")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-376", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "42ed0545-3f16-5e73-8b34-6ae0b61ab2f8"}, .name = "42ed0545-3f16-5e73-8b34-6ae0b61ab2f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-377]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-377")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-377", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4890bcb7-78c1-5b3c-96fb-47f0be2dcbc2"}, .name = "4890bcb7-78c1-5b3c-96fb-47f0be2dcbc2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-399]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-399")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-399", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4d17717e-f78b-57c9-b591-db530602f7ed"}, .name = "4d17717e-f78b-57c9-b591-db530602f7ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-386]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-386")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-386", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4fe2f7e4-1901-5cc4-b05f-0073bec70070"}, .name = "4fe2f7e4-1901-5cc4-b05f-0073bec70070", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-375]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-375")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-375", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "55203360-b26b-52d5-a9ab-627fd76129a0"}, .name = "55203360-b26b-52d5-a9ab-627fd76129a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-398]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-398")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-398", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7173f1b8-4f9d-5a94-bc8b-d772a28d488e"}, .name = "7173f1b8-4f9d-5a94-bc8b-d772a28d488e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-392]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-392")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-392", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "777ca61b-322d-5bba-a70b-b7e1623f3af8"}, .name = "777ca61b-322d-5bba-a70b-b7e1623f3af8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-385]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-385")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-385", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7909e946-8a01-5551-a3d0-54852e359918"}, .name = "7909e946-8a01-5551-a3d0-54852e359918", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-389]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-389")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-389", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7db41759-a1f5-5138-9e53-f36553ac9a94"}, .name = "7db41759-a1f5-5138-9e53-f36553ac9a94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-388]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-388")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-388", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7e2849cb-ee50-53eb-b072-4e0f8330ae0d"}, .name = "7e2849cb-ee50-53eb-b072-4e0f8330ae0d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-406]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-406")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-406", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8d3e9ee6-9489-5667-bb55-4c45886f5760"}, .name = "8d3e9ee6-9489-5667-bb55-4c45886f5760", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-393]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-393")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-393", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "93fddede-665f-54fa-b60f-1b2172a46ee6"}, .name = "93fddede-665f-54fa-b60f-1b2172a46ee6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-401]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-401")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-401", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9c906fbd-123d-501a-80d1-7bfd6a0f13ef"}, .name = "9c906fbd-123d-501a-80d1-7bfd6a0f13ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-400]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-400")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-400", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a46499d7-8e51-52f2-8e00-7670cfe88b35"}, .name = "a46499d7-8e51-52f2-8e00-7670cfe88b35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-395]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-395")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-395", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a8c0f886-7ea0-510f-9c2b-f5140e1ab374"}, .name = "a8c0f886-7ea0-510f-9c2b-f5140e1ab374", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-403]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-403")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-403", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a9bbca51-a207-5d2c-8caf-1ba1264e7231"}, .name = "a9bbca51-a207-5d2c-8caf-1ba1264e7231", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-380]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-380")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-380", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bb63d5fb-9781-514f-ab4f-cff5d4b269fe"}, .name = "bb63d5fb-9781-514f-ab4f-cff5d4b269fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-378]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-378")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-378", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c4701c1d-34bb-5757-bf28-dc70456f291a"}, .name = "c4701c1d-34bb-5757-bf28-dc70456f291a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-387]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-387")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-387", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c4d77be9-7f17-5a12-ac01-ed5650600fc6"}, .name = "c4d77be9-7f17-5a12-ac01-ed5650600fc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-405]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-405")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-405", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cf5e71e1-5bbf-5fb5-8363-120ee0eb7cfb"}, .name = "cf5e71e1-5bbf-5fb5-8363-120ee0eb7cfb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-390]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-390")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-390", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d0b20cf7-ab9e-5aac-a853-9153f16165fa"}, .name = "d0b20cf7-ab9e-5aac-a853-9153f16165fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-402]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-402")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-402", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d2371954-b622-588e-81e9-5434d4935a1a"}, .name = "d2371954-b622-588e-81e9-5434d4935a1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-383]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-383")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-383", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d2f69a2e-1a7f-5e6c-a0f0-86875d71ab16"}, .name = "d2f69a2e-1a7f-5e6c-a0f0-86875d71ab16", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-384]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-384")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-384", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d7a17941-c2ea-575a-8d95-0a951dfb4ae4"}, .name = "d7a17941-c2ea-575a-8d95-0a951dfb4ae4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-394]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-394")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-394", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dbe3ea42-3c0d-5b74-91c2-14501cdea12b"}, .name = "dbe3ea42-3c0d-5b74-91c2-14501cdea12b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-391]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-391")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-391", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e868c34f-55bb-5f69-9952-a0c438f47316"}, .name = "e868c34f-55bb-5f69-9952-a0c438f47316", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-404]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-404")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-404", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "efc46206-46a5-5a11-895f-6d443d347d24"}, .name = "efc46206-46a5-5a11-895f-6d443d347d24", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-397]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-397")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-397", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f97f5251-3bc6-5335-b68e-ba0aaf265ce2"}, .name = "f97f5251-3bc6-5335-b68e-ba0aaf265ce2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-396]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-396")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-396", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-375"}, .name = "testNP-375", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3d1509d8-a285-5518-be92-86414c6998b7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4fe2f7e4-1901-5cc4-b05f-0073bec70070"]}, .span = ["testNode-37"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-376"}, .name = "testNP-376", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["42ed0545-3f16-5e73-8b34-6ae0b61ab2f8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3d1509d8-a285-5518-be92-86414c6998b7"]}, .span = ["testNode-37"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-377"}, .name = "testNP-377", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bb63d5fb-9781-514f-ab4f-cff5d4b269fe"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["42ed0545-3f16-5e73-8b34-6ae0b61ab2f8"]}, .span = ["testNode-37"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-378"}, .name = "testNP-378", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["04ca1faa-65a0-5ba2-b304-d8187b0ec45f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bb63d5fb-9781-514f-ab4f-cff5d4b269fe"]}, .span = ["testNode-37"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-379"}, .name = "testNP-379", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a9bbca51-a207-5d2c-8caf-1ba1264e7231"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["04ca1faa-65a0-5ba2-b304-d8187b0ec45f"]}, .span = ["testNode-37"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-380"}, .name = "testNP-380", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["34d7c4ee-d19c-55b7-a7e8-a201cce65c58"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a9bbca51-a207-5d2c-8caf-1ba1264e7231"]}, .span = ["testNode-38"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-381"}, .name = "testNP-381", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["135b0d1b-5b5f-5d43-9c35-7664a89200a8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["34d7c4ee-d19c-55b7-a7e8-a201cce65c58"]}, .span = ["testNode-38"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-382"}, .name = "testNP-382", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d2371954-b622-588e-81e9-5434d4935a1a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["135b0d1b-5b5f-5d43-9c35-7664a89200a8"]}, .span = ["testNode-38"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-383"}, .name = "testNP-383", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d2f69a2e-1a7f-5e6c-a0f0-86875d71ab16"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d2371954-b622-588e-81e9-5434d4935a1a"]}, .span = ["testNode-38"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-384"}, .name = "testNP-384", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["777ca61b-322d-5bba-a70b-b7e1623f3af8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d2f69a2e-1a7f-5e6c-a0f0-86875d71ab16"]}, .span = ["testNode-38"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-385"}, .name = "testNP-385", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4d17717e-f78b-57c9-b591-db530602f7ed"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["777ca61b-322d-5bba-a70b-b7e1623f3af8"]}, .span = ["testNode-38"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-386"}, .name = "testNP-386", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c4701c1d-34bb-5757-bf28-dc70456f291a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4d17717e-f78b-57c9-b591-db530602f7ed"]}, .span = ["testNode-38"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-387"}, .name = "testNP-387", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7db41759-a1f5-5138-9e53-f36553ac9a94"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c4701c1d-34bb-5757-bf28-dc70456f291a"]}, .span = ["testNode-38"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-388"}, .name = "testNP-388", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7909e946-8a01-5551-a3d0-54852e359918"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7db41759-a1f5-5138-9e53-f36553ac9a94"]}, .span = ["testNode-38"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-389"}, .name = "testNP-389", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cf5e71e1-5bbf-5fb5-8363-120ee0eb7cfb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7909e946-8a01-5551-a3d0-54852e359918"]}, .span = ["testNode-38"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-390"}, .name = "testNP-390", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dbe3ea42-3c0d-5b74-91c2-14501cdea12b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cf5e71e1-5bbf-5fb5-8363-120ee0eb7cfb"]}, .span = ["testNode-39"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-391"}, .name = "testNP-391", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7173f1b8-4f9d-5a94-bc8b-d772a28d488e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dbe3ea42-3c0d-5b74-91c2-14501cdea12b"]}, .span = ["testNode-39"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-392"}, .name = "testNP-392", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8d3e9ee6-9489-5667-bb55-4c45886f5760"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7173f1b8-4f9d-5a94-bc8b-d772a28d488e"]}, .span = ["testNode-39"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-393"}, .name = "testNP-393", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d7a17941-c2ea-575a-8d95-0a951dfb4ae4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8d3e9ee6-9489-5667-bb55-4c45886f5760"]}, .span = ["testNode-39"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-394"}, .name = "testNP-394", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a46499d7-8e51-52f2-8e00-7670cfe88b35"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d7a17941-c2ea-575a-8d95-0a951dfb4ae4"]}, .span = ["testNode-39"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-395"}, .name = "testNP-395", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f97f5251-3bc6-5335-b68e-ba0aaf265ce2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a46499d7-8e51-52f2-8e00-7670cfe88b35"]}, .span = ["testNode-39"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-396"}, .name = "testNP-396", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["efc46206-46a5-5a11-895f-6d443d347d24"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f97f5251-3bc6-5335-b68e-ba0aaf265ce2"]}, .span = ["testNode-39"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-397"}, .name = "testNP-397", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["55203360-b26b-52d5-a9ab-627fd76129a0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["efc46206-46a5-5a11-895f-6d443d347d24"]}, .span = ["testNode-39"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-398"}, .name = "testNP-398", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4890bcb7-78c1-5b3c-96fb-47f0be2dcbc2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["55203360-b26b-52d5-a9ab-627fd76129a0"]}, .span = ["testNode-39"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-399"}, .name = "testNP-399", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9c906fbd-123d-501a-80d1-7bfd6a0f13ef"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4890bcb7-78c1-5b3c-96fb-47f0be2dcbc2"]}, .span = ["testNode-39"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-400"}, .name = "testNP-400", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["93fddede-665f-54fa-b60f-1b2172a46ee6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9c906fbd-123d-501a-80d1-7bfd6a0f13ef"]}, .span = ["testNode-40"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-401"}, .name = "testNP-401", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d0b20cf7-ab9e-5aac-a853-9153f16165fa"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["93fddede-665f-54fa-b60f-1b2172a46ee6"]}, .span = ["testNode-40"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-402"}, .name = "testNP-402", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a8c0f886-7ea0-510f-9c2b-f5140e1ab374"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d0b20cf7-ab9e-5aac-a853-9153f16165fa"]}, .span = ["testNode-40"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-403"}, .name = "testNP-403", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e868c34f-55bb-5f69-9952-a0c438f47316"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a8c0f886-7ea0-510f-9c2b-f5140e1ab374"]}, .span = ["testNode-40"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-404"}, .name = "testNP-404", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c4d77be9-7f17-5a12-ac01-ed5650600fc6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e868c34f-55bb-5f69-9952-a0c438f47316"]}, .span = ["testNode-40"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-405"}, .name = "testNP-405", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7e2849cb-ee50-53eb-b072-4e0f8330ae0d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c4d77be9-7f17-5a12-ac01-ed5650600fc6"]}, .span = ["testNode-40"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-406"}, .name = "testNP-406", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["66221c2b-b200-541f-aa2b-c0908d5c2f69"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7e2849cb-ee50-53eb-b072-4e0f8330ae0d"]}, .span = ["testNode-40"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "065069e0-18a7-5e1c-bb52-4c47bb1e0224"}, .name = "065069e0-18a7-5e1c-bb52-4c47bb1e0224", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-418]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-418")], .matchExpressions = []}}}}, .addresses = ["10.10.41.8"], .span = ["testNode-41"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "13128de5-d4fd-50ef-a6fa-e02470f75bdd"}, .name = "13128de5-d4fd-50ef-a6fa-e02470f75bdd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-410]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-410")], .matchExpressions = []}}}}, .addresses = ["10.10.41.0"], .span = ["testNode-40"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "17ef5192-63e1-5f5b-8637-2d9b9bf7776d"}, .name = "17ef5192-63e1-5f5b-8637-2d9b9bf7776d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-425]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-425")], .matchExpressions = []}}}}, .addresses = ["10.10.42.5"], .span = ["testNode-42"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1a7755d5-7e34-5ff0-a562-8906a55d9a69"}, .name = "1a7755d5-7e34-5ff0-a562-8906a55d9a69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-415]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-415")], .matchExpressions = []}}}}, .addresses = ["10.10.41.5"], .span = ["testNode-41"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1e7c1f44-296c-5267-b707-c44fb5683a0c"}, .name = "1e7c1f44-296c-5267-b707-c44fb5683a0c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-429]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-429")], .matchExpressions = []}}}}, .addresses = ["10.10.42.9"], .span = ["testNode-42"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "213b7da2-b9b8-5cde-b512-061be115ab57"}, .name = "213b7da2-b9b8-5cde-b512-061be115ab57", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-430]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-430")], .matchExpressions = []}}}}, .addresses = ["10.10.43.0"], .span = ["testNode-42"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "26797822-5d38-58a4-a2b6-555eb800ada0"}, .name = "26797822-5d38-58a4-a2b6-555eb800ada0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-422]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-422")], .matchExpressions = []}}}}, .addresses = ["10.10.42.2"], .span = ["testNode-42"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "33a67ebe-734b-5fbb-a5b1-5be41be77846"}, .name = "33a67ebe-734b-5fbb-a5b1-5be41be77846", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-431]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-431")], .matchExpressions = []}}}}, .addresses = ["10.10.43.1"], .span = ["testNode-43"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "43aeefd2-d0c2-5e46-bb9c-d9c1b5fd1826"}, .name = "43aeefd2-d0c2-5e46-bb9c-d9c1b5fd1826", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-419]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-419")], .matchExpressions = []}}}}, .addresses = ["10.10.41.9"], .span = ["testNode-41"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4662b9f8-93d5-52ec-8a19-721399689827"}, .name = "4662b9f8-93d5-52ec-8a19-721399689827", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-434]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-434")], .matchExpressions = []}}}}, .addresses = ["10.10.43.4"], .span = ["testNode-43"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "47614eb2-bc50-546e-8fa5-9c92ad3d0080"}, .name = "47614eb2-bc50-546e-8fa5-9c92ad3d0080", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-413]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-413")], .matchExpressions = []}}}}, .addresses = ["10.10.41.3"], .span = ["testNode-41"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "49e711d9-b62c-55fb-8332-a9273c323bed"}, .name = "49e711d9-b62c-55fb-8332-a9273c323bed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-438]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-438")], .matchExpressions = []}}}}, .addresses = ["10.10.43.8"], .span = ["testNode-43"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4bbd7c29-ac1e-561a-9b1c-46e0c5369ea8"}, .name = "4bbd7c29-ac1e-561a-9b1c-46e0c5369ea8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-439]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-439")], .matchExpressions = []}}}}, .addresses = ["10.10.43.9"], .span = ["testNode-43"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4e985fe9-87b7-57db-80c6-bc7b25d7f4ce"}, .name = "4e985fe9-87b7-57db-80c6-bc7b25d7f4ce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-424]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-424")], .matchExpressions = []}}}}, .addresses = ["10.10.42.4"], .span = ["testNode-42"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "52944f71-c52e-580d-8a02-b7f52543a710"}, .name = "52944f71-c52e-580d-8a02-b7f52543a710", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-437]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-437")], .matchExpressions = []}}}}, .addresses = ["10.10.43.7"], .span = ["testNode-43"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "53649ad0-6e1f-52f9-b9b7-7ba93ce7aac2"}, .name = "53649ad0-6e1f-52f9-b9b7-7ba93ce7aac2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-417]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-417")], .matchExpressions = []}}}}, .addresses = ["10.10.41.7"], .span = ["testNode-41"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5609f60a-fa26-59a3-8e17-03ce36bc329e"}, .name = "5609f60a-fa26-59a3-8e17-03ce36bc329e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-408]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-408")], .matchExpressions = []}}}}, .addresses = ["10.10.40.8"], .span = ["testNode-40"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "591e426e-f1d1-5dba-83b2-e15f33e08c63"}, .name = "591e426e-f1d1-5dba-83b2-e15f33e08c63", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-435]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-435")], .matchExpressions = []}}}}, .addresses = ["10.10.43.5"], .span = ["testNode-43"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "59e40b97-a875-5501-8367-2dc471a75d54"}, .name = "59e40b97-a875-5501-8367-2dc471a75d54", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-416]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-416")], .matchExpressions = []}}}}, .addresses = ["10.10.41.6"], .span = ["testNode-41"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5bd35221-0c26-5317-a9f1-018cfcd10eef"}, .name = "5bd35221-0c26-5317-a9f1-018cfcd10eef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-427]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-427")], .matchExpressions = []}}}}, .addresses = ["10.10.42.7"], .span = ["testNode-42"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6a810058-4116-5795-b850-070e8e3120b9"}, .name = "6a810058-4116-5795-b850-070e8e3120b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-421]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-421")], .matchExpressions = []}}}}, .addresses = ["10.10.42.1"], .span = ["testNode-42"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8d1b26c5-6d78-5c28-a228-d46a11bf5ab4"}, .name = "8d1b26c5-6d78-5c28-a228-d46a11bf5ab4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-409]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-409")], .matchExpressions = []}}}}, .addresses = ["10.10.40.9"], .span = ["testNode-40"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "969bbeb2-7831-5c43-87b1-2434370d9431"}, .name = "969bbeb2-7831-5c43-87b1-2434370d9431", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-414]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-414")], .matchExpressions = []}}}}, .addresses = ["10.10.41.4"], .span = ["testNode-41"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9f348bf3-e9d4-546b-9f59-d69f3a63254d"}, .name = "9f348bf3-e9d4-546b-9f59-d69f3a63254d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-432]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-432")], .matchExpressions = []}}}}, .addresses = ["10.10.43.2"], .span = ["testNode-43"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a3721311-dfe4-5333-bfc6-946712f039f6"}, .name = "a3721311-dfe4-5333-bfc6-946712f039f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-420]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-420")], .matchExpressions = []}}}}, .addresses = ["10.10.42.0"], .span = ["testNode-41"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "acf85820-253c-5368-97bd-d6486cf47a76"}, .name = "acf85820-253c-5368-97bd-d6486cf47a76", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-426]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-426")], .matchExpressions = []}}}}, .addresses = ["10.10.42.6"], .span = ["testNode-42"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bc2e673a-be2f-5194-8a42-939931f6023a"}, .name = "bc2e673a-be2f-5194-8a42-939931f6023a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-423]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-423")], .matchExpressions = []}}}}, .addresses = ["10.10.42.3"], .span = ["testNode-42"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c5f35edd-9402-5282-86f6-1e9ed9e8c7f3"}, .name = "c5f35edd-9402-5282-86f6-1e9ed9e8c7f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-433]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-433")], .matchExpressions = []}}}}, .addresses = ["10.10.43.3"], .span = ["testNode-43"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "caa2cff0-f280-5241-a247-831efc8c4e99"}, .name = "caa2cff0-f280-5241-a247-831efc8c4e99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-428]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-428")], .matchExpressions = []}}}}, .addresses = ["10.10.42.8"], .span = ["testNode-42"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "daf26d8b-7aa9-5e29-9827-f97fd4af01b1"}, .name = "daf26d8b-7aa9-5e29-9827-f97fd4af01b1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-412]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-412")], .matchExpressions = []}}}}, .addresses = ["10.10.41.2"], .span = ["testNode-41"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ef5b7bce-c886-57d5-aaee-fff719dcb562"}, .name = "ef5b7bce-c886-57d5-aaee-fff719dcb562", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-411]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-411")], .matchExpressions = []}}}}, .addresses = ["10.10.41.1"], .span = ["testNode-41"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f86700c5-474e-5703-93e6-179d25b25060"}, .name = "f86700c5-474e-5703-93e6-179d25b25060", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-436]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-436")], .matchExpressions = []}}}}, .addresses = ["10.10.43.6"], .span = ["testNode-43"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "065069e0-18a7-5e1c-bb52-4c47bb1e0224"}, .name = "065069e0-18a7-5e1c-bb52-4c47bb1e0224", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-418]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-418")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-418", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "13128de5-d4fd-50ef-a6fa-e02470f75bdd"}, .name = "13128de5-d4fd-50ef-a6fa-e02470f75bdd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-410]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-410")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-410", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "17ef5192-63e1-5f5b-8637-2d9b9bf7776d"}, .name = "17ef5192-63e1-5f5b-8637-2d9b9bf7776d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-425]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-425")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-425", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1a7755d5-7e34-5ff0-a562-8906a55d9a69"}, .name = "1a7755d5-7e34-5ff0-a562-8906a55d9a69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-415]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-415")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-415", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1e7c1f44-296c-5267-b707-c44fb5683a0c"}, .name = "1e7c1f44-296c-5267-b707-c44fb5683a0c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-429]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-429")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-429", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "213b7da2-b9b8-5cde-b512-061be115ab57"}, .name = "213b7da2-b9b8-5cde-b512-061be115ab57", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-430]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-430")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-430", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "26797822-5d38-58a4-a2b6-555eb800ada0"}, .name = "26797822-5d38-58a4-a2b6-555eb800ada0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-422]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-422")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-422", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "33a67ebe-734b-5fbb-a5b1-5be41be77846"}, .name = "33a67ebe-734b-5fbb-a5b1-5be41be77846", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-431]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-431")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-431", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "43aeefd2-d0c2-5e46-bb9c-d9c1b5fd1826"}, .name = "43aeefd2-d0c2-5e46-bb9c-d9c1b5fd1826", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-419]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-419")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-419", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4662b9f8-93d5-52ec-8a19-721399689827"}, .name = "4662b9f8-93d5-52ec-8a19-721399689827", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-434]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-434")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-434", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "47614eb2-bc50-546e-8fa5-9c92ad3d0080"}, .name = "47614eb2-bc50-546e-8fa5-9c92ad3d0080", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-413]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-413")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-413", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "49e711d9-b62c-55fb-8332-a9273c323bed"}, .name = "49e711d9-b62c-55fb-8332-a9273c323bed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-438]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-438")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-438", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4e985fe9-87b7-57db-80c6-bc7b25d7f4ce"}, .name = "4e985fe9-87b7-57db-80c6-bc7b25d7f4ce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-424]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-424")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-424", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "52944f71-c52e-580d-8a02-b7f52543a710"}, .name = "52944f71-c52e-580d-8a02-b7f52543a710", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-437]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-437")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-437", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "53649ad0-6e1f-52f9-b9b7-7ba93ce7aac2"}, .name = "53649ad0-6e1f-52f9-b9b7-7ba93ce7aac2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-417]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-417")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-417", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5609f60a-fa26-59a3-8e17-03ce36bc329e"}, .name = "5609f60a-fa26-59a3-8e17-03ce36bc329e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-408]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-408")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-408", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "591e426e-f1d1-5dba-83b2-e15f33e08c63"}, .name = "591e426e-f1d1-5dba-83b2-e15f33e08c63", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-435]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-435")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-435", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "59e40b97-a875-5501-8367-2dc471a75d54"}, .name = "59e40b97-a875-5501-8367-2dc471a75d54", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-416]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-416")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-416", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5bd35221-0c26-5317-a9f1-018cfcd10eef"}, .name = "5bd35221-0c26-5317-a9f1-018cfcd10eef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-427]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-427")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-427", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "66221c2b-b200-541f-aa2b-c0908d5c2f69"}, .name = "66221c2b-b200-541f-aa2b-c0908d5c2f69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-407]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-407")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-407", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6a810058-4116-5795-b850-070e8e3120b9"}, .name = "6a810058-4116-5795-b850-070e8e3120b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-421]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-421")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-421", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8d1b26c5-6d78-5c28-a228-d46a11bf5ab4"}, .name = "8d1b26c5-6d78-5c28-a228-d46a11bf5ab4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-409]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-409")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-409", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "969bbeb2-7831-5c43-87b1-2434370d9431"}, .name = "969bbeb2-7831-5c43-87b1-2434370d9431", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-414]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-414")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-414", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9f348bf3-e9d4-546b-9f59-d69f3a63254d"}, .name = "9f348bf3-e9d4-546b-9f59-d69f3a63254d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-432]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-432")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-432", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a3721311-dfe4-5333-bfc6-946712f039f6"}, .name = "a3721311-dfe4-5333-bfc6-946712f039f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-420]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-420")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-420", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "acf85820-253c-5368-97bd-d6486cf47a76"}, .name = "acf85820-253c-5368-97bd-d6486cf47a76", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-426]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-426")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-426", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bc2e673a-be2f-5194-8a42-939931f6023a"}, .name = "bc2e673a-be2f-5194-8a42-939931f6023a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-423]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-423")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-423", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c5f35edd-9402-5282-86f6-1e9ed9e8c7f3"}, .name = "c5f35edd-9402-5282-86f6-1e9ed9e8c7f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-433]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-433")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-433", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "caa2cff0-f280-5241-a247-831efc8c4e99"}, .name = "caa2cff0-f280-5241-a247-831efc8c4e99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-428]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-428")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-428", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "daf26d8b-7aa9-5e29-9827-f97fd4af01b1"}, .name = "daf26d8b-7aa9-5e29-9827-f97fd4af01b1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-412]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-412")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-412", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ef5b7bce-c886-57d5-aaee-fff719dcb562"}, .name = "ef5b7bce-c886-57d5-aaee-fff719dcb562", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-411]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-411")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-411", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f86700c5-474e-5703-93e6-179d25b25060"}, .name = "f86700c5-474e-5703-93e6-179d25b25060", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-436]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-436")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-436", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-407"}, .name = "testNP-407", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5609f60a-fa26-59a3-8e17-03ce36bc329e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["66221c2b-b200-541f-aa2b-c0908d5c2f69"]}, .span = ["testNode-40"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-408"}, .name = "testNP-408", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8d1b26c5-6d78-5c28-a228-d46a11bf5ab4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5609f60a-fa26-59a3-8e17-03ce36bc329e"]}, .span = ["testNode-40"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-409"}, .name = "testNP-409", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["13128de5-d4fd-50ef-a6fa-e02470f75bdd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8d1b26c5-6d78-5c28-a228-d46a11bf5ab4"]}, .span = ["testNode-40"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-410"}, .name = "testNP-410", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ef5b7bce-c886-57d5-aaee-fff719dcb562"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["13128de5-d4fd-50ef-a6fa-e02470f75bdd"]}, .span = ["testNode-41"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-411"}, .name = "testNP-411", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["daf26d8b-7aa9-5e29-9827-f97fd4af01b1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ef5b7bce-c886-57d5-aaee-fff719dcb562"]}, .span = ["testNode-41"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-412"}, .name = "testNP-412", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["47614eb2-bc50-546e-8fa5-9c92ad3d0080"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["daf26d8b-7aa9-5e29-9827-f97fd4af01b1"]}, .span = ["testNode-41"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-413"}, .name = "testNP-413", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["969bbeb2-7831-5c43-87b1-2434370d9431"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["47614eb2-bc50-546e-8fa5-9c92ad3d0080"]}, .span = ["testNode-41"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-414"}, .name = "testNP-414", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1a7755d5-7e34-5ff0-a562-8906a55d9a69"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["969bbeb2-7831-5c43-87b1-2434370d9431"]}, .span = ["testNode-41"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-415"}, .name = "testNP-415", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["59e40b97-a875-5501-8367-2dc471a75d54"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1a7755d5-7e34-5ff0-a562-8906a55d9a69"]}, .span = ["testNode-41"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-416"}, .name = "testNP-416", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["53649ad0-6e1f-52f9-b9b7-7ba93ce7aac2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["59e40b97-a875-5501-8367-2dc471a75d54"]}, .span = ["testNode-41"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-417"}, .name = "testNP-417", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["065069e0-18a7-5e1c-bb52-4c47bb1e0224"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["53649ad0-6e1f-52f9-b9b7-7ba93ce7aac2"]}, .span = ["testNode-41"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-418"}, .name = "testNP-418", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["43aeefd2-d0c2-5e46-bb9c-d9c1b5fd1826"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["065069e0-18a7-5e1c-bb52-4c47bb1e0224"]}, .span = ["testNode-41"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-419"}, .name = "testNP-419", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a3721311-dfe4-5333-bfc6-946712f039f6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["43aeefd2-d0c2-5e46-bb9c-d9c1b5fd1826"]}, .span = ["testNode-41"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-420"}, .name = "testNP-420", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6a810058-4116-5795-b850-070e8e3120b9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a3721311-dfe4-5333-bfc6-946712f039f6"]}, .span = ["testNode-42"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-421"}, .name = "testNP-421", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["26797822-5d38-58a4-a2b6-555eb800ada0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6a810058-4116-5795-b850-070e8e3120b9"]}, .span = ["testNode-42"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-422"}, .name = "testNP-422", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bc2e673a-be2f-5194-8a42-939931f6023a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["26797822-5d38-58a4-a2b6-555eb800ada0"]}, .span = ["testNode-42"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-423"}, .name = "testNP-423", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4e985fe9-87b7-57db-80c6-bc7b25d7f4ce"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bc2e673a-be2f-5194-8a42-939931f6023a"]}, .span = ["testNode-42"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-424"}, .name = "testNP-424", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["17ef5192-63e1-5f5b-8637-2d9b9bf7776d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4e985fe9-87b7-57db-80c6-bc7b25d7f4ce"]}, .span = ["testNode-42"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-425"}, .name = "testNP-425", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["acf85820-253c-5368-97bd-d6486cf47a76"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["17ef5192-63e1-5f5b-8637-2d9b9bf7776d"]}, .span = ["testNode-42"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-426"}, .name = "testNP-426", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5bd35221-0c26-5317-a9f1-018cfcd10eef"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["acf85820-253c-5368-97bd-d6486cf47a76"]}, .span = ["testNode-42"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-427"}, .name = "testNP-427", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["caa2cff0-f280-5241-a247-831efc8c4e99"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5bd35221-0c26-5317-a9f1-018cfcd10eef"]}, .span = ["testNode-42"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-428"}, .name = "testNP-428", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1e7c1f44-296c-5267-b707-c44fb5683a0c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["caa2cff0-f280-5241-a247-831efc8c4e99"]}, .span = ["testNode-42"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-429"}, .name = "testNP-429", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["213b7da2-b9b8-5cde-b512-061be115ab57"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1e7c1f44-296c-5267-b707-c44fb5683a0c"]}, .span = ["testNode-42"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-430"}, .name = "testNP-430", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["33a67ebe-734b-5fbb-a5b1-5be41be77846"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["213b7da2-b9b8-5cde-b512-061be115ab57"]}, .span = ["testNode-43"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-431"}, .name = "testNP-431", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9f348bf3-e9d4-546b-9f59-d69f3a63254d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["33a67ebe-734b-5fbb-a5b1-5be41be77846"]}, .span = ["testNode-43"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-432"}, .name = "testNP-432", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c5f35edd-9402-5282-86f6-1e9ed9e8c7f3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9f348bf3-e9d4-546b-9f59-d69f3a63254d"]}, .span = ["testNode-43"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-433"}, .name = "testNP-433", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4662b9f8-93d5-52ec-8a19-721399689827"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c5f35edd-9402-5282-86f6-1e9ed9e8c7f3"]}, .span = ["testNode-43"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-434"}, .name = "testNP-434", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["591e426e-f1d1-5dba-83b2-e15f33e08c63"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4662b9f8-93d5-52ec-8a19-721399689827"]}, .span = ["testNode-43"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-435"}, .name = "testNP-435", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f86700c5-474e-5703-93e6-179d25b25060"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["591e426e-f1d1-5dba-83b2-e15f33e08c63"]}, .span = ["testNode-43"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-436"}, .name = "testNP-436", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["52944f71-c52e-580d-8a02-b7f52543a710"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f86700c5-474e-5703-93e6-179d25b25060"]}, .span = ["testNode-43"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-437"}, .name = "testNP-437", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["49e711d9-b62c-55fb-8332-a9273c323bed"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["52944f71-c52e-580d-8a02-b7f52543a710"]}, .span = ["testNode-43"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-438"}, .name = "testNP-438", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4bbd7c29-ac1e-561a-9b1c-46e0c5369ea8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["49e711d9-b62c-55fb-8332-a9273c323bed"]}, .span = ["testNode-43"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1cdef137-d356-5102-bdef-c72a414486c8"}, .name = "1cdef137-d356-5102-bdef-c72a414486c8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-455]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-455")], .matchExpressions = []}}}}, .addresses = ["10.10.45.5"], .span = ["testNode-45"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "221df0dd-6ea1-5be9-89af-2e070cf98a99"}, .name = "221df0dd-6ea1-5be9-89af-2e070cf98a99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-444]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-444")], .matchExpressions = []}}}}, .addresses = ["10.10.44.4"], .span = ["testNode-44"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2a6209f8-8f87-5acb-aa49-9a8ba2b59702"}, .name = "2a6209f8-8f87-5acb-aa49-9a8ba2b59702", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-462]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-462")], .matchExpressions = []}}}}, .addresses = ["10.10.46.2"], .span = ["testNode-46"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2bfcdf8f-3513-5db1-be65-c75108cd2275"}, .name = "2bfcdf8f-3513-5db1-be65-c75108cd2275", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-466]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-466")], .matchExpressions = []}}}}, .addresses = ["10.10.46.6"], .span = ["testNode-46"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2e707461-922b-5a63-82d0-f4f9b42e3021"}, .name = "2e707461-922b-5a63-82d0-f4f9b42e3021", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-443]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-443")], .matchExpressions = []}}}}, .addresses = ["10.10.44.3"], .span = ["testNode-44"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "39786938-2f43-5c70-95f5-564461bee86f"}, .name = "39786938-2f43-5c70-95f5-564461bee86f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-463]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-463")], .matchExpressions = []}}}}, .addresses = ["10.10.46.3"], .span = ["testNode-46"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "44fb2959-6bad-5a6b-82e5-0b9d202ee700"}, .name = "44fb2959-6bad-5a6b-82e5-0b9d202ee700", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-457]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-457")], .matchExpressions = []}}}}, .addresses = ["10.10.45.7"], .span = ["testNode-45"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "45339f12-f908-5cf0-9541-e69efa589196"}, .name = "45339f12-f908-5cf0-9541-e69efa589196", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-467]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-467")], .matchExpressions = []}}}}, .addresses = ["10.10.46.7"], .span = ["testNode-46"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "58a4bda1-6394-500a-8801-381bb59057ec"}, .name = "58a4bda1-6394-500a-8801-381bb59057ec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-448]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-448")], .matchExpressions = []}}}}, .addresses = ["10.10.44.8"], .span = ["testNode-44"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5a6a577e-e00d-5003-bd84-a74d6fd1d41a"}, .name = "5a6a577e-e00d-5003-bd84-a74d6fd1d41a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-449]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-449")], .matchExpressions = []}}}}, .addresses = ["10.10.44.9"], .span = ["testNode-44"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5e11eed0-b04e-501c-bf44-abb6d5c218a7"}, .name = "5e11eed0-b04e-501c-bf44-abb6d5c218a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-469]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-469")], .matchExpressions = []}}}}, .addresses = ["10.10.46.9"], .span = ["testNode-46"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6440c036-3101-53a7-9611-be6ab29c2352"}, .name = "6440c036-3101-53a7-9611-be6ab29c2352", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-445]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-445")], .matchExpressions = []}}}}, .addresses = ["10.10.44.5"], .span = ["testNode-44"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "734707c6-ad64-54f1-8e05-a8ca7ec42383"}, .name = "734707c6-ad64-54f1-8e05-a8ca7ec42383", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-447]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-447")], .matchExpressions = []}}}}, .addresses = ["10.10.44.7"], .span = ["testNode-44"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7504a2fc-2033-59bc-bb01-f7b4eeed2164"}, .name = "7504a2fc-2033-59bc-bb01-f7b4eeed2164", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-454]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-454")], .matchExpressions = []}}}}, .addresses = ["10.10.45.4"], .span = ["testNode-45"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "75954e86-dbf7-5dc3-a211-e5c0205fe192"}, .name = "75954e86-dbf7-5dc3-a211-e5c0205fe192", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-465]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-465")], .matchExpressions = []}}}}, .addresses = ["10.10.46.5"], .span = ["testNode-46"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9a5f5049-76a1-5a2d-8912-d168a845c3ca"}, .name = "9a5f5049-76a1-5a2d-8912-d168a845c3ca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-461]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-461")], .matchExpressions = []}}}}, .addresses = ["10.10.46.1"], .span = ["testNode-46"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9b313ac8-6069-5bfd-9b92-9827587ffc5b"}, .name = "9b313ac8-6069-5bfd-9b92-9827587ffc5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-442]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-442")], .matchExpressions = []}}}}, .addresses = ["10.10.44.2"], .span = ["testNode-44"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9ca20ce9-8c2f-5a2f-9b15-03f4615ad5e6"}, .name = "9ca20ce9-8c2f-5a2f-9b15-03f4615ad5e6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-441]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-441")], .matchExpressions = []}}}}, .addresses = ["10.10.44.1"], .span = ["testNode-44"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a3a6f83d-02a6-5430-8dc6-4f8f1946a32d"}, .name = "a3a6f83d-02a6-5430-8dc6-4f8f1946a32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-464]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-464")], .matchExpressions = []}}}}, .addresses = ["10.10.46.4"], .span = ["testNode-46"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ab210dec-f1b8-583a-940e-90ddc7641fdc"}, .name = "ab210dec-f1b8-583a-940e-90ddc7641fdc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-470]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-470")], .matchExpressions = []}}}}, .addresses = ["10.10.47.0"], .span = ["testNode-46"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ab6d6a1e-1f75-5eec-ac9e-7fefb232aee2"}, .name = "ab6d6a1e-1f75-5eec-ac9e-7fefb232aee2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-460]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-460")], .matchExpressions = []}}}}, .addresses = ["10.10.46.0"], .span = ["testNode-45"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b9c800ef-c4c5-5a63-ae54-0959c9712728"}, .name = "b9c800ef-c4c5-5a63-ae54-0959c9712728", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-446]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-446")], .matchExpressions = []}}}}, .addresses = ["10.10.44.6"], .span = ["testNode-44"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cb1f9138-bf78-5be1-8e95-bb9ba1c330b3"}, .name = "cb1f9138-bf78-5be1-8e95-bb9ba1c330b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-471]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-471")], .matchExpressions = []}}}}, .addresses = ["10.10.47.1"], .span = ["testNode-47"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ce2b3848-6f5c-5362-83d5-360c6d6b137d"}, .name = "ce2b3848-6f5c-5362-83d5-360c6d6b137d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-456]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-456")], .matchExpressions = []}}}}, .addresses = ["10.10.45.6"], .span = ["testNode-45"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d28893ed-1867-59ba-8b0a-145f907b372c"}, .name = "d28893ed-1867-59ba-8b0a-145f907b372c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-452]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-452")], .matchExpressions = []}}}}, .addresses = ["10.10.45.2"], .span = ["testNode-45"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d2eb6494-a3ba-5e2b-8aa3-f1a269f19116"}, .name = "d2eb6494-a3ba-5e2b-8aa3-f1a269f19116", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-453]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-453")], .matchExpressions = []}}}}, .addresses = ["10.10.45.3"], .span = ["testNode-45"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d8782751-9d64-5389-b796-a396ab3ca053"}, .name = "d8782751-9d64-5389-b796-a396ab3ca053", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-450]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-450")], .matchExpressions = []}}}}, .addresses = ["10.10.45.0"], .span = ["testNode-44"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d8f088fe-22d6-5d40-8080-254495710bf9"}, .name = "d8f088fe-22d6-5d40-8080-254495710bf9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-459]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-459")], .matchExpressions = []}}}}, .addresses = ["10.10.45.9"], .span = ["testNode-45"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e0d644f7-6156-5c67-9981-08d21e1fe628"}, .name = "e0d644f7-6156-5c67-9981-08d21e1fe628", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-440]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-440")], .matchExpressions = []}}}}, .addresses = ["10.10.44.0"], .span = ["testNode-43"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e4c0de03-f599-52c9-b982-80f5b20a746b"}, .name = "e4c0de03-f599-52c9-b982-80f5b20a746b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-458]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-458")], .matchExpressions = []}}}}, .addresses = ["10.10.45.8"], .span = ["testNode-45"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e6f59d9f-4f6c-58d5-9d32-09b02c7af23a"}, .name = "e6f59d9f-4f6c-58d5-9d32-09b02c7af23a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-451]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-451")], .matchExpressions = []}}}}, .addresses = ["10.10.45.1"], .span = ["testNode-45"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fc01d1e4-2053-5e76-bd5b-f20127c59a09"}, .name = "fc01d1e4-2053-5e76-bd5b-f20127c59a09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-468]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-468")], .matchExpressions = []}}}}, .addresses = ["10.10.46.8"], .span = ["testNode-46"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1cdef137-d356-5102-bdef-c72a414486c8"}, .name = "1cdef137-d356-5102-bdef-c72a414486c8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-455]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-455")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-455", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "221df0dd-6ea1-5be9-89af-2e070cf98a99"}, .name = "221df0dd-6ea1-5be9-89af-2e070cf98a99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-444]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-444")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-444", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2a6209f8-8f87-5acb-aa49-9a8ba2b59702"}, .name = "2a6209f8-8f87-5acb-aa49-9a8ba2b59702", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-462]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-462")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-462", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2bfcdf8f-3513-5db1-be65-c75108cd2275"}, .name = "2bfcdf8f-3513-5db1-be65-c75108cd2275", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-466]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-466")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-466", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2e707461-922b-5a63-82d0-f4f9b42e3021"}, .name = "2e707461-922b-5a63-82d0-f4f9b42e3021", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-443]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-443")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-443", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "39786938-2f43-5c70-95f5-564461bee86f"}, .name = "39786938-2f43-5c70-95f5-564461bee86f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-463]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-463")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-463", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "44fb2959-6bad-5a6b-82e5-0b9d202ee700"}, .name = "44fb2959-6bad-5a6b-82e5-0b9d202ee700", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-457]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-457")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-457", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "45339f12-f908-5cf0-9541-e69efa589196"}, .name = "45339f12-f908-5cf0-9541-e69efa589196", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-467]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-467")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-467", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4bbd7c29-ac1e-561a-9b1c-46e0c5369ea8"}, .name = "4bbd7c29-ac1e-561a-9b1c-46e0c5369ea8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-439]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-439")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-439", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "58a4bda1-6394-500a-8801-381bb59057ec"}, .name = "58a4bda1-6394-500a-8801-381bb59057ec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-448]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-448")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-448", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5a6a577e-e00d-5003-bd84-a74d6fd1d41a"}, .name = "5a6a577e-e00d-5003-bd84-a74d6fd1d41a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-449]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-449")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-449", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5e11eed0-b04e-501c-bf44-abb6d5c218a7"}, .name = "5e11eed0-b04e-501c-bf44-abb6d5c218a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-469]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-469")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-469", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6440c036-3101-53a7-9611-be6ab29c2352"}, .name = "6440c036-3101-53a7-9611-be6ab29c2352", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-445]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-445")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-445", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "734707c6-ad64-54f1-8e05-a8ca7ec42383"}, .name = "734707c6-ad64-54f1-8e05-a8ca7ec42383", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-447]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-447")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-447", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7504a2fc-2033-59bc-bb01-f7b4eeed2164"}, .name = "7504a2fc-2033-59bc-bb01-f7b4eeed2164", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-454]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-454")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-454", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "75954e86-dbf7-5dc3-a211-e5c0205fe192"}, .name = "75954e86-dbf7-5dc3-a211-e5c0205fe192", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-465]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-465")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-465", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9a5f5049-76a1-5a2d-8912-d168a845c3ca"}, .name = "9a5f5049-76a1-5a2d-8912-d168a845c3ca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-461]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-461")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-461", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9b313ac8-6069-5bfd-9b92-9827587ffc5b"}, .name = "9b313ac8-6069-5bfd-9b92-9827587ffc5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-442]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-442")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-442", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9ca20ce9-8c2f-5a2f-9b15-03f4615ad5e6"}, .name = "9ca20ce9-8c2f-5a2f-9b15-03f4615ad5e6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-441]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-441")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-441", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a3a6f83d-02a6-5430-8dc6-4f8f1946a32d"}, .name = "a3a6f83d-02a6-5430-8dc6-4f8f1946a32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-464]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-464")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-464", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ab210dec-f1b8-583a-940e-90ddc7641fdc"}, .name = "ab210dec-f1b8-583a-940e-90ddc7641fdc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-470]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-470")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-470", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ab6d6a1e-1f75-5eec-ac9e-7fefb232aee2"}, .name = "ab6d6a1e-1f75-5eec-ac9e-7fefb232aee2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-460]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-460")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-460", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b9c800ef-c4c5-5a63-ae54-0959c9712728"}, .name = "b9c800ef-c4c5-5a63-ae54-0959c9712728", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-446]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-446")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-446", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ce2b3848-6f5c-5362-83d5-360c6d6b137d"}, .name = "ce2b3848-6f5c-5362-83d5-360c6d6b137d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-456]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-456")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-456", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d28893ed-1867-59ba-8b0a-145f907b372c"}, .name = "d28893ed-1867-59ba-8b0a-145f907b372c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-452]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-452")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-452", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d2eb6494-a3ba-5e2b-8aa3-f1a269f19116"}, .name = "d2eb6494-a3ba-5e2b-8aa3-f1a269f19116", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-453]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-453")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-453", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d8782751-9d64-5389-b796-a396ab3ca053"}, .name = "d8782751-9d64-5389-b796-a396ab3ca053", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-450]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-450")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-450", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d8f088fe-22d6-5d40-8080-254495710bf9"}, .name = "d8f088fe-22d6-5d40-8080-254495710bf9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-459]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-459")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-459", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e0d644f7-6156-5c67-9981-08d21e1fe628"}, .name = "e0d644f7-6156-5c67-9981-08d21e1fe628", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-440]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-440")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-440", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e4c0de03-f599-52c9-b982-80f5b20a746b"}, .name = "e4c0de03-f599-52c9-b982-80f5b20a746b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-458]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-458")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-458", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e6f59d9f-4f6c-58d5-9d32-09b02c7af23a"}, .name = "e6f59d9f-4f6c-58d5-9d32-09b02c7af23a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-451]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-451")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-451", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fc01d1e4-2053-5e76-bd5b-f20127c59a09"}, .name = "fc01d1e4-2053-5e76-bd5b-f20127c59a09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-468]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-468")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-468", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-439"}, .name = "testNP-439", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e0d644f7-6156-5c67-9981-08d21e1fe628"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4bbd7c29-ac1e-561a-9b1c-46e0c5369ea8"]}, .span = ["testNode-43"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-440"}, .name = "testNP-440", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9ca20ce9-8c2f-5a2f-9b15-03f4615ad5e6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e0d644f7-6156-5c67-9981-08d21e1fe628"]}, .span = ["testNode-44"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-441"}, .name = "testNP-441", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9b313ac8-6069-5bfd-9b92-9827587ffc5b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9ca20ce9-8c2f-5a2f-9b15-03f4615ad5e6"]}, .span = ["testNode-44"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-442"}, .name = "testNP-442", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2e707461-922b-5a63-82d0-f4f9b42e3021"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9b313ac8-6069-5bfd-9b92-9827587ffc5b"]}, .span = ["testNode-44"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-443"}, .name = "testNP-443", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["221df0dd-6ea1-5be9-89af-2e070cf98a99"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2e707461-922b-5a63-82d0-f4f9b42e3021"]}, .span = ["testNode-44"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-444"}, .name = "testNP-444", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6440c036-3101-53a7-9611-be6ab29c2352"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["221df0dd-6ea1-5be9-89af-2e070cf98a99"]}, .span = ["testNode-44"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-445"}, .name = "testNP-445", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b9c800ef-c4c5-5a63-ae54-0959c9712728"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6440c036-3101-53a7-9611-be6ab29c2352"]}, .span = ["testNode-44"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-446"}, .name = "testNP-446", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["734707c6-ad64-54f1-8e05-a8ca7ec42383"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b9c800ef-c4c5-5a63-ae54-0959c9712728"]}, .span = ["testNode-44"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-447"}, .name = "testNP-447", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["58a4bda1-6394-500a-8801-381bb59057ec"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["734707c6-ad64-54f1-8e05-a8ca7ec42383"]}, .span = ["testNode-44"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-448"}, .name = "testNP-448", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5a6a577e-e00d-5003-bd84-a74d6fd1d41a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["58a4bda1-6394-500a-8801-381bb59057ec"]}, .span = ["testNode-44"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-449"}, .name = "testNP-449", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d8782751-9d64-5389-b796-a396ab3ca053"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5a6a577e-e00d-5003-bd84-a74d6fd1d41a"]}, .span = ["testNode-44"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-450"}, .name = "testNP-450", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e6f59d9f-4f6c-58d5-9d32-09b02c7af23a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d8782751-9d64-5389-b796-a396ab3ca053"]}, .span = ["testNode-45"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-451"}, .name = "testNP-451", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d28893ed-1867-59ba-8b0a-145f907b372c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e6f59d9f-4f6c-58d5-9d32-09b02c7af23a"]}, .span = ["testNode-45"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-452"}, .name = "testNP-452", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d2eb6494-a3ba-5e2b-8aa3-f1a269f19116"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d28893ed-1867-59ba-8b0a-145f907b372c"]}, .span = ["testNode-45"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-453"}, .name = "testNP-453", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7504a2fc-2033-59bc-bb01-f7b4eeed2164"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d2eb6494-a3ba-5e2b-8aa3-f1a269f19116"]}, .span = ["testNode-45"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-454"}, .name = "testNP-454", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1cdef137-d356-5102-bdef-c72a414486c8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7504a2fc-2033-59bc-bb01-f7b4eeed2164"]}, .span = ["testNode-45"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-455"}, .name = "testNP-455", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ce2b3848-6f5c-5362-83d5-360c6d6b137d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1cdef137-d356-5102-bdef-c72a414486c8"]}, .span = ["testNode-45"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-456"}, .name = "testNP-456", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["44fb2959-6bad-5a6b-82e5-0b9d202ee700"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ce2b3848-6f5c-5362-83d5-360c6d6b137d"]}, .span = ["testNode-45"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-457"}, .name = "testNP-457", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e4c0de03-f599-52c9-b982-80f5b20a746b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["44fb2959-6bad-5a6b-82e5-0b9d202ee700"]}, .span = ["testNode-45"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-458"}, .name = "testNP-458", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d8f088fe-22d6-5d40-8080-254495710bf9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e4c0de03-f599-52c9-b982-80f5b20a746b"]}, .span = ["testNode-45"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-459"}, .name = "testNP-459", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ab6d6a1e-1f75-5eec-ac9e-7fefb232aee2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d8f088fe-22d6-5d40-8080-254495710bf9"]}, .span = ["testNode-45"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-460"}, .name = "testNP-460", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9a5f5049-76a1-5a2d-8912-d168a845c3ca"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ab6d6a1e-1f75-5eec-ac9e-7fefb232aee2"]}, .span = ["testNode-46"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-461"}, .name = "testNP-461", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2a6209f8-8f87-5acb-aa49-9a8ba2b59702"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9a5f5049-76a1-5a2d-8912-d168a845c3ca"]}, .span = ["testNode-46"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-462"}, .name = "testNP-462", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["39786938-2f43-5c70-95f5-564461bee86f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2a6209f8-8f87-5acb-aa49-9a8ba2b59702"]}, .span = ["testNode-46"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-463"}, .name = "testNP-463", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a3a6f83d-02a6-5430-8dc6-4f8f1946a32d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["39786938-2f43-5c70-95f5-564461bee86f"]}, .span = ["testNode-46"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-464"}, .name = "testNP-464", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["75954e86-dbf7-5dc3-a211-e5c0205fe192"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a3a6f83d-02a6-5430-8dc6-4f8f1946a32d"]}, .span = ["testNode-46"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-465"}, .name = "testNP-465", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2bfcdf8f-3513-5db1-be65-c75108cd2275"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["75954e86-dbf7-5dc3-a211-e5c0205fe192"]}, .span = ["testNode-46"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-466"}, .name = "testNP-466", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["45339f12-f908-5cf0-9541-e69efa589196"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2bfcdf8f-3513-5db1-be65-c75108cd2275"]}, .span = ["testNode-46"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-467"}, .name = "testNP-467", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fc01d1e4-2053-5e76-bd5b-f20127c59a09"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["45339f12-f908-5cf0-9541-e69efa589196"]}, .span = ["testNode-46"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-468"}, .name = "testNP-468", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5e11eed0-b04e-501c-bf44-abb6d5c218a7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fc01d1e4-2053-5e76-bd5b-f20127c59a09"]}, .span = ["testNode-46"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-469"}, .name = "testNP-469", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ab210dec-f1b8-583a-940e-90ddc7641fdc"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5e11eed0-b04e-501c-bf44-abb6d5c218a7"]}, .span = ["testNode-46"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-470"}, .name = "testNP-470", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cb1f9138-bf78-5be1-8e95-bb9ba1c330b3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ab210dec-f1b8-583a-940e-90ddc7641fdc"]}, .span = ["testNode-47"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "07d2b997-3b78-5866-a575-8f9f9421fb9b"}, .name = "07d2b997-3b78-5866-a575-8f9f9421fb9b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-479]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-479")], .matchExpressions = []}}}}, .addresses = ["10.10.47.9"], .span = ["testNode-47"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0b7ff700-b184-5c64-b61e-9f5e0e4f695c"}, .name = "0b7ff700-b184-5c64-b61e-9f5e0e4f695c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-489]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-489")], .matchExpressions = []}}}}, .addresses = ["10.10.48.9"], .span = ["testNode-48"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0d2feb4b-7671-5457-997d-b90deb86f058"}, .name = "0d2feb4b-7671-5457-997d-b90deb86f058", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-478]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-478")], .matchExpressions = []}}}}, .addresses = ["10.10.47.8"], .span = ["testNode-47"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0f9f3cbb-223d-566a-8017-99102e738a53"}, .name = "0f9f3cbb-223d-566a-8017-99102e738a53", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-495]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-495")], .matchExpressions = []}}}}, .addresses = ["10.10.49.5"], .span = ["testNode-49"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "145b375b-bd02-576a-a29c-a996c2ada25a"}, .name = "145b375b-bd02-576a-a29c-a996c2ada25a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-477]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-477")], .matchExpressions = []}}}}, .addresses = ["10.10.47.7"], .span = ["testNode-47"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "186ceca6-cfe6-5b24-b464-51fc996b731a"}, .name = "186ceca6-cfe6-5b24-b464-51fc996b731a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-492]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-492")], .matchExpressions = []}}}}, .addresses = ["10.10.49.2"], .span = ["testNode-49"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "20cc0feb-897a-5b53-bf0b-20fbba3e7c33"}, .name = "20cc0feb-897a-5b53-bf0b-20fbba3e7c33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-500]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-500")], .matchExpressions = []}}}}, .addresses = ["10.10.50.0"], .span = ["testNode-49"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2f187e07-ea40-5f31-954c-ba475ddb493e"}, .name = "2f187e07-ea40-5f31-954c-ba475ddb493e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-473]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-473")], .matchExpressions = []}}}}, .addresses = ["10.10.47.3"], .span = ["testNode-47"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "441e2917-7cb3-5111-8ca9-2e9a93e1423a"}, .name = "441e2917-7cb3-5111-8ca9-2e9a93e1423a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-475]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-475")], .matchExpressions = []}}}}, .addresses = ["10.10.47.5"], .span = ["testNode-47"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4c0e556b-5c80-5021-af27-40565ee58082"}, .name = "4c0e556b-5c80-5021-af27-40565ee58082", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-476]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-476")], .matchExpressions = []}}}}, .addresses = ["10.10.47.6"], .span = ["testNode-47"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "54c401e2-aea9-5b14-9090-d42883ae2106"}, .name = "54c401e2-aea9-5b14-9090-d42883ae2106", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-497]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-497")], .matchExpressions = []}}}}, .addresses = ["10.10.49.7"], .span = ["testNode-49"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "574ad907-66bf-52c1-aa00-f896f38bb8f5"}, .name = "574ad907-66bf-52c1-aa00-f896f38bb8f5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-499]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-499")], .matchExpressions = []}}}}, .addresses = ["10.10.49.9"], .span = ["testNode-49"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5d7c915f-be3d-5412-945b-db1343c0f53f"}, .name = "5d7c915f-be3d-5412-945b-db1343c0f53f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-493]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-493")], .matchExpressions = []}}}}, .addresses = ["10.10.49.3"], .span = ["testNode-49"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "62da29f8-0e21-533a-a892-7487a537a3ac"}, .name = "62da29f8-0e21-533a-a892-7487a537a3ac", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-481]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-481")], .matchExpressions = []}}}}, .addresses = ["10.10.48.1"], .span = ["testNode-48"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "68e05d5d-5880-58b3-9750-b1a5778fbfd8"}, .name = "68e05d5d-5880-58b3-9750-b1a5778fbfd8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-486]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-486")], .matchExpressions = []}}}}, .addresses = ["10.10.48.6"], .span = ["testNode-48"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6d1f9632-c71e-599b-b0ec-adcaf91077e9"}, .name = "6d1f9632-c71e-599b-b0ec-adcaf91077e9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-484]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-484")], .matchExpressions = []}}}}, .addresses = ["10.10.48.4"], .span = ["testNode-48"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8081ab0a-8040-5336-933e-1bcfc92ff856"}, .name = "8081ab0a-8040-5336-933e-1bcfc92ff856", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-501]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-501")], .matchExpressions = []}}}}, .addresses = ["10.10.50.1"], .span = ["testNode-50"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8fdf1677-dcc4-5416-93e7-b90771ef01fa"}, .name = "8fdf1677-dcc4-5416-93e7-b90771ef01fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-491]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-491")], .matchExpressions = []}}}}, .addresses = ["10.10.49.1"], .span = ["testNode-49"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9131e664-70d3-5abf-94cb-98daedc563ed"}, .name = "9131e664-70d3-5abf-94cb-98daedc563ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-485]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-485")], .matchExpressions = []}}}}, .addresses = ["10.10.48.5"], .span = ["testNode-48"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "91951d2b-3de3-5257-b6f0-31b371a54821"}, .name = "91951d2b-3de3-5257-b6f0-31b371a54821", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-496]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-496")], .matchExpressions = []}}}}, .addresses = ["10.10.49.6"], .span = ["testNode-49"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "93c356d0-6c6d-5097-bb7d-bb85c09b5a92"}, .name = "93c356d0-6c6d-5097-bb7d-bb85c09b5a92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-487]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-487")], .matchExpressions = []}}}}, .addresses = ["10.10.48.7"], .span = ["testNode-48"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "96650dbe-ea2a-56ce-a24d-89a33aab9e53"}, .name = "96650dbe-ea2a-56ce-a24d-89a33aab9e53", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-503]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-503")], .matchExpressions = []}}}}, .addresses = ["10.10.50.3"], .span = ["testNode-50"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9a038913-f2a8-5e80-b5fa-9de255b27318"}, .name = "9a038913-f2a8-5e80-b5fa-9de255b27318", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-498]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-498")], .matchExpressions = []}}}}, .addresses = ["10.10.49.8"], .span = ["testNode-49"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a7ed93c4-ba2e-5748-b2ae-88a30d10f7a2"}, .name = "a7ed93c4-ba2e-5748-b2ae-88a30d10f7a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-480]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-480")], .matchExpressions = []}}}}, .addresses = ["10.10.48.0"], .span = ["testNode-47"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ad7f819a-fc9d-559a-960e-15c148812e92"}, .name = "ad7f819a-fc9d-559a-960e-15c148812e92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-472]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-472")], .matchExpressions = []}}}}, .addresses = ["10.10.47.2"], .span = ["testNode-47"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c44e8b65-9e4c-5a80-a0d7-fb788cb25708"}, .name = "c44e8b65-9e4c-5a80-a0d7-fb788cb25708", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-474]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-474")], .matchExpressions = []}}}}, .addresses = ["10.10.47.4"], .span = ["testNode-47"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c4c94f0b-1a71-5a01-b4f3-bd4e12ce5697"}, .name = "c4c94f0b-1a71-5a01-b4f3-bd4e12ce5697", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-488]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-488")], .matchExpressions = []}}}}, .addresses = ["10.10.48.8"], .span = ["testNode-48"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d59eb162-99df-5d04-b8c1-e86f9cd0af8c"}, .name = "d59eb162-99df-5d04-b8c1-e86f9cd0af8c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-502]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-502")], .matchExpressions = []}}}}, .addresses = ["10.10.50.2"], .span = ["testNode-50"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d997db1c-c2f0-5d09-b50c-8ebc67d1c2fd"}, .name = "d997db1c-c2f0-5d09-b50c-8ebc67d1c2fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-483]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-483")], .matchExpressions = []}}}}, .addresses = ["10.10.48.3"], .span = ["testNode-48"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dd237788-61ef-5c72-820a-fe6a4fbf8622"}, .name = "dd237788-61ef-5c72-820a-fe6a4fbf8622", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-482]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-482")], .matchExpressions = []}}}}, .addresses = ["10.10.48.2"], .span = ["testNode-48"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e5a2c6b8-18d5-5bad-ba1b-b514a461652e"}, .name = "e5a2c6b8-18d5-5bad-ba1b-b514a461652e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-494]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-494")], .matchExpressions = []}}}}, .addresses = ["10.10.49.4"], .span = ["testNode-49"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e82932e7-38ac-56a0-aa33-7870f6b2b64c"}, .name = "e82932e7-38ac-56a0-aa33-7870f6b2b64c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-490]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-490")], .matchExpressions = []}}}}, .addresses = ["10.10.49.0"], .span = ["testNode-48"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "07d2b997-3b78-5866-a575-8f9f9421fb9b"}, .name = "07d2b997-3b78-5866-a575-8f9f9421fb9b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-479]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-479")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-479", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0b7ff700-b184-5c64-b61e-9f5e0e4f695c"}, .name = "0b7ff700-b184-5c64-b61e-9f5e0e4f695c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-489]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-489")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-489", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0d2feb4b-7671-5457-997d-b90deb86f058"}, .name = "0d2feb4b-7671-5457-997d-b90deb86f058", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-478]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-478")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-478", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0f9f3cbb-223d-566a-8017-99102e738a53"}, .name = "0f9f3cbb-223d-566a-8017-99102e738a53", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-495]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-495")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-495", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "145b375b-bd02-576a-a29c-a996c2ada25a"}, .name = "145b375b-bd02-576a-a29c-a996c2ada25a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-477]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-477")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-477", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "186ceca6-cfe6-5b24-b464-51fc996b731a"}, .name = "186ceca6-cfe6-5b24-b464-51fc996b731a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-492]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-492")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-492", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "20cc0feb-897a-5b53-bf0b-20fbba3e7c33"}, .name = "20cc0feb-897a-5b53-bf0b-20fbba3e7c33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-500]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-500")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-500", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2f187e07-ea40-5f31-954c-ba475ddb493e"}, .name = "2f187e07-ea40-5f31-954c-ba475ddb493e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-473]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-473")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-473", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "441e2917-7cb3-5111-8ca9-2e9a93e1423a"}, .name = "441e2917-7cb3-5111-8ca9-2e9a93e1423a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-475]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-475")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-475", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4c0e556b-5c80-5021-af27-40565ee58082"}, .name = "4c0e556b-5c80-5021-af27-40565ee58082", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-476]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-476")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-476", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "54c401e2-aea9-5b14-9090-d42883ae2106"}, .name = "54c401e2-aea9-5b14-9090-d42883ae2106", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-497]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-497")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-497", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "574ad907-66bf-52c1-aa00-f896f38bb8f5"}, .name = "574ad907-66bf-52c1-aa00-f896f38bb8f5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-499]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-499")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-499", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5d7c915f-be3d-5412-945b-db1343c0f53f"}, .name = "5d7c915f-be3d-5412-945b-db1343c0f53f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-493]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-493")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-493", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "62da29f8-0e21-533a-a892-7487a537a3ac"}, .name = "62da29f8-0e21-533a-a892-7487a537a3ac", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-481]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-481")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-481", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "68e05d5d-5880-58b3-9750-b1a5778fbfd8"}, .name = "68e05d5d-5880-58b3-9750-b1a5778fbfd8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-486]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-486")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-486", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6d1f9632-c71e-599b-b0ec-adcaf91077e9"}, .name = "6d1f9632-c71e-599b-b0ec-adcaf91077e9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-484]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-484")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-484", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8081ab0a-8040-5336-933e-1bcfc92ff856"}, .name = "8081ab0a-8040-5336-933e-1bcfc92ff856", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-501]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-501")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-501", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8fdf1677-dcc4-5416-93e7-b90771ef01fa"}, .name = "8fdf1677-dcc4-5416-93e7-b90771ef01fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-491]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-491")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-491", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9131e664-70d3-5abf-94cb-98daedc563ed"}, .name = "9131e664-70d3-5abf-94cb-98daedc563ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-485]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-485")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-485", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "91951d2b-3de3-5257-b6f0-31b371a54821"}, .name = "91951d2b-3de3-5257-b6f0-31b371a54821", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-496]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-496")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-496", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "93c356d0-6c6d-5097-bb7d-bb85c09b5a92"}, .name = "93c356d0-6c6d-5097-bb7d-bb85c09b5a92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-487]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-487")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-487", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9a038913-f2a8-5e80-b5fa-9de255b27318"}, .name = "9a038913-f2a8-5e80-b5fa-9de255b27318", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-498]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-498")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-498", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a7ed93c4-ba2e-5748-b2ae-88a30d10f7a2"}, .name = "a7ed93c4-ba2e-5748-b2ae-88a30d10f7a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-480]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-480")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-480", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ad7f819a-fc9d-559a-960e-15c148812e92"}, .name = "ad7f819a-fc9d-559a-960e-15c148812e92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-472]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-472")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-472", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c44e8b65-9e4c-5a80-a0d7-fb788cb25708"}, .name = "c44e8b65-9e4c-5a80-a0d7-fb788cb25708", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-474]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-474")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-474", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c4c94f0b-1a71-5a01-b4f3-bd4e12ce5697"}, .name = "c4c94f0b-1a71-5a01-b4f3-bd4e12ce5697", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-488]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-488")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-488", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cb1f9138-bf78-5be1-8e95-bb9ba1c330b3"}, .name = "cb1f9138-bf78-5be1-8e95-bb9ba1c330b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-471]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-471")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-471", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d59eb162-99df-5d04-b8c1-e86f9cd0af8c"}, .name = "d59eb162-99df-5d04-b8c1-e86f9cd0af8c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-502]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-502")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-502", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d997db1c-c2f0-5d09-b50c-8ebc67d1c2fd"}, .name = "d997db1c-c2f0-5d09-b50c-8ebc67d1c2fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-483]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-483")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-483", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dd237788-61ef-5c72-820a-fe6a4fbf8622"}, .name = "dd237788-61ef-5c72-820a-fe6a4fbf8622", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-482]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-482")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-482", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e5a2c6b8-18d5-5bad-ba1b-b514a461652e"}, .name = "e5a2c6b8-18d5-5bad-ba1b-b514a461652e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-494]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-494")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-494", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e82932e7-38ac-56a0-aa33-7870f6b2b64c"}, .name = "e82932e7-38ac-56a0-aa33-7870f6b2b64c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-490]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-490")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-490", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-471"}, .name = "testNP-471", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ad7f819a-fc9d-559a-960e-15c148812e92"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cb1f9138-bf78-5be1-8e95-bb9ba1c330b3"]}, .span = ["testNode-47"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-472"}, .name = "testNP-472", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2f187e07-ea40-5f31-954c-ba475ddb493e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ad7f819a-fc9d-559a-960e-15c148812e92"]}, .span = ["testNode-47"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-473"}, .name = "testNP-473", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c44e8b65-9e4c-5a80-a0d7-fb788cb25708"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2f187e07-ea40-5f31-954c-ba475ddb493e"]}, .span = ["testNode-47"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-474"}, .name = "testNP-474", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["441e2917-7cb3-5111-8ca9-2e9a93e1423a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c44e8b65-9e4c-5a80-a0d7-fb788cb25708"]}, .span = ["testNode-47"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-475"}, .name = "testNP-475", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4c0e556b-5c80-5021-af27-40565ee58082"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["441e2917-7cb3-5111-8ca9-2e9a93e1423a"]}, .span = ["testNode-47"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-476"}, .name = "testNP-476", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["145b375b-bd02-576a-a29c-a996c2ada25a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4c0e556b-5c80-5021-af27-40565ee58082"]}, .span = ["testNode-47"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-477"}, .name = "testNP-477", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0d2feb4b-7671-5457-997d-b90deb86f058"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["145b375b-bd02-576a-a29c-a996c2ada25a"]}, .span = ["testNode-47"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-478"}, .name = "testNP-478", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["07d2b997-3b78-5866-a575-8f9f9421fb9b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0d2feb4b-7671-5457-997d-b90deb86f058"]}, .span = ["testNode-47"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-479"}, .name = "testNP-479", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a7ed93c4-ba2e-5748-b2ae-88a30d10f7a2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["07d2b997-3b78-5866-a575-8f9f9421fb9b"]}, .span = ["testNode-47"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-480"}, .name = "testNP-480", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["62da29f8-0e21-533a-a892-7487a537a3ac"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a7ed93c4-ba2e-5748-b2ae-88a30d10f7a2"]}, .span = ["testNode-48"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-481"}, .name = "testNP-481", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dd237788-61ef-5c72-820a-fe6a4fbf8622"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["62da29f8-0e21-533a-a892-7487a537a3ac"]}, .span = ["testNode-48"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-482"}, .name = "testNP-482", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d997db1c-c2f0-5d09-b50c-8ebc67d1c2fd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dd237788-61ef-5c72-820a-fe6a4fbf8622"]}, .span = ["testNode-48"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-483"}, .name = "testNP-483", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6d1f9632-c71e-599b-b0ec-adcaf91077e9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d997db1c-c2f0-5d09-b50c-8ebc67d1c2fd"]}, .span = ["testNode-48"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-484"}, .name = "testNP-484", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9131e664-70d3-5abf-94cb-98daedc563ed"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6d1f9632-c71e-599b-b0ec-adcaf91077e9"]}, .span = ["testNode-48"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-485"}, .name = "testNP-485", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["68e05d5d-5880-58b3-9750-b1a5778fbfd8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9131e664-70d3-5abf-94cb-98daedc563ed"]}, .span = ["testNode-48"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-486"}, .name = "testNP-486", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["93c356d0-6c6d-5097-bb7d-bb85c09b5a92"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["68e05d5d-5880-58b3-9750-b1a5778fbfd8"]}, .span = ["testNode-48"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-487"}, .name = "testNP-487", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c4c94f0b-1a71-5a01-b4f3-bd4e12ce5697"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["93c356d0-6c6d-5097-bb7d-bb85c09b5a92"]}, .span = ["testNode-48"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-488"}, .name = "testNP-488", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0b7ff700-b184-5c64-b61e-9f5e0e4f695c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c4c94f0b-1a71-5a01-b4f3-bd4e12ce5697"]}, .span = ["testNode-48"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-489"}, .name = "testNP-489", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e82932e7-38ac-56a0-aa33-7870f6b2b64c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0b7ff700-b184-5c64-b61e-9f5e0e4f695c"]}, .span = ["testNode-48"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-490"}, .name = "testNP-490", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8fdf1677-dcc4-5416-93e7-b90771ef01fa"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e82932e7-38ac-56a0-aa33-7870f6b2b64c"]}, .span = ["testNode-49"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-491"}, .name = "testNP-491", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["186ceca6-cfe6-5b24-b464-51fc996b731a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8fdf1677-dcc4-5416-93e7-b90771ef01fa"]}, .span = ["testNode-49"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-492"}, .name = "testNP-492", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5d7c915f-be3d-5412-945b-db1343c0f53f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["186ceca6-cfe6-5b24-b464-51fc996b731a"]}, .span = ["testNode-49"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-493"}, .name = "testNP-493", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e5a2c6b8-18d5-5bad-ba1b-b514a461652e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5d7c915f-be3d-5412-945b-db1343c0f53f"]}, .span = ["testNode-49"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-494"}, .name = "testNP-494", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0f9f3cbb-223d-566a-8017-99102e738a53"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e5a2c6b8-18d5-5bad-ba1b-b514a461652e"]}, .span = ["testNode-49"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-495"}, .name = "testNP-495", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["91951d2b-3de3-5257-b6f0-31b371a54821"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0f9f3cbb-223d-566a-8017-99102e738a53"]}, .span = ["testNode-49"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-496"}, .name = "testNP-496", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["54c401e2-aea9-5b14-9090-d42883ae2106"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["91951d2b-3de3-5257-b6f0-31b371a54821"]}, .span = ["testNode-49"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-497"}, .name = "testNP-497", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9a038913-f2a8-5e80-b5fa-9de255b27318"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["54c401e2-aea9-5b14-9090-d42883ae2106"]}, .span = ["testNode-49"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-498"}, .name = "testNP-498", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["574ad907-66bf-52c1-aa00-f896f38bb8f5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9a038913-f2a8-5e80-b5fa-9de255b27318"]}, .span = ["testNode-49"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-499"}, .name = "testNP-499", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["20cc0feb-897a-5b53-bf0b-20fbba3e7c33"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["574ad907-66bf-52c1-aa00-f896f38bb8f5"]}, .span = ["testNode-49"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-500"}, .name = "testNP-500", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8081ab0a-8040-5336-933e-1bcfc92ff856"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["20cc0feb-897a-5b53-bf0b-20fbba3e7c33"]}, .span = ["testNode-50"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-501"}, .name = "testNP-501", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d59eb162-99df-5d04-b8c1-e86f9cd0af8c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8081ab0a-8040-5336-933e-1bcfc92ff856"]}, .span = ["testNode-50"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-502"}, .name = "testNP-502", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["96650dbe-ea2a-56ce-a24d-89a33aab9e53"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d59eb162-99df-5d04-b8c1-e86f9cd0af8c"]}, .span = ["testNode-50"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0630f84f-81d1-5ee2-b98a-611177d87fb2"}, .name = "0630f84f-81d1-5ee2-b98a-611177d87fb2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-513]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-513")], .matchExpressions = []}}}}, .addresses = ["10.10.51.3"], .span = ["testNode-51"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "162513fa-bbef-51f4-af13-87b325aeb42c"}, .name = "162513fa-bbef-51f4-af13-87b325aeb42c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-515]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-515")], .matchExpressions = []}}}}, .addresses = ["10.10.51.5"], .span = ["testNode-51"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "164d5376-d8e2-55b0-bc31-79ce70eb932c"}, .name = "164d5376-d8e2-55b0-bc31-79ce70eb932c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-516]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-516")], .matchExpressions = []}}}}, .addresses = ["10.10.51.6"], .span = ["testNode-51"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "16e5c652-c9e8-5840-aed9-3048c557a20d"}, .name = "16e5c652-c9e8-5840-aed9-3048c557a20d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-517]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-517")], .matchExpressions = []}}}}, .addresses = ["10.10.51.7"], .span = ["testNode-51"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1bb1441b-f958-5365-b979-a3d1c0327651"}, .name = "1bb1441b-f958-5365-b979-a3d1c0327651", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-506]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-506")], .matchExpressions = []}}}}, .addresses = ["10.10.50.6"], .span = ["testNode-50"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2ee6722d-49b3-5ed1-b72b-c5d7e14eee62"}, .name = "2ee6722d-49b3-5ed1-b72b-c5d7e14eee62", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-512]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-512")], .matchExpressions = []}}}}, .addresses = ["10.10.51.2"], .span = ["testNode-51"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "316ad574-20a6-5c63-a8c8-5129a4276436"}, .name = "316ad574-20a6-5c63-a8c8-5129a4276436", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-535]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-535")], .matchExpressions = []}}}}, .addresses = ["10.10.53.5"], .span = ["testNode-53"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3259be10-4eeb-5e63-882d-6c1fdc3935e7"}, .name = "3259be10-4eeb-5e63-882d-6c1fdc3935e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-507]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-507")], .matchExpressions = []}}}}, .addresses = ["10.10.50.7"], .span = ["testNode-50"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "335c9086-858a-5057-b7a5-ccbef3c6f0c3"}, .name = "335c9086-858a-5057-b7a5-ccbef3c6f0c3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-509]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-509")], .matchExpressions = []}}}}, .addresses = ["10.10.50.9"], .span = ["testNode-50"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "39abce59-27dc-542a-bff0-cdf854ea6f39"}, .name = "39abce59-27dc-542a-bff0-cdf854ea6f39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-529]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-529")], .matchExpressions = []}}}}, .addresses = ["10.10.52.9"], .span = ["testNode-52"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4f1a1b17-e151-5f3d-81e2-42c643e1d50f"}, .name = "4f1a1b17-e151-5f3d-81e2-42c643e1d50f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-530]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-530")], .matchExpressions = []}}}}, .addresses = ["10.10.53.0"], .span = ["testNode-52"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4f7cb4d0-d914-57f3-9718-0792de483bfe"}, .name = "4f7cb4d0-d914-57f3-9718-0792de483bfe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-528]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-528")], .matchExpressions = []}}}}, .addresses = ["10.10.52.8"], .span = ["testNode-52"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "51895ad2-3676-5db7-82b8-f6fdc1074715"}, .name = "51895ad2-3676-5db7-82b8-f6fdc1074715", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-521]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-521")], .matchExpressions = []}}}}, .addresses = ["10.10.52.1"], .span = ["testNode-52"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "57a3a70c-faf6-5dc2-b2b2-ae3619af8b96"}, .name = "57a3a70c-faf6-5dc2-b2b2-ae3619af8b96", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-511]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-511")], .matchExpressions = []}}}}, .addresses = ["10.10.51.1"], .span = ["testNode-51"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "62950c52-ab11-56fa-a3c5-a2d0750f9a31"}, .name = "62950c52-ab11-56fa-a3c5-a2d0750f9a31", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-532]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-532")], .matchExpressions = []}}}}, .addresses = ["10.10.53.2"], .span = ["testNode-53"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "662c35da-e73c-5b83-8481-5885bccbdab4"}, .name = "662c35da-e73c-5b83-8481-5885bccbdab4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-524]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-524")], .matchExpressions = []}}}}, .addresses = ["10.10.52.4"], .span = ["testNode-52"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "76f773ca-c0dd-5080-a26f-50cc5b3918dc"}, .name = "76f773ca-c0dd-5080-a26f-50cc5b3918dc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-519]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-519")], .matchExpressions = []}}}}, .addresses = ["10.10.51.9"], .span = ["testNode-51"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "77e761e1-e7bb-5871-8def-353def0cd43f"}, .name = "77e761e1-e7bb-5871-8def-353def0cd43f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-505]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-505")], .matchExpressions = []}}}}, .addresses = ["10.10.50.5"], .span = ["testNode-50"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "84933a89-3630-51b2-bfcb-fd7ea143e381"}, .name = "84933a89-3630-51b2-bfcb-fd7ea143e381", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-504]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-504")], .matchExpressions = []}}}}, .addresses = ["10.10.50.4"], .span = ["testNode-50"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8811b1f3-cbf6-5535-bb08-341f311c7f98"}, .name = "8811b1f3-cbf6-5535-bb08-341f311c7f98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-534]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-534")], .matchExpressions = []}}}}, .addresses = ["10.10.53.4"], .span = ["testNode-53"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8b224324-cd65-5c1f-adce-34db0042f1f4"}, .name = "8b224324-cd65-5c1f-adce-34db0042f1f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-527]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-527")], .matchExpressions = []}}}}, .addresses = ["10.10.52.7"], .span = ["testNode-52"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9031b885-51d3-5614-97ac-172b40cc9095"}, .name = "9031b885-51d3-5614-97ac-172b40cc9095", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-510]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-510")], .matchExpressions = []}}}}, .addresses = ["10.10.51.0"], .span = ["testNode-50"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "98b668bd-3598-55af-ab42-f60f22d1f711"}, .name = "98b668bd-3598-55af-ab42-f60f22d1f711", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-523]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-523")], .matchExpressions = []}}}}, .addresses = ["10.10.52.3"], .span = ["testNode-52"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "99285bff-06f9-5c5b-87a5-eb084e92b9de"}, .name = "99285bff-06f9-5c5b-87a5-eb084e92b9de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-514]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-514")], .matchExpressions = []}}}}, .addresses = ["10.10.51.4"], .span = ["testNode-51"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c9e1d53a-be59-5b99-84d2-b4e181bd7329"}, .name = "c9e1d53a-be59-5b99-84d2-b4e181bd7329", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-520]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-520")], .matchExpressions = []}}}}, .addresses = ["10.10.52.0"], .span = ["testNode-51"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cf731d97-846e-5fb2-8618-a320790d6d7a"}, .name = "cf731d97-846e-5fb2-8618-a320790d6d7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-522]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-522")], .matchExpressions = []}}}}, .addresses = ["10.10.52.2"], .span = ["testNode-52"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d6125509-8f88-551f-a8ba-b129aebca503"}, .name = "d6125509-8f88-551f-a8ba-b129aebca503", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-525]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-525")], .matchExpressions = []}}}}, .addresses = ["10.10.52.5"], .span = ["testNode-52"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e553a718-aaa9-5335-9db0-3031f9c891e3"}, .name = "e553a718-aaa9-5335-9db0-3031f9c891e3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-531]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-531")], .matchExpressions = []}}}}, .addresses = ["10.10.53.1"], .span = ["testNode-53"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ea0fd9fb-2cc4-5cbc-ad89-06eda65d0e63"}, .name = "ea0fd9fb-2cc4-5cbc-ad89-06eda65d0e63", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-533]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-533")], .matchExpressions = []}}}}, .addresses = ["10.10.53.3"], .span = ["testNode-53"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f3d2fbe0-bc42-55de-8f18-ac99d710c16a"}, .name = "f3d2fbe0-bc42-55de-8f18-ac99d710c16a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-508]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-508")], .matchExpressions = []}}}}, .addresses = ["10.10.50.8"], .span = ["testNode-50"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f4b3466f-1dc8-5c98-b96b-07802eec780c"}, .name = "f4b3466f-1dc8-5c98-b96b-07802eec780c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-526]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-526")], .matchExpressions = []}}}}, .addresses = ["10.10.52.6"], .span = ["testNode-52"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f52ee491-f23f-5dad-b0f9-01c46c122194"}, .name = "f52ee491-f23f-5dad-b0f9-01c46c122194", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-518]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-518")], .matchExpressions = []}}}}, .addresses = ["10.10.51.8"], .span = ["testNode-51"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0630f84f-81d1-5ee2-b98a-611177d87fb2"}, .name = "0630f84f-81d1-5ee2-b98a-611177d87fb2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-513]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-513")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-513", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "162513fa-bbef-51f4-af13-87b325aeb42c"}, .name = "162513fa-bbef-51f4-af13-87b325aeb42c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-515]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-515")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-515", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "164d5376-d8e2-55b0-bc31-79ce70eb932c"}, .name = "164d5376-d8e2-55b0-bc31-79ce70eb932c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-516]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-516")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-516", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "16e5c652-c9e8-5840-aed9-3048c557a20d"}, .name = "16e5c652-c9e8-5840-aed9-3048c557a20d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-517]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-517")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-517", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1bb1441b-f958-5365-b979-a3d1c0327651"}, .name = "1bb1441b-f958-5365-b979-a3d1c0327651", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-506]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-506")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-506", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2ee6722d-49b3-5ed1-b72b-c5d7e14eee62"}, .name = "2ee6722d-49b3-5ed1-b72b-c5d7e14eee62", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-512]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-512")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-512", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3259be10-4eeb-5e63-882d-6c1fdc3935e7"}, .name = "3259be10-4eeb-5e63-882d-6c1fdc3935e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-507]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-507")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-507", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "335c9086-858a-5057-b7a5-ccbef3c6f0c3"}, .name = "335c9086-858a-5057-b7a5-ccbef3c6f0c3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-509]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-509")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-509", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "39abce59-27dc-542a-bff0-cdf854ea6f39"}, .name = "39abce59-27dc-542a-bff0-cdf854ea6f39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-529]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-529")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-529", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4f1a1b17-e151-5f3d-81e2-42c643e1d50f"}, .name = "4f1a1b17-e151-5f3d-81e2-42c643e1d50f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-530]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-530")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-530", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4f7cb4d0-d914-57f3-9718-0792de483bfe"}, .name = "4f7cb4d0-d914-57f3-9718-0792de483bfe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-528]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-528")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-528", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "51895ad2-3676-5db7-82b8-f6fdc1074715"}, .name = "51895ad2-3676-5db7-82b8-f6fdc1074715", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-521]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-521")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-521", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "57a3a70c-faf6-5dc2-b2b2-ae3619af8b96"}, .name = "57a3a70c-faf6-5dc2-b2b2-ae3619af8b96", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-511]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-511")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-511", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "62950c52-ab11-56fa-a3c5-a2d0750f9a31"}, .name = "62950c52-ab11-56fa-a3c5-a2d0750f9a31", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-532]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-532")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-532", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "662c35da-e73c-5b83-8481-5885bccbdab4"}, .name = "662c35da-e73c-5b83-8481-5885bccbdab4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-524]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-524")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-524", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "76f773ca-c0dd-5080-a26f-50cc5b3918dc"}, .name = "76f773ca-c0dd-5080-a26f-50cc5b3918dc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-519]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-519")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-519", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "77e761e1-e7bb-5871-8def-353def0cd43f"}, .name = "77e761e1-e7bb-5871-8def-353def0cd43f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-505]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-505")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-505", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "84933a89-3630-51b2-bfcb-fd7ea143e381"}, .name = "84933a89-3630-51b2-bfcb-fd7ea143e381", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-504]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-504")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-504", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8811b1f3-cbf6-5535-bb08-341f311c7f98"}, .name = "8811b1f3-cbf6-5535-bb08-341f311c7f98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-534]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-534")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-534", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8b224324-cd65-5c1f-adce-34db0042f1f4"}, .name = "8b224324-cd65-5c1f-adce-34db0042f1f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-527]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-527")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-527", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9031b885-51d3-5614-97ac-172b40cc9095"}, .name = "9031b885-51d3-5614-97ac-172b40cc9095", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-510]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-510")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-510", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "96650dbe-ea2a-56ce-a24d-89a33aab9e53"}, .name = "96650dbe-ea2a-56ce-a24d-89a33aab9e53", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-503]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-503")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-503", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "98b668bd-3598-55af-ab42-f60f22d1f711"}, .name = "98b668bd-3598-55af-ab42-f60f22d1f711", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-523]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-523")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-523", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "99285bff-06f9-5c5b-87a5-eb084e92b9de"}, .name = "99285bff-06f9-5c5b-87a5-eb084e92b9de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-514]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-514")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-514", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c9e1d53a-be59-5b99-84d2-b4e181bd7329"}, .name = "c9e1d53a-be59-5b99-84d2-b4e181bd7329", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-520]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-520")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-520", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cf731d97-846e-5fb2-8618-a320790d6d7a"}, .name = "cf731d97-846e-5fb2-8618-a320790d6d7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-522]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-522")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-522", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d6125509-8f88-551f-a8ba-b129aebca503"}, .name = "d6125509-8f88-551f-a8ba-b129aebca503", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-525]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-525")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-525", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e553a718-aaa9-5335-9db0-3031f9c891e3"}, .name = "e553a718-aaa9-5335-9db0-3031f9c891e3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-531]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-531")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-531", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ea0fd9fb-2cc4-5cbc-ad89-06eda65d0e63"}, .name = "ea0fd9fb-2cc4-5cbc-ad89-06eda65d0e63", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-533]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-533")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-533", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f3d2fbe0-bc42-55de-8f18-ac99d710c16a"}, .name = "f3d2fbe0-bc42-55de-8f18-ac99d710c16a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-508]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-508")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-508", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f4b3466f-1dc8-5c98-b96b-07802eec780c"}, .name = "f4b3466f-1dc8-5c98-b96b-07802eec780c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-526]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-526")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-526", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f52ee491-f23f-5dad-b0f9-01c46c122194"}, .name = "f52ee491-f23f-5dad-b0f9-01c46c122194", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-518]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-518")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-518", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-503"}, .name = "testNP-503", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["84933a89-3630-51b2-bfcb-fd7ea143e381"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["96650dbe-ea2a-56ce-a24d-89a33aab9e53"]}, .span = ["testNode-50"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-504"}, .name = "testNP-504", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["77e761e1-e7bb-5871-8def-353def0cd43f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["84933a89-3630-51b2-bfcb-fd7ea143e381"]}, .span = ["testNode-50"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-505"}, .name = "testNP-505", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1bb1441b-f958-5365-b979-a3d1c0327651"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["77e761e1-e7bb-5871-8def-353def0cd43f"]}, .span = ["testNode-50"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-506"}, .name = "testNP-506", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3259be10-4eeb-5e63-882d-6c1fdc3935e7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1bb1441b-f958-5365-b979-a3d1c0327651"]}, .span = ["testNode-50"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-507"}, .name = "testNP-507", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f3d2fbe0-bc42-55de-8f18-ac99d710c16a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3259be10-4eeb-5e63-882d-6c1fdc3935e7"]}, .span = ["testNode-50"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-508"}, .name = "testNP-508", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["335c9086-858a-5057-b7a5-ccbef3c6f0c3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f3d2fbe0-bc42-55de-8f18-ac99d710c16a"]}, .span = ["testNode-50"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-509"}, .name = "testNP-509", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9031b885-51d3-5614-97ac-172b40cc9095"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["335c9086-858a-5057-b7a5-ccbef3c6f0c3"]}, .span = ["testNode-50"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-510"}, .name = "testNP-510", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["57a3a70c-faf6-5dc2-b2b2-ae3619af8b96"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9031b885-51d3-5614-97ac-172b40cc9095"]}, .span = ["testNode-51"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-511"}, .name = "testNP-511", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2ee6722d-49b3-5ed1-b72b-c5d7e14eee62"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["57a3a70c-faf6-5dc2-b2b2-ae3619af8b96"]}, .span = ["testNode-51"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-512"}, .name = "testNP-512", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0630f84f-81d1-5ee2-b98a-611177d87fb2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2ee6722d-49b3-5ed1-b72b-c5d7e14eee62"]}, .span = ["testNode-51"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-513"}, .name = "testNP-513", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["99285bff-06f9-5c5b-87a5-eb084e92b9de"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0630f84f-81d1-5ee2-b98a-611177d87fb2"]}, .span = ["testNode-51"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-514"}, .name = "testNP-514", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["162513fa-bbef-51f4-af13-87b325aeb42c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["99285bff-06f9-5c5b-87a5-eb084e92b9de"]}, .span = ["testNode-51"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-515"}, .name = "testNP-515", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["164d5376-d8e2-55b0-bc31-79ce70eb932c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["162513fa-bbef-51f4-af13-87b325aeb42c"]}, .span = ["testNode-51"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-516"}, .name = "testNP-516", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["16e5c652-c9e8-5840-aed9-3048c557a20d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["164d5376-d8e2-55b0-bc31-79ce70eb932c"]}, .span = ["testNode-51"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-517"}, .name = "testNP-517", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f52ee491-f23f-5dad-b0f9-01c46c122194"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["16e5c652-c9e8-5840-aed9-3048c557a20d"]}, .span = ["testNode-51"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-518"}, .name = "testNP-518", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["76f773ca-c0dd-5080-a26f-50cc5b3918dc"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f52ee491-f23f-5dad-b0f9-01c46c122194"]}, .span = ["testNode-51"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-519"}, .name = "testNP-519", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c9e1d53a-be59-5b99-84d2-b4e181bd7329"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["76f773ca-c0dd-5080-a26f-50cc5b3918dc"]}, .span = ["testNode-51"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-520"}, .name = "testNP-520", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["51895ad2-3676-5db7-82b8-f6fdc1074715"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c9e1d53a-be59-5b99-84d2-b4e181bd7329"]}, .span = ["testNode-52"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-521"}, .name = "testNP-521", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cf731d97-846e-5fb2-8618-a320790d6d7a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["51895ad2-3676-5db7-82b8-f6fdc1074715"]}, .span = ["testNode-52"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-522"}, .name = "testNP-522", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["98b668bd-3598-55af-ab42-f60f22d1f711"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cf731d97-846e-5fb2-8618-a320790d6d7a"]}, .span = ["testNode-52"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-523"}, .name = "testNP-523", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["662c35da-e73c-5b83-8481-5885bccbdab4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["98b668bd-3598-55af-ab42-f60f22d1f711"]}, .span = ["testNode-52"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-524"}, .name = "testNP-524", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d6125509-8f88-551f-a8ba-b129aebca503"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["662c35da-e73c-5b83-8481-5885bccbdab4"]}, .span = ["testNode-52"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-525"}, .name = "testNP-525", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f4b3466f-1dc8-5c98-b96b-07802eec780c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d6125509-8f88-551f-a8ba-b129aebca503"]}, .span = ["testNode-52"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-526"}, .name = "testNP-526", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8b224324-cd65-5c1f-adce-34db0042f1f4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f4b3466f-1dc8-5c98-b96b-07802eec780c"]}, .span = ["testNode-52"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-527"}, .name = "testNP-527", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4f7cb4d0-d914-57f3-9718-0792de483bfe"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8b224324-cd65-5c1f-adce-34db0042f1f4"]}, .span = ["testNode-52"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-528"}, .name = "testNP-528", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["39abce59-27dc-542a-bff0-cdf854ea6f39"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4f7cb4d0-d914-57f3-9718-0792de483bfe"]}, .span = ["testNode-52"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-529"}, .name = "testNP-529", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4f1a1b17-e151-5f3d-81e2-42c643e1d50f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["39abce59-27dc-542a-bff0-cdf854ea6f39"]}, .span = ["testNode-52"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-530"}, .name = "testNP-530", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e553a718-aaa9-5335-9db0-3031f9c891e3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4f1a1b17-e151-5f3d-81e2-42c643e1d50f"]}, .span = ["testNode-53"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-531"}, .name = "testNP-531", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["62950c52-ab11-56fa-a3c5-a2d0750f9a31"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e553a718-aaa9-5335-9db0-3031f9c891e3"]}, .span = ["testNode-53"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-532"}, .name = "testNP-532", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ea0fd9fb-2cc4-5cbc-ad89-06eda65d0e63"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["62950c52-ab11-56fa-a3c5-a2d0750f9a31"]}, .span = ["testNode-53"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-533"}, .name = "testNP-533", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8811b1f3-cbf6-5535-bb08-341f311c7f98"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ea0fd9fb-2cc4-5cbc-ad89-06eda65d0e63"]}, .span = ["testNode-53"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-534"}, .name = "testNP-534", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["316ad574-20a6-5c63-a8c8-5129a4276436"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8811b1f3-cbf6-5535-bb08-341f311c7f98"]}, .span = ["testNode-53"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "02c8515c-8244-50ed-9651-03b5154714f4"}, .name = "02c8515c-8244-50ed-9651-03b5154714f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-550]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-550")], .matchExpressions = []}}}}, .addresses = ["10.10.55.0"], .span = ["testNode-54"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0ab512da-56cf-54a2-8275-36b7bde5d0fd"}, .name = "0ab512da-56cf-54a2-8275-36b7bde5d0fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-543]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-543")], .matchExpressions = []}}}}, .addresses = ["10.10.54.3"], .span = ["testNode-54"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2dedb007-922f-5045-9aaa-d7e8a1a4d0c9"}, .name = "2dedb007-922f-5045-9aaa-d7e8a1a4d0c9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-560]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-560")], .matchExpressions = []}}}}, .addresses = ["10.10.56.0"], .span = ["testNode-55"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "400b9c51-1e3a-5f72-a91c-28ccab7ed259"}, .name = "400b9c51-1e3a-5f72-a91c-28ccab7ed259", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-545]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-545")], .matchExpressions = []}}}}, .addresses = ["10.10.54.5"], .span = ["testNode-54"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "490a4d66-a915-596d-a7ae-7ed38cffc090"}, .name = "490a4d66-a915-596d-a7ae-7ed38cffc090", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-558]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-558")], .matchExpressions = []}}}}, .addresses = ["10.10.55.8"], .span = ["testNode-55"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5705f71f-5a00-541c-a258-a72e7d37519f"}, .name = "5705f71f-5a00-541c-a258-a72e7d37519f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-554]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-554")], .matchExpressions = []}}}}, .addresses = ["10.10.55.4"], .span = ["testNode-55"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5887aa90-0cc3-59bb-ab3c-6d2a8ccf720a"}, .name = "5887aa90-0cc3-59bb-ab3c-6d2a8ccf720a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-539]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-539")], .matchExpressions = []}}}}, .addresses = ["10.10.53.9"], .span = ["testNode-53"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "58eaddc2-81dd-5ebd-8992-1649ef90b1a7"}, .name = "58eaddc2-81dd-5ebd-8992-1649ef90b1a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-557]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-557")], .matchExpressions = []}}}}, .addresses = ["10.10.55.7"], .span = ["testNode-55"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "646df3b3-aff0-525e-a824-9731c2582cfd"}, .name = "646df3b3-aff0-525e-a824-9731c2582cfd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-565]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-565")], .matchExpressions = []}}}}, .addresses = ["10.10.56.5"], .span = ["testNode-56"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6ca5a44c-4e85-5f8f-b3c5-fc822a51e62b"}, .name = "6ca5a44c-4e85-5f8f-b3c5-fc822a51e62b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-564]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-564")], .matchExpressions = []}}}}, .addresses = ["10.10.56.4"], .span = ["testNode-56"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6e844261-161e-5648-8581-1a99a89baea2"}, .name = "6e844261-161e-5648-8581-1a99a89baea2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-546]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-546")], .matchExpressions = []}}}}, .addresses = ["10.10.54.6"], .span = ["testNode-54"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6eae2776-d76e-5a67-812e-d867d79c9439"}, .name = "6eae2776-d76e-5a67-812e-d867d79c9439", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-556]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-556")], .matchExpressions = []}}}}, .addresses = ["10.10.55.6"], .span = ["testNode-55"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "82971d91-1775-5306-9f41-a64faadf86da"}, .name = "82971d91-1775-5306-9f41-a64faadf86da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-555]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-555")], .matchExpressions = []}}}}, .addresses = ["10.10.55.5"], .span = ["testNode-55"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "99efebbe-7346-5db8-a34f-cc605cfbb01b"}, .name = "99efebbe-7346-5db8-a34f-cc605cfbb01b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-562]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-562")], .matchExpressions = []}}}}, .addresses = ["10.10.56.2"], .span = ["testNode-56"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9b481c1f-75ae-5a8f-a340-8a8d48694c71"}, .name = "9b481c1f-75ae-5a8f-a340-8a8d48694c71", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-538]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-538")], .matchExpressions = []}}}}, .addresses = ["10.10.53.8"], .span = ["testNode-53"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9c4807fe-166e-50bd-9d74-a161e6cf88c1"}, .name = "9c4807fe-166e-50bd-9d74-a161e6cf88c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-552]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-552")], .matchExpressions = []}}}}, .addresses = ["10.10.55.2"], .span = ["testNode-55"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a0e230b2-de64-59a0-bd7b-24d543574784"}, .name = "a0e230b2-de64-59a0-bd7b-24d543574784", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-548]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-548")], .matchExpressions = []}}}}, .addresses = ["10.10.54.8"], .span = ["testNode-54"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a30b0366-56be-5cfe-b533-66bb0e45dbbb"}, .name = "a30b0366-56be-5cfe-b533-66bb0e45dbbb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-563]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-563")], .matchExpressions = []}}}}, .addresses = ["10.10.56.3"], .span = ["testNode-56"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a470f1e5-9041-5f5e-b479-f8ba6a4b0484"}, .name = "a470f1e5-9041-5f5e-b479-f8ba6a4b0484", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-544]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-544")], .matchExpressions = []}}}}, .addresses = ["10.10.54.4"], .span = ["testNode-54"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "adf1be1e-d6e3-5749-bb20-4c2ef2f99534"}, .name = "adf1be1e-d6e3-5749-bb20-4c2ef2f99534", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-553]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-553")], .matchExpressions = []}}}}, .addresses = ["10.10.55.3"], .span = ["testNode-55"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c31afc60-cc5f-544f-9901-094ce7345a02"}, .name = "c31afc60-cc5f-544f-9901-094ce7345a02", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-561]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-561")], .matchExpressions = []}}}}, .addresses = ["10.10.56.1"], .span = ["testNode-56"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c347e7e7-7c4c-5356-a46a-409517823dec"}, .name = "c347e7e7-7c4c-5356-a46a-409517823dec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-559]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-559")], .matchExpressions = []}}}}, .addresses = ["10.10.55.9"], .span = ["testNode-55"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c7cc4758-0683-5510-a151-4927dba0eea0"}, .name = "c7cc4758-0683-5510-a151-4927dba0eea0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-541]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-541")], .matchExpressions = []}}}}, .addresses = ["10.10.54.1"], .span = ["testNode-54"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ce728d86-0919-52c1-aff3-0596a43a5ea8"}, .name = "ce728d86-0919-52c1-aff3-0596a43a5ea8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-540]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-540")], .matchExpressions = []}}}}, .addresses = ["10.10.54.0"], .span = ["testNode-53"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d5f192df-b467-5316-987b-776fc448052a"}, .name = "d5f192df-b467-5316-987b-776fc448052a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-549]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-549")], .matchExpressions = []}}}}, .addresses = ["10.10.54.9"], .span = ["testNode-54"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "db7789cc-3aa6-5c59-8197-c988f73c30ae"}, .name = "db7789cc-3aa6-5c59-8197-c988f73c30ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-547]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-547")], .matchExpressions = []}}}}, .addresses = ["10.10.54.7"], .span = ["testNode-54"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e05c896a-0105-56e7-b8b4-8d9a6228a1c4"}, .name = "e05c896a-0105-56e7-b8b4-8d9a6228a1c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-537]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-537")], .matchExpressions = []}}}}, .addresses = ["10.10.53.7"], .span = ["testNode-53"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e05c8b78-2c02-507f-9968-65798f9470aa"}, .name = "e05c8b78-2c02-507f-9968-65798f9470aa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-551]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-551")], .matchExpressions = []}}}}, .addresses = ["10.10.55.1"], .span = ["testNode-55"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e8ac4162-f9a2-5e4d-8f31-6a4959bbf2ad"}, .name = "e8ac4162-f9a2-5e4d-8f31-6a4959bbf2ad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-567]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-567")], .matchExpressions = []}}}}, .addresses = ["10.10.56.7"], .span = ["testNode-56"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ecf47676-066f-5d50-b4c2-dfaedfa02587"}, .name = "ecf47676-066f-5d50-b4c2-dfaedfa02587", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-536]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-536")], .matchExpressions = []}}}}, .addresses = ["10.10.53.6"], .span = ["testNode-53"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f777dd5d-64c1-5510-afc9-350654fda35e"}, .name = "f777dd5d-64c1-5510-afc9-350654fda35e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-542]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-542")], .matchExpressions = []}}}}, .addresses = ["10.10.54.2"], .span = ["testNode-54"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fa5d70a6-9fe1-5bc3-ab15-43cc208473c1"}, .name = "fa5d70a6-9fe1-5bc3-ab15-43cc208473c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-566]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-566")], .matchExpressions = []}}}}, .addresses = ["10.10.56.6"], .span = ["testNode-56"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "02c8515c-8244-50ed-9651-03b5154714f4"}, .name = "02c8515c-8244-50ed-9651-03b5154714f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-550]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-550")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-550", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0ab512da-56cf-54a2-8275-36b7bde5d0fd"}, .name = "0ab512da-56cf-54a2-8275-36b7bde5d0fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-543]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-543")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-543", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2dedb007-922f-5045-9aaa-d7e8a1a4d0c9"}, .name = "2dedb007-922f-5045-9aaa-d7e8a1a4d0c9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-560]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-560")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-560", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "316ad574-20a6-5c63-a8c8-5129a4276436"}, .name = "316ad574-20a6-5c63-a8c8-5129a4276436", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-535]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-535")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-535", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "400b9c51-1e3a-5f72-a91c-28ccab7ed259"}, .name = "400b9c51-1e3a-5f72-a91c-28ccab7ed259", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-545]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-545")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-545", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "490a4d66-a915-596d-a7ae-7ed38cffc090"}, .name = "490a4d66-a915-596d-a7ae-7ed38cffc090", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-558]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-558")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-558", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5705f71f-5a00-541c-a258-a72e7d37519f"}, .name = "5705f71f-5a00-541c-a258-a72e7d37519f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-554]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-554")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-554", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5887aa90-0cc3-59bb-ab3c-6d2a8ccf720a"}, .name = "5887aa90-0cc3-59bb-ab3c-6d2a8ccf720a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-539]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-539")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-539", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "58eaddc2-81dd-5ebd-8992-1649ef90b1a7"}, .name = "58eaddc2-81dd-5ebd-8992-1649ef90b1a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-557]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-557")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-557", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "646df3b3-aff0-525e-a824-9731c2582cfd"}, .name = "646df3b3-aff0-525e-a824-9731c2582cfd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-565]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-565")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-565", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6ca5a44c-4e85-5f8f-b3c5-fc822a51e62b"}, .name = "6ca5a44c-4e85-5f8f-b3c5-fc822a51e62b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-564]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-564")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-564", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6e844261-161e-5648-8581-1a99a89baea2"}, .name = "6e844261-161e-5648-8581-1a99a89baea2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-546]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-546")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-546", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6eae2776-d76e-5a67-812e-d867d79c9439"}, .name = "6eae2776-d76e-5a67-812e-d867d79c9439", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-556]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-556")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-556", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "82971d91-1775-5306-9f41-a64faadf86da"}, .name = "82971d91-1775-5306-9f41-a64faadf86da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-555]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-555")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-555", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "99efebbe-7346-5db8-a34f-cc605cfbb01b"}, .name = "99efebbe-7346-5db8-a34f-cc605cfbb01b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-562]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-562")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-562", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9b481c1f-75ae-5a8f-a340-8a8d48694c71"}, .name = "9b481c1f-75ae-5a8f-a340-8a8d48694c71", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-538]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-538")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-538", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9c4807fe-166e-50bd-9d74-a161e6cf88c1"}, .name = "9c4807fe-166e-50bd-9d74-a161e6cf88c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-552]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-552")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-552", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a0e230b2-de64-59a0-bd7b-24d543574784"}, .name = "a0e230b2-de64-59a0-bd7b-24d543574784", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-548]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-548")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-548", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a30b0366-56be-5cfe-b533-66bb0e45dbbb"}, .name = "a30b0366-56be-5cfe-b533-66bb0e45dbbb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-563]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-563")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-563", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a470f1e5-9041-5f5e-b479-f8ba6a4b0484"}, .name = "a470f1e5-9041-5f5e-b479-f8ba6a4b0484", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-544]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-544")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-544", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "adf1be1e-d6e3-5749-bb20-4c2ef2f99534"}, .name = "adf1be1e-d6e3-5749-bb20-4c2ef2f99534", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-553]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-553")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-553", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c31afc60-cc5f-544f-9901-094ce7345a02"}, .name = "c31afc60-cc5f-544f-9901-094ce7345a02", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-561]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-561")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-561", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c347e7e7-7c4c-5356-a46a-409517823dec"}, .name = "c347e7e7-7c4c-5356-a46a-409517823dec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-559]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-559")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-559", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c7cc4758-0683-5510-a151-4927dba0eea0"}, .name = "c7cc4758-0683-5510-a151-4927dba0eea0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-541]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-541")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-541", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ce728d86-0919-52c1-aff3-0596a43a5ea8"}, .name = "ce728d86-0919-52c1-aff3-0596a43a5ea8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-540]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-540")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-540", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d5f192df-b467-5316-987b-776fc448052a"}, .name = "d5f192df-b467-5316-987b-776fc448052a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-549]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-549")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-549", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "db7789cc-3aa6-5c59-8197-c988f73c30ae"}, .name = "db7789cc-3aa6-5c59-8197-c988f73c30ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-547]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-547")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-547", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e05c896a-0105-56e7-b8b4-8d9a6228a1c4"}, .name = "e05c896a-0105-56e7-b8b4-8d9a6228a1c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-537]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-537")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-537", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e05c8b78-2c02-507f-9968-65798f9470aa"}, .name = "e05c8b78-2c02-507f-9968-65798f9470aa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-551]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-551")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-551", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ecf47676-066f-5d50-b4c2-dfaedfa02587"}, .name = "ecf47676-066f-5d50-b4c2-dfaedfa02587", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-536]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-536")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-536", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f777dd5d-64c1-5510-afc9-350654fda35e"}, .name = "f777dd5d-64c1-5510-afc9-350654fda35e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-542]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-542")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-542", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fa5d70a6-9fe1-5bc3-ab15-43cc208473c1"}, .name = "fa5d70a6-9fe1-5bc3-ab15-43cc208473c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-566]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-566")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-566", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-535"}, .name = "testNP-535", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ecf47676-066f-5d50-b4c2-dfaedfa02587"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["316ad574-20a6-5c63-a8c8-5129a4276436"]}, .span = ["testNode-53"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-536"}, .name = "testNP-536", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e05c896a-0105-56e7-b8b4-8d9a6228a1c4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ecf47676-066f-5d50-b4c2-dfaedfa02587"]}, .span = ["testNode-53"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-537"}, .name = "testNP-537", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9b481c1f-75ae-5a8f-a340-8a8d48694c71"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e05c896a-0105-56e7-b8b4-8d9a6228a1c4"]}, .span = ["testNode-53"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-538"}, .name = "testNP-538", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5887aa90-0cc3-59bb-ab3c-6d2a8ccf720a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9b481c1f-75ae-5a8f-a340-8a8d48694c71"]}, .span = ["testNode-53"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-539"}, .name = "testNP-539", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ce728d86-0919-52c1-aff3-0596a43a5ea8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5887aa90-0cc3-59bb-ab3c-6d2a8ccf720a"]}, .span = ["testNode-53"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-540"}, .name = "testNP-540", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c7cc4758-0683-5510-a151-4927dba0eea0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ce728d86-0919-52c1-aff3-0596a43a5ea8"]}, .span = ["testNode-54"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-541"}, .name = "testNP-541", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f777dd5d-64c1-5510-afc9-350654fda35e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c7cc4758-0683-5510-a151-4927dba0eea0"]}, .span = ["testNode-54"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-542"}, .name = "testNP-542", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0ab512da-56cf-54a2-8275-36b7bde5d0fd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f777dd5d-64c1-5510-afc9-350654fda35e"]}, .span = ["testNode-54"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-543"}, .name = "testNP-543", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a470f1e5-9041-5f5e-b479-f8ba6a4b0484"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0ab512da-56cf-54a2-8275-36b7bde5d0fd"]}, .span = ["testNode-54"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-544"}, .name = "testNP-544", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["400b9c51-1e3a-5f72-a91c-28ccab7ed259"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a470f1e5-9041-5f5e-b479-f8ba6a4b0484"]}, .span = ["testNode-54"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-545"}, .name = "testNP-545", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6e844261-161e-5648-8581-1a99a89baea2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["400b9c51-1e3a-5f72-a91c-28ccab7ed259"]}, .span = ["testNode-54"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-546"}, .name = "testNP-546", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["db7789cc-3aa6-5c59-8197-c988f73c30ae"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6e844261-161e-5648-8581-1a99a89baea2"]}, .span = ["testNode-54"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-547"}, .name = "testNP-547", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a0e230b2-de64-59a0-bd7b-24d543574784"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["db7789cc-3aa6-5c59-8197-c988f73c30ae"]}, .span = ["testNode-54"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-548"}, .name = "testNP-548", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d5f192df-b467-5316-987b-776fc448052a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a0e230b2-de64-59a0-bd7b-24d543574784"]}, .span = ["testNode-54"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-549"}, .name = "testNP-549", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["02c8515c-8244-50ed-9651-03b5154714f4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d5f192df-b467-5316-987b-776fc448052a"]}, .span = ["testNode-54"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-550"}, .name = "testNP-550", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e05c8b78-2c02-507f-9968-65798f9470aa"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["02c8515c-8244-50ed-9651-03b5154714f4"]}, .span = ["testNode-55"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-551"}, .name = "testNP-551", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9c4807fe-166e-50bd-9d74-a161e6cf88c1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e05c8b78-2c02-507f-9968-65798f9470aa"]}, .span = ["testNode-55"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-552"}, .name = "testNP-552", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["adf1be1e-d6e3-5749-bb20-4c2ef2f99534"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9c4807fe-166e-50bd-9d74-a161e6cf88c1"]}, .span = ["testNode-55"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-553"}, .name = "testNP-553", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5705f71f-5a00-541c-a258-a72e7d37519f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["adf1be1e-d6e3-5749-bb20-4c2ef2f99534"]}, .span = ["testNode-55"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-554"}, .name = "testNP-554", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["82971d91-1775-5306-9f41-a64faadf86da"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5705f71f-5a00-541c-a258-a72e7d37519f"]}, .span = ["testNode-55"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-555"}, .name = "testNP-555", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6eae2776-d76e-5a67-812e-d867d79c9439"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["82971d91-1775-5306-9f41-a64faadf86da"]}, .span = ["testNode-55"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-556"}, .name = "testNP-556", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["58eaddc2-81dd-5ebd-8992-1649ef90b1a7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6eae2776-d76e-5a67-812e-d867d79c9439"]}, .span = ["testNode-55"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-557"}, .name = "testNP-557", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["490a4d66-a915-596d-a7ae-7ed38cffc090"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["58eaddc2-81dd-5ebd-8992-1649ef90b1a7"]}, .span = ["testNode-55"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-558"}, .name = "testNP-558", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c347e7e7-7c4c-5356-a46a-409517823dec"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["490a4d66-a915-596d-a7ae-7ed38cffc090"]}, .span = ["testNode-55"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-559"}, .name = "testNP-559", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2dedb007-922f-5045-9aaa-d7e8a1a4d0c9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c347e7e7-7c4c-5356-a46a-409517823dec"]}, .span = ["testNode-55"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-560"}, .name = "testNP-560", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c31afc60-cc5f-544f-9901-094ce7345a02"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2dedb007-922f-5045-9aaa-d7e8a1a4d0c9"]}, .span = ["testNode-56"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-561"}, .name = "testNP-561", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["99efebbe-7346-5db8-a34f-cc605cfbb01b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c31afc60-cc5f-544f-9901-094ce7345a02"]}, .span = ["testNode-56"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-562"}, .name = "testNP-562", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a30b0366-56be-5cfe-b533-66bb0e45dbbb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["99efebbe-7346-5db8-a34f-cc605cfbb01b"]}, .span = ["testNode-56"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-563"}, .name = "testNP-563", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6ca5a44c-4e85-5f8f-b3c5-fc822a51e62b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a30b0366-56be-5cfe-b533-66bb0e45dbbb"]}, .span = ["testNode-56"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-564"}, .name = "testNP-564", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["646df3b3-aff0-525e-a824-9731c2582cfd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6ca5a44c-4e85-5f8f-b3c5-fc822a51e62b"]}, .span = ["testNode-56"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-565"}, .name = "testNP-565", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fa5d70a6-9fe1-5bc3-ab15-43cc208473c1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["646df3b3-aff0-525e-a824-9731c2582cfd"]}, .span = ["testNode-56"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-566"}, .name = "testNP-566", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e8ac4162-f9a2-5e4d-8f31-6a4959bbf2ad"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fa5d70a6-9fe1-5bc3-ab15-43cc208473c1"]}, .span = ["testNode-56"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "099f8ddf-8553-5ff2-85e0-aa9338224153"}, .name = "099f8ddf-8553-5ff2-85e0-aa9338224153", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-585]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-585")], .matchExpressions = []}}}}, .addresses = ["10.10.58.5"], .span = ["testNode-58"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1cf0dc5a-4a8a-5d80-94a3-7fb7c7cc6253"}, .name = "1cf0dc5a-4a8a-5d80-94a3-7fb7c7cc6253", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-573]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-573")], .matchExpressions = []}}}}, .addresses = ["10.10.57.3"], .span = ["testNode-57"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "245404c7-f061-5121-a887-abc232e6f16f"}, .name = "245404c7-f061-5121-a887-abc232e6f16f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-572]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-572")], .matchExpressions = []}}}}, .addresses = ["10.10.57.2"], .span = ["testNode-57"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2b8a71ae-ff36-5b18-b966-f75583911850"}, .name = "2b8a71ae-ff36-5b18-b966-f75583911850", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-599]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-599")], .matchExpressions = []}}}}, .addresses = ["10.10.59.9"], .span = ["testNode-59"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "33de27a1-45a9-599d-b44f-2541f2123572"}, .name = "33de27a1-45a9-599d-b44f-2541f2123572", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-590]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-590")], .matchExpressions = []}}}}, .addresses = ["10.10.59.0"], .span = ["testNode-58"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3479fe87-45fc-5a1f-a6ed-48e3b2b85ebb"}, .name = "3479fe87-45fc-5a1f-a6ed-48e3b2b85ebb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-596]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-596")], .matchExpressions = []}}}}, .addresses = ["10.10.59.6"], .span = ["testNode-59"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3d153d2a-8236-57fe-9f55-0a6981fbc71d"}, .name = "3d153d2a-8236-57fe-9f55-0a6981fbc71d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-583]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-583")], .matchExpressions = []}}}}, .addresses = ["10.10.58.3"], .span = ["testNode-58"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4342488b-24e4-5281-ac4e-9a826ff695ac"}, .name = "4342488b-24e4-5281-ac4e-9a826ff695ac", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-570]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-570")], .matchExpressions = []}}}}, .addresses = ["10.10.57.0"], .span = ["testNode-56"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4df50081-ec02-51c2-89bc-4b2d09f3b12a"}, .name = "4df50081-ec02-51c2-89bc-4b2d09f3b12a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-587]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-587")], .matchExpressions = []}}}}, .addresses = ["10.10.58.7"], .span = ["testNode-58"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "53124661-5afa-515e-bee1-2294801f9f1d"}, .name = "53124661-5afa-515e-bee1-2294801f9f1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-589]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-589")], .matchExpressions = []}}}}, .addresses = ["10.10.58.9"], .span = ["testNode-58"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "56dadaa1-66ab-5788-a69d-5635c68167cb"}, .name = "56dadaa1-66ab-5788-a69d-5635c68167cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-586]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-586")], .matchExpressions = []}}}}, .addresses = ["10.10.58.6"], .span = ["testNode-58"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5864a261-4f19-513e-85e0-5dfcdeef0a47"}, .name = "5864a261-4f19-513e-85e0-5dfcdeef0a47", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-591]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-591")], .matchExpressions = []}}}}, .addresses = ["10.10.59.1"], .span = ["testNode-59"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6c8f0a2d-1aed-56d3-96a8-d20710d18944"}, .name = "6c8f0a2d-1aed-56d3-96a8-d20710d18944", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-579]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-579")], .matchExpressions = []}}}}, .addresses = ["10.10.57.9"], .span = ["testNode-57"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6f26868b-e151-53fe-8363-f0173a7a6fe3"}, .name = "6f26868b-e151-53fe-8363-f0173a7a6fe3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-568]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-568")], .matchExpressions = []}}}}, .addresses = ["10.10.56.8"], .span = ["testNode-56"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "73354c54-6761-5461-8e99-840b88a53d74"}, .name = "73354c54-6761-5461-8e99-840b88a53d74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-592]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-592")], .matchExpressions = []}}}}, .addresses = ["10.10.59.2"], .span = ["testNode-59"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7ac04e43-a1d5-50bd-a460-6454114278dd"}, .name = "7ac04e43-a1d5-50bd-a460-6454114278dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-584]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-584")], .matchExpressions = []}}}}, .addresses = ["10.10.58.4"], .span = ["testNode-58"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "83f98633-5003-5d41-b0bd-b1ca66d90a35"}, .name = "83f98633-5003-5d41-b0bd-b1ca66d90a35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-597]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-597")], .matchExpressions = []}}}}, .addresses = ["10.10.59.7"], .span = ["testNode-59"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8e74abbb-4837-55f7-8e55-32942e0143da"}, .name = "8e74abbb-4837-55f7-8e55-32942e0143da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-582]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-582")], .matchExpressions = []}}}}, .addresses = ["10.10.58.2"], .span = ["testNode-58"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "aa3c3321-b8e0-50df-b33d-d8f884352427"}, .name = "aa3c3321-b8e0-50df-b33d-d8f884352427", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-569]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-569")], .matchExpressions = []}}}}, .addresses = ["10.10.56.9"], .span = ["testNode-56"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b269eb41-fa9a-5b36-88af-8f4ded5be7f3"}, .name = "b269eb41-fa9a-5b36-88af-8f4ded5be7f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-580]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-580")], .matchExpressions = []}}}}, .addresses = ["10.10.58.0"], .span = ["testNode-57"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b4a35daa-fa37-533a-a8d4-8fcaabaec2a0"}, .name = "b4a35daa-fa37-533a-a8d4-8fcaabaec2a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-595]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-595")], .matchExpressions = []}}}}, .addresses = ["10.10.59.5"], .span = ["testNode-59"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b770e235-f827-5ea6-a3b2-26c46824612f"}, .name = "b770e235-f827-5ea6-a3b2-26c46824612f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-575]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-575")], .matchExpressions = []}}}}, .addresses = ["10.10.57.5"], .span = ["testNode-57"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d2dba445-8178-52d9-b2ea-643e9ad3a292"}, .name = "d2dba445-8178-52d9-b2ea-643e9ad3a292", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-571]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-571")], .matchExpressions = []}}}}, .addresses = ["10.10.57.1"], .span = ["testNode-57"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dbee061b-60f2-5706-af2c-133453c9d22f"}, .name = "dbee061b-60f2-5706-af2c-133453c9d22f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-588]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-588")], .matchExpressions = []}}}}, .addresses = ["10.10.58.8"], .span = ["testNode-58"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e2eb2f56-1e75-552f-84a8-c95307b832db"}, .name = "e2eb2f56-1e75-552f-84a8-c95307b832db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-594]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-594")], .matchExpressions = []}}}}, .addresses = ["10.10.59.4"], .span = ["testNode-59"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e510c09b-7e12-53f1-92ab-2d6841c874b2"}, .name = "e510c09b-7e12-53f1-92ab-2d6841c874b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-581]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-581")], .matchExpressions = []}}}}, .addresses = ["10.10.58.1"], .span = ["testNode-58"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e9e9b9fa-1e3e-5e36-9ca6-70e6d29706a2"}, .name = "e9e9b9fa-1e3e-5e36-9ca6-70e6d29706a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-577]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-577")], .matchExpressions = []}}}}, .addresses = ["10.10.57.7"], .span = ["testNode-57"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ebe1d5e9-8bc1-5833-94a0-afa68aa19eaa"}, .name = "ebe1d5e9-8bc1-5833-94a0-afa68aa19eaa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-598]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-598")], .matchExpressions = []}}}}, .addresses = ["10.10.59.8"], .span = ["testNode-59"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f06fa2c0-2851-5e5f-bb4f-bdaf807988b5"}, .name = "f06fa2c0-2851-5e5f-bb4f-bdaf807988b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-593]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-593")], .matchExpressions = []}}}}, .addresses = ["10.10.59.3"], .span = ["testNode-59"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f10c7a1d-217d-585a-bbac-662be29e6b3f"}, .name = "f10c7a1d-217d-585a-bbac-662be29e6b3f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-576]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-576")], .matchExpressions = []}}}}, .addresses = ["10.10.57.6"], .span = ["testNode-57"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f701013b-1ea7-5f11-9a3b-bc648357f16c"}, .name = "f701013b-1ea7-5f11-9a3b-bc648357f16c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-574]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-574")], .matchExpressions = []}}}}, .addresses = ["10.10.57.4"], .span = ["testNode-57"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fea72ce8-ba96-560b-bf06-c2f6abcbe40f"}, .name = "fea72ce8-ba96-560b-bf06-c2f6abcbe40f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-578]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-578")], .matchExpressions = []}}}}, .addresses = ["10.10.57.8"], .span = ["testNode-57"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "099f8ddf-8553-5ff2-85e0-aa9338224153"}, .name = "099f8ddf-8553-5ff2-85e0-aa9338224153", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-585]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-585")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-585", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1cf0dc5a-4a8a-5d80-94a3-7fb7c7cc6253"}, .name = "1cf0dc5a-4a8a-5d80-94a3-7fb7c7cc6253", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-573]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-573")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-573", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "245404c7-f061-5121-a887-abc232e6f16f"}, .name = "245404c7-f061-5121-a887-abc232e6f16f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-572]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-572")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-572", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "33de27a1-45a9-599d-b44f-2541f2123572"}, .name = "33de27a1-45a9-599d-b44f-2541f2123572", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-590]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-590")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-590", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3479fe87-45fc-5a1f-a6ed-48e3b2b85ebb"}, .name = "3479fe87-45fc-5a1f-a6ed-48e3b2b85ebb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-596]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-596")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-596", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3d153d2a-8236-57fe-9f55-0a6981fbc71d"}, .name = "3d153d2a-8236-57fe-9f55-0a6981fbc71d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-583]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-583")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-583", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4342488b-24e4-5281-ac4e-9a826ff695ac"}, .name = "4342488b-24e4-5281-ac4e-9a826ff695ac", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-570]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-570")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-570", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4df50081-ec02-51c2-89bc-4b2d09f3b12a"}, .name = "4df50081-ec02-51c2-89bc-4b2d09f3b12a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-587]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-587")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-587", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "53124661-5afa-515e-bee1-2294801f9f1d"}, .name = "53124661-5afa-515e-bee1-2294801f9f1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-589]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-589")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-589", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "56dadaa1-66ab-5788-a69d-5635c68167cb"}, .name = "56dadaa1-66ab-5788-a69d-5635c68167cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-586]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-586")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-586", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5864a261-4f19-513e-85e0-5dfcdeef0a47"}, .name = "5864a261-4f19-513e-85e0-5dfcdeef0a47", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-591]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-591")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-591", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6c8f0a2d-1aed-56d3-96a8-d20710d18944"}, .name = "6c8f0a2d-1aed-56d3-96a8-d20710d18944", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-579]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-579")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-579", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6f26868b-e151-53fe-8363-f0173a7a6fe3"}, .name = "6f26868b-e151-53fe-8363-f0173a7a6fe3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-568]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-568")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-568", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "73354c54-6761-5461-8e99-840b88a53d74"}, .name = "73354c54-6761-5461-8e99-840b88a53d74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-592]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-592")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-592", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7ac04e43-a1d5-50bd-a460-6454114278dd"}, .name = "7ac04e43-a1d5-50bd-a460-6454114278dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-584]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-584")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-584", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "83f98633-5003-5d41-b0bd-b1ca66d90a35"}, .name = "83f98633-5003-5d41-b0bd-b1ca66d90a35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-597]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-597")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-597", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8e74abbb-4837-55f7-8e55-32942e0143da"}, .name = "8e74abbb-4837-55f7-8e55-32942e0143da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-582]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-582")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-582", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "aa3c3321-b8e0-50df-b33d-d8f884352427"}, .name = "aa3c3321-b8e0-50df-b33d-d8f884352427", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-569]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-569")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-569", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b269eb41-fa9a-5b36-88af-8f4ded5be7f3"}, .name = "b269eb41-fa9a-5b36-88af-8f4ded5be7f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-580]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-580")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-580", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b4a35daa-fa37-533a-a8d4-8fcaabaec2a0"}, .name = "b4a35daa-fa37-533a-a8d4-8fcaabaec2a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-595]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-595")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-595", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b770e235-f827-5ea6-a3b2-26c46824612f"}, .name = "b770e235-f827-5ea6-a3b2-26c46824612f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-575]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-575")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-575", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d2dba445-8178-52d9-b2ea-643e9ad3a292"}, .name = "d2dba445-8178-52d9-b2ea-643e9ad3a292", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-571]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-571")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-571", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dbee061b-60f2-5706-af2c-133453c9d22f"}, .name = "dbee061b-60f2-5706-af2c-133453c9d22f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-588]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-588")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-588", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e2eb2f56-1e75-552f-84a8-c95307b832db"}, .name = "e2eb2f56-1e75-552f-84a8-c95307b832db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-594]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-594")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-594", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e510c09b-7e12-53f1-92ab-2d6841c874b2"}, .name = "e510c09b-7e12-53f1-92ab-2d6841c874b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-581]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-581")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-581", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e8ac4162-f9a2-5e4d-8f31-6a4959bbf2ad"}, .name = "e8ac4162-f9a2-5e4d-8f31-6a4959bbf2ad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-567]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-567")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-567", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e9e9b9fa-1e3e-5e36-9ca6-70e6d29706a2"}, .name = "e9e9b9fa-1e3e-5e36-9ca6-70e6d29706a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-577]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-577")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-577", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ebe1d5e9-8bc1-5833-94a0-afa68aa19eaa"}, .name = "ebe1d5e9-8bc1-5833-94a0-afa68aa19eaa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-598]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-598")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-598", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f06fa2c0-2851-5e5f-bb4f-bdaf807988b5"}, .name = "f06fa2c0-2851-5e5f-bb4f-bdaf807988b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-593]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-593")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-593", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f10c7a1d-217d-585a-bbac-662be29e6b3f"}, .name = "f10c7a1d-217d-585a-bbac-662be29e6b3f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-576]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-576")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-576", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f701013b-1ea7-5f11-9a3b-bc648357f16c"}, .name = "f701013b-1ea7-5f11-9a3b-bc648357f16c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-574]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-574")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-574", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fea72ce8-ba96-560b-bf06-c2f6abcbe40f"}, .name = "fea72ce8-ba96-560b-bf06-c2f6abcbe40f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-578]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-578")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-578", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-567"}, .name = "testNP-567", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6f26868b-e151-53fe-8363-f0173a7a6fe3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e8ac4162-f9a2-5e4d-8f31-6a4959bbf2ad"]}, .span = ["testNode-56"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-568"}, .name = "testNP-568", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["aa3c3321-b8e0-50df-b33d-d8f884352427"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6f26868b-e151-53fe-8363-f0173a7a6fe3"]}, .span = ["testNode-56"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-569"}, .name = "testNP-569", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4342488b-24e4-5281-ac4e-9a826ff695ac"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["aa3c3321-b8e0-50df-b33d-d8f884352427"]}, .span = ["testNode-56"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-570"}, .name = "testNP-570", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d2dba445-8178-52d9-b2ea-643e9ad3a292"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4342488b-24e4-5281-ac4e-9a826ff695ac"]}, .span = ["testNode-57"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-571"}, .name = "testNP-571", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["245404c7-f061-5121-a887-abc232e6f16f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d2dba445-8178-52d9-b2ea-643e9ad3a292"]}, .span = ["testNode-57"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-572"}, .name = "testNP-572", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1cf0dc5a-4a8a-5d80-94a3-7fb7c7cc6253"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["245404c7-f061-5121-a887-abc232e6f16f"]}, .span = ["testNode-57"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-573"}, .name = "testNP-573", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f701013b-1ea7-5f11-9a3b-bc648357f16c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1cf0dc5a-4a8a-5d80-94a3-7fb7c7cc6253"]}, .span = ["testNode-57"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-574"}, .name = "testNP-574", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b770e235-f827-5ea6-a3b2-26c46824612f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f701013b-1ea7-5f11-9a3b-bc648357f16c"]}, .span = ["testNode-57"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-575"}, .name = "testNP-575", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f10c7a1d-217d-585a-bbac-662be29e6b3f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b770e235-f827-5ea6-a3b2-26c46824612f"]}, .span = ["testNode-57"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-576"}, .name = "testNP-576", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e9e9b9fa-1e3e-5e36-9ca6-70e6d29706a2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f10c7a1d-217d-585a-bbac-662be29e6b3f"]}, .span = ["testNode-57"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-577"}, .name = "testNP-577", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fea72ce8-ba96-560b-bf06-c2f6abcbe40f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e9e9b9fa-1e3e-5e36-9ca6-70e6d29706a2"]}, .span = ["testNode-57"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-578"}, .name = "testNP-578", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6c8f0a2d-1aed-56d3-96a8-d20710d18944"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fea72ce8-ba96-560b-bf06-c2f6abcbe40f"]}, .span = ["testNode-57"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-579"}, .name = "testNP-579", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b269eb41-fa9a-5b36-88af-8f4ded5be7f3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6c8f0a2d-1aed-56d3-96a8-d20710d18944"]}, .span = ["testNode-57"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-580"}, .name = "testNP-580", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e510c09b-7e12-53f1-92ab-2d6841c874b2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b269eb41-fa9a-5b36-88af-8f4ded5be7f3"]}, .span = ["testNode-58"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-581"}, .name = "testNP-581", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8e74abbb-4837-55f7-8e55-32942e0143da"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e510c09b-7e12-53f1-92ab-2d6841c874b2"]}, .span = ["testNode-58"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-582"}, .name = "testNP-582", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3d153d2a-8236-57fe-9f55-0a6981fbc71d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8e74abbb-4837-55f7-8e55-32942e0143da"]}, .span = ["testNode-58"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-583"}, .name = "testNP-583", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7ac04e43-a1d5-50bd-a460-6454114278dd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3d153d2a-8236-57fe-9f55-0a6981fbc71d"]}, .span = ["testNode-58"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-584"}, .name = "testNP-584", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["099f8ddf-8553-5ff2-85e0-aa9338224153"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7ac04e43-a1d5-50bd-a460-6454114278dd"]}, .span = ["testNode-58"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-585"}, .name = "testNP-585", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["56dadaa1-66ab-5788-a69d-5635c68167cb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["099f8ddf-8553-5ff2-85e0-aa9338224153"]}, .span = ["testNode-58"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-586"}, .name = "testNP-586", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4df50081-ec02-51c2-89bc-4b2d09f3b12a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["56dadaa1-66ab-5788-a69d-5635c68167cb"]}, .span = ["testNode-58"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-587"}, .name = "testNP-587", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dbee061b-60f2-5706-af2c-133453c9d22f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4df50081-ec02-51c2-89bc-4b2d09f3b12a"]}, .span = ["testNode-58"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-588"}, .name = "testNP-588", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["53124661-5afa-515e-bee1-2294801f9f1d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dbee061b-60f2-5706-af2c-133453c9d22f"]}, .span = ["testNode-58"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-589"}, .name = "testNP-589", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["33de27a1-45a9-599d-b44f-2541f2123572"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["53124661-5afa-515e-bee1-2294801f9f1d"]}, .span = ["testNode-58"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-590"}, .name = "testNP-590", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5864a261-4f19-513e-85e0-5dfcdeef0a47"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["33de27a1-45a9-599d-b44f-2541f2123572"]}, .span = ["testNode-59"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-591"}, .name = "testNP-591", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["73354c54-6761-5461-8e99-840b88a53d74"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5864a261-4f19-513e-85e0-5dfcdeef0a47"]}, .span = ["testNode-59"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-592"}, .name = "testNP-592", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f06fa2c0-2851-5e5f-bb4f-bdaf807988b5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["73354c54-6761-5461-8e99-840b88a53d74"]}, .span = ["testNode-59"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-593"}, .name = "testNP-593", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e2eb2f56-1e75-552f-84a8-c95307b832db"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f06fa2c0-2851-5e5f-bb4f-bdaf807988b5"]}, .span = ["testNode-59"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-594"}, .name = "testNP-594", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b4a35daa-fa37-533a-a8d4-8fcaabaec2a0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e2eb2f56-1e75-552f-84a8-c95307b832db"]}, .span = ["testNode-59"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-595"}, .name = "testNP-595", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3479fe87-45fc-5a1f-a6ed-48e3b2b85ebb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b4a35daa-fa37-533a-a8d4-8fcaabaec2a0"]}, .span = ["testNode-59"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-596"}, .name = "testNP-596", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["83f98633-5003-5d41-b0bd-b1ca66d90a35"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3479fe87-45fc-5a1f-a6ed-48e3b2b85ebb"]}, .span = ["testNode-59"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-597"}, .name = "testNP-597", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ebe1d5e9-8bc1-5833-94a0-afa68aa19eaa"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["83f98633-5003-5d41-b0bd-b1ca66d90a35"]}, .span = ["testNode-59"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-598"}, .name = "testNP-598", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2b8a71ae-ff36-5b18-b966-f75583911850"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ebe1d5e9-8bc1-5833-94a0-afa68aa19eaa"]}, .span = ["testNode-59"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "02cbc3d5-ce89-5797-8edb-f1e0124b4213"}, .name = "02cbc3d5-ce89-5797-8edb-f1e0124b4213", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-609]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-609")], .matchExpressions = []}}}}, .addresses = ["10.10.60.9"], .span = ["testNode-60"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "07450dd8-62a4-58bd-ab58-3bf1afcd7544"}, .name = "07450dd8-62a4-58bd-ab58-3bf1afcd7544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-624]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-624")], .matchExpressions = []}}}}, .addresses = ["10.10.62.4"], .span = ["testNode-62"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "09d28f85-06b5-5b1f-8a89-7e2056b42464"}, .name = "09d28f85-06b5-5b1f-8a89-7e2056b42464", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-621]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-621")], .matchExpressions = []}}}}, .addresses = ["10.10.62.1"], .span = ["testNode-62"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0f5b033d-1747-557a-8590-8844a46d9fc5"}, .name = "0f5b033d-1747-557a-8590-8844a46d9fc5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-623]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-623")], .matchExpressions = []}}}}, .addresses = ["10.10.62.3"], .span = ["testNode-62"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1628c233-3279-572b-8b79-88538c9b8733"}, .name = "1628c233-3279-572b-8b79-88538c9b8733", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-631]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-631")], .matchExpressions = []}}}}, .addresses = ["10.10.63.1"], .span = ["testNode-63"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2176e069-ef1c-535e-b476-05c5ab15178b"}, .name = "2176e069-ef1c-535e-b476-05c5ab15178b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-613]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-613")], .matchExpressions = []}}}}, .addresses = ["10.10.61.3"], .span = ["testNode-61"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "24580ad1-fce8-5f37-85ad-a3aa634df817"}, .name = "24580ad1-fce8-5f37-85ad-a3aa634df817", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-606]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-606")], .matchExpressions = []}}}}, .addresses = ["10.10.60.6"], .span = ["testNode-60"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2eac5404-367f-50fd-8119-f3e6794df0d3"}, .name = "2eac5404-367f-50fd-8119-f3e6794df0d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-622]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-622")], .matchExpressions = []}}}}, .addresses = ["10.10.62.2"], .span = ["testNode-62"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "371b46b9-c4c2-5a44-9103-298077dc6cb7"}, .name = "371b46b9-c4c2-5a44-9103-298077dc6cb7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-620]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-620")], .matchExpressions = []}}}}, .addresses = ["10.10.62.0"], .span = ["testNode-61"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3c4c8a22-677f-588f-91ea-aec207969bcf"}, .name = "3c4c8a22-677f-588f-91ea-aec207969bcf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-601]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-601")], .matchExpressions = []}}}}, .addresses = ["10.10.60.1"], .span = ["testNode-60"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4dfd8d05-ce2e-513f-8b18-0cf487f9b42a"}, .name = "4dfd8d05-ce2e-513f-8b18-0cf487f9b42a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-610]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-610")], .matchExpressions = []}}}}, .addresses = ["10.10.61.0"], .span = ["testNode-60"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "527369a9-819d-5f1d-8780-887f94383b74"}, .name = "527369a9-819d-5f1d-8780-887f94383b74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-612]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-612")], .matchExpressions = []}}}}, .addresses = ["10.10.61.2"], .span = ["testNode-61"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "55728c3c-de70-52b8-bd4c-2c37db6c7f19"}, .name = "55728c3c-de70-52b8-bd4c-2c37db6c7f19", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-616]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-616")], .matchExpressions = []}}}}, .addresses = ["10.10.61.6"], .span = ["testNode-61"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5aadee18-3a80-5312-a3f5-7e05f657e175"}, .name = "5aadee18-3a80-5312-a3f5-7e05f657e175", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-629]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-629")], .matchExpressions = []}}}}, .addresses = ["10.10.62.9"], .span = ["testNode-62"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "66d31e3c-ede9-5e40-919c-87749b4ad22d"}, .name = "66d31e3c-ede9-5e40-919c-87749b4ad22d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-614]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-614")], .matchExpressions = []}}}}, .addresses = ["10.10.61.4"], .span = ["testNode-61"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "676fd7ca-e7ab-532b-9dce-aca7ca3c1ca9"}, .name = "676fd7ca-e7ab-532b-9dce-aca7ca3c1ca9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-603]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-603")], .matchExpressions = []}}}}, .addresses = ["10.10.60.3"], .span = ["testNode-60"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "73e427bb-7be2-5306-8c53-e9cb77c038b0"}, .name = "73e427bb-7be2-5306-8c53-e9cb77c038b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-605]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-605")], .matchExpressions = []}}}}, .addresses = ["10.10.60.5"], .span = ["testNode-60"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7913f2ad-5d73-58a3-a65f-17c6f6faa67f"}, .name = "7913f2ad-5d73-58a3-a65f-17c6f6faa67f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-628]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-628")], .matchExpressions = []}}}}, .addresses = ["10.10.62.8"], .span = ["testNode-62"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7c2f47ab-3589-59a1-a0a3-1220e53edcd6"}, .name = "7c2f47ab-3589-59a1-a0a3-1220e53edcd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-604]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-604")], .matchExpressions = []}}}}, .addresses = ["10.10.60.4"], .span = ["testNode-60"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "89e3298f-f80d-5f37-884b-68c35c794ba2"}, .name = "89e3298f-f80d-5f37-884b-68c35c794ba2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-611]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-611")], .matchExpressions = []}}}}, .addresses = ["10.10.61.1"], .span = ["testNode-61"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a77028cf-ea44-563d-8793-17f78af5073f"}, .name = "a77028cf-ea44-563d-8793-17f78af5073f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-618]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-618")], .matchExpressions = []}}}}, .addresses = ["10.10.61.8"], .span = ["testNode-61"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ac4c787b-6104-55af-82f2-f7b7e56d6444"}, .name = "ac4c787b-6104-55af-82f2-f7b7e56d6444", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-617]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-617")], .matchExpressions = []}}}}, .addresses = ["10.10.61.7"], .span = ["testNode-61"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "af669eee-58ab-51a2-8075-568d0180d198"}, .name = "af669eee-58ab-51a2-8075-568d0180d198", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-625]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-625")], .matchExpressions = []}}}}, .addresses = ["10.10.62.5"], .span = ["testNode-62"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b09bc033-ef80-594c-8175-4c917d70d92b"}, .name = "b09bc033-ef80-594c-8175-4c917d70d92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-607]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-607")], .matchExpressions = []}}}}, .addresses = ["10.10.60.7"], .span = ["testNode-60"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "beea0e10-9b77-5ebb-8954-df1fb77851b2"}, .name = "beea0e10-9b77-5ebb-8954-df1fb77851b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-608]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-608")], .matchExpressions = []}}}}, .addresses = ["10.10.60.8"], .span = ["testNode-60"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c1952cb5-d1ea-5ad0-90fd-21c2d2621ced"}, .name = "c1952cb5-d1ea-5ad0-90fd-21c2d2621ced", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-630]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-630")], .matchExpressions = []}}}}, .addresses = ["10.10.63.0"], .span = ["testNode-62"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ca0b5527-67c7-523c-902e-935206a43e98"}, .name = "ca0b5527-67c7-523c-902e-935206a43e98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-619]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-619")], .matchExpressions = []}}}}, .addresses = ["10.10.61.9"], .span = ["testNode-61"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dd8dacc7-22b1-581c-b1e3-acc3d938a986"}, .name = "dd8dacc7-22b1-581c-b1e3-acc3d938a986", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-600]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-600")], .matchExpressions = []}}}}, .addresses = ["10.10.60.0"], .span = ["testNode-59"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e6a0f570-813b-5d34-8059-ffa14e03f0b9"}, .name = "e6a0f570-813b-5d34-8059-ffa14e03f0b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-602]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-602")], .matchExpressions = []}}}}, .addresses = ["10.10.60.2"], .span = ["testNode-60"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "efdac60d-6b62-52c9-a31f-92e341373be1"}, .name = "efdac60d-6b62-52c9-a31f-92e341373be1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-627]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-627")], .matchExpressions = []}}}}, .addresses = ["10.10.62.7"], .span = ["testNode-62"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f85cc566-a332-589f-86ec-73271417d818"}, .name = "f85cc566-a332-589f-86ec-73271417d818", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-626]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-626")], .matchExpressions = []}}}}, .addresses = ["10.10.62.6"], .span = ["testNode-62"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fddf927d-e3be-5758-8f3c-b55e8bd5477c"}, .name = "fddf927d-e3be-5758-8f3c-b55e8bd5477c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-615]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-615")], .matchExpressions = []}}}}, .addresses = ["10.10.61.5"], .span = ["testNode-61"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "02cbc3d5-ce89-5797-8edb-f1e0124b4213"}, .name = "02cbc3d5-ce89-5797-8edb-f1e0124b4213", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-609]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-609")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-609", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "07450dd8-62a4-58bd-ab58-3bf1afcd7544"}, .name = "07450dd8-62a4-58bd-ab58-3bf1afcd7544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-624]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-624")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-624", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "09d28f85-06b5-5b1f-8a89-7e2056b42464"}, .name = "09d28f85-06b5-5b1f-8a89-7e2056b42464", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-621]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-621")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-621", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0f5b033d-1747-557a-8590-8844a46d9fc5"}, .name = "0f5b033d-1747-557a-8590-8844a46d9fc5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-623]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-623")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-623", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2176e069-ef1c-535e-b476-05c5ab15178b"}, .name = "2176e069-ef1c-535e-b476-05c5ab15178b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-613]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-613")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-613", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "24580ad1-fce8-5f37-85ad-a3aa634df817"}, .name = "24580ad1-fce8-5f37-85ad-a3aa634df817", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-606]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-606")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-606", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2b8a71ae-ff36-5b18-b966-f75583911850"}, .name = "2b8a71ae-ff36-5b18-b966-f75583911850", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-599]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-599")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-599", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2eac5404-367f-50fd-8119-f3e6794df0d3"}, .name = "2eac5404-367f-50fd-8119-f3e6794df0d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-622]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-622")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-622", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "371b46b9-c4c2-5a44-9103-298077dc6cb7"}, .name = "371b46b9-c4c2-5a44-9103-298077dc6cb7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-620]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-620")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-620", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3c4c8a22-677f-588f-91ea-aec207969bcf"}, .name = "3c4c8a22-677f-588f-91ea-aec207969bcf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-601]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-601")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-601", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4dfd8d05-ce2e-513f-8b18-0cf487f9b42a"}, .name = "4dfd8d05-ce2e-513f-8b18-0cf487f9b42a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-610]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-610")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-610", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "527369a9-819d-5f1d-8780-887f94383b74"}, .name = "527369a9-819d-5f1d-8780-887f94383b74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-612]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-612")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-612", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "55728c3c-de70-52b8-bd4c-2c37db6c7f19"}, .name = "55728c3c-de70-52b8-bd4c-2c37db6c7f19", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-616]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-616")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-616", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5aadee18-3a80-5312-a3f5-7e05f657e175"}, .name = "5aadee18-3a80-5312-a3f5-7e05f657e175", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-629]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-629")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-629", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "66d31e3c-ede9-5e40-919c-87749b4ad22d"}, .name = "66d31e3c-ede9-5e40-919c-87749b4ad22d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-614]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-614")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-614", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "676fd7ca-e7ab-532b-9dce-aca7ca3c1ca9"}, .name = "676fd7ca-e7ab-532b-9dce-aca7ca3c1ca9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-603]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-603")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-603", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "73e427bb-7be2-5306-8c53-e9cb77c038b0"}, .name = "73e427bb-7be2-5306-8c53-e9cb77c038b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-605]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-605")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-605", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7913f2ad-5d73-58a3-a65f-17c6f6faa67f"}, .name = "7913f2ad-5d73-58a3-a65f-17c6f6faa67f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-628]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-628")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-628", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7c2f47ab-3589-59a1-a0a3-1220e53edcd6"}, .name = "7c2f47ab-3589-59a1-a0a3-1220e53edcd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-604]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-604")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-604", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "89e3298f-f80d-5f37-884b-68c35c794ba2"}, .name = "89e3298f-f80d-5f37-884b-68c35c794ba2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-611]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-611")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-611", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a77028cf-ea44-563d-8793-17f78af5073f"}, .name = "a77028cf-ea44-563d-8793-17f78af5073f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-618]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-618")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-618", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ac4c787b-6104-55af-82f2-f7b7e56d6444"}, .name = "ac4c787b-6104-55af-82f2-f7b7e56d6444", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-617]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-617")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-617", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "af669eee-58ab-51a2-8075-568d0180d198"}, .name = "af669eee-58ab-51a2-8075-568d0180d198", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-625]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-625")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-625", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b09bc033-ef80-594c-8175-4c917d70d92b"}, .name = "b09bc033-ef80-594c-8175-4c917d70d92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-607]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-607")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-607", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "beea0e10-9b77-5ebb-8954-df1fb77851b2"}, .name = "beea0e10-9b77-5ebb-8954-df1fb77851b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-608]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-608")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-608", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c1952cb5-d1ea-5ad0-90fd-21c2d2621ced"}, .name = "c1952cb5-d1ea-5ad0-90fd-21c2d2621ced", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-630]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-630")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-630", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ca0b5527-67c7-523c-902e-935206a43e98"}, .name = "ca0b5527-67c7-523c-902e-935206a43e98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-619]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-619")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-619", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dd8dacc7-22b1-581c-b1e3-acc3d938a986"}, .name = "dd8dacc7-22b1-581c-b1e3-acc3d938a986", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-600]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-600")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-600", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e6a0f570-813b-5d34-8059-ffa14e03f0b9"}, .name = "e6a0f570-813b-5d34-8059-ffa14e03f0b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-602]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-602")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-602", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "efdac60d-6b62-52c9-a31f-92e341373be1"}, .name = "efdac60d-6b62-52c9-a31f-92e341373be1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-627]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-627")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-627", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f85cc566-a332-589f-86ec-73271417d818"}, .name = "f85cc566-a332-589f-86ec-73271417d818", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-626]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-626")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-626", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fddf927d-e3be-5758-8f3c-b55e8bd5477c"}, .name = "fddf927d-e3be-5758-8f3c-b55e8bd5477c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-615]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-615")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-615", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-599"}, .name = "testNP-599", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dd8dacc7-22b1-581c-b1e3-acc3d938a986"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2b8a71ae-ff36-5b18-b966-f75583911850"]}, .span = ["testNode-59"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-600"}, .name = "testNP-600", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3c4c8a22-677f-588f-91ea-aec207969bcf"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dd8dacc7-22b1-581c-b1e3-acc3d938a986"]}, .span = ["testNode-60"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-601"}, .name = "testNP-601", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e6a0f570-813b-5d34-8059-ffa14e03f0b9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3c4c8a22-677f-588f-91ea-aec207969bcf"]}, .span = ["testNode-60"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-602"}, .name = "testNP-602", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["676fd7ca-e7ab-532b-9dce-aca7ca3c1ca9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e6a0f570-813b-5d34-8059-ffa14e03f0b9"]}, .span = ["testNode-60"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-603"}, .name = "testNP-603", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7c2f47ab-3589-59a1-a0a3-1220e53edcd6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["676fd7ca-e7ab-532b-9dce-aca7ca3c1ca9"]}, .span = ["testNode-60"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-604"}, .name = "testNP-604", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["73e427bb-7be2-5306-8c53-e9cb77c038b0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7c2f47ab-3589-59a1-a0a3-1220e53edcd6"]}, .span = ["testNode-60"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-605"}, .name = "testNP-605", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["24580ad1-fce8-5f37-85ad-a3aa634df817"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["73e427bb-7be2-5306-8c53-e9cb77c038b0"]}, .span = ["testNode-60"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-606"}, .name = "testNP-606", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b09bc033-ef80-594c-8175-4c917d70d92b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["24580ad1-fce8-5f37-85ad-a3aa634df817"]}, .span = ["testNode-60"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-607"}, .name = "testNP-607", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["beea0e10-9b77-5ebb-8954-df1fb77851b2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b09bc033-ef80-594c-8175-4c917d70d92b"]}, .span = ["testNode-60"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-608"}, .name = "testNP-608", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["02cbc3d5-ce89-5797-8edb-f1e0124b4213"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["beea0e10-9b77-5ebb-8954-df1fb77851b2"]}, .span = ["testNode-60"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-609"}, .name = "testNP-609", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4dfd8d05-ce2e-513f-8b18-0cf487f9b42a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["02cbc3d5-ce89-5797-8edb-f1e0124b4213"]}, .span = ["testNode-60"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-610"}, .name = "testNP-610", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["89e3298f-f80d-5f37-884b-68c35c794ba2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4dfd8d05-ce2e-513f-8b18-0cf487f9b42a"]}, .span = ["testNode-61"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-611"}, .name = "testNP-611", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["527369a9-819d-5f1d-8780-887f94383b74"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["89e3298f-f80d-5f37-884b-68c35c794ba2"]}, .span = ["testNode-61"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-612"}, .name = "testNP-612", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2176e069-ef1c-535e-b476-05c5ab15178b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["527369a9-819d-5f1d-8780-887f94383b74"]}, .span = ["testNode-61"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-613"}, .name = "testNP-613", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["66d31e3c-ede9-5e40-919c-87749b4ad22d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2176e069-ef1c-535e-b476-05c5ab15178b"]}, .span = ["testNode-61"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-614"}, .name = "testNP-614", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fddf927d-e3be-5758-8f3c-b55e8bd5477c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["66d31e3c-ede9-5e40-919c-87749b4ad22d"]}, .span = ["testNode-61"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-615"}, .name = "testNP-615", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["55728c3c-de70-52b8-bd4c-2c37db6c7f19"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fddf927d-e3be-5758-8f3c-b55e8bd5477c"]}, .span = ["testNode-61"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-616"}, .name = "testNP-616", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ac4c787b-6104-55af-82f2-f7b7e56d6444"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["55728c3c-de70-52b8-bd4c-2c37db6c7f19"]}, .span = ["testNode-61"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-617"}, .name = "testNP-617", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a77028cf-ea44-563d-8793-17f78af5073f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ac4c787b-6104-55af-82f2-f7b7e56d6444"]}, .span = ["testNode-61"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-618"}, .name = "testNP-618", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ca0b5527-67c7-523c-902e-935206a43e98"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a77028cf-ea44-563d-8793-17f78af5073f"]}, .span = ["testNode-61"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-619"}, .name = "testNP-619", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["371b46b9-c4c2-5a44-9103-298077dc6cb7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ca0b5527-67c7-523c-902e-935206a43e98"]}, .span = ["testNode-61"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-620"}, .name = "testNP-620", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["09d28f85-06b5-5b1f-8a89-7e2056b42464"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["371b46b9-c4c2-5a44-9103-298077dc6cb7"]}, .span = ["testNode-62"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-621"}, .name = "testNP-621", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2eac5404-367f-50fd-8119-f3e6794df0d3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["09d28f85-06b5-5b1f-8a89-7e2056b42464"]}, .span = ["testNode-62"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-622"}, .name = "testNP-622", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0f5b033d-1747-557a-8590-8844a46d9fc5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2eac5404-367f-50fd-8119-f3e6794df0d3"]}, .span = ["testNode-62"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-623"}, .name = "testNP-623", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["07450dd8-62a4-58bd-ab58-3bf1afcd7544"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0f5b033d-1747-557a-8590-8844a46d9fc5"]}, .span = ["testNode-62"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-624"}, .name = "testNP-624", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["af669eee-58ab-51a2-8075-568d0180d198"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["07450dd8-62a4-58bd-ab58-3bf1afcd7544"]}, .span = ["testNode-62"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-625"}, .name = "testNP-625", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f85cc566-a332-589f-86ec-73271417d818"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["af669eee-58ab-51a2-8075-568d0180d198"]}, .span = ["testNode-62"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-626"}, .name = "testNP-626", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["efdac60d-6b62-52c9-a31f-92e341373be1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f85cc566-a332-589f-86ec-73271417d818"]}, .span = ["testNode-62"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-627"}, .name = "testNP-627", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7913f2ad-5d73-58a3-a65f-17c6f6faa67f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["efdac60d-6b62-52c9-a31f-92e341373be1"]}, .span = ["testNode-62"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-628"}, .name = "testNP-628", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5aadee18-3a80-5312-a3f5-7e05f657e175"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7913f2ad-5d73-58a3-a65f-17c6f6faa67f"]}, .span = ["testNode-62"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-629"}, .name = "testNP-629", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c1952cb5-d1ea-5ad0-90fd-21c2d2621ced"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5aadee18-3a80-5312-a3f5-7e05f657e175"]}, .span = ["testNode-62"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-630"}, .name = "testNP-630", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1628c233-3279-572b-8b79-88538c9b8733"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c1952cb5-d1ea-5ad0-90fd-21c2d2621ced"]}, .span = ["testNode-63"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "061e03d2-f13c-5711-b7a3-d1060b17661d"}, .name = "061e03d2-f13c-5711-b7a3-d1060b17661d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-658]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-658")], .matchExpressions = []}}}}, .addresses = ["10.10.65.8"], .span = ["testNode-65"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "133dd49c-b9a7-5155-a4c6-78463bc346c0"}, .name = "133dd49c-b9a7-5155-a4c6-78463bc346c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-642]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-642")], .matchExpressions = []}}}}, .addresses = ["10.10.64.2"], .span = ["testNode-64"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "14e5ebca-584d-5f9d-b43a-fb5698a03564"}, .name = "14e5ebca-584d-5f9d-b43a-fb5698a03564", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-632]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-632")], .matchExpressions = []}}}}, .addresses = ["10.10.63.2"], .span = ["testNode-63"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "23e00ac4-afe9-5653-9987-e0911990d970"}, .name = "23e00ac4-afe9-5653-9987-e0911990d970", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-641]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-641")], .matchExpressions = []}}}}, .addresses = ["10.10.64.1"], .span = ["testNode-64"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3dc90716-2978-505c-a87d-4705a347d9a2"}, .name = "3dc90716-2978-505c-a87d-4705a347d9a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-650]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-650")], .matchExpressions = []}}}}, .addresses = ["10.10.65.0"], .span = ["testNode-64"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "446aae9c-7499-52b2-a130-c3fc7ae57d88"}, .name = "446aae9c-7499-52b2-a130-c3fc7ae57d88", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-651]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-651")], .matchExpressions = []}}}}, .addresses = ["10.10.65.1"], .span = ["testNode-65"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5427d3a3-130a-582b-ad9f-4492317ce444"}, .name = "5427d3a3-130a-582b-ad9f-4492317ce444", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-659]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-659")], .matchExpressions = []}}}}, .addresses = ["10.10.65.9"], .span = ["testNode-65"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "567616db-fb7e-551f-b856-aaea40d788a7"}, .name = "567616db-fb7e-551f-b856-aaea40d788a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-646]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-646")], .matchExpressions = []}}}}, .addresses = ["10.10.64.6"], .span = ["testNode-64"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "59f73e1a-64ed-5a2d-8db0-9f53511f3f37"}, .name = "59f73e1a-64ed-5a2d-8db0-9f53511f3f37", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-647]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-647")], .matchExpressions = []}}}}, .addresses = ["10.10.64.7"], .span = ["testNode-64"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5d310546-d5d4-523d-b785-2c7675ec7e04"}, .name = "5d310546-d5d4-523d-b785-2c7675ec7e04", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-639]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-639")], .matchExpressions = []}}}}, .addresses = ["10.10.63.9"], .span = ["testNode-63"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6c0d188b-4b43-5eff-b36a-93f7101f318c"}, .name = "6c0d188b-4b43-5eff-b36a-93f7101f318c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-640]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-640")], .matchExpressions = []}}}}, .addresses = ["10.10.64.0"], .span = ["testNode-63"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "703e8df6-bf86-5ce8-9c85-00582b861420"}, .name = "703e8df6-bf86-5ce8-9c85-00582b861420", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-657]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-657")], .matchExpressions = []}}}}, .addresses = ["10.10.65.7"], .span = ["testNode-65"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "76bb4764-b16a-5a0d-a34c-d6f6c2f661d7"}, .name = "76bb4764-b16a-5a0d-a34c-d6f6c2f661d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-660]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-660")], .matchExpressions = []}}}}, .addresses = ["10.10.66.0"], .span = ["testNode-65"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "79e5741c-ff45-5b60-8e3e-2d00a33379cd"}, .name = "79e5741c-ff45-5b60-8e3e-2d00a33379cd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-643]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-643")], .matchExpressions = []}}}}, .addresses = ["10.10.64.3"], .span = ["testNode-64"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "79f2dd81-7108-5ce6-9871-ae200bc6a08d"}, .name = "79f2dd81-7108-5ce6-9871-ae200bc6a08d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-633]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-633")], .matchExpressions = []}}}}, .addresses = ["10.10.63.3"], .span = ["testNode-63"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "87b4294f-947e-522d-93a2-3b02b1135b6a"}, .name = "87b4294f-947e-522d-93a2-3b02b1135b6a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-652]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-652")], .matchExpressions = []}}}}, .addresses = ["10.10.65.2"], .span = ["testNode-65"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8cd5613e-d223-57fa-b0f6-4dd21683084c"}, .name = "8cd5613e-d223-57fa-b0f6-4dd21683084c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-661]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-661")], .matchExpressions = []}}}}, .addresses = ["10.10.66.1"], .span = ["testNode-66"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8f6d2251-6922-5dd6-9429-2dbc50c20a5b"}, .name = "8f6d2251-6922-5dd6-9429-2dbc50c20a5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-656]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-656")], .matchExpressions = []}}}}, .addresses = ["10.10.65.6"], .span = ["testNode-65"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "91df0331-887f-559e-ab54-cadbac98214a"}, .name = "91df0331-887f-559e-ab54-cadbac98214a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-653]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-653")], .matchExpressions = []}}}}, .addresses = ["10.10.65.3"], .span = ["testNode-65"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "96168ce7-96b8-5aa5-80f7-98ddff9eb38b"}, .name = "96168ce7-96b8-5aa5-80f7-98ddff9eb38b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-663]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-663")], .matchExpressions = []}}}}, .addresses = ["10.10.66.3"], .span = ["testNode-66"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "97ae4606-8f4a-5dc9-9c36-0e418df99d41"}, .name = "97ae4606-8f4a-5dc9-9c36-0e418df99d41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-655]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-655")], .matchExpressions = []}}}}, .addresses = ["10.10.65.5"], .span = ["testNode-65"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9bee88c5-bdeb-5162-b0b0-7bbc3a96e8fd"}, .name = "9bee88c5-bdeb-5162-b0b0-7bbc3a96e8fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-637]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-637")], .matchExpressions = []}}}}, .addresses = ["10.10.63.7"], .span = ["testNode-63"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9df7ba66-5d37-55de-aa62-ae5ff2ff9636"}, .name = "9df7ba66-5d37-55de-aa62-ae5ff2ff9636", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-635]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-635")], .matchExpressions = []}}}}, .addresses = ["10.10.63.5"], .span = ["testNode-63"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a0404885-6d68-557e-81c1-2668ac799ded"}, .name = "a0404885-6d68-557e-81c1-2668ac799ded", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-654]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-654")], .matchExpressions = []}}}}, .addresses = ["10.10.65.4"], .span = ["testNode-65"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a14fcf1e-0c5c-58c5-bce6-5ebad9eeddda"}, .name = "a14fcf1e-0c5c-58c5-bce6-5ebad9eeddda", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-636]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-636")], .matchExpressions = []}}}}, .addresses = ["10.10.63.6"], .span = ["testNode-63"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "adef852b-fbd7-55b0-b47a-7e6a4d5cfee5"}, .name = "adef852b-fbd7-55b0-b47a-7e6a4d5cfee5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-662]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-662")], .matchExpressions = []}}}}, .addresses = ["10.10.66.2"], .span = ["testNode-66"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c1443787-4262-5765-8833-c6f05f3c60b6"}, .name = "c1443787-4262-5765-8833-c6f05f3c60b6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-648]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-648")], .matchExpressions = []}}}}, .addresses = ["10.10.64.8"], .span = ["testNode-64"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c9dba8df-93ad-5733-8092-d3baad3de5a5"}, .name = "c9dba8df-93ad-5733-8092-d3baad3de5a5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-644]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-644")], .matchExpressions = []}}}}, .addresses = ["10.10.64.4"], .span = ["testNode-64"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cb667a38-f94c-5e63-ac54-ae40a40f3903"}, .name = "cb667a38-f94c-5e63-ac54-ae40a40f3903", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-634]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-634")], .matchExpressions = []}}}}, .addresses = ["10.10.63.4"], .span = ["testNode-63"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ce49c890-098e-535e-b32f-0fbae2740cbc"}, .name = "ce49c890-098e-535e-b32f-0fbae2740cbc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-638]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-638")], .matchExpressions = []}}}}, .addresses = ["10.10.63.8"], .span = ["testNode-63"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "db2042cc-ccf7-5bf1-8eda-a2dd5c084b95"}, .name = "db2042cc-ccf7-5bf1-8eda-a2dd5c084b95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-645]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-645")], .matchExpressions = []}}}}, .addresses = ["10.10.64.5"], .span = ["testNode-64"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fafd6e05-55f0-52eb-8f3c-97519d7de360"}, .name = "fafd6e05-55f0-52eb-8f3c-97519d7de360", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-649]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-649")], .matchExpressions = []}}}}, .addresses = ["10.10.64.9"], .span = ["testNode-64"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "061e03d2-f13c-5711-b7a3-d1060b17661d"}, .name = "061e03d2-f13c-5711-b7a3-d1060b17661d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-658]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-658")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-658", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "133dd49c-b9a7-5155-a4c6-78463bc346c0"}, .name = "133dd49c-b9a7-5155-a4c6-78463bc346c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-642]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-642")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-642", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "14e5ebca-584d-5f9d-b43a-fb5698a03564"}, .name = "14e5ebca-584d-5f9d-b43a-fb5698a03564", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-632]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-632")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-632", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1628c233-3279-572b-8b79-88538c9b8733"}, .name = "1628c233-3279-572b-8b79-88538c9b8733", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-631]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-631")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-631", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "23e00ac4-afe9-5653-9987-e0911990d970"}, .name = "23e00ac4-afe9-5653-9987-e0911990d970", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-641]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-641")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-641", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3dc90716-2978-505c-a87d-4705a347d9a2"}, .name = "3dc90716-2978-505c-a87d-4705a347d9a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-650]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-650")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-650", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "446aae9c-7499-52b2-a130-c3fc7ae57d88"}, .name = "446aae9c-7499-52b2-a130-c3fc7ae57d88", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-651]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-651")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-651", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5427d3a3-130a-582b-ad9f-4492317ce444"}, .name = "5427d3a3-130a-582b-ad9f-4492317ce444", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-659]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-659")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-659", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "567616db-fb7e-551f-b856-aaea40d788a7"}, .name = "567616db-fb7e-551f-b856-aaea40d788a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-646]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-646")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-646", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "59f73e1a-64ed-5a2d-8db0-9f53511f3f37"}, .name = "59f73e1a-64ed-5a2d-8db0-9f53511f3f37", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-647]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-647")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-647", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5d310546-d5d4-523d-b785-2c7675ec7e04"}, .name = "5d310546-d5d4-523d-b785-2c7675ec7e04", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-639]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-639")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-639", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6c0d188b-4b43-5eff-b36a-93f7101f318c"}, .name = "6c0d188b-4b43-5eff-b36a-93f7101f318c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-640]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-640")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-640", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "703e8df6-bf86-5ce8-9c85-00582b861420"}, .name = "703e8df6-bf86-5ce8-9c85-00582b861420", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-657]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-657")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-657", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "76bb4764-b16a-5a0d-a34c-d6f6c2f661d7"}, .name = "76bb4764-b16a-5a0d-a34c-d6f6c2f661d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-660]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-660")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-660", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "79e5741c-ff45-5b60-8e3e-2d00a33379cd"}, .name = "79e5741c-ff45-5b60-8e3e-2d00a33379cd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-643]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-643")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-643", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "79f2dd81-7108-5ce6-9871-ae200bc6a08d"}, .name = "79f2dd81-7108-5ce6-9871-ae200bc6a08d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-633]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-633")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-633", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "87b4294f-947e-522d-93a2-3b02b1135b6a"}, .name = "87b4294f-947e-522d-93a2-3b02b1135b6a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-652]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-652")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-652", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8cd5613e-d223-57fa-b0f6-4dd21683084c"}, .name = "8cd5613e-d223-57fa-b0f6-4dd21683084c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-661]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-661")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-661", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8f6d2251-6922-5dd6-9429-2dbc50c20a5b"}, .name = "8f6d2251-6922-5dd6-9429-2dbc50c20a5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-656]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-656")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-656", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "91df0331-887f-559e-ab54-cadbac98214a"}, .name = "91df0331-887f-559e-ab54-cadbac98214a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-653]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-653")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-653", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "97ae4606-8f4a-5dc9-9c36-0e418df99d41"}, .name = "97ae4606-8f4a-5dc9-9c36-0e418df99d41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-655]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-655")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-655", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9bee88c5-bdeb-5162-b0b0-7bbc3a96e8fd"}, .name = "9bee88c5-bdeb-5162-b0b0-7bbc3a96e8fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-637]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-637")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-637", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9df7ba66-5d37-55de-aa62-ae5ff2ff9636"}, .name = "9df7ba66-5d37-55de-aa62-ae5ff2ff9636", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-635]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-635")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-635", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a0404885-6d68-557e-81c1-2668ac799ded"}, .name = "a0404885-6d68-557e-81c1-2668ac799ded", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-654]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-654")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-654", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a14fcf1e-0c5c-58c5-bce6-5ebad9eeddda"}, .name = "a14fcf1e-0c5c-58c5-bce6-5ebad9eeddda", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-636]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-636")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-636", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "adef852b-fbd7-55b0-b47a-7e6a4d5cfee5"}, .name = "adef852b-fbd7-55b0-b47a-7e6a4d5cfee5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-662]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-662")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-662", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c1443787-4262-5765-8833-c6f05f3c60b6"}, .name = "c1443787-4262-5765-8833-c6f05f3c60b6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-648]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-648")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-648", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c9dba8df-93ad-5733-8092-d3baad3de5a5"}, .name = "c9dba8df-93ad-5733-8092-d3baad3de5a5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-644]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-644")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-644", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cb667a38-f94c-5e63-ac54-ae40a40f3903"}, .name = "cb667a38-f94c-5e63-ac54-ae40a40f3903", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-634]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-634")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-634", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ce49c890-098e-535e-b32f-0fbae2740cbc"}, .name = "ce49c890-098e-535e-b32f-0fbae2740cbc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-638]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-638")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-638", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "db2042cc-ccf7-5bf1-8eda-a2dd5c084b95"}, .name = "db2042cc-ccf7-5bf1-8eda-a2dd5c084b95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-645]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-645")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-645", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fafd6e05-55f0-52eb-8f3c-97519d7de360"}, .name = "fafd6e05-55f0-52eb-8f3c-97519d7de360", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-649]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-649")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-649", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-631"}, .name = "testNP-631", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["14e5ebca-584d-5f9d-b43a-fb5698a03564"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1628c233-3279-572b-8b79-88538c9b8733"]}, .span = ["testNode-63"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-632"}, .name = "testNP-632", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["79f2dd81-7108-5ce6-9871-ae200bc6a08d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["14e5ebca-584d-5f9d-b43a-fb5698a03564"]}, .span = ["testNode-63"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-633"}, .name = "testNP-633", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cb667a38-f94c-5e63-ac54-ae40a40f3903"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["79f2dd81-7108-5ce6-9871-ae200bc6a08d"]}, .span = ["testNode-63"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-634"}, .name = "testNP-634", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9df7ba66-5d37-55de-aa62-ae5ff2ff9636"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cb667a38-f94c-5e63-ac54-ae40a40f3903"]}, .span = ["testNode-63"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-635"}, .name = "testNP-635", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a14fcf1e-0c5c-58c5-bce6-5ebad9eeddda"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9df7ba66-5d37-55de-aa62-ae5ff2ff9636"]}, .span = ["testNode-63"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-636"}, .name = "testNP-636", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9bee88c5-bdeb-5162-b0b0-7bbc3a96e8fd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a14fcf1e-0c5c-58c5-bce6-5ebad9eeddda"]}, .span = ["testNode-63"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-637"}, .name = "testNP-637", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ce49c890-098e-535e-b32f-0fbae2740cbc"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9bee88c5-bdeb-5162-b0b0-7bbc3a96e8fd"]}, .span = ["testNode-63"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-638"}, .name = "testNP-638", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5d310546-d5d4-523d-b785-2c7675ec7e04"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ce49c890-098e-535e-b32f-0fbae2740cbc"]}, .span = ["testNode-63"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-639"}, .name = "testNP-639", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6c0d188b-4b43-5eff-b36a-93f7101f318c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5d310546-d5d4-523d-b785-2c7675ec7e04"]}, .span = ["testNode-63"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-640"}, .name = "testNP-640", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["23e00ac4-afe9-5653-9987-e0911990d970"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6c0d188b-4b43-5eff-b36a-93f7101f318c"]}, .span = ["testNode-64"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-641"}, .name = "testNP-641", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["133dd49c-b9a7-5155-a4c6-78463bc346c0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["23e00ac4-afe9-5653-9987-e0911990d970"]}, .span = ["testNode-64"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-642"}, .name = "testNP-642", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["79e5741c-ff45-5b60-8e3e-2d00a33379cd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["133dd49c-b9a7-5155-a4c6-78463bc346c0"]}, .span = ["testNode-64"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-643"}, .name = "testNP-643", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c9dba8df-93ad-5733-8092-d3baad3de5a5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["79e5741c-ff45-5b60-8e3e-2d00a33379cd"]}, .span = ["testNode-64"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-644"}, .name = "testNP-644", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["db2042cc-ccf7-5bf1-8eda-a2dd5c084b95"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c9dba8df-93ad-5733-8092-d3baad3de5a5"]}, .span = ["testNode-64"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-645"}, .name = "testNP-645", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["567616db-fb7e-551f-b856-aaea40d788a7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["db2042cc-ccf7-5bf1-8eda-a2dd5c084b95"]}, .span = ["testNode-64"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-646"}, .name = "testNP-646", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["59f73e1a-64ed-5a2d-8db0-9f53511f3f37"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["567616db-fb7e-551f-b856-aaea40d788a7"]}, .span = ["testNode-64"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-647"}, .name = "testNP-647", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c1443787-4262-5765-8833-c6f05f3c60b6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["59f73e1a-64ed-5a2d-8db0-9f53511f3f37"]}, .span = ["testNode-64"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-648"}, .name = "testNP-648", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fafd6e05-55f0-52eb-8f3c-97519d7de360"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c1443787-4262-5765-8833-c6f05f3c60b6"]}, .span = ["testNode-64"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-649"}, .name = "testNP-649", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3dc90716-2978-505c-a87d-4705a347d9a2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fafd6e05-55f0-52eb-8f3c-97519d7de360"]}, .span = ["testNode-64"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-650"}, .name = "testNP-650", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["446aae9c-7499-52b2-a130-c3fc7ae57d88"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3dc90716-2978-505c-a87d-4705a347d9a2"]}, .span = ["testNode-65"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-651"}, .name = "testNP-651", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["87b4294f-947e-522d-93a2-3b02b1135b6a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["446aae9c-7499-52b2-a130-c3fc7ae57d88"]}, .span = ["testNode-65"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-652"}, .name = "testNP-652", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["91df0331-887f-559e-ab54-cadbac98214a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["87b4294f-947e-522d-93a2-3b02b1135b6a"]}, .span = ["testNode-65"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-653"}, .name = "testNP-653", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a0404885-6d68-557e-81c1-2668ac799ded"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["91df0331-887f-559e-ab54-cadbac98214a"]}, .span = ["testNode-65"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-654"}, .name = "testNP-654", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["97ae4606-8f4a-5dc9-9c36-0e418df99d41"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a0404885-6d68-557e-81c1-2668ac799ded"]}, .span = ["testNode-65"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-655"}, .name = "testNP-655", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8f6d2251-6922-5dd6-9429-2dbc50c20a5b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["97ae4606-8f4a-5dc9-9c36-0e418df99d41"]}, .span = ["testNode-65"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-656"}, .name = "testNP-656", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["703e8df6-bf86-5ce8-9c85-00582b861420"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8f6d2251-6922-5dd6-9429-2dbc50c20a5b"]}, .span = ["testNode-65"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-657"}, .name = "testNP-657", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["061e03d2-f13c-5711-b7a3-d1060b17661d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["703e8df6-bf86-5ce8-9c85-00582b861420"]}, .span = ["testNode-65"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-658"}, .name = "testNP-658", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5427d3a3-130a-582b-ad9f-4492317ce444"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["061e03d2-f13c-5711-b7a3-d1060b17661d"]}, .span = ["testNode-65"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-659"}, .name = "testNP-659", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["76bb4764-b16a-5a0d-a34c-d6f6c2f661d7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5427d3a3-130a-582b-ad9f-4492317ce444"]}, .span = ["testNode-65"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-660"}, .name = "testNP-660", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8cd5613e-d223-57fa-b0f6-4dd21683084c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["76bb4764-b16a-5a0d-a34c-d6f6c2f661d7"]}, .span = ["testNode-66"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-661"}, .name = "testNP-661", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["adef852b-fbd7-55b0-b47a-7e6a4d5cfee5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8cd5613e-d223-57fa-b0f6-4dd21683084c"]}, .span = ["testNode-66"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-662"}, .name = "testNP-662", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["96168ce7-96b8-5aa5-80f7-98ddff9eb38b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["adef852b-fbd7-55b0-b47a-7e6a4d5cfee5"]}, .span = ["testNode-66"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "050f2757-1b25-5aff-a957-444f7bebc1f9"}, .name = "050f2757-1b25-5aff-a957-444f7bebc1f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-672]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-672")], .matchExpressions = []}}}}, .addresses = ["10.10.67.2"], .span = ["testNode-67"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0587f11a-2393-513a-bf8b-24fb834eb829"}, .name = "0587f11a-2393-513a-bf8b-24fb834eb829", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-673]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-673")], .matchExpressions = []}}}}, .addresses = ["10.10.67.3"], .span = ["testNode-67"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1267286c-5a57-550b-90b6-a915509ec859"}, .name = "1267286c-5a57-550b-90b6-a915509ec859", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-685]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-685")], .matchExpressions = []}}}}, .addresses = ["10.10.68.5"], .span = ["testNode-68"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1916ca21-9d10-5123-bf26-c68c1b9da2d8"}, .name = "1916ca21-9d10-5123-bf26-c68c1b9da2d8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-691]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-691")], .matchExpressions = []}}}}, .addresses = ["10.10.69.1"], .span = ["testNode-69"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2ec07f23-522e-57ec-a82c-b8979e5599c2"}, .name = "2ec07f23-522e-57ec-a82c-b8979e5599c2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-694]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-694")], .matchExpressions = []}}}}, .addresses = ["10.10.69.4"], .span = ["testNode-69"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3095addf-6897-5833-b3bf-56ad9a0b8948"}, .name = "3095addf-6897-5833-b3bf-56ad9a0b8948", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-675]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-675")], .matchExpressions = []}}}}, .addresses = ["10.10.67.5"], .span = ["testNode-67"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "40213211-38c3-5538-a529-fe9357015024"}, .name = "40213211-38c3-5538-a529-fe9357015024", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-687]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-687")], .matchExpressions = []}}}}, .addresses = ["10.10.68.7"], .span = ["testNode-68"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4110bf43-a75b-5d54-8a29-3755499ac75c"}, .name = "4110bf43-a75b-5d54-8a29-3755499ac75c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-680]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-680")], .matchExpressions = []}}}}, .addresses = ["10.10.68.0"], .span = ["testNode-67"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4171f9c6-e03b-5c81-9d2a-ee8a5462797d"}, .name = "4171f9c6-e03b-5c81-9d2a-ee8a5462797d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-692]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-692")], .matchExpressions = []}}}}, .addresses = ["10.10.69.2"], .span = ["testNode-69"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "42b7bcd4-7888-57a1-b09f-1d677a586100"}, .name = "42b7bcd4-7888-57a1-b09f-1d677a586100", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-679]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-679")], .matchExpressions = []}}}}, .addresses = ["10.10.67.9"], .span = ["testNode-67"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5a8febaa-5cf2-5e35-9f04-a3e18c24fe17"}, .name = "5a8febaa-5cf2-5e35-9f04-a3e18c24fe17", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-681]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-681")], .matchExpressions = []}}}}, .addresses = ["10.10.68.1"], .span = ["testNode-68"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5b1caa08-bca2-57d8-b738-245eef91ffa1"}, .name = "5b1caa08-bca2-57d8-b738-245eef91ffa1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-676]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-676")], .matchExpressions = []}}}}, .addresses = ["10.10.67.6"], .span = ["testNode-67"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "64eba0e2-8330-5991-a9e5-bf7ba04147d7"}, .name = "64eba0e2-8330-5991-a9e5-bf7ba04147d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-689]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-689")], .matchExpressions = []}}}}, .addresses = ["10.10.68.9"], .span = ["testNode-68"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "67e2966b-8704-554b-80df-c194746b81ab"}, .name = "67e2966b-8704-554b-80df-c194746b81ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-695]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-695")], .matchExpressions = []}}}}, .addresses = ["10.10.69.5"], .span = ["testNode-69"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7e6c1d67-d7b5-5638-9b27-db894814bb94"}, .name = "7e6c1d67-d7b5-5638-9b27-db894814bb94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-690]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-690")], .matchExpressions = []}}}}, .addresses = ["10.10.69.0"], .span = ["testNode-68"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7ee420bb-ffa7-5c26-b619-0cde7455cc44"}, .name = "7ee420bb-ffa7-5c26-b619-0cde7455cc44", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-686]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-686")], .matchExpressions = []}}}}, .addresses = ["10.10.68.6"], .span = ["testNode-68"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "87b683fc-a4ab-5d6e-8d63-1400fbb01797"}, .name = "87b683fc-a4ab-5d6e-8d63-1400fbb01797", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-688]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-688")], .matchExpressions = []}}}}, .addresses = ["10.10.68.8"], .span = ["testNode-68"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8fdae1d8-0cb8-56b8-8e46-71e7edf05816"}, .name = "8fdae1d8-0cb8-56b8-8e46-71e7edf05816", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-671]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-671")], .matchExpressions = []}}}}, .addresses = ["10.10.67.1"], .span = ["testNode-67"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "976e39c9-299c-5500-935f-242503b119ca"}, .name = "976e39c9-299c-5500-935f-242503b119ca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-674]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-674")], .matchExpressions = []}}}}, .addresses = ["10.10.67.4"], .span = ["testNode-67"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9c50a8d6-7e4d-57d1-9930-5dc1514ca058"}, .name = "9c50a8d6-7e4d-57d1-9930-5dc1514ca058", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-682]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-682")], .matchExpressions = []}}}}, .addresses = ["10.10.68.2"], .span = ["testNode-68"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a02754d4-746d-590e-98a9-e961e159ebc1"}, .name = "a02754d4-746d-590e-98a9-e961e159ebc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-684]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-684")], .matchExpressions = []}}}}, .addresses = ["10.10.68.4"], .span = ["testNode-68"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a0c8376b-3ab4-5237-bcb2-007f5d8b2a0f"}, .name = "a0c8376b-3ab4-5237-bcb2-007f5d8b2a0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-667]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-667")], .matchExpressions = []}}}}, .addresses = ["10.10.66.7"], .span = ["testNode-66"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a15be41e-4713-51a6-9abd-77acd185f0ec"}, .name = "a15be41e-4713-51a6-9abd-77acd185f0ec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-677]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-677")], .matchExpressions = []}}}}, .addresses = ["10.10.67.7"], .span = ["testNode-67"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b9a7f6e5-7c28-5e8c-94c1-d100d192a44e"}, .name = "b9a7f6e5-7c28-5e8c-94c1-d100d192a44e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-670]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-670")], .matchExpressions = []}}}}, .addresses = ["10.10.67.0"], .span = ["testNode-66"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c2ce6ce0-6dc2-5dc4-9ff1-78e26c624641"}, .name = "c2ce6ce0-6dc2-5dc4-9ff1-78e26c624641", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-693]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-693")], .matchExpressions = []}}}}, .addresses = ["10.10.69.3"], .span = ["testNode-69"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d2c3a787-e8a7-5f9b-9373-ef269e279a1d"}, .name = "d2c3a787-e8a7-5f9b-9373-ef269e279a1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-666]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-666")], .matchExpressions = []}}}}, .addresses = ["10.10.66.6"], .span = ["testNode-66"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d49d4acd-d197-53aa-b0bb-18f6f9945a52"}, .name = "d49d4acd-d197-53aa-b0bb-18f6f9945a52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-669]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-669")], .matchExpressions = []}}}}, .addresses = ["10.10.66.9"], .span = ["testNode-66"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d5acf07b-bfd0-5e0b-a497-27011f959e85"}, .name = "d5acf07b-bfd0-5e0b-a497-27011f959e85", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-665]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-665")], .matchExpressions = []}}}}, .addresses = ["10.10.66.5"], .span = ["testNode-66"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dcf261c5-e278-57a9-af37-e38ee62be218"}, .name = "dcf261c5-e278-57a9-af37-e38ee62be218", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-683]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-683")], .matchExpressions = []}}}}, .addresses = ["10.10.68.3"], .span = ["testNode-68"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e226b888-48c2-5b83-b3a8-f3da99566b92"}, .name = "e226b888-48c2-5b83-b3a8-f3da99566b92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-668]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-668")], .matchExpressions = []}}}}, .addresses = ["10.10.66.8"], .span = ["testNode-66"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f24044c6-1ce2-5ebe-8698-7425b9a60efc"}, .name = "f24044c6-1ce2-5ebe-8698-7425b9a60efc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-678]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-678")], .matchExpressions = []}}}}, .addresses = ["10.10.67.8"], .span = ["testNode-67"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f4f2035b-0d45-5dbd-90a2-06d4488fceb9"}, .name = "f4f2035b-0d45-5dbd-90a2-06d4488fceb9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-664]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-664")], .matchExpressions = []}}}}, .addresses = ["10.10.66.4"], .span = ["testNode-66"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "050f2757-1b25-5aff-a957-444f7bebc1f9"}, .name = "050f2757-1b25-5aff-a957-444f7bebc1f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-672]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-672")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-672", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0587f11a-2393-513a-bf8b-24fb834eb829"}, .name = "0587f11a-2393-513a-bf8b-24fb834eb829", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-673]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-673")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-673", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1267286c-5a57-550b-90b6-a915509ec859"}, .name = "1267286c-5a57-550b-90b6-a915509ec859", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-685]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-685")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-685", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1916ca21-9d10-5123-bf26-c68c1b9da2d8"}, .name = "1916ca21-9d10-5123-bf26-c68c1b9da2d8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-691]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-691")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-691", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2ec07f23-522e-57ec-a82c-b8979e5599c2"}, .name = "2ec07f23-522e-57ec-a82c-b8979e5599c2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-694]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-694")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-694", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3095addf-6897-5833-b3bf-56ad9a0b8948"}, .name = "3095addf-6897-5833-b3bf-56ad9a0b8948", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-675]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-675")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-675", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "40213211-38c3-5538-a529-fe9357015024"}, .name = "40213211-38c3-5538-a529-fe9357015024", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-687]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-687")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-687", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4110bf43-a75b-5d54-8a29-3755499ac75c"}, .name = "4110bf43-a75b-5d54-8a29-3755499ac75c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-680]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-680")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-680", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4171f9c6-e03b-5c81-9d2a-ee8a5462797d"}, .name = "4171f9c6-e03b-5c81-9d2a-ee8a5462797d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-692]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-692")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-692", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "42b7bcd4-7888-57a1-b09f-1d677a586100"}, .name = "42b7bcd4-7888-57a1-b09f-1d677a586100", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-679]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-679")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-679", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5a8febaa-5cf2-5e35-9f04-a3e18c24fe17"}, .name = "5a8febaa-5cf2-5e35-9f04-a3e18c24fe17", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-681]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-681")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-681", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5b1caa08-bca2-57d8-b738-245eef91ffa1"}, .name = "5b1caa08-bca2-57d8-b738-245eef91ffa1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-676]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-676")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-676", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "64eba0e2-8330-5991-a9e5-bf7ba04147d7"}, .name = "64eba0e2-8330-5991-a9e5-bf7ba04147d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-689]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-689")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-689", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7e6c1d67-d7b5-5638-9b27-db894814bb94"}, .name = "7e6c1d67-d7b5-5638-9b27-db894814bb94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-690]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-690")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-690", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7ee420bb-ffa7-5c26-b619-0cde7455cc44"}, .name = "7ee420bb-ffa7-5c26-b619-0cde7455cc44", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-686]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-686")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-686", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "87b683fc-a4ab-5d6e-8d63-1400fbb01797"}, .name = "87b683fc-a4ab-5d6e-8d63-1400fbb01797", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-688]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-688")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-688", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8fdae1d8-0cb8-56b8-8e46-71e7edf05816"}, .name = "8fdae1d8-0cb8-56b8-8e46-71e7edf05816", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-671]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-671")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-671", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "96168ce7-96b8-5aa5-80f7-98ddff9eb38b"}, .name = "96168ce7-96b8-5aa5-80f7-98ddff9eb38b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-663]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-663")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-663", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "976e39c9-299c-5500-935f-242503b119ca"}, .name = "976e39c9-299c-5500-935f-242503b119ca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-674]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-674")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-674", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9c50a8d6-7e4d-57d1-9930-5dc1514ca058"}, .name = "9c50a8d6-7e4d-57d1-9930-5dc1514ca058", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-682]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-682")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-682", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a02754d4-746d-590e-98a9-e961e159ebc1"}, .name = "a02754d4-746d-590e-98a9-e961e159ebc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-684]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-684")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-684", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a0c8376b-3ab4-5237-bcb2-007f5d8b2a0f"}, .name = "a0c8376b-3ab4-5237-bcb2-007f5d8b2a0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-667]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-667")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-667", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a15be41e-4713-51a6-9abd-77acd185f0ec"}, .name = "a15be41e-4713-51a6-9abd-77acd185f0ec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-677]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-677")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-677", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b9a7f6e5-7c28-5e8c-94c1-d100d192a44e"}, .name = "b9a7f6e5-7c28-5e8c-94c1-d100d192a44e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-670]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-670")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-670", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c2ce6ce0-6dc2-5dc4-9ff1-78e26c624641"}, .name = "c2ce6ce0-6dc2-5dc4-9ff1-78e26c624641", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-693]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-693")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-693", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d2c3a787-e8a7-5f9b-9373-ef269e279a1d"}, .name = "d2c3a787-e8a7-5f9b-9373-ef269e279a1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-666]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-666")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-666", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d49d4acd-d197-53aa-b0bb-18f6f9945a52"}, .name = "d49d4acd-d197-53aa-b0bb-18f6f9945a52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-669]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-669")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-669", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d5acf07b-bfd0-5e0b-a497-27011f959e85"}, .name = "d5acf07b-bfd0-5e0b-a497-27011f959e85", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-665]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-665")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-665", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dcf261c5-e278-57a9-af37-e38ee62be218"}, .name = "dcf261c5-e278-57a9-af37-e38ee62be218", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-683]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-683")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-683", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e226b888-48c2-5b83-b3a8-f3da99566b92"}, .name = "e226b888-48c2-5b83-b3a8-f3da99566b92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-668]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-668")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-668", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f24044c6-1ce2-5ebe-8698-7425b9a60efc"}, .name = "f24044c6-1ce2-5ebe-8698-7425b9a60efc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-678]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-678")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-678", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f4f2035b-0d45-5dbd-90a2-06d4488fceb9"}, .name = "f4f2035b-0d45-5dbd-90a2-06d4488fceb9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-664]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-664")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-664", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-663"}, .name = "testNP-663", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f4f2035b-0d45-5dbd-90a2-06d4488fceb9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["96168ce7-96b8-5aa5-80f7-98ddff9eb38b"]}, .span = ["testNode-66"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-664"}, .name = "testNP-664", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d5acf07b-bfd0-5e0b-a497-27011f959e85"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f4f2035b-0d45-5dbd-90a2-06d4488fceb9"]}, .span = ["testNode-66"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-665"}, .name = "testNP-665", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d2c3a787-e8a7-5f9b-9373-ef269e279a1d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d5acf07b-bfd0-5e0b-a497-27011f959e85"]}, .span = ["testNode-66"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-666"}, .name = "testNP-666", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a0c8376b-3ab4-5237-bcb2-007f5d8b2a0f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d2c3a787-e8a7-5f9b-9373-ef269e279a1d"]}, .span = ["testNode-66"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-667"}, .name = "testNP-667", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e226b888-48c2-5b83-b3a8-f3da99566b92"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a0c8376b-3ab4-5237-bcb2-007f5d8b2a0f"]}, .span = ["testNode-66"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-668"}, .name = "testNP-668", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d49d4acd-d197-53aa-b0bb-18f6f9945a52"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e226b888-48c2-5b83-b3a8-f3da99566b92"]}, .span = ["testNode-66"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-669"}, .name = "testNP-669", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b9a7f6e5-7c28-5e8c-94c1-d100d192a44e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d49d4acd-d197-53aa-b0bb-18f6f9945a52"]}, .span = ["testNode-66"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-670"}, .name = "testNP-670", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8fdae1d8-0cb8-56b8-8e46-71e7edf05816"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b9a7f6e5-7c28-5e8c-94c1-d100d192a44e"]}, .span = ["testNode-67"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-671"}, .name = "testNP-671", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["050f2757-1b25-5aff-a957-444f7bebc1f9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8fdae1d8-0cb8-56b8-8e46-71e7edf05816"]}, .span = ["testNode-67"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-672"}, .name = "testNP-672", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0587f11a-2393-513a-bf8b-24fb834eb829"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["050f2757-1b25-5aff-a957-444f7bebc1f9"]}, .span = ["testNode-67"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-673"}, .name = "testNP-673", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["976e39c9-299c-5500-935f-242503b119ca"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0587f11a-2393-513a-bf8b-24fb834eb829"]}, .span = ["testNode-67"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-674"}, .name = "testNP-674", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3095addf-6897-5833-b3bf-56ad9a0b8948"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["976e39c9-299c-5500-935f-242503b119ca"]}, .span = ["testNode-67"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-675"}, .name = "testNP-675", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5b1caa08-bca2-57d8-b738-245eef91ffa1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3095addf-6897-5833-b3bf-56ad9a0b8948"]}, .span = ["testNode-67"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-676"}, .name = "testNP-676", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a15be41e-4713-51a6-9abd-77acd185f0ec"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5b1caa08-bca2-57d8-b738-245eef91ffa1"]}, .span = ["testNode-67"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-677"}, .name = "testNP-677", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f24044c6-1ce2-5ebe-8698-7425b9a60efc"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a15be41e-4713-51a6-9abd-77acd185f0ec"]}, .span = ["testNode-67"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-678"}, .name = "testNP-678", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["42b7bcd4-7888-57a1-b09f-1d677a586100"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f24044c6-1ce2-5ebe-8698-7425b9a60efc"]}, .span = ["testNode-67"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-679"}, .name = "testNP-679", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4110bf43-a75b-5d54-8a29-3755499ac75c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["42b7bcd4-7888-57a1-b09f-1d677a586100"]}, .span = ["testNode-67"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-680"}, .name = "testNP-680", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5a8febaa-5cf2-5e35-9f04-a3e18c24fe17"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4110bf43-a75b-5d54-8a29-3755499ac75c"]}, .span = ["testNode-68"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-681"}, .name = "testNP-681", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9c50a8d6-7e4d-57d1-9930-5dc1514ca058"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5a8febaa-5cf2-5e35-9f04-a3e18c24fe17"]}, .span = ["testNode-68"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-682"}, .name = "testNP-682", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dcf261c5-e278-57a9-af37-e38ee62be218"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9c50a8d6-7e4d-57d1-9930-5dc1514ca058"]}, .span = ["testNode-68"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-683"}, .name = "testNP-683", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a02754d4-746d-590e-98a9-e961e159ebc1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dcf261c5-e278-57a9-af37-e38ee62be218"]}, .span = ["testNode-68"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-684"}, .name = "testNP-684", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1267286c-5a57-550b-90b6-a915509ec859"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a02754d4-746d-590e-98a9-e961e159ebc1"]}, .span = ["testNode-68"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-685"}, .name = "testNP-685", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7ee420bb-ffa7-5c26-b619-0cde7455cc44"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1267286c-5a57-550b-90b6-a915509ec859"]}, .span = ["testNode-68"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-686"}, .name = "testNP-686", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["40213211-38c3-5538-a529-fe9357015024"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7ee420bb-ffa7-5c26-b619-0cde7455cc44"]}, .span = ["testNode-68"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-687"}, .name = "testNP-687", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["87b683fc-a4ab-5d6e-8d63-1400fbb01797"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["40213211-38c3-5538-a529-fe9357015024"]}, .span = ["testNode-68"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-688"}, .name = "testNP-688", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["64eba0e2-8330-5991-a9e5-bf7ba04147d7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["87b683fc-a4ab-5d6e-8d63-1400fbb01797"]}, .span = ["testNode-68"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-689"}, .name = "testNP-689", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7e6c1d67-d7b5-5638-9b27-db894814bb94"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["64eba0e2-8330-5991-a9e5-bf7ba04147d7"]}, .span = ["testNode-68"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-690"}, .name = "testNP-690", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1916ca21-9d10-5123-bf26-c68c1b9da2d8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7e6c1d67-d7b5-5638-9b27-db894814bb94"]}, .span = ["testNode-69"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-691"}, .name = "testNP-691", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4171f9c6-e03b-5c81-9d2a-ee8a5462797d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1916ca21-9d10-5123-bf26-c68c1b9da2d8"]}, .span = ["testNode-69"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-692"}, .name = "testNP-692", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c2ce6ce0-6dc2-5dc4-9ff1-78e26c624641"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4171f9c6-e03b-5c81-9d2a-ee8a5462797d"]}, .span = ["testNode-69"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-693"}, .name = "testNP-693", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2ec07f23-522e-57ec-a82c-b8979e5599c2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c2ce6ce0-6dc2-5dc4-9ff1-78e26c624641"]}, .span = ["testNode-69"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-694"}, .name = "testNP-694", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["67e2966b-8704-554b-80df-c194746b81ab"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2ec07f23-522e-57ec-a82c-b8979e5599c2"]}, .span = ["testNode-69"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0f4b6159-9507-5367-b061-c88c5b1b9a83"}, .name = "0f4b6159-9507-5367-b061-c88c5b1b9a83", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-717]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-717")], .matchExpressions = []}}}}, .addresses = ["10.10.71.7"], .span = ["testNode-71"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "170ab9dd-5115-5aa1-a7fa-3799723c1988"}, .name = "170ab9dd-5115-5aa1-a7fa-3799723c1988", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-723]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-723")], .matchExpressions = []}}}}, .addresses = ["10.10.72.3"], .span = ["testNode-72"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "185a71fd-ef8b-56d1-a4c5-52f3a93e5c9d"}, .name = "185a71fd-ef8b-56d1-a4c5-52f3a93e5c9d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-727]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-727")], .matchExpressions = []}}}}, .addresses = ["10.10.72.7"], .span = ["testNode-72"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1a06066c-3d56-5505-8887-5ae3e9e6650c"}, .name = "1a06066c-3d56-5505-8887-5ae3e9e6650c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-697]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-697")], .matchExpressions = []}}}}, .addresses = ["10.10.69.7"], .span = ["testNode-69"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1e30a90c-1375-56c6-b159-840e1201a88e"}, .name = "1e30a90c-1375-56c6-b159-840e1201a88e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-719]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-719")], .matchExpressions = []}}}}, .addresses = ["10.10.71.9"], .span = ["testNode-71"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2478778f-c17f-5acb-aaa0-27cc573a22f1"}, .name = "2478778f-c17f-5acb-aaa0-27cc573a22f1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-704]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-704")], .matchExpressions = []}}}}, .addresses = ["10.10.70.4"], .span = ["testNode-70"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "256e2541-78f2-5f46-8039-020a998c918e"}, .name = "256e2541-78f2-5f46-8039-020a998c918e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-702]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-702")], .matchExpressions = []}}}}, .addresses = ["10.10.70.2"], .span = ["testNode-70"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2e08c000-fe0a-5fe4-96d2-eb7c8b731890"}, .name = "2e08c000-fe0a-5fe4-96d2-eb7c8b731890", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-700]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-700")], .matchExpressions = []}}}}, .addresses = ["10.10.70.0"], .span = ["testNode-69"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4d0cb5bb-61ee-5334-a57e-5c0530b9e2d6"}, .name = "4d0cb5bb-61ee-5334-a57e-5c0530b9e2d6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-718]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-718")], .matchExpressions = []}}}}, .addresses = ["10.10.71.8"], .span = ["testNode-71"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4dbef641-dacc-58d4-9172-bd6054abe5a3"}, .name = "4dbef641-dacc-58d4-9172-bd6054abe5a3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-708]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-708")], .matchExpressions = []}}}}, .addresses = ["10.10.70.8"], .span = ["testNode-70"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4fad2040-84c6-5627-ace8-8205d5eccf4d"}, .name = "4fad2040-84c6-5627-ace8-8205d5eccf4d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-721]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-721")], .matchExpressions = []}}}}, .addresses = ["10.10.72.1"], .span = ["testNode-72"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "585abe35-8eab-5fc4-92ba-2485002947ea"}, .name = "585abe35-8eab-5fc4-92ba-2485002947ea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-701]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-701")], .matchExpressions = []}}}}, .addresses = ["10.10.70.1"], .span = ["testNode-70"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5a010afb-8f24-509a-a8dd-eb64221776bc"}, .name = "5a010afb-8f24-509a-a8dd-eb64221776bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-706]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-706")], .matchExpressions = []}}}}, .addresses = ["10.10.70.6"], .span = ["testNode-70"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6a6112dc-5170-5d89-aea8-b2a865f79ce3"}, .name = "6a6112dc-5170-5d89-aea8-b2a865f79ce3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-720]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-720")], .matchExpressions = []}}}}, .addresses = ["10.10.72.0"], .span = ["testNode-71"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7b925c47-a6a4-5aaa-a1d7-a2c0585943ee"}, .name = "7b925c47-a6a4-5aaa-a1d7-a2c0585943ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-722]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-722")], .matchExpressions = []}}}}, .addresses = ["10.10.72.2"], .span = ["testNode-72"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "807ad77e-b523-579e-b82d-fd698020868c"}, .name = "807ad77e-b523-579e-b82d-fd698020868c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-715]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-715")], .matchExpressions = []}}}}, .addresses = ["10.10.71.5"], .span = ["testNode-71"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8877a11e-49e0-5059-a164-9df96f000095"}, .name = "8877a11e-49e0-5059-a164-9df96f000095", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-712]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-712")], .matchExpressions = []}}}}, .addresses = ["10.10.71.2"], .span = ["testNode-71"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "89e4541b-ed09-5593-8aa7-cb4a518797d3"}, .name = "89e4541b-ed09-5593-8aa7-cb4a518797d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-703]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-703")], .matchExpressions = []}}}}, .addresses = ["10.10.70.3"], .span = ["testNode-70"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8c2ff3d1-8c3b-5bff-8f8b-cb2cc35b6baa"}, .name = "8c2ff3d1-8c3b-5bff-8f8b-cb2cc35b6baa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-716]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-716")], .matchExpressions = []}}}}, .addresses = ["10.10.71.6"], .span = ["testNode-71"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8c4bfbfa-c294-5004-a798-9334ef296552"}, .name = "8c4bfbfa-c294-5004-a798-9334ef296552", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-725]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-725")], .matchExpressions = []}}}}, .addresses = ["10.10.72.5"], .span = ["testNode-72"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "97437d24-52f4-5ecf-869e-e917ba312c69"}, .name = "97437d24-52f4-5ecf-869e-e917ba312c69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-711]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-711")], .matchExpressions = []}}}}, .addresses = ["10.10.71.1"], .span = ["testNode-71"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9be26549-d762-50cc-adab-a75c8d48879d"}, .name = "9be26549-d762-50cc-adab-a75c8d48879d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-696]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-696")], .matchExpressions = []}}}}, .addresses = ["10.10.69.6"], .span = ["testNode-69"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a926c6ec-68db-5f32-8c49-74a3e2b1edad"}, .name = "a926c6ec-68db-5f32-8c49-74a3e2b1edad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-698]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-698")], .matchExpressions = []}}}}, .addresses = ["10.10.69.8"], .span = ["testNode-69"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a9dd3184-c1f1-57c6-93b0-b25e0641173d"}, .name = "a9dd3184-c1f1-57c6-93b0-b25e0641173d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-710]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-710")], .matchExpressions = []}}}}, .addresses = ["10.10.71.0"], .span = ["testNode-70"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "af251d3c-c378-5e78-a972-aeff6e7c9a8a"}, .name = "af251d3c-c378-5e78-a972-aeff6e7c9a8a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-709]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-709")], .matchExpressions = []}}}}, .addresses = ["10.10.70.9"], .span = ["testNode-70"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d621cfe2-2494-56ae-89e0-1e94e9537683"}, .name = "d621cfe2-2494-56ae-89e0-1e94e9537683", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-705]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-705")], .matchExpressions = []}}}}, .addresses = ["10.10.70.5"], .span = ["testNode-70"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "de993881-b512-5447-a715-9ec08b6b1ae2"}, .name = "de993881-b512-5447-a715-9ec08b6b1ae2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-724]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-724")], .matchExpressions = []}}}}, .addresses = ["10.10.72.4"], .span = ["testNode-72"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dee060a6-a5f7-5412-9d48-5a167da9ecc1"}, .name = "dee060a6-a5f7-5412-9d48-5a167da9ecc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-726]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-726")], .matchExpressions = []}}}}, .addresses = ["10.10.72.6"], .span = ["testNode-72"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e0804028-9a18-5a77-a65b-93a446960ed3"}, .name = "e0804028-9a18-5a77-a65b-93a446960ed3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-713]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-713")], .matchExpressions = []}}}}, .addresses = ["10.10.71.3"], .span = ["testNode-71"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e1c097f5-25d7-5482-a7fb-163de245bee0"}, .name = "e1c097f5-25d7-5482-a7fb-163de245bee0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-714]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-714")], .matchExpressions = []}}}}, .addresses = ["10.10.71.4"], .span = ["testNode-71"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f67bb081-3fa0-51b9-9010-62a042e56c03"}, .name = "f67bb081-3fa0-51b9-9010-62a042e56c03", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-699]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-699")], .matchExpressions = []}}}}, .addresses = ["10.10.69.9"], .span = ["testNode-69"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f75db8db-9892-5caf-9ad1-b3e2cae8b955"}, .name = "f75db8db-9892-5caf-9ad1-b3e2cae8b955", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-707]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-707")], .matchExpressions = []}}}}, .addresses = ["10.10.70.7"], .span = ["testNode-70"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0f4b6159-9507-5367-b061-c88c5b1b9a83"}, .name = "0f4b6159-9507-5367-b061-c88c5b1b9a83", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-717]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-717")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-717", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "170ab9dd-5115-5aa1-a7fa-3799723c1988"}, .name = "170ab9dd-5115-5aa1-a7fa-3799723c1988", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-723]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-723")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-723", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1a06066c-3d56-5505-8887-5ae3e9e6650c"}, .name = "1a06066c-3d56-5505-8887-5ae3e9e6650c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-697]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-697")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-697", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1e30a90c-1375-56c6-b159-840e1201a88e"}, .name = "1e30a90c-1375-56c6-b159-840e1201a88e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-719]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-719")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-719", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2478778f-c17f-5acb-aaa0-27cc573a22f1"}, .name = "2478778f-c17f-5acb-aaa0-27cc573a22f1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-704]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-704")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-704", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "256e2541-78f2-5f46-8039-020a998c918e"}, .name = "256e2541-78f2-5f46-8039-020a998c918e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-702]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-702")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-702", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2e08c000-fe0a-5fe4-96d2-eb7c8b731890"}, .name = "2e08c000-fe0a-5fe4-96d2-eb7c8b731890", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-700]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-700")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-700", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4d0cb5bb-61ee-5334-a57e-5c0530b9e2d6"}, .name = "4d0cb5bb-61ee-5334-a57e-5c0530b9e2d6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-718]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-718")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-718", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4dbef641-dacc-58d4-9172-bd6054abe5a3"}, .name = "4dbef641-dacc-58d4-9172-bd6054abe5a3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-708]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-708")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-708", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4fad2040-84c6-5627-ace8-8205d5eccf4d"}, .name = "4fad2040-84c6-5627-ace8-8205d5eccf4d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-721]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-721")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-721", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "585abe35-8eab-5fc4-92ba-2485002947ea"}, .name = "585abe35-8eab-5fc4-92ba-2485002947ea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-701]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-701")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-701", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5a010afb-8f24-509a-a8dd-eb64221776bc"}, .name = "5a010afb-8f24-509a-a8dd-eb64221776bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-706]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-706")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-706", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "67e2966b-8704-554b-80df-c194746b81ab"}, .name = "67e2966b-8704-554b-80df-c194746b81ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-695]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-695")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-695", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6a6112dc-5170-5d89-aea8-b2a865f79ce3"}, .name = "6a6112dc-5170-5d89-aea8-b2a865f79ce3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-720]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-720")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-720", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7b925c47-a6a4-5aaa-a1d7-a2c0585943ee"}, .name = "7b925c47-a6a4-5aaa-a1d7-a2c0585943ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-722]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-722")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-722", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "807ad77e-b523-579e-b82d-fd698020868c"}, .name = "807ad77e-b523-579e-b82d-fd698020868c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-715]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-715")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-715", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8877a11e-49e0-5059-a164-9df96f000095"}, .name = "8877a11e-49e0-5059-a164-9df96f000095", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-712]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-712")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-712", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "89e4541b-ed09-5593-8aa7-cb4a518797d3"}, .name = "89e4541b-ed09-5593-8aa7-cb4a518797d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-703]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-703")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-703", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8c2ff3d1-8c3b-5bff-8f8b-cb2cc35b6baa"}, .name = "8c2ff3d1-8c3b-5bff-8f8b-cb2cc35b6baa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-716]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-716")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-716", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8c4bfbfa-c294-5004-a798-9334ef296552"}, .name = "8c4bfbfa-c294-5004-a798-9334ef296552", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-725]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-725")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-725", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "97437d24-52f4-5ecf-869e-e917ba312c69"}, .name = "97437d24-52f4-5ecf-869e-e917ba312c69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-711]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-711")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-711", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9be26549-d762-50cc-adab-a75c8d48879d"}, .name = "9be26549-d762-50cc-adab-a75c8d48879d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-696]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-696")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-696", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a926c6ec-68db-5f32-8c49-74a3e2b1edad"}, .name = "a926c6ec-68db-5f32-8c49-74a3e2b1edad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-698]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-698")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-698", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a9dd3184-c1f1-57c6-93b0-b25e0641173d"}, .name = "a9dd3184-c1f1-57c6-93b0-b25e0641173d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-710]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-710")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-710", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "af251d3c-c378-5e78-a972-aeff6e7c9a8a"}, .name = "af251d3c-c378-5e78-a972-aeff6e7c9a8a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-709]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-709")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-709", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d621cfe2-2494-56ae-89e0-1e94e9537683"}, .name = "d621cfe2-2494-56ae-89e0-1e94e9537683", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-705]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-705")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-705", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "de993881-b512-5447-a715-9ec08b6b1ae2"}, .name = "de993881-b512-5447-a715-9ec08b6b1ae2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-724]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-724")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-724", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dee060a6-a5f7-5412-9d48-5a167da9ecc1"}, .name = "dee060a6-a5f7-5412-9d48-5a167da9ecc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-726]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-726")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-726", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e0804028-9a18-5a77-a65b-93a446960ed3"}, .name = "e0804028-9a18-5a77-a65b-93a446960ed3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-713]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-713")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-713", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e1c097f5-25d7-5482-a7fb-163de245bee0"}, .name = "e1c097f5-25d7-5482-a7fb-163de245bee0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-714]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-714")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-714", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f67bb081-3fa0-51b9-9010-62a042e56c03"}, .name = "f67bb081-3fa0-51b9-9010-62a042e56c03", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-699]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-699")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-699", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f75db8db-9892-5caf-9ad1-b3e2cae8b955"}, .name = "f75db8db-9892-5caf-9ad1-b3e2cae8b955", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-707]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-707")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-707", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-695"}, .name = "testNP-695", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9be26549-d762-50cc-adab-a75c8d48879d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["67e2966b-8704-554b-80df-c194746b81ab"]}, .span = ["testNode-69"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-696"}, .name = "testNP-696", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1a06066c-3d56-5505-8887-5ae3e9e6650c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9be26549-d762-50cc-adab-a75c8d48879d"]}, .span = ["testNode-69"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-697"}, .name = "testNP-697", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a926c6ec-68db-5f32-8c49-74a3e2b1edad"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1a06066c-3d56-5505-8887-5ae3e9e6650c"]}, .span = ["testNode-69"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-698"}, .name = "testNP-698", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f67bb081-3fa0-51b9-9010-62a042e56c03"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a926c6ec-68db-5f32-8c49-74a3e2b1edad"]}, .span = ["testNode-69"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-699"}, .name = "testNP-699", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2e08c000-fe0a-5fe4-96d2-eb7c8b731890"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f67bb081-3fa0-51b9-9010-62a042e56c03"]}, .span = ["testNode-69"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-700"}, .name = "testNP-700", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["585abe35-8eab-5fc4-92ba-2485002947ea"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2e08c000-fe0a-5fe4-96d2-eb7c8b731890"]}, .span = ["testNode-70"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-701"}, .name = "testNP-701", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["256e2541-78f2-5f46-8039-020a998c918e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["585abe35-8eab-5fc4-92ba-2485002947ea"]}, .span = ["testNode-70"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-702"}, .name = "testNP-702", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["89e4541b-ed09-5593-8aa7-cb4a518797d3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["256e2541-78f2-5f46-8039-020a998c918e"]}, .span = ["testNode-70"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-703"}, .name = "testNP-703", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2478778f-c17f-5acb-aaa0-27cc573a22f1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["89e4541b-ed09-5593-8aa7-cb4a518797d3"]}, .span = ["testNode-70"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-704"}, .name = "testNP-704", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d621cfe2-2494-56ae-89e0-1e94e9537683"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2478778f-c17f-5acb-aaa0-27cc573a22f1"]}, .span = ["testNode-70"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-705"}, .name = "testNP-705", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5a010afb-8f24-509a-a8dd-eb64221776bc"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d621cfe2-2494-56ae-89e0-1e94e9537683"]}, .span = ["testNode-70"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-706"}, .name = "testNP-706", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f75db8db-9892-5caf-9ad1-b3e2cae8b955"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5a010afb-8f24-509a-a8dd-eb64221776bc"]}, .span = ["testNode-70"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-707"}, .name = "testNP-707", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4dbef641-dacc-58d4-9172-bd6054abe5a3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f75db8db-9892-5caf-9ad1-b3e2cae8b955"]}, .span = ["testNode-70"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-708"}, .name = "testNP-708", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["af251d3c-c378-5e78-a972-aeff6e7c9a8a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4dbef641-dacc-58d4-9172-bd6054abe5a3"]}, .span = ["testNode-70"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-709"}, .name = "testNP-709", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a9dd3184-c1f1-57c6-93b0-b25e0641173d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["af251d3c-c378-5e78-a972-aeff6e7c9a8a"]}, .span = ["testNode-70"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-710"}, .name = "testNP-710", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["97437d24-52f4-5ecf-869e-e917ba312c69"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a9dd3184-c1f1-57c6-93b0-b25e0641173d"]}, .span = ["testNode-71"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-711"}, .name = "testNP-711", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8877a11e-49e0-5059-a164-9df96f000095"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["97437d24-52f4-5ecf-869e-e917ba312c69"]}, .span = ["testNode-71"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-712"}, .name = "testNP-712", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e0804028-9a18-5a77-a65b-93a446960ed3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8877a11e-49e0-5059-a164-9df96f000095"]}, .span = ["testNode-71"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-713"}, .name = "testNP-713", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e1c097f5-25d7-5482-a7fb-163de245bee0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e0804028-9a18-5a77-a65b-93a446960ed3"]}, .span = ["testNode-71"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-714"}, .name = "testNP-714", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["807ad77e-b523-579e-b82d-fd698020868c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e1c097f5-25d7-5482-a7fb-163de245bee0"]}, .span = ["testNode-71"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-715"}, .name = "testNP-715", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8c2ff3d1-8c3b-5bff-8f8b-cb2cc35b6baa"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["807ad77e-b523-579e-b82d-fd698020868c"]}, .span = ["testNode-71"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-716"}, .name = "testNP-716", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0f4b6159-9507-5367-b061-c88c5b1b9a83"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8c2ff3d1-8c3b-5bff-8f8b-cb2cc35b6baa"]}, .span = ["testNode-71"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-717"}, .name = "testNP-717", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4d0cb5bb-61ee-5334-a57e-5c0530b9e2d6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0f4b6159-9507-5367-b061-c88c5b1b9a83"]}, .span = ["testNode-71"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-718"}, .name = "testNP-718", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1e30a90c-1375-56c6-b159-840e1201a88e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4d0cb5bb-61ee-5334-a57e-5c0530b9e2d6"]}, .span = ["testNode-71"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-719"}, .name = "testNP-719", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6a6112dc-5170-5d89-aea8-b2a865f79ce3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1e30a90c-1375-56c6-b159-840e1201a88e"]}, .span = ["testNode-71"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-720"}, .name = "testNP-720", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4fad2040-84c6-5627-ace8-8205d5eccf4d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6a6112dc-5170-5d89-aea8-b2a865f79ce3"]}, .span = ["testNode-72"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-721"}, .name = "testNP-721", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7b925c47-a6a4-5aaa-a1d7-a2c0585943ee"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4fad2040-84c6-5627-ace8-8205d5eccf4d"]}, .span = ["testNode-72"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-722"}, .name = "testNP-722", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["170ab9dd-5115-5aa1-a7fa-3799723c1988"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7b925c47-a6a4-5aaa-a1d7-a2c0585943ee"]}, .span = ["testNode-72"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-723"}, .name = "testNP-723", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["de993881-b512-5447-a715-9ec08b6b1ae2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["170ab9dd-5115-5aa1-a7fa-3799723c1988"]}, .span = ["testNode-72"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-724"}, .name = "testNP-724", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8c4bfbfa-c294-5004-a798-9334ef296552"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["de993881-b512-5447-a715-9ec08b6b1ae2"]}, .span = ["testNode-72"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-725"}, .name = "testNP-725", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dee060a6-a5f7-5412-9d48-5a167da9ecc1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8c4bfbfa-c294-5004-a798-9334ef296552"]}, .span = ["testNode-72"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-726"}, .name = "testNP-726", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["185a71fd-ef8b-56d1-a4c5-52f3a93e5c9d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dee060a6-a5f7-5412-9d48-5a167da9ecc1"]}, .span = ["testNode-72"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "034f0803-0c7b-5be1-a6cd-fa18721f7aad"}, .name = "034f0803-0c7b-5be1-a6cd-fa18721f7aad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-759]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-759")], .matchExpressions = []}}}}, .addresses = ["10.10.75.9"], .span = ["testNode-75"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0f1db36c-7be5-5373-a007-56b0f06a994d"}, .name = "0f1db36c-7be5-5373-a007-56b0f06a994d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-750]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-750")], .matchExpressions = []}}}}, .addresses = ["10.10.75.0"], .span = ["testNode-74"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "126f73b3-5254-59a2-82e2-852ddea6a25f"}, .name = "126f73b3-5254-59a2-82e2-852ddea6a25f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-756]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-756")], .matchExpressions = []}}}}, .addresses = ["10.10.75.6"], .span = ["testNode-75"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "199f4778-09d6-5cfa-abb3-e9bb7691145d"}, .name = "199f4778-09d6-5cfa-abb3-e9bb7691145d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-731]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-731")], .matchExpressions = []}}}}, .addresses = ["10.10.73.1"], .span = ["testNode-73"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "19e662b0-6edf-5f6f-8e72-979d948c6e1a"}, .name = "19e662b0-6edf-5f6f-8e72-979d948c6e1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-742]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-742")], .matchExpressions = []}}}}, .addresses = ["10.10.74.2"], .span = ["testNode-74"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1a5ff1dd-09d2-57b9-bfa3-9b02a9373b0f"}, .name = "1a5ff1dd-09d2-57b9-bfa3-9b02a9373b0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-753]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-753")], .matchExpressions = []}}}}, .addresses = ["10.10.75.3"], .span = ["testNode-75"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1bf41345-ee85-569b-a022-c36ff6a5c558"}, .name = "1bf41345-ee85-569b-a022-c36ff6a5c558", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-734]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-734")], .matchExpressions = []}}}}, .addresses = ["10.10.73.4"], .span = ["testNode-73"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2151c186-1824-5ed9-8bea-9c68a5330753"}, .name = "2151c186-1824-5ed9-8bea-9c68a5330753", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-738]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-738")], .matchExpressions = []}}}}, .addresses = ["10.10.73.8"], .span = ["testNode-73"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3358e076-66f4-5d42-a1d5-707cecb8f70b"}, .name = "3358e076-66f4-5d42-a1d5-707cecb8f70b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-732]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-732")], .matchExpressions = []}}}}, .addresses = ["10.10.73.2"], .span = ["testNode-73"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3b0ad515-9a94-53ce-be8c-6f3761b97a7a"}, .name = "3b0ad515-9a94-53ce-be8c-6f3761b97a7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-749]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-749")], .matchExpressions = []}}}}, .addresses = ["10.10.74.9"], .span = ["testNode-74"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "483f1a9c-687d-5d54-bf85-977ad4a36bdb"}, .name = "483f1a9c-687d-5d54-bf85-977ad4a36bdb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-728]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-728")], .matchExpressions = []}}}}, .addresses = ["10.10.72.8"], .span = ["testNode-72"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5b32c7d3-ede1-5586-a7ca-da8686051b14"}, .name = "5b32c7d3-ede1-5586-a7ca-da8686051b14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-755]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-755")], .matchExpressions = []}}}}, .addresses = ["10.10.75.5"], .span = ["testNode-75"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5d059696-d667-5b5c-8d20-23b19ef421d9"}, .name = "5d059696-d667-5b5c-8d20-23b19ef421d9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-743]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-743")], .matchExpressions = []}}}}, .addresses = ["10.10.74.3"], .span = ["testNode-74"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5f738ef9-dedf-5309-a62d-53845b5a1a4e"}, .name = "5f738ef9-dedf-5309-a62d-53845b5a1a4e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-758]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-758")], .matchExpressions = []}}}}, .addresses = ["10.10.75.8"], .span = ["testNode-75"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "766b86a4-0dcc-521d-8bb6-d27d78acb693"}, .name = "766b86a4-0dcc-521d-8bb6-d27d78acb693", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-740]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-740")], .matchExpressions = []}}}}, .addresses = ["10.10.74.0"], .span = ["testNode-73"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "79a91e52-4b0b-53a7-9959-20ebf048e319"}, .name = "79a91e52-4b0b-53a7-9959-20ebf048e319", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-751]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-751")], .matchExpressions = []}}}}, .addresses = ["10.10.75.1"], .span = ["testNode-75"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "879ec2e7-3b11-5170-98b0-b4a91d2bb3c7"}, .name = "879ec2e7-3b11-5170-98b0-b4a91d2bb3c7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-739]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-739")], .matchExpressions = []}}}}, .addresses = ["10.10.73.9"], .span = ["testNode-73"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9397b218-249a-57dd-be98-520d9cba2474"}, .name = "9397b218-249a-57dd-be98-520d9cba2474", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-747]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-747")], .matchExpressions = []}}}}, .addresses = ["10.10.74.7"], .span = ["testNode-74"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9af4e040-689a-54a9-ba22-862a631596bd"}, .name = "9af4e040-689a-54a9-ba22-862a631596bd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-735]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-735")], .matchExpressions = []}}}}, .addresses = ["10.10.73.5"], .span = ["testNode-73"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9c2bd9ff-ca37-5764-95cb-39133fbb2aa2"}, .name = "9c2bd9ff-ca37-5764-95cb-39133fbb2aa2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-752]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-752")], .matchExpressions = []}}}}, .addresses = ["10.10.75.2"], .span = ["testNode-75"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9f1f9d0c-129c-5a6a-a162-653adf02f281"}, .name = "9f1f9d0c-129c-5a6a-a162-653adf02f281", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-733]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-733")], .matchExpressions = []}}}}, .addresses = ["10.10.73.3"], .span = ["testNode-73"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a6a5b817-35a6-5f9a-be9a-bf5262fe4fd6"}, .name = "a6a5b817-35a6-5f9a-be9a-bf5262fe4fd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-744]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-744")], .matchExpressions = []}}}}, .addresses = ["10.10.74.4"], .span = ["testNode-74"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ab82c49b-2783-5c78-9931-7d6b0fbb5912"}, .name = "ab82c49b-2783-5c78-9931-7d6b0fbb5912", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-754]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-754")], .matchExpressions = []}}}}, .addresses = ["10.10.75.4"], .span = ["testNode-75"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b22c4819-b614-5ac5-b1ac-95043bf74c79"}, .name = "b22c4819-b614-5ac5-b1ac-95043bf74c79", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-729]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-729")], .matchExpressions = []}}}}, .addresses = ["10.10.72.9"], .span = ["testNode-72"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b95cfcba-dd98-56ce-85e1-398a0acdad1b"}, .name = "b95cfcba-dd98-56ce-85e1-398a0acdad1b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-736]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-736")], .matchExpressions = []}}}}, .addresses = ["10.10.73.6"], .span = ["testNode-73"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bdd84bd1-3356-548b-8d43-8a862a43f544"}, .name = "bdd84bd1-3356-548b-8d43-8a862a43f544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-730]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-730")], .matchExpressions = []}}}}, .addresses = ["10.10.73.0"], .span = ["testNode-72"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cec4244a-7b81-5c2d-a20c-783046f610c8"}, .name = "cec4244a-7b81-5c2d-a20c-783046f610c8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-741]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-741")], .matchExpressions = []}}}}, .addresses = ["10.10.74.1"], .span = ["testNode-74"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d4e0097b-2530-50a1-a9e9-0292d2e35dd6"}, .name = "d4e0097b-2530-50a1-a9e9-0292d2e35dd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-748]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-748")], .matchExpressions = []}}}}, .addresses = ["10.10.74.8"], .span = ["testNode-74"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d7252600-a390-56b7-97bd-cf4a413f0c84"}, .name = "d7252600-a390-56b7-97bd-cf4a413f0c84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-757]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-757")], .matchExpressions = []}}}}, .addresses = ["10.10.75.7"], .span = ["testNode-75"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dd9e1fc6-07e9-5cbb-8414-7bf3d9b85b6c"}, .name = "dd9e1fc6-07e9-5cbb-8414-7bf3d9b85b6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-737]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-737")], .matchExpressions = []}}}}, .addresses = ["10.10.73.7"], .span = ["testNode-73"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ef9add9a-b595-5210-9cf1-0f731acd2823"}, .name = "ef9add9a-b595-5210-9cf1-0f731acd2823", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-746]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-746")], .matchExpressions = []}}}}, .addresses = ["10.10.74.6"], .span = ["testNode-74"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f94a2600-3b56-59eb-960b-bf7c66c1eaf0"}, .name = "f94a2600-3b56-59eb-960b-bf7c66c1eaf0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-745]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-745")], .matchExpressions = []}}}}, .addresses = ["10.10.74.5"], .span = ["testNode-74"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0f1db36c-7be5-5373-a007-56b0f06a994d"}, .name = "0f1db36c-7be5-5373-a007-56b0f06a994d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-750]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-750")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-750", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "126f73b3-5254-59a2-82e2-852ddea6a25f"}, .name = "126f73b3-5254-59a2-82e2-852ddea6a25f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-756]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-756")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-756", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "185a71fd-ef8b-56d1-a4c5-52f3a93e5c9d"}, .name = "185a71fd-ef8b-56d1-a4c5-52f3a93e5c9d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-727]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-727")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-727", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "199f4778-09d6-5cfa-abb3-e9bb7691145d"}, .name = "199f4778-09d6-5cfa-abb3-e9bb7691145d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-731]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-731")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-731", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "19e662b0-6edf-5f6f-8e72-979d948c6e1a"}, .name = "19e662b0-6edf-5f6f-8e72-979d948c6e1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-742]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-742")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-742", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1a5ff1dd-09d2-57b9-bfa3-9b02a9373b0f"}, .name = "1a5ff1dd-09d2-57b9-bfa3-9b02a9373b0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-753]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-753")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-753", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1bf41345-ee85-569b-a022-c36ff6a5c558"}, .name = "1bf41345-ee85-569b-a022-c36ff6a5c558", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-734]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-734")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-734", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2151c186-1824-5ed9-8bea-9c68a5330753"}, .name = "2151c186-1824-5ed9-8bea-9c68a5330753", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-738]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-738")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-738", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3358e076-66f4-5d42-a1d5-707cecb8f70b"}, .name = "3358e076-66f4-5d42-a1d5-707cecb8f70b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-732]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-732")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-732", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3b0ad515-9a94-53ce-be8c-6f3761b97a7a"}, .name = "3b0ad515-9a94-53ce-be8c-6f3761b97a7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-749]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-749")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-749", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "483f1a9c-687d-5d54-bf85-977ad4a36bdb"}, .name = "483f1a9c-687d-5d54-bf85-977ad4a36bdb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-728]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-728")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-728", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5b32c7d3-ede1-5586-a7ca-da8686051b14"}, .name = "5b32c7d3-ede1-5586-a7ca-da8686051b14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-755]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-755")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-755", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5d059696-d667-5b5c-8d20-23b19ef421d9"}, .name = "5d059696-d667-5b5c-8d20-23b19ef421d9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-743]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-743")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-743", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5f738ef9-dedf-5309-a62d-53845b5a1a4e"}, .name = "5f738ef9-dedf-5309-a62d-53845b5a1a4e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-758]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-758")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-758", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "766b86a4-0dcc-521d-8bb6-d27d78acb693"}, .name = "766b86a4-0dcc-521d-8bb6-d27d78acb693", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-740]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-740")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-740", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "79a91e52-4b0b-53a7-9959-20ebf048e319"}, .name = "79a91e52-4b0b-53a7-9959-20ebf048e319", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-751]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-751")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-751", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "879ec2e7-3b11-5170-98b0-b4a91d2bb3c7"}, .name = "879ec2e7-3b11-5170-98b0-b4a91d2bb3c7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-739]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-739")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-739", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9397b218-249a-57dd-be98-520d9cba2474"}, .name = "9397b218-249a-57dd-be98-520d9cba2474", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-747]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-747")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-747", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9af4e040-689a-54a9-ba22-862a631596bd"}, .name = "9af4e040-689a-54a9-ba22-862a631596bd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-735]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-735")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-735", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9c2bd9ff-ca37-5764-95cb-39133fbb2aa2"}, .name = "9c2bd9ff-ca37-5764-95cb-39133fbb2aa2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-752]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-752")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-752", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9f1f9d0c-129c-5a6a-a162-653adf02f281"}, .name = "9f1f9d0c-129c-5a6a-a162-653adf02f281", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-733]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-733")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-733", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a6a5b817-35a6-5f9a-be9a-bf5262fe4fd6"}, .name = "a6a5b817-35a6-5f9a-be9a-bf5262fe4fd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-744]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-744")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-744", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ab82c49b-2783-5c78-9931-7d6b0fbb5912"}, .name = "ab82c49b-2783-5c78-9931-7d6b0fbb5912", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-754]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-754")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-754", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b22c4819-b614-5ac5-b1ac-95043bf74c79"}, .name = "b22c4819-b614-5ac5-b1ac-95043bf74c79", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-729]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-729")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-729", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b95cfcba-dd98-56ce-85e1-398a0acdad1b"}, .name = "b95cfcba-dd98-56ce-85e1-398a0acdad1b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-736]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-736")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-736", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bdd84bd1-3356-548b-8d43-8a862a43f544"}, .name = "bdd84bd1-3356-548b-8d43-8a862a43f544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-730]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-730")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-730", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cec4244a-7b81-5c2d-a20c-783046f610c8"}, .name = "cec4244a-7b81-5c2d-a20c-783046f610c8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-741]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-741")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-741", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d4e0097b-2530-50a1-a9e9-0292d2e35dd6"}, .name = "d4e0097b-2530-50a1-a9e9-0292d2e35dd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-748]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-748")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-748", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d7252600-a390-56b7-97bd-cf4a413f0c84"}, .name = "d7252600-a390-56b7-97bd-cf4a413f0c84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-757]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-757")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-757", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dd9e1fc6-07e9-5cbb-8414-7bf3d9b85b6c"}, .name = "dd9e1fc6-07e9-5cbb-8414-7bf3d9b85b6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-737]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-737")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-737", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ef9add9a-b595-5210-9cf1-0f731acd2823"}, .name = "ef9add9a-b595-5210-9cf1-0f731acd2823", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-746]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-746")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-746", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f94a2600-3b56-59eb-960b-bf7c66c1eaf0"}, .name = "f94a2600-3b56-59eb-960b-bf7c66c1eaf0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-745]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-745")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-745", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-727"}, .name = "testNP-727", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["483f1a9c-687d-5d54-bf85-977ad4a36bdb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["185a71fd-ef8b-56d1-a4c5-52f3a93e5c9d"]}, .span = ["testNode-72"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-728"}, .name = "testNP-728", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b22c4819-b614-5ac5-b1ac-95043bf74c79"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["483f1a9c-687d-5d54-bf85-977ad4a36bdb"]}, .span = ["testNode-72"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-729"}, .name = "testNP-729", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bdd84bd1-3356-548b-8d43-8a862a43f544"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b22c4819-b614-5ac5-b1ac-95043bf74c79"]}, .span = ["testNode-72"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-730"}, .name = "testNP-730", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["199f4778-09d6-5cfa-abb3-e9bb7691145d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bdd84bd1-3356-548b-8d43-8a862a43f544"]}, .span = ["testNode-73"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-731"}, .name = "testNP-731", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3358e076-66f4-5d42-a1d5-707cecb8f70b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["199f4778-09d6-5cfa-abb3-e9bb7691145d"]}, .span = ["testNode-73"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-732"}, .name = "testNP-732", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9f1f9d0c-129c-5a6a-a162-653adf02f281"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3358e076-66f4-5d42-a1d5-707cecb8f70b"]}, .span = ["testNode-73"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-733"}, .name = "testNP-733", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1bf41345-ee85-569b-a022-c36ff6a5c558"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9f1f9d0c-129c-5a6a-a162-653adf02f281"]}, .span = ["testNode-73"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-734"}, .name = "testNP-734", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9af4e040-689a-54a9-ba22-862a631596bd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1bf41345-ee85-569b-a022-c36ff6a5c558"]}, .span = ["testNode-73"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-735"}, .name = "testNP-735", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b95cfcba-dd98-56ce-85e1-398a0acdad1b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9af4e040-689a-54a9-ba22-862a631596bd"]}, .span = ["testNode-73"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-736"}, .name = "testNP-736", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dd9e1fc6-07e9-5cbb-8414-7bf3d9b85b6c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b95cfcba-dd98-56ce-85e1-398a0acdad1b"]}, .span = ["testNode-73"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-737"}, .name = "testNP-737", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2151c186-1824-5ed9-8bea-9c68a5330753"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dd9e1fc6-07e9-5cbb-8414-7bf3d9b85b6c"]}, .span = ["testNode-73"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-738"}, .name = "testNP-738", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["879ec2e7-3b11-5170-98b0-b4a91d2bb3c7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2151c186-1824-5ed9-8bea-9c68a5330753"]}, .span = ["testNode-73"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-739"}, .name = "testNP-739", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["766b86a4-0dcc-521d-8bb6-d27d78acb693"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["879ec2e7-3b11-5170-98b0-b4a91d2bb3c7"]}, .span = ["testNode-73"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-740"}, .name = "testNP-740", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cec4244a-7b81-5c2d-a20c-783046f610c8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["766b86a4-0dcc-521d-8bb6-d27d78acb693"]}, .span = ["testNode-74"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-741"}, .name = "testNP-741", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["19e662b0-6edf-5f6f-8e72-979d948c6e1a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cec4244a-7b81-5c2d-a20c-783046f610c8"]}, .span = ["testNode-74"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-742"}, .name = "testNP-742", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5d059696-d667-5b5c-8d20-23b19ef421d9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["19e662b0-6edf-5f6f-8e72-979d948c6e1a"]}, .span = ["testNode-74"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-743"}, .name = "testNP-743", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a6a5b817-35a6-5f9a-be9a-bf5262fe4fd6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5d059696-d667-5b5c-8d20-23b19ef421d9"]}, .span = ["testNode-74"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-744"}, .name = "testNP-744", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f94a2600-3b56-59eb-960b-bf7c66c1eaf0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a6a5b817-35a6-5f9a-be9a-bf5262fe4fd6"]}, .span = ["testNode-74"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-745"}, .name = "testNP-745", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ef9add9a-b595-5210-9cf1-0f731acd2823"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f94a2600-3b56-59eb-960b-bf7c66c1eaf0"]}, .span = ["testNode-74"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-746"}, .name = "testNP-746", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9397b218-249a-57dd-be98-520d9cba2474"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ef9add9a-b595-5210-9cf1-0f731acd2823"]}, .span = ["testNode-74"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-747"}, .name = "testNP-747", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d4e0097b-2530-50a1-a9e9-0292d2e35dd6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9397b218-249a-57dd-be98-520d9cba2474"]}, .span = ["testNode-74"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-748"}, .name = "testNP-748", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3b0ad515-9a94-53ce-be8c-6f3761b97a7a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d4e0097b-2530-50a1-a9e9-0292d2e35dd6"]}, .span = ["testNode-74"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-749"}, .name = "testNP-749", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0f1db36c-7be5-5373-a007-56b0f06a994d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3b0ad515-9a94-53ce-be8c-6f3761b97a7a"]}, .span = ["testNode-74"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-750"}, .name = "testNP-750", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["79a91e52-4b0b-53a7-9959-20ebf048e319"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0f1db36c-7be5-5373-a007-56b0f06a994d"]}, .span = ["testNode-75"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-751"}, .name = "testNP-751", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9c2bd9ff-ca37-5764-95cb-39133fbb2aa2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["79a91e52-4b0b-53a7-9959-20ebf048e319"]}, .span = ["testNode-75"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-752"}, .name = "testNP-752", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1a5ff1dd-09d2-57b9-bfa3-9b02a9373b0f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9c2bd9ff-ca37-5764-95cb-39133fbb2aa2"]}, .span = ["testNode-75"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-753"}, .name = "testNP-753", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ab82c49b-2783-5c78-9931-7d6b0fbb5912"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1a5ff1dd-09d2-57b9-bfa3-9b02a9373b0f"]}, .span = ["testNode-75"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-754"}, .name = "testNP-754", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5b32c7d3-ede1-5586-a7ca-da8686051b14"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ab82c49b-2783-5c78-9931-7d6b0fbb5912"]}, .span = ["testNode-75"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-755"}, .name = "testNP-755", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["126f73b3-5254-59a2-82e2-852ddea6a25f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5b32c7d3-ede1-5586-a7ca-da8686051b14"]}, .span = ["testNode-75"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-756"}, .name = "testNP-756", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d7252600-a390-56b7-97bd-cf4a413f0c84"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["126f73b3-5254-59a2-82e2-852ddea6a25f"]}, .span = ["testNode-75"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-757"}, .name = "testNP-757", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5f738ef9-dedf-5309-a62d-53845b5a1a4e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d7252600-a390-56b7-97bd-cf4a413f0c84"]}, .span = ["testNode-75"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-758"}, .name = "testNP-758", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["034f0803-0c7b-5be1-a6cd-fa18721f7aad"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5f738ef9-dedf-5309-a62d-53845b5a1a4e"]}, .span = ["testNode-75"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0b6935e0-4256-5914-bfb1-bb3186d23ffd"}, .name = "0b6935e0-4256-5914-bfb1-bb3186d23ffd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-777]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-777")], .matchExpressions = []}}}}, .addresses = ["10.10.77.7"], .span = ["testNode-77"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0d48f67b-4f7e-5de0-84cd-517bbdc76002"}, .name = "0d48f67b-4f7e-5de0-84cd-517bbdc76002", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-760]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-760")], .matchExpressions = []}}}}, .addresses = ["10.10.76.0"], .span = ["testNode-75"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "103d4a84-040b-5d32-b625-c81009333db4"}, .name = "103d4a84-040b-5d32-b625-c81009333db4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-782]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-782")], .matchExpressions = []}}}}, .addresses = ["10.10.78.2"], .span = ["testNode-78"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2c7db17e-58e7-55e0-9f24-671a97b1ff69"}, .name = "2c7db17e-58e7-55e0-9f24-671a97b1ff69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-785]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-785")], .matchExpressions = []}}}}, .addresses = ["10.10.78.5"], .span = ["testNode-78"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "364253f0-a667-50f8-9667-0b11e261bcee"}, .name = "364253f0-a667-50f8-9667-0b11e261bcee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-766]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-766")], .matchExpressions = []}}}}, .addresses = ["10.10.76.6"], .span = ["testNode-76"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3cb7d641-1154-598f-8375-57a27086ee89"}, .name = "3cb7d641-1154-598f-8375-57a27086ee89", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-789]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-789")], .matchExpressions = []}}}}, .addresses = ["10.10.78.9"], .span = ["testNode-78"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4b22ef70-1527-55d5-ab1d-eddbd30bc34c"}, .name = "4b22ef70-1527-55d5-ab1d-eddbd30bc34c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-787]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-787")], .matchExpressions = []}}}}, .addresses = ["10.10.78.7"], .span = ["testNode-78"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4be28b13-70ae-536b-a586-e35cc4668122"}, .name = "4be28b13-70ae-536b-a586-e35cc4668122", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-764]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-764")], .matchExpressions = []}}}}, .addresses = ["10.10.76.4"], .span = ["testNode-76"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "59f83071-820d-5756-9459-0f463713e892"}, .name = "59f83071-820d-5756-9459-0f463713e892", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-769]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-769")], .matchExpressions = []}}}}, .addresses = ["10.10.76.9"], .span = ["testNode-76"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "61d77ff5-8035-5e87-8cd3-d82d6f9e52c4"}, .name = "61d77ff5-8035-5e87-8cd3-d82d6f9e52c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-772]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-772")], .matchExpressions = []}}}}, .addresses = ["10.10.77.2"], .span = ["testNode-77"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6df8f8d9-6581-5038-bee3-4ec6d252207f"}, .name = "6df8f8d9-6581-5038-bee3-4ec6d252207f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-780]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-780")], .matchExpressions = []}}}}, .addresses = ["10.10.78.0"], .span = ["testNode-77"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6dfa4f82-8ce7-52be-83c9-cf80986f3ee5"}, .name = "6dfa4f82-8ce7-52be-83c9-cf80986f3ee5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-770]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-770")], .matchExpressions = []}}}}, .addresses = ["10.10.77.0"], .span = ["testNode-76"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7565db7f-b84e-54ca-af30-88d9b589985f"}, .name = "7565db7f-b84e-54ca-af30-88d9b589985f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-783]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-783")], .matchExpressions = []}}}}, .addresses = ["10.10.78.3"], .span = ["testNode-78"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7e3e48b3-e4b2-5bef-875e-51f352e44d6c"}, .name = "7e3e48b3-e4b2-5bef-875e-51f352e44d6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-761]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-761")], .matchExpressions = []}}}}, .addresses = ["10.10.76.1"], .span = ["testNode-76"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "808cc2b4-23d9-591f-b752-0ab0b7006486"}, .name = "808cc2b4-23d9-591f-b752-0ab0b7006486", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-763]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-763")], .matchExpressions = []}}}}, .addresses = ["10.10.76.3"], .span = ["testNode-76"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8942f3f2-772e-5aa4-b8a1-20023b26019d"}, .name = "8942f3f2-772e-5aa4-b8a1-20023b26019d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-775]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-775")], .matchExpressions = []}}}}, .addresses = ["10.10.77.5"], .span = ["testNode-77"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "91445e91-446d-5ae2-92a0-8ba2d8116f1f"}, .name = "91445e91-446d-5ae2-92a0-8ba2d8116f1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-776]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-776")], .matchExpressions = []}}}}, .addresses = ["10.10.77.6"], .span = ["testNode-77"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "93a7bcdf-8535-5422-94ba-87ce7acfbfa7"}, .name = "93a7bcdf-8535-5422-94ba-87ce7acfbfa7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-788]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-788")], .matchExpressions = []}}}}, .addresses = ["10.10.78.8"], .span = ["testNode-78"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "94c613bf-5e11-5c20-b0b1-1ab014bd410a"}, .name = "94c613bf-5e11-5c20-b0b1-1ab014bd410a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-784]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-784")], .matchExpressions = []}}}}, .addresses = ["10.10.78.4"], .span = ["testNode-78"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "96c4a092-9489-50c5-bf37-005a45fa0e26"}, .name = "96c4a092-9489-50c5-bf37-005a45fa0e26", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-767]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-767")], .matchExpressions = []}}}}, .addresses = ["10.10.76.7"], .span = ["testNode-76"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a0e89b76-615a-5c59-a0c6-027039619f35"}, .name = "a0e89b76-615a-5c59-a0c6-027039619f35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-778]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-778")], .matchExpressions = []}}}}, .addresses = ["10.10.77.8"], .span = ["testNode-77"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "abf65f51-f2db-55f3-bfcd-94ef814b0972"}, .name = "abf65f51-f2db-55f3-bfcd-94ef814b0972", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-786]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-786")], .matchExpressions = []}}}}, .addresses = ["10.10.78.6"], .span = ["testNode-78"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b6fa082a-45da-5cd2-97d1-e1d11cc63b91"}, .name = "b6fa082a-45da-5cd2-97d1-e1d11cc63b91", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-781]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-781")], .matchExpressions = []}}}}, .addresses = ["10.10.78.1"], .span = ["testNode-78"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ba97e699-7b2e-551a-a089-2d4fc5e17ea0"}, .name = "ba97e699-7b2e-551a-a089-2d4fc5e17ea0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-779]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-779")], .matchExpressions = []}}}}, .addresses = ["10.10.77.9"], .span = ["testNode-77"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c2352142-f3df-5c0a-a70c-3265e0e16c14"}, .name = "c2352142-f3df-5c0a-a70c-3265e0e16c14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-771]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-771")], .matchExpressions = []}}}}, .addresses = ["10.10.77.1"], .span = ["testNode-77"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c36f2f89-0d57-59d7-9b3f-e9d844200e27"}, .name = "c36f2f89-0d57-59d7-9b3f-e9d844200e27", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-774]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-774")], .matchExpressions = []}}}}, .addresses = ["10.10.77.4"], .span = ["testNode-77"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cb0eec6f-b6a8-5a4f-b75a-985e6c5d70b2"}, .name = "cb0eec6f-b6a8-5a4f-b75a-985e6c5d70b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-791]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-791")], .matchExpressions = []}}}}, .addresses = ["10.10.79.1"], .span = ["testNode-79"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d6156ed5-4bc9-53fb-92f6-705c2c15f639"}, .name = "d6156ed5-4bc9-53fb-92f6-705c2c15f639", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-765]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-765")], .matchExpressions = []}}}}, .addresses = ["10.10.76.5"], .span = ["testNode-76"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e65456ab-3523-5706-ac30-fc8f7e431803"}, .name = "e65456ab-3523-5706-ac30-fc8f7e431803", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-790]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-790")], .matchExpressions = []}}}}, .addresses = ["10.10.79.0"], .span = ["testNode-78"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ed1aa1d6-ccb0-569f-bea3-0e902d681d0d"}, .name = "ed1aa1d6-ccb0-569f-bea3-0e902d681d0d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-762]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-762")], .matchExpressions = []}}}}, .addresses = ["10.10.76.2"], .span = ["testNode-76"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fa9629ba-66b5-578b-b753-884370a7fa75"}, .name = "fa9629ba-66b5-578b-b753-884370a7fa75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-768]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-768")], .matchExpressions = []}}}}, .addresses = ["10.10.76.8"], .span = ["testNode-76"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fc334cc6-87c1-5f4c-963a-8583abaee781"}, .name = "fc334cc6-87c1-5f4c-963a-8583abaee781", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-773]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-773")], .matchExpressions = []}}}}, .addresses = ["10.10.77.3"], .span = ["testNode-77"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "034f0803-0c7b-5be1-a6cd-fa18721f7aad"}, .name = "034f0803-0c7b-5be1-a6cd-fa18721f7aad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-759]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-759")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-759", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0b6935e0-4256-5914-bfb1-bb3186d23ffd"}, .name = "0b6935e0-4256-5914-bfb1-bb3186d23ffd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-777]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-777")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-777", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0d48f67b-4f7e-5de0-84cd-517bbdc76002"}, .name = "0d48f67b-4f7e-5de0-84cd-517bbdc76002", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-760]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-760")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-760", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "103d4a84-040b-5d32-b625-c81009333db4"}, .name = "103d4a84-040b-5d32-b625-c81009333db4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-782]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-782")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-782", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2c7db17e-58e7-55e0-9f24-671a97b1ff69"}, .name = "2c7db17e-58e7-55e0-9f24-671a97b1ff69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-785]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-785")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-785", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "364253f0-a667-50f8-9667-0b11e261bcee"}, .name = "364253f0-a667-50f8-9667-0b11e261bcee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-766]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-766")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-766", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3cb7d641-1154-598f-8375-57a27086ee89"}, .name = "3cb7d641-1154-598f-8375-57a27086ee89", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-789]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-789")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-789", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4b22ef70-1527-55d5-ab1d-eddbd30bc34c"}, .name = "4b22ef70-1527-55d5-ab1d-eddbd30bc34c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-787]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-787")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-787", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4be28b13-70ae-536b-a586-e35cc4668122"}, .name = "4be28b13-70ae-536b-a586-e35cc4668122", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-764]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-764")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-764", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "59f83071-820d-5756-9459-0f463713e892"}, .name = "59f83071-820d-5756-9459-0f463713e892", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-769]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-769")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-769", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "61d77ff5-8035-5e87-8cd3-d82d6f9e52c4"}, .name = "61d77ff5-8035-5e87-8cd3-d82d6f9e52c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-772]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-772")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-772", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6df8f8d9-6581-5038-bee3-4ec6d252207f"}, .name = "6df8f8d9-6581-5038-bee3-4ec6d252207f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-780]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-780")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-780", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6dfa4f82-8ce7-52be-83c9-cf80986f3ee5"}, .name = "6dfa4f82-8ce7-52be-83c9-cf80986f3ee5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-770]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-770")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-770", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7565db7f-b84e-54ca-af30-88d9b589985f"}, .name = "7565db7f-b84e-54ca-af30-88d9b589985f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-783]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-783")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-783", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7e3e48b3-e4b2-5bef-875e-51f352e44d6c"}, .name = "7e3e48b3-e4b2-5bef-875e-51f352e44d6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-761]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-761")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-761", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "808cc2b4-23d9-591f-b752-0ab0b7006486"}, .name = "808cc2b4-23d9-591f-b752-0ab0b7006486", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-763]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-763")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-763", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8942f3f2-772e-5aa4-b8a1-20023b26019d"}, .name = "8942f3f2-772e-5aa4-b8a1-20023b26019d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-775]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-775")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-775", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "91445e91-446d-5ae2-92a0-8ba2d8116f1f"}, .name = "91445e91-446d-5ae2-92a0-8ba2d8116f1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-776]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-776")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-776", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "93a7bcdf-8535-5422-94ba-87ce7acfbfa7"}, .name = "93a7bcdf-8535-5422-94ba-87ce7acfbfa7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-788]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-788")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-788", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "94c613bf-5e11-5c20-b0b1-1ab014bd410a"}, .name = "94c613bf-5e11-5c20-b0b1-1ab014bd410a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-784]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-784")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-784", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "96c4a092-9489-50c5-bf37-005a45fa0e26"}, .name = "96c4a092-9489-50c5-bf37-005a45fa0e26", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-767]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-767")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-767", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a0e89b76-615a-5c59-a0c6-027039619f35"}, .name = "a0e89b76-615a-5c59-a0c6-027039619f35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-778]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-778")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-778", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "abf65f51-f2db-55f3-bfcd-94ef814b0972"}, .name = "abf65f51-f2db-55f3-bfcd-94ef814b0972", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-786]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-786")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-786", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b6fa082a-45da-5cd2-97d1-e1d11cc63b91"}, .name = "b6fa082a-45da-5cd2-97d1-e1d11cc63b91", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-781]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-781")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-781", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ba97e699-7b2e-551a-a089-2d4fc5e17ea0"}, .name = "ba97e699-7b2e-551a-a089-2d4fc5e17ea0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-779]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-779")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-779", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c2352142-f3df-5c0a-a70c-3265e0e16c14"}, .name = "c2352142-f3df-5c0a-a70c-3265e0e16c14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-771]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-771")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-771", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c36f2f89-0d57-59d7-9b3f-e9d844200e27"}, .name = "c36f2f89-0d57-59d7-9b3f-e9d844200e27", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-774]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-774")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-774", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d6156ed5-4bc9-53fb-92f6-705c2c15f639"}, .name = "d6156ed5-4bc9-53fb-92f6-705c2c15f639", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-765]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-765")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-765", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e65456ab-3523-5706-ac30-fc8f7e431803"}, .name = "e65456ab-3523-5706-ac30-fc8f7e431803", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-790]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-790")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-790", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ed1aa1d6-ccb0-569f-bea3-0e902d681d0d"}, .name = "ed1aa1d6-ccb0-569f-bea3-0e902d681d0d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-762]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-762")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-762", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fa9629ba-66b5-578b-b753-884370a7fa75"}, .name = "fa9629ba-66b5-578b-b753-884370a7fa75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-768]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-768")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-768", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fc334cc6-87c1-5f4c-963a-8583abaee781"}, .name = "fc334cc6-87c1-5f4c-963a-8583abaee781", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-773]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-773")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-773", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-759"}, .name = "testNP-759", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0d48f67b-4f7e-5de0-84cd-517bbdc76002"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["034f0803-0c7b-5be1-a6cd-fa18721f7aad"]}, .span = ["testNode-75"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-760"}, .name = "testNP-760", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7e3e48b3-e4b2-5bef-875e-51f352e44d6c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0d48f67b-4f7e-5de0-84cd-517bbdc76002"]}, .span = ["testNode-76"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-761"}, .name = "testNP-761", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ed1aa1d6-ccb0-569f-bea3-0e902d681d0d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7e3e48b3-e4b2-5bef-875e-51f352e44d6c"]}, .span = ["testNode-76"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-762"}, .name = "testNP-762", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["808cc2b4-23d9-591f-b752-0ab0b7006486"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ed1aa1d6-ccb0-569f-bea3-0e902d681d0d"]}, .span = ["testNode-76"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-763"}, .name = "testNP-763", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4be28b13-70ae-536b-a586-e35cc4668122"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["808cc2b4-23d9-591f-b752-0ab0b7006486"]}, .span = ["testNode-76"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-764"}, .name = "testNP-764", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d6156ed5-4bc9-53fb-92f6-705c2c15f639"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4be28b13-70ae-536b-a586-e35cc4668122"]}, .span = ["testNode-76"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-765"}, .name = "testNP-765", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["364253f0-a667-50f8-9667-0b11e261bcee"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d6156ed5-4bc9-53fb-92f6-705c2c15f639"]}, .span = ["testNode-76"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-766"}, .name = "testNP-766", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["96c4a092-9489-50c5-bf37-005a45fa0e26"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["364253f0-a667-50f8-9667-0b11e261bcee"]}, .span = ["testNode-76"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-767"}, .name = "testNP-767", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fa9629ba-66b5-578b-b753-884370a7fa75"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["96c4a092-9489-50c5-bf37-005a45fa0e26"]}, .span = ["testNode-76"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-768"}, .name = "testNP-768", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["59f83071-820d-5756-9459-0f463713e892"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fa9629ba-66b5-578b-b753-884370a7fa75"]}, .span = ["testNode-76"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-769"}, .name = "testNP-769", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6dfa4f82-8ce7-52be-83c9-cf80986f3ee5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["59f83071-820d-5756-9459-0f463713e892"]}, .span = ["testNode-76"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-770"}, .name = "testNP-770", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c2352142-f3df-5c0a-a70c-3265e0e16c14"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6dfa4f82-8ce7-52be-83c9-cf80986f3ee5"]}, .span = ["testNode-77"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-771"}, .name = "testNP-771", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["61d77ff5-8035-5e87-8cd3-d82d6f9e52c4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c2352142-f3df-5c0a-a70c-3265e0e16c14"]}, .span = ["testNode-77"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-772"}, .name = "testNP-772", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fc334cc6-87c1-5f4c-963a-8583abaee781"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["61d77ff5-8035-5e87-8cd3-d82d6f9e52c4"]}, .span = ["testNode-77"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-773"}, .name = "testNP-773", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c36f2f89-0d57-59d7-9b3f-e9d844200e27"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fc334cc6-87c1-5f4c-963a-8583abaee781"]}, .span = ["testNode-77"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-774"}, .name = "testNP-774", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8942f3f2-772e-5aa4-b8a1-20023b26019d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c36f2f89-0d57-59d7-9b3f-e9d844200e27"]}, .span = ["testNode-77"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-775"}, .name = "testNP-775", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["91445e91-446d-5ae2-92a0-8ba2d8116f1f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8942f3f2-772e-5aa4-b8a1-20023b26019d"]}, .span = ["testNode-77"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-776"}, .name = "testNP-776", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0b6935e0-4256-5914-bfb1-bb3186d23ffd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["91445e91-446d-5ae2-92a0-8ba2d8116f1f"]}, .span = ["testNode-77"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-777"}, .name = "testNP-777", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a0e89b76-615a-5c59-a0c6-027039619f35"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0b6935e0-4256-5914-bfb1-bb3186d23ffd"]}, .span = ["testNode-77"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-778"}, .name = "testNP-778", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ba97e699-7b2e-551a-a089-2d4fc5e17ea0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a0e89b76-615a-5c59-a0c6-027039619f35"]}, .span = ["testNode-77"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-779"}, .name = "testNP-779", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6df8f8d9-6581-5038-bee3-4ec6d252207f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ba97e699-7b2e-551a-a089-2d4fc5e17ea0"]}, .span = ["testNode-77"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-780"}, .name = "testNP-780", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b6fa082a-45da-5cd2-97d1-e1d11cc63b91"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6df8f8d9-6581-5038-bee3-4ec6d252207f"]}, .span = ["testNode-78"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-781"}, .name = "testNP-781", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["103d4a84-040b-5d32-b625-c81009333db4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b6fa082a-45da-5cd2-97d1-e1d11cc63b91"]}, .span = ["testNode-78"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-782"}, .name = "testNP-782", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7565db7f-b84e-54ca-af30-88d9b589985f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["103d4a84-040b-5d32-b625-c81009333db4"]}, .span = ["testNode-78"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-783"}, .name = "testNP-783", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["94c613bf-5e11-5c20-b0b1-1ab014bd410a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7565db7f-b84e-54ca-af30-88d9b589985f"]}, .span = ["testNode-78"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-784"}, .name = "testNP-784", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2c7db17e-58e7-55e0-9f24-671a97b1ff69"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["94c613bf-5e11-5c20-b0b1-1ab014bd410a"]}, .span = ["testNode-78"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-785"}, .name = "testNP-785", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["abf65f51-f2db-55f3-bfcd-94ef814b0972"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2c7db17e-58e7-55e0-9f24-671a97b1ff69"]}, .span = ["testNode-78"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-786"}, .name = "testNP-786", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4b22ef70-1527-55d5-ab1d-eddbd30bc34c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["abf65f51-f2db-55f3-bfcd-94ef814b0972"]}, .span = ["testNode-78"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-787"}, .name = "testNP-787", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["93a7bcdf-8535-5422-94ba-87ce7acfbfa7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4b22ef70-1527-55d5-ab1d-eddbd30bc34c"]}, .span = ["testNode-78"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-788"}, .name = "testNP-788", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3cb7d641-1154-598f-8375-57a27086ee89"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["93a7bcdf-8535-5422-94ba-87ce7acfbfa7"]}, .span = ["testNode-78"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-789"}, .name = "testNP-789", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e65456ab-3523-5706-ac30-fc8f7e431803"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3cb7d641-1154-598f-8375-57a27086ee89"]}, .span = ["testNode-78"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-790"}, .name = "testNP-790", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cb0eec6f-b6a8-5a4f-b75a-985e6c5d70b2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e65456ab-3523-5706-ac30-fc8f7e431803"]}, .span = ["testNode-79"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "14911454-5064-5a49-b39f-70881e83e0a1"}, .name = "14911454-5064-5a49-b39f-70881e83e0a1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-814]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-814")], .matchExpressions = []}}}}, .addresses = ["10.10.81.4"], .span = ["testNode-81"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "18a453b9-e840-55b2-a4fe-4770390c8b5e"}, .name = "18a453b9-e840-55b2-a4fe-4770390c8b5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-797]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-797")], .matchExpressions = []}}}}, .addresses = ["10.10.79.7"], .span = ["testNode-79"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "21ebe334-ac4f-5291-b727-bb9360b57c4f"}, .name = "21ebe334-ac4f-5291-b727-bb9360b57c4f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-812]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-812")], .matchExpressions = []}}}}, .addresses = ["10.10.81.2"], .span = ["testNode-81"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2929af49-e43a-5690-8369-9becfaed1e88"}, .name = "2929af49-e43a-5690-8369-9becfaed1e88", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-793]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-793")], .matchExpressions = []}}}}, .addresses = ["10.10.79.3"], .span = ["testNode-79"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3173868f-d1c1-5833-92a4-5f3bade4bc82"}, .name = "3173868f-d1c1-5833-92a4-5f3bade4bc82", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-818]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-818")], .matchExpressions = []}}}}, .addresses = ["10.10.81.8"], .span = ["testNode-81"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3a602d28-1cae-5539-9e3f-635334a04779"}, .name = "3a602d28-1cae-5539-9e3f-635334a04779", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-817]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-817")], .matchExpressions = []}}}}, .addresses = ["10.10.81.7"], .span = ["testNode-81"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "40370223-169e-592c-a72e-282c37521a99"}, .name = "40370223-169e-592c-a72e-282c37521a99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-807]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-807")], .matchExpressions = []}}}}, .addresses = ["10.10.80.7"], .span = ["testNode-80"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4099a91f-9177-5076-b5cb-6502c600e24b"}, .name = "4099a91f-9177-5076-b5cb-6502c600e24b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-804]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-804")], .matchExpressions = []}}}}, .addresses = ["10.10.80.4"], .span = ["testNode-80"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4524c279-f346-56a0-9d5d-985ea12e0f40"}, .name = "4524c279-f346-56a0-9d5d-985ea12e0f40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-819]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-819")], .matchExpressions = []}}}}, .addresses = ["10.10.81.9"], .span = ["testNode-81"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4a5fa417-6c34-5816-94e5-f1734c2e68ee"}, .name = "4a5fa417-6c34-5816-94e5-f1734c2e68ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-809]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-809")], .matchExpressions = []}}}}, .addresses = ["10.10.80.9"], .span = ["testNode-80"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "526279a2-4120-5047-aa67-d3c8f8a7bb40"}, .name = "526279a2-4120-5047-aa67-d3c8f8a7bb40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-810]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-810")], .matchExpressions = []}}}}, .addresses = ["10.10.81.0"], .span = ["testNode-80"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "60038a0d-fd8e-54aa-8452-6ea5e5160761"}, .name = "60038a0d-fd8e-54aa-8452-6ea5e5160761", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-816]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-816")], .matchExpressions = []}}}}, .addresses = ["10.10.81.6"], .span = ["testNode-81"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "64208996-7094-5d71-9837-c652c1aa3026"}, .name = "64208996-7094-5d71-9837-c652c1aa3026", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-795]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-795")], .matchExpressions = []}}}}, .addresses = ["10.10.79.5"], .span = ["testNode-79"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "688e4cb3-3a95-5913-94a2-db4a010b468d"}, .name = "688e4cb3-3a95-5913-94a2-db4a010b468d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-801]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-801")], .matchExpressions = []}}}}, .addresses = ["10.10.80.1"], .span = ["testNode-80"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "76c86c73-3019-59ec-aa8a-0df8b2fbb9d0"}, .name = "76c86c73-3019-59ec-aa8a-0df8b2fbb9d0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-820]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-820")], .matchExpressions = []}}}}, .addresses = ["10.10.82.0"], .span = ["testNode-81"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7efa1aad-40aa-59ad-a822-3769cb32dd5c"}, .name = "7efa1aad-40aa-59ad-a822-3769cb32dd5c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-811]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-811")], .matchExpressions = []}}}}, .addresses = ["10.10.81.1"], .span = ["testNode-81"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7f937db4-bdb5-528c-ace8-cbe018ccee0f"}, .name = "7f937db4-bdb5-528c-ace8-cbe018ccee0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-798]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-798")], .matchExpressions = []}}}}, .addresses = ["10.10.79.8"], .span = ["testNode-79"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "88c80b3f-32c3-5eba-85d5-8f37c4977317"}, .name = "88c80b3f-32c3-5eba-85d5-8f37c4977317", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-815]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-815")], .matchExpressions = []}}}}, .addresses = ["10.10.81.5"], .span = ["testNode-81"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "900a8077-9f63-58eb-a46c-7c99a55e9faf"}, .name = "900a8077-9f63-58eb-a46c-7c99a55e9faf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-796]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-796")], .matchExpressions = []}}}}, .addresses = ["10.10.79.6"], .span = ["testNode-79"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a950cc16-9a35-507a-b339-860754471d00"}, .name = "a950cc16-9a35-507a-b339-860754471d00", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-808]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-808")], .matchExpressions = []}}}}, .addresses = ["10.10.80.8"], .span = ["testNode-80"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bc3d9e38-bbaa-524d-84ee-9f90f77aaada"}, .name = "bc3d9e38-bbaa-524d-84ee-9f90f77aaada", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-794]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-794")], .matchExpressions = []}}}}, .addresses = ["10.10.79.4"], .span = ["testNode-79"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c2640ce5-1a94-54ad-b353-55f2bf1a5201"}, .name = "c2640ce5-1a94-54ad-b353-55f2bf1a5201", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-822]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-822")], .matchExpressions = []}}}}, .addresses = ["10.10.82.2"], .span = ["testNode-82"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d26b6dde-c06c-5668-b1a6-3ee9090b3e55"}, .name = "d26b6dde-c06c-5668-b1a6-3ee9090b3e55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-821]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-821")], .matchExpressions = []}}}}, .addresses = ["10.10.82.1"], .span = ["testNode-82"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d275520c-7813-5be9-b9e6-4d4ea2de7dcd"}, .name = "d275520c-7813-5be9-b9e6-4d4ea2de7dcd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-799]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-799")], .matchExpressions = []}}}}, .addresses = ["10.10.79.9"], .span = ["testNode-79"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dfa24557-3517-5812-af70-4b7273b9ced2"}, .name = "dfa24557-3517-5812-af70-4b7273b9ced2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-792]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-792")], .matchExpressions = []}}}}, .addresses = ["10.10.79.2"], .span = ["testNode-79"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "eb415914-03d2-565b-891b-72973b6edc59"}, .name = "eb415914-03d2-565b-891b-72973b6edc59", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-806]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-806")], .matchExpressions = []}}}}, .addresses = ["10.10.80.6"], .span = ["testNode-80"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "efe1c54b-4b6c-583d-9275-82362b9d2b52"}, .name = "efe1c54b-4b6c-583d-9275-82362b9d2b52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-823]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-823")], .matchExpressions = []}}}}, .addresses = ["10.10.82.3"], .span = ["testNode-82"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f7204da2-9380-5baa-9894-01ea261f4c1d"}, .name = "f7204da2-9380-5baa-9894-01ea261f4c1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-813]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-813")], .matchExpressions = []}}}}, .addresses = ["10.10.81.3"], .span = ["testNode-81"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f7b414c0-2062-5caa-95d5-1312767089d5"}, .name = "f7b414c0-2062-5caa-95d5-1312767089d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-800]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-800")], .matchExpressions = []}}}}, .addresses = ["10.10.80.0"], .span = ["testNode-79"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fc7c29de-d5d8-5784-8351-f586d60dba1c"}, .name = "fc7c29de-d5d8-5784-8351-f586d60dba1c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-802]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-802")], .matchExpressions = []}}}}, .addresses = ["10.10.80.2"], .span = ["testNode-80"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fdeb2088-36ba-5ffb-802c-b494193c1fe3"}, .name = "fdeb2088-36ba-5ffb-802c-b494193c1fe3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-805]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-805")], .matchExpressions = []}}}}, .addresses = ["10.10.80.5"], .span = ["testNode-80"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ff0fa885-413c-5541-8e8e-d684c7274d33"}, .name = "ff0fa885-413c-5541-8e8e-d684c7274d33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-803]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-803")], .matchExpressions = []}}}}, .addresses = ["10.10.80.3"], .span = ["testNode-80"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "14911454-5064-5a49-b39f-70881e83e0a1"}, .name = "14911454-5064-5a49-b39f-70881e83e0a1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-814]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-814")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-814", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "18a453b9-e840-55b2-a4fe-4770390c8b5e"}, .name = "18a453b9-e840-55b2-a4fe-4770390c8b5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-797]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-797")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-797", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "21ebe334-ac4f-5291-b727-bb9360b57c4f"}, .name = "21ebe334-ac4f-5291-b727-bb9360b57c4f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-812]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-812")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-812", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2929af49-e43a-5690-8369-9becfaed1e88"}, .name = "2929af49-e43a-5690-8369-9becfaed1e88", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-793]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-793")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-793", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3173868f-d1c1-5833-92a4-5f3bade4bc82"}, .name = "3173868f-d1c1-5833-92a4-5f3bade4bc82", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-818]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-818")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-818", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3a602d28-1cae-5539-9e3f-635334a04779"}, .name = "3a602d28-1cae-5539-9e3f-635334a04779", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-817]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-817")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-817", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "40370223-169e-592c-a72e-282c37521a99"}, .name = "40370223-169e-592c-a72e-282c37521a99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-807]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-807")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-807", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4099a91f-9177-5076-b5cb-6502c600e24b"}, .name = "4099a91f-9177-5076-b5cb-6502c600e24b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-804]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-804")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-804", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4524c279-f346-56a0-9d5d-985ea12e0f40"}, .name = "4524c279-f346-56a0-9d5d-985ea12e0f40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-819]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-819")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-819", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4a5fa417-6c34-5816-94e5-f1734c2e68ee"}, .name = "4a5fa417-6c34-5816-94e5-f1734c2e68ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-809]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-809")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-809", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "526279a2-4120-5047-aa67-d3c8f8a7bb40"}, .name = "526279a2-4120-5047-aa67-d3c8f8a7bb40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-810]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-810")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-810", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "60038a0d-fd8e-54aa-8452-6ea5e5160761"}, .name = "60038a0d-fd8e-54aa-8452-6ea5e5160761", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-816]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-816")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-816", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "64208996-7094-5d71-9837-c652c1aa3026"}, .name = "64208996-7094-5d71-9837-c652c1aa3026", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-795]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-795")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-795", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "688e4cb3-3a95-5913-94a2-db4a010b468d"}, .name = "688e4cb3-3a95-5913-94a2-db4a010b468d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-801]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-801")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-801", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "76c86c73-3019-59ec-aa8a-0df8b2fbb9d0"}, .name = "76c86c73-3019-59ec-aa8a-0df8b2fbb9d0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-820]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-820")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-820", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7efa1aad-40aa-59ad-a822-3769cb32dd5c"}, .name = "7efa1aad-40aa-59ad-a822-3769cb32dd5c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-811]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-811")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-811", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7f937db4-bdb5-528c-ace8-cbe018ccee0f"}, .name = "7f937db4-bdb5-528c-ace8-cbe018ccee0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-798]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-798")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-798", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "88c80b3f-32c3-5eba-85d5-8f37c4977317"}, .name = "88c80b3f-32c3-5eba-85d5-8f37c4977317", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-815]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-815")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-815", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "900a8077-9f63-58eb-a46c-7c99a55e9faf"}, .name = "900a8077-9f63-58eb-a46c-7c99a55e9faf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-796]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-796")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-796", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a950cc16-9a35-507a-b339-860754471d00"}, .name = "a950cc16-9a35-507a-b339-860754471d00", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-808]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-808")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-808", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bc3d9e38-bbaa-524d-84ee-9f90f77aaada"}, .name = "bc3d9e38-bbaa-524d-84ee-9f90f77aaada", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-794]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-794")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-794", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c2640ce5-1a94-54ad-b353-55f2bf1a5201"}, .name = "c2640ce5-1a94-54ad-b353-55f2bf1a5201", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-822]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-822")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-822", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cb0eec6f-b6a8-5a4f-b75a-985e6c5d70b2"}, .name = "cb0eec6f-b6a8-5a4f-b75a-985e6c5d70b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-791]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-791")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-791", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d26b6dde-c06c-5668-b1a6-3ee9090b3e55"}, .name = "d26b6dde-c06c-5668-b1a6-3ee9090b3e55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-821]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-821")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-821", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d275520c-7813-5be9-b9e6-4d4ea2de7dcd"}, .name = "d275520c-7813-5be9-b9e6-4d4ea2de7dcd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-799]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-799")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-799", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dfa24557-3517-5812-af70-4b7273b9ced2"}, .name = "dfa24557-3517-5812-af70-4b7273b9ced2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-792]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-792")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-792", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "eb415914-03d2-565b-891b-72973b6edc59"}, .name = "eb415914-03d2-565b-891b-72973b6edc59", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-806]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-806")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-806", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f7204da2-9380-5baa-9894-01ea261f4c1d"}, .name = "f7204da2-9380-5baa-9894-01ea261f4c1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-813]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-813")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-813", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f7b414c0-2062-5caa-95d5-1312767089d5"}, .name = "f7b414c0-2062-5caa-95d5-1312767089d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-800]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-800")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-800", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fc7c29de-d5d8-5784-8351-f586d60dba1c"}, .name = "fc7c29de-d5d8-5784-8351-f586d60dba1c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-802]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-802")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-802", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fdeb2088-36ba-5ffb-802c-b494193c1fe3"}, .name = "fdeb2088-36ba-5ffb-802c-b494193c1fe3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-805]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-805")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-805", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ff0fa885-413c-5541-8e8e-d684c7274d33"}, .name = "ff0fa885-413c-5541-8e8e-d684c7274d33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-803]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-803")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-803", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-791"}, .name = "testNP-791", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dfa24557-3517-5812-af70-4b7273b9ced2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cb0eec6f-b6a8-5a4f-b75a-985e6c5d70b2"]}, .span = ["testNode-79"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-792"}, .name = "testNP-792", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2929af49-e43a-5690-8369-9becfaed1e88"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dfa24557-3517-5812-af70-4b7273b9ced2"]}, .span = ["testNode-79"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-793"}, .name = "testNP-793", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bc3d9e38-bbaa-524d-84ee-9f90f77aaada"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2929af49-e43a-5690-8369-9becfaed1e88"]}, .span = ["testNode-79"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-794"}, .name = "testNP-794", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["64208996-7094-5d71-9837-c652c1aa3026"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bc3d9e38-bbaa-524d-84ee-9f90f77aaada"]}, .span = ["testNode-79"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-795"}, .name = "testNP-795", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["900a8077-9f63-58eb-a46c-7c99a55e9faf"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["64208996-7094-5d71-9837-c652c1aa3026"]}, .span = ["testNode-79"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-796"}, .name = "testNP-796", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["18a453b9-e840-55b2-a4fe-4770390c8b5e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["900a8077-9f63-58eb-a46c-7c99a55e9faf"]}, .span = ["testNode-79"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-797"}, .name = "testNP-797", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7f937db4-bdb5-528c-ace8-cbe018ccee0f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["18a453b9-e840-55b2-a4fe-4770390c8b5e"]}, .span = ["testNode-79"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-798"}, .name = "testNP-798", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d275520c-7813-5be9-b9e6-4d4ea2de7dcd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7f937db4-bdb5-528c-ace8-cbe018ccee0f"]}, .span = ["testNode-79"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-799"}, .name = "testNP-799", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f7b414c0-2062-5caa-95d5-1312767089d5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d275520c-7813-5be9-b9e6-4d4ea2de7dcd"]}, .span = ["testNode-79"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-800"}, .name = "testNP-800", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["688e4cb3-3a95-5913-94a2-db4a010b468d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f7b414c0-2062-5caa-95d5-1312767089d5"]}, .span = ["testNode-80"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-801"}, .name = "testNP-801", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fc7c29de-d5d8-5784-8351-f586d60dba1c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["688e4cb3-3a95-5913-94a2-db4a010b468d"]}, .span = ["testNode-80"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-802"}, .name = "testNP-802", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ff0fa885-413c-5541-8e8e-d684c7274d33"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fc7c29de-d5d8-5784-8351-f586d60dba1c"]}, .span = ["testNode-80"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-803"}, .name = "testNP-803", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4099a91f-9177-5076-b5cb-6502c600e24b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ff0fa885-413c-5541-8e8e-d684c7274d33"]}, .span = ["testNode-80"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-804"}, .name = "testNP-804", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fdeb2088-36ba-5ffb-802c-b494193c1fe3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4099a91f-9177-5076-b5cb-6502c600e24b"]}, .span = ["testNode-80"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-805"}, .name = "testNP-805", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["eb415914-03d2-565b-891b-72973b6edc59"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fdeb2088-36ba-5ffb-802c-b494193c1fe3"]}, .span = ["testNode-80"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-806"}, .name = "testNP-806", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["40370223-169e-592c-a72e-282c37521a99"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["eb415914-03d2-565b-891b-72973b6edc59"]}, .span = ["testNode-80"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-807"}, .name = "testNP-807", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a950cc16-9a35-507a-b339-860754471d00"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["40370223-169e-592c-a72e-282c37521a99"]}, .span = ["testNode-80"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-808"}, .name = "testNP-808", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4a5fa417-6c34-5816-94e5-f1734c2e68ee"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a950cc16-9a35-507a-b339-860754471d00"]}, .span = ["testNode-80"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-809"}, .name = "testNP-809", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["526279a2-4120-5047-aa67-d3c8f8a7bb40"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4a5fa417-6c34-5816-94e5-f1734c2e68ee"]}, .span = ["testNode-80"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-810"}, .name = "testNP-810", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7efa1aad-40aa-59ad-a822-3769cb32dd5c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["526279a2-4120-5047-aa67-d3c8f8a7bb40"]}, .span = ["testNode-81"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-811"}, .name = "testNP-811", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["21ebe334-ac4f-5291-b727-bb9360b57c4f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7efa1aad-40aa-59ad-a822-3769cb32dd5c"]}, .span = ["testNode-81"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-812"}, .name = "testNP-812", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f7204da2-9380-5baa-9894-01ea261f4c1d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["21ebe334-ac4f-5291-b727-bb9360b57c4f"]}, .span = ["testNode-81"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-813"}, .name = "testNP-813", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["14911454-5064-5a49-b39f-70881e83e0a1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f7204da2-9380-5baa-9894-01ea261f4c1d"]}, .span = ["testNode-81"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-814"}, .name = "testNP-814", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["88c80b3f-32c3-5eba-85d5-8f37c4977317"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["14911454-5064-5a49-b39f-70881e83e0a1"]}, .span = ["testNode-81"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-815"}, .name = "testNP-815", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["60038a0d-fd8e-54aa-8452-6ea5e5160761"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["88c80b3f-32c3-5eba-85d5-8f37c4977317"]}, .span = ["testNode-81"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-816"}, .name = "testNP-816", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3a602d28-1cae-5539-9e3f-635334a04779"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["60038a0d-fd8e-54aa-8452-6ea5e5160761"]}, .span = ["testNode-81"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-817"}, .name = "testNP-817", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3173868f-d1c1-5833-92a4-5f3bade4bc82"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3a602d28-1cae-5539-9e3f-635334a04779"]}, .span = ["testNode-81"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-818"}, .name = "testNP-818", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4524c279-f346-56a0-9d5d-985ea12e0f40"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3173868f-d1c1-5833-92a4-5f3bade4bc82"]}, .span = ["testNode-81"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-819"}, .name = "testNP-819", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["76c86c73-3019-59ec-aa8a-0df8b2fbb9d0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4524c279-f346-56a0-9d5d-985ea12e0f40"]}, .span = ["testNode-81"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-820"}, .name = "testNP-820", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d26b6dde-c06c-5668-b1a6-3ee9090b3e55"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["76c86c73-3019-59ec-aa8a-0df8b2fbb9d0"]}, .span = ["testNode-82"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-821"}, .name = "testNP-821", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c2640ce5-1a94-54ad-b353-55f2bf1a5201"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d26b6dde-c06c-5668-b1a6-3ee9090b3e55"]}, .span = ["testNode-82"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-822"}, .name = "testNP-822", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["efe1c54b-4b6c-583d-9275-82362b9d2b52"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c2640ce5-1a94-54ad-b353-55f2bf1a5201"]}, .span = ["testNode-82"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "020a8914-9ade-5557-bfee-0dab018e1992"}, .name = "020a8914-9ade-5557-bfee-0dab018e1992", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-846]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-846")], .matchExpressions = []}}}}, .addresses = ["10.10.84.6"], .span = ["testNode-84"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0a2c8d68-500a-596d-a73e-b7ed9e52e03a"}, .name = "0a2c8d68-500a-596d-a73e-b7ed9e52e03a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-830]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-830")], .matchExpressions = []}}}}, .addresses = ["10.10.83.0"], .span = ["testNode-82"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "252cf028-25ef-50c2-83c3-cf38191e4f27"}, .name = "252cf028-25ef-50c2-83c3-cf38191e4f27", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-851]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-851")], .matchExpressions = []}}}}, .addresses = ["10.10.85.1"], .span = ["testNode-85"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2d902022-e1be-5977-b819-26da066f8cd5"}, .name = "2d902022-e1be-5977-b819-26da066f8cd5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-832]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-832")], .matchExpressions = []}}}}, .addresses = ["10.10.83.2"], .span = ["testNode-83"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "31a730ab-afb4-5b62-bcbe-194d95505c11"}, .name = "31a730ab-afb4-5b62-bcbe-194d95505c11", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-839]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-839")], .matchExpressions = []}}}}, .addresses = ["10.10.83.9"], .span = ["testNode-83"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "32d1e979-9b1f-52bb-a6d4-77656376d50f"}, .name = "32d1e979-9b1f-52bb-a6d4-77656376d50f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-854]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-854")], .matchExpressions = []}}}}, .addresses = ["10.10.85.4"], .span = ["testNode-85"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "34f71667-e281-5b11-8267-4ba34bf3be39"}, .name = "34f71667-e281-5b11-8267-4ba34bf3be39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-842]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-842")], .matchExpressions = []}}}}, .addresses = ["10.10.84.2"], .span = ["testNode-84"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "361b4270-4de5-5f83-85ab-7a3630ecdfcc"}, .name = "361b4270-4de5-5f83-85ab-7a3630ecdfcc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-834]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-834")], .matchExpressions = []}}}}, .addresses = ["10.10.83.4"], .span = ["testNode-83"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "399d56d7-f82e-5c72-bc64-900e60fc518d"}, .name = "399d56d7-f82e-5c72-bc64-900e60fc518d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-836]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-836")], .matchExpressions = []}}}}, .addresses = ["10.10.83.6"], .span = ["testNode-83"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3ff80763-4cc1-594c-ae0f-b9b8e609e572"}, .name = "3ff80763-4cc1-594c-ae0f-b9b8e609e572", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-829]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-829")], .matchExpressions = []}}}}, .addresses = ["10.10.82.9"], .span = ["testNode-82"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4541da1a-6935-598a-8c37-2a82a159af24"}, .name = "4541da1a-6935-598a-8c37-2a82a159af24", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-849]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-849")], .matchExpressions = []}}}}, .addresses = ["10.10.84.9"], .span = ["testNode-84"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4c8ff6d3-18d8-537b-859d-852e96efd7a0"}, .name = "4c8ff6d3-18d8-537b-859d-852e96efd7a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-837]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-837")], .matchExpressions = []}}}}, .addresses = ["10.10.83.7"], .span = ["testNode-83"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5973ecbf-d107-5143-8ed2-5eccb4f0dcd0"}, .name = "5973ecbf-d107-5143-8ed2-5eccb4f0dcd0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-828]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-828")], .matchExpressions = []}}}}, .addresses = ["10.10.82.8"], .span = ["testNode-82"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "625458e7-15dd-52ae-a5f6-67590e461dc3"}, .name = "625458e7-15dd-52ae-a5f6-67590e461dc3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-841]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-841")], .matchExpressions = []}}}}, .addresses = ["10.10.84.1"], .span = ["testNode-84"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "63c29aa8-bd5e-5c89-a4bb-070769e93722"}, .name = "63c29aa8-bd5e-5c89-a4bb-070769e93722", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-824]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-824")], .matchExpressions = []}}}}, .addresses = ["10.10.82.4"], .span = ["testNode-82"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6c5f2c36-0b4f-5385-8053-499d815ec8a5"}, .name = "6c5f2c36-0b4f-5385-8053-499d815ec8a5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-831]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-831")], .matchExpressions = []}}}}, .addresses = ["10.10.83.1"], .span = ["testNode-83"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "755fc4f9-3cc8-59a0-beae-b94c3cc2965e"}, .name = "755fc4f9-3cc8-59a0-beae-b94c3cc2965e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-844]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-844")], .matchExpressions = []}}}}, .addresses = ["10.10.84.4"], .span = ["testNode-84"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9229ce4d-42fd-554f-8d64-ab32525fa69e"}, .name = "9229ce4d-42fd-554f-8d64-ab32525fa69e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-848]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-848")], .matchExpressions = []}}}}, .addresses = ["10.10.84.8"], .span = ["testNode-84"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a791fa85-dee8-5490-a10f-917be6dcb87c"}, .name = "a791fa85-dee8-5490-a10f-917be6dcb87c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-838]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-838")], .matchExpressions = []}}}}, .addresses = ["10.10.83.8"], .span = ["testNode-83"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a8f23371-af6d-5c11-af4c-0c35b863f927"}, .name = "a8f23371-af6d-5c11-af4c-0c35b863f927", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-853]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-853")], .matchExpressions = []}}}}, .addresses = ["10.10.85.3"], .span = ["testNode-85"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "adabcf2d-fdfc-541e-8d5a-f33c8fc61855"}, .name = "adabcf2d-fdfc-541e-8d5a-f33c8fc61855", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-840]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-840")], .matchExpressions = []}}}}, .addresses = ["10.10.84.0"], .span = ["testNode-83"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b3b95463-96f1-5b8e-a29f-6dcf4747cf49"}, .name = "b3b95463-96f1-5b8e-a29f-6dcf4747cf49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-827]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-827")], .matchExpressions = []}}}}, .addresses = ["10.10.82.7"], .span = ["testNode-82"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b6db1e90-48fc-5096-85cd-eb3b881836d3"}, .name = "b6db1e90-48fc-5096-85cd-eb3b881836d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-833]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-833")], .matchExpressions = []}}}}, .addresses = ["10.10.83.3"], .span = ["testNode-83"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c6d5c2f7-b2f3-510f-b50c-79d25512eff0"}, .name = "c6d5c2f7-b2f3-510f-b50c-79d25512eff0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-847]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-847")], .matchExpressions = []}}}}, .addresses = ["10.10.84.7"], .span = ["testNode-84"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e8188043-dc49-5dd1-b705-43550e7ad811"}, .name = "e8188043-dc49-5dd1-b705-43550e7ad811", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-850]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-850")], .matchExpressions = []}}}}, .addresses = ["10.10.85.0"], .span = ["testNode-84"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ed93223e-f4c8-5aff-9a07-eb363deef3a9"}, .name = "ed93223e-f4c8-5aff-9a07-eb363deef3a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-826]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-826")], .matchExpressions = []}}}}, .addresses = ["10.10.82.6"], .span = ["testNode-82"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ef545a1d-2939-587e-9d62-9b24e269c32d"}, .name = "ef545a1d-2939-587e-9d62-9b24e269c32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-825]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-825")], .matchExpressions = []}}}}, .addresses = ["10.10.82.5"], .span = ["testNode-82"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f2c63a21-531d-5dae-934f-c77bda48bb8d"}, .name = "f2c63a21-531d-5dae-934f-c77bda48bb8d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-852]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-852")], .matchExpressions = []}}}}, .addresses = ["10.10.85.2"], .span = ["testNode-85"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f5d12021-8c35-58ec-be62-7ae62a6da069"}, .name = "f5d12021-8c35-58ec-be62-7ae62a6da069", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-845]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-845")], .matchExpressions = []}}}}, .addresses = ["10.10.84.5"], .span = ["testNode-84"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fbb4a159-d8d9-5833-af37-657a9f128e62"}, .name = "fbb4a159-d8d9-5833-af37-657a9f128e62", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-843]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-843")], .matchExpressions = []}}}}, .addresses = ["10.10.84.3"], .span = ["testNode-84"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fbdc9f61-304b-5f28-89a1-93b9fcd4345b"}, .name = "fbdc9f61-304b-5f28-89a1-93b9fcd4345b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-835]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-835")], .matchExpressions = []}}}}, .addresses = ["10.10.83.5"], .span = ["testNode-83"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "feefeae4-caa5-5456-b306-d7b13c8e5306"}, .name = "feefeae4-caa5-5456-b306-d7b13c8e5306", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-855]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-855")], .matchExpressions = []}}}}, .addresses = ["10.10.85.5"], .span = ["testNode-85"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "020a8914-9ade-5557-bfee-0dab018e1992"}, .name = "020a8914-9ade-5557-bfee-0dab018e1992", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-846]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-846")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-846", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0a2c8d68-500a-596d-a73e-b7ed9e52e03a"}, .name = "0a2c8d68-500a-596d-a73e-b7ed9e52e03a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-830]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-830")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-830", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "252cf028-25ef-50c2-83c3-cf38191e4f27"}, .name = "252cf028-25ef-50c2-83c3-cf38191e4f27", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-851]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-851")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-851", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2d902022-e1be-5977-b819-26da066f8cd5"}, .name = "2d902022-e1be-5977-b819-26da066f8cd5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-832]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-832")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-832", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "31a730ab-afb4-5b62-bcbe-194d95505c11"}, .name = "31a730ab-afb4-5b62-bcbe-194d95505c11", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-839]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-839")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-839", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "32d1e979-9b1f-52bb-a6d4-77656376d50f"}, .name = "32d1e979-9b1f-52bb-a6d4-77656376d50f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-854]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-854")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-854", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "34f71667-e281-5b11-8267-4ba34bf3be39"}, .name = "34f71667-e281-5b11-8267-4ba34bf3be39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-842]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-842")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-842", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "361b4270-4de5-5f83-85ab-7a3630ecdfcc"}, .name = "361b4270-4de5-5f83-85ab-7a3630ecdfcc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-834]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-834")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-834", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "399d56d7-f82e-5c72-bc64-900e60fc518d"}, .name = "399d56d7-f82e-5c72-bc64-900e60fc518d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-836]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-836")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-836", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3ff80763-4cc1-594c-ae0f-b9b8e609e572"}, .name = "3ff80763-4cc1-594c-ae0f-b9b8e609e572", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-829]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-829")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-829", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4541da1a-6935-598a-8c37-2a82a159af24"}, .name = "4541da1a-6935-598a-8c37-2a82a159af24", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-849]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-849")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-849", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4c8ff6d3-18d8-537b-859d-852e96efd7a0"}, .name = "4c8ff6d3-18d8-537b-859d-852e96efd7a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-837]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-837")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-837", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5973ecbf-d107-5143-8ed2-5eccb4f0dcd0"}, .name = "5973ecbf-d107-5143-8ed2-5eccb4f0dcd0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-828]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-828")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-828", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "625458e7-15dd-52ae-a5f6-67590e461dc3"}, .name = "625458e7-15dd-52ae-a5f6-67590e461dc3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-841]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-841")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-841", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "63c29aa8-bd5e-5c89-a4bb-070769e93722"}, .name = "63c29aa8-bd5e-5c89-a4bb-070769e93722", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-824]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-824")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-824", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6c5f2c36-0b4f-5385-8053-499d815ec8a5"}, .name = "6c5f2c36-0b4f-5385-8053-499d815ec8a5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-831]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-831")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-831", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "755fc4f9-3cc8-59a0-beae-b94c3cc2965e"}, .name = "755fc4f9-3cc8-59a0-beae-b94c3cc2965e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-844]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-844")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-844", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9229ce4d-42fd-554f-8d64-ab32525fa69e"}, .name = "9229ce4d-42fd-554f-8d64-ab32525fa69e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-848]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-848")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-848", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a791fa85-dee8-5490-a10f-917be6dcb87c"}, .name = "a791fa85-dee8-5490-a10f-917be6dcb87c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-838]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-838")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-838", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a8f23371-af6d-5c11-af4c-0c35b863f927"}, .name = "a8f23371-af6d-5c11-af4c-0c35b863f927", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-853]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-853")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-853", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "adabcf2d-fdfc-541e-8d5a-f33c8fc61855"}, .name = "adabcf2d-fdfc-541e-8d5a-f33c8fc61855", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-840]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-840")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-840", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b3b95463-96f1-5b8e-a29f-6dcf4747cf49"}, .name = "b3b95463-96f1-5b8e-a29f-6dcf4747cf49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-827]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-827")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-827", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b6db1e90-48fc-5096-85cd-eb3b881836d3"}, .name = "b6db1e90-48fc-5096-85cd-eb3b881836d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-833]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-833")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-833", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c6d5c2f7-b2f3-510f-b50c-79d25512eff0"}, .name = "c6d5c2f7-b2f3-510f-b50c-79d25512eff0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-847]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-847")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-847", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e8188043-dc49-5dd1-b705-43550e7ad811"}, .name = "e8188043-dc49-5dd1-b705-43550e7ad811", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-850]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-850")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-850", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ed93223e-f4c8-5aff-9a07-eb363deef3a9"}, .name = "ed93223e-f4c8-5aff-9a07-eb363deef3a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-826]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-826")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-826", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ef545a1d-2939-587e-9d62-9b24e269c32d"}, .name = "ef545a1d-2939-587e-9d62-9b24e269c32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-825]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-825")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-825", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "efe1c54b-4b6c-583d-9275-82362b9d2b52"}, .name = "efe1c54b-4b6c-583d-9275-82362b9d2b52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-823]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-823")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-823", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f2c63a21-531d-5dae-934f-c77bda48bb8d"}, .name = "f2c63a21-531d-5dae-934f-c77bda48bb8d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-852]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-852")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-852", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f5d12021-8c35-58ec-be62-7ae62a6da069"}, .name = "f5d12021-8c35-58ec-be62-7ae62a6da069", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-845]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-845")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-845", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fbb4a159-d8d9-5833-af37-657a9f128e62"}, .name = "fbb4a159-d8d9-5833-af37-657a9f128e62", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-843]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-843")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-843", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fbdc9f61-304b-5f28-89a1-93b9fcd4345b"}, .name = "fbdc9f61-304b-5f28-89a1-93b9fcd4345b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-835]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-835")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-835", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-823"}, .name = "testNP-823", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["63c29aa8-bd5e-5c89-a4bb-070769e93722"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["efe1c54b-4b6c-583d-9275-82362b9d2b52"]}, .span = ["testNode-82"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-824"}, .name = "testNP-824", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ef545a1d-2939-587e-9d62-9b24e269c32d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["63c29aa8-bd5e-5c89-a4bb-070769e93722"]}, .span = ["testNode-82"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-825"}, .name = "testNP-825", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ed93223e-f4c8-5aff-9a07-eb363deef3a9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ef545a1d-2939-587e-9d62-9b24e269c32d"]}, .span = ["testNode-82"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-826"}, .name = "testNP-826", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b3b95463-96f1-5b8e-a29f-6dcf4747cf49"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ed93223e-f4c8-5aff-9a07-eb363deef3a9"]}, .span = ["testNode-82"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-827"}, .name = "testNP-827", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5973ecbf-d107-5143-8ed2-5eccb4f0dcd0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b3b95463-96f1-5b8e-a29f-6dcf4747cf49"]}, .span = ["testNode-82"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-828"}, .name = "testNP-828", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3ff80763-4cc1-594c-ae0f-b9b8e609e572"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5973ecbf-d107-5143-8ed2-5eccb4f0dcd0"]}, .span = ["testNode-82"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-829"}, .name = "testNP-829", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0a2c8d68-500a-596d-a73e-b7ed9e52e03a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3ff80763-4cc1-594c-ae0f-b9b8e609e572"]}, .span = ["testNode-82"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-830"}, .name = "testNP-830", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6c5f2c36-0b4f-5385-8053-499d815ec8a5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0a2c8d68-500a-596d-a73e-b7ed9e52e03a"]}, .span = ["testNode-83"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-831"}, .name = "testNP-831", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2d902022-e1be-5977-b819-26da066f8cd5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6c5f2c36-0b4f-5385-8053-499d815ec8a5"]}, .span = ["testNode-83"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-832"}, .name = "testNP-832", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b6db1e90-48fc-5096-85cd-eb3b881836d3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2d902022-e1be-5977-b819-26da066f8cd5"]}, .span = ["testNode-83"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-833"}, .name = "testNP-833", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["361b4270-4de5-5f83-85ab-7a3630ecdfcc"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b6db1e90-48fc-5096-85cd-eb3b881836d3"]}, .span = ["testNode-83"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-834"}, .name = "testNP-834", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fbdc9f61-304b-5f28-89a1-93b9fcd4345b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["361b4270-4de5-5f83-85ab-7a3630ecdfcc"]}, .span = ["testNode-83"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-835"}, .name = "testNP-835", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["399d56d7-f82e-5c72-bc64-900e60fc518d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fbdc9f61-304b-5f28-89a1-93b9fcd4345b"]}, .span = ["testNode-83"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-836"}, .name = "testNP-836", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4c8ff6d3-18d8-537b-859d-852e96efd7a0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["399d56d7-f82e-5c72-bc64-900e60fc518d"]}, .span = ["testNode-83"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-837"}, .name = "testNP-837", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a791fa85-dee8-5490-a10f-917be6dcb87c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4c8ff6d3-18d8-537b-859d-852e96efd7a0"]}, .span = ["testNode-83"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-838"}, .name = "testNP-838", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["31a730ab-afb4-5b62-bcbe-194d95505c11"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a791fa85-dee8-5490-a10f-917be6dcb87c"]}, .span = ["testNode-83"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-839"}, .name = "testNP-839", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["adabcf2d-fdfc-541e-8d5a-f33c8fc61855"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["31a730ab-afb4-5b62-bcbe-194d95505c11"]}, .span = ["testNode-83"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-840"}, .name = "testNP-840", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["625458e7-15dd-52ae-a5f6-67590e461dc3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["adabcf2d-fdfc-541e-8d5a-f33c8fc61855"]}, .span = ["testNode-84"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-841"}, .name = "testNP-841", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["34f71667-e281-5b11-8267-4ba34bf3be39"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["625458e7-15dd-52ae-a5f6-67590e461dc3"]}, .span = ["testNode-84"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-842"}, .name = "testNP-842", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fbb4a159-d8d9-5833-af37-657a9f128e62"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["34f71667-e281-5b11-8267-4ba34bf3be39"]}, .span = ["testNode-84"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-843"}, .name = "testNP-843", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["755fc4f9-3cc8-59a0-beae-b94c3cc2965e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fbb4a159-d8d9-5833-af37-657a9f128e62"]}, .span = ["testNode-84"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-844"}, .name = "testNP-844", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f5d12021-8c35-58ec-be62-7ae62a6da069"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["755fc4f9-3cc8-59a0-beae-b94c3cc2965e"]}, .span = ["testNode-84"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-845"}, .name = "testNP-845", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["020a8914-9ade-5557-bfee-0dab018e1992"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f5d12021-8c35-58ec-be62-7ae62a6da069"]}, .span = ["testNode-84"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-846"}, .name = "testNP-846", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c6d5c2f7-b2f3-510f-b50c-79d25512eff0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["020a8914-9ade-5557-bfee-0dab018e1992"]}, .span = ["testNode-84"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-847"}, .name = "testNP-847", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9229ce4d-42fd-554f-8d64-ab32525fa69e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c6d5c2f7-b2f3-510f-b50c-79d25512eff0"]}, .span = ["testNode-84"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-848"}, .name = "testNP-848", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4541da1a-6935-598a-8c37-2a82a159af24"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9229ce4d-42fd-554f-8d64-ab32525fa69e"]}, .span = ["testNode-84"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-849"}, .name = "testNP-849", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e8188043-dc49-5dd1-b705-43550e7ad811"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4541da1a-6935-598a-8c37-2a82a159af24"]}, .span = ["testNode-84"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-850"}, .name = "testNP-850", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["252cf028-25ef-50c2-83c3-cf38191e4f27"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e8188043-dc49-5dd1-b705-43550e7ad811"]}, .span = ["testNode-85"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-851"}, .name = "testNP-851", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f2c63a21-531d-5dae-934f-c77bda48bb8d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["252cf028-25ef-50c2-83c3-cf38191e4f27"]}, .span = ["testNode-85"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-852"}, .name = "testNP-852", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a8f23371-af6d-5c11-af4c-0c35b863f927"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f2c63a21-531d-5dae-934f-c77bda48bb8d"]}, .span = ["testNode-85"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-853"}, .name = "testNP-853", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["32d1e979-9b1f-52bb-a6d4-77656376d50f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a8f23371-af6d-5c11-af4c-0c35b863f927"]}, .span = ["testNode-85"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-854"}, .name = "testNP-854", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["feefeae4-caa5-5456-b306-d7b13c8e5306"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["32d1e979-9b1f-52bb-a6d4-77656376d50f"]}, .span = ["testNode-85"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "04d6ef89-313b-5b8f-bf99-63e7e002158d"}, .name = "04d6ef89-313b-5b8f-bf99-63e7e002158d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-873]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-873")], .matchExpressions = []}}}}, .addresses = ["10.10.87.3"], .span = ["testNode-87"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0cbc69ea-8e07-55b2-83c6-92645190f77c"}, .name = "0cbc69ea-8e07-55b2-83c6-92645190f77c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-870]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-870")], .matchExpressions = []}}}}, .addresses = ["10.10.87.0"], .span = ["testNode-86"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "128c484b-a554-5f39-85a2-4fe9825493fe"}, .name = "128c484b-a554-5f39-85a2-4fe9825493fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-863]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-863")], .matchExpressions = []}}}}, .addresses = ["10.10.86.3"], .span = ["testNode-86"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "20b0336a-8759-5739-90ca-ad95ac7ace98"}, .name = "20b0336a-8759-5739-90ca-ad95ac7ace98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-883]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-883")], .matchExpressions = []}}}}, .addresses = ["10.10.88.3"], .span = ["testNode-88"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2ce4cfc7-dacf-5b61-ad41-753f077d6b65"}, .name = "2ce4cfc7-dacf-5b61-ad41-753f077d6b65", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-885]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-885")], .matchExpressions = []}}}}, .addresses = ["10.10.88.5"], .span = ["testNode-88"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "37ad6291-8e99-5eb8-99fa-bc15607fec3a"}, .name = "37ad6291-8e99-5eb8-99fa-bc15607fec3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-886]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-886")], .matchExpressions = []}}}}, .addresses = ["10.10.88.6"], .span = ["testNode-88"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4044a800-c149-5545-9150-bf9f6a0761f8"}, .name = "4044a800-c149-5545-9150-bf9f6a0761f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-867]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-867")], .matchExpressions = []}}}}, .addresses = ["10.10.86.7"], .span = ["testNode-86"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "49afe997-ec38-59cd-a0c6-c7427edbb40b"}, .name = "49afe997-ec38-59cd-a0c6-c7427edbb40b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-869]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-869")], .matchExpressions = []}}}}, .addresses = ["10.10.86.9"], .span = ["testNode-86"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4f5ff37a-f3dd-582a-9b41-1f71c97a8b32"}, .name = "4f5ff37a-f3dd-582a-9b41-1f71c97a8b32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-861]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-861")], .matchExpressions = []}}}}, .addresses = ["10.10.86.1"], .span = ["testNode-86"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6235322d-41d9-59a7-a78e-d28d043dc611"}, .name = "6235322d-41d9-59a7-a78e-d28d043dc611", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-865]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-865")], .matchExpressions = []}}}}, .addresses = ["10.10.86.5"], .span = ["testNode-86"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "649fabb7-1346-5398-8540-b02141c9100f"}, .name = "649fabb7-1346-5398-8540-b02141c9100f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-884]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-884")], .matchExpressions = []}}}}, .addresses = ["10.10.88.4"], .span = ["testNode-88"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6a33dd1e-de7b-5491-a7c7-007326195700"}, .name = "6a33dd1e-de7b-5491-a7c7-007326195700", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-858]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-858")], .matchExpressions = []}}}}, .addresses = ["10.10.85.8"], .span = ["testNode-85"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "701fbb2f-0621-52bf-aba1-92529ed87bd9"}, .name = "701fbb2f-0621-52bf-aba1-92529ed87bd9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-859]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-859")], .matchExpressions = []}}}}, .addresses = ["10.10.85.9"], .span = ["testNode-85"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "81196bc3-feaf-50fe-a385-1142b124de58"}, .name = "81196bc3-feaf-50fe-a385-1142b124de58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-877]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-877")], .matchExpressions = []}}}}, .addresses = ["10.10.87.7"], .span = ["testNode-87"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "83282519-3b79-54a8-b605-484ff79b7da9"}, .name = "83282519-3b79-54a8-b605-484ff79b7da9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-862]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-862")], .matchExpressions = []}}}}, .addresses = ["10.10.86.2"], .span = ["testNode-86"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8a482c2c-e818-5398-8913-75585c22de74"}, .name = "8a482c2c-e818-5398-8913-75585c22de74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-868]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-868")], .matchExpressions = []}}}}, .addresses = ["10.10.86.8"], .span = ["testNode-86"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9dfa0006-5e86-5ff7-b9b7-0448657bccae"}, .name = "9dfa0006-5e86-5ff7-b9b7-0448657bccae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-879]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-879")], .matchExpressions = []}}}}, .addresses = ["10.10.87.9"], .span = ["testNode-87"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a278241a-7d2a-5ca5-a7a4-2dbeed5a881c"}, .name = "a278241a-7d2a-5ca5-a7a4-2dbeed5a881c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-875]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-875")], .matchExpressions = []}}}}, .addresses = ["10.10.87.5"], .span = ["testNode-87"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a7c4a33d-d205-53e7-b085-07212fa3d42e"}, .name = "a7c4a33d-d205-53e7-b085-07212fa3d42e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-874]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-874")], .matchExpressions = []}}}}, .addresses = ["10.10.87.4"], .span = ["testNode-87"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ab9bd443-2685-5c7d-9215-4ed0341f0854"}, .name = "ab9bd443-2685-5c7d-9215-4ed0341f0854", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-876]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-876")], .matchExpressions = []}}}}, .addresses = ["10.10.87.6"], .span = ["testNode-87"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "abcd656c-d354-55a3-b087-f0e512fafa1e"}, .name = "abcd656c-d354-55a3-b087-f0e512fafa1e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-871]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-871")], .matchExpressions = []}}}}, .addresses = ["10.10.87.1"], .span = ["testNode-87"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bc154c74-f996-5fb8-afdc-9b14cadcbbec"}, .name = "bc154c74-f996-5fb8-afdc-9b14cadcbbec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-864]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-864")], .matchExpressions = []}}}}, .addresses = ["10.10.86.4"], .span = ["testNode-86"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d2485d57-408b-5fac-a69f-03791df49253"}, .name = "d2485d57-408b-5fac-a69f-03791df49253", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-866]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-866")], .matchExpressions = []}}}}, .addresses = ["10.10.86.6"], .span = ["testNode-86"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d298c36d-54b7-558f-958c-7925cf71754b"}, .name = "d298c36d-54b7-558f-958c-7925cf71754b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-860]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-860")], .matchExpressions = []}}}}, .addresses = ["10.10.86.0"], .span = ["testNode-85"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d2c1af28-7fdf-50d3-95a4-7334fdf456a9"}, .name = "d2c1af28-7fdf-50d3-95a4-7334fdf456a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-872]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-872")], .matchExpressions = []}}}}, .addresses = ["10.10.87.2"], .span = ["testNode-87"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dfb9847a-e3ef-5fa3-8ca4-7e6b6f642b4d"}, .name = "dfb9847a-e3ef-5fa3-8ca4-7e6b6f642b4d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-856]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-856")], .matchExpressions = []}}}}, .addresses = ["10.10.85.6"], .span = ["testNode-85"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "eaa7718a-9af3-5a5a-94db-b06185bff2ef"}, .name = "eaa7718a-9af3-5a5a-94db-b06185bff2ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-880]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-880")], .matchExpressions = []}}}}, .addresses = ["10.10.88.0"], .span = ["testNode-87"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "eda2e03c-1bab-548d-8dc0-0784ff4141fa"}, .name = "eda2e03c-1bab-548d-8dc0-0784ff4141fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-882]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-882")], .matchExpressions = []}}}}, .addresses = ["10.10.88.2"], .span = ["testNode-88"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ee01a01e-b786-58ab-b30a-6c1349da0d3e"}, .name = "ee01a01e-b786-58ab-b30a-6c1349da0d3e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-887]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-887")], .matchExpressions = []}}}}, .addresses = ["10.10.88.7"], .span = ["testNode-88"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f15c712f-6c6a-5de2-b8ef-0c825ac70dc1"}, .name = "f15c712f-6c6a-5de2-b8ef-0c825ac70dc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-857]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-857")], .matchExpressions = []}}}}, .addresses = ["10.10.85.7"], .span = ["testNode-85"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f25a07d0-1076-5241-b6b2-adc9e86e07cf"}, .name = "f25a07d0-1076-5241-b6b2-adc9e86e07cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-878]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-878")], .matchExpressions = []}}}}, .addresses = ["10.10.87.8"], .span = ["testNode-87"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f358a9c8-e89b-5cc4-9d76-9c1e0ec3407f"}, .name = "f358a9c8-e89b-5cc4-9d76-9c1e0ec3407f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-881]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-881")], .matchExpressions = []}}}}, .addresses = ["10.10.88.1"], .span = ["testNode-88"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "04d6ef89-313b-5b8f-bf99-63e7e002158d"}, .name = "04d6ef89-313b-5b8f-bf99-63e7e002158d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-873]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-873")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-873", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0cbc69ea-8e07-55b2-83c6-92645190f77c"}, .name = "0cbc69ea-8e07-55b2-83c6-92645190f77c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-870]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-870")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-870", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "128c484b-a554-5f39-85a2-4fe9825493fe"}, .name = "128c484b-a554-5f39-85a2-4fe9825493fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-863]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-863")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-863", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "20b0336a-8759-5739-90ca-ad95ac7ace98"}, .name = "20b0336a-8759-5739-90ca-ad95ac7ace98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-883]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-883")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-883", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2ce4cfc7-dacf-5b61-ad41-753f077d6b65"}, .name = "2ce4cfc7-dacf-5b61-ad41-753f077d6b65", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-885]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-885")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-885", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "37ad6291-8e99-5eb8-99fa-bc15607fec3a"}, .name = "37ad6291-8e99-5eb8-99fa-bc15607fec3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-886]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-886")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-886", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4044a800-c149-5545-9150-bf9f6a0761f8"}, .name = "4044a800-c149-5545-9150-bf9f6a0761f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-867]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-867")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-867", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "49afe997-ec38-59cd-a0c6-c7427edbb40b"}, .name = "49afe997-ec38-59cd-a0c6-c7427edbb40b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-869]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-869")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-869", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4f5ff37a-f3dd-582a-9b41-1f71c97a8b32"}, .name = "4f5ff37a-f3dd-582a-9b41-1f71c97a8b32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-861]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-861")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-861", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6235322d-41d9-59a7-a78e-d28d043dc611"}, .name = "6235322d-41d9-59a7-a78e-d28d043dc611", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-865]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-865")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-865", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "649fabb7-1346-5398-8540-b02141c9100f"}, .name = "649fabb7-1346-5398-8540-b02141c9100f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-884]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-884")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-884", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6a33dd1e-de7b-5491-a7c7-007326195700"}, .name = "6a33dd1e-de7b-5491-a7c7-007326195700", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-858]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-858")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-858", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "701fbb2f-0621-52bf-aba1-92529ed87bd9"}, .name = "701fbb2f-0621-52bf-aba1-92529ed87bd9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-859]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-859")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-859", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "81196bc3-feaf-50fe-a385-1142b124de58"}, .name = "81196bc3-feaf-50fe-a385-1142b124de58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-877]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-877")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-877", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "83282519-3b79-54a8-b605-484ff79b7da9"}, .name = "83282519-3b79-54a8-b605-484ff79b7da9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-862]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-862")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-862", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8a482c2c-e818-5398-8913-75585c22de74"}, .name = "8a482c2c-e818-5398-8913-75585c22de74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-868]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-868")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-868", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9dfa0006-5e86-5ff7-b9b7-0448657bccae"}, .name = "9dfa0006-5e86-5ff7-b9b7-0448657bccae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-879]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-879")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-879", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a278241a-7d2a-5ca5-a7a4-2dbeed5a881c"}, .name = "a278241a-7d2a-5ca5-a7a4-2dbeed5a881c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-875]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-875")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-875", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a7c4a33d-d205-53e7-b085-07212fa3d42e"}, .name = "a7c4a33d-d205-53e7-b085-07212fa3d42e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-874]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-874")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-874", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ab9bd443-2685-5c7d-9215-4ed0341f0854"}, .name = "ab9bd443-2685-5c7d-9215-4ed0341f0854", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-876]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-876")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-876", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "abcd656c-d354-55a3-b087-f0e512fafa1e"}, .name = "abcd656c-d354-55a3-b087-f0e512fafa1e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-871]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-871")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-871", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bc154c74-f996-5fb8-afdc-9b14cadcbbec"}, .name = "bc154c74-f996-5fb8-afdc-9b14cadcbbec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-864]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-864")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-864", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d2485d57-408b-5fac-a69f-03791df49253"}, .name = "d2485d57-408b-5fac-a69f-03791df49253", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-866]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-866")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-866", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d298c36d-54b7-558f-958c-7925cf71754b"}, .name = "d298c36d-54b7-558f-958c-7925cf71754b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-860]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-860")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-860", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d2c1af28-7fdf-50d3-95a4-7334fdf456a9"}, .name = "d2c1af28-7fdf-50d3-95a4-7334fdf456a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-872]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-872")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-872", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dfb9847a-e3ef-5fa3-8ca4-7e6b6f642b4d"}, .name = "dfb9847a-e3ef-5fa3-8ca4-7e6b6f642b4d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-856]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-856")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-856", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "eaa7718a-9af3-5a5a-94db-b06185bff2ef"}, .name = "eaa7718a-9af3-5a5a-94db-b06185bff2ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-880]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-880")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-880", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "eda2e03c-1bab-548d-8dc0-0784ff4141fa"}, .name = "eda2e03c-1bab-548d-8dc0-0784ff4141fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-882]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-882")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-882", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f15c712f-6c6a-5de2-b8ef-0c825ac70dc1"}, .name = "f15c712f-6c6a-5de2-b8ef-0c825ac70dc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-857]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-857")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-857", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f25a07d0-1076-5241-b6b2-adc9e86e07cf"}, .name = "f25a07d0-1076-5241-b6b2-adc9e86e07cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-878]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-878")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-878", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f358a9c8-e89b-5cc4-9d76-9c1e0ec3407f"}, .name = "f358a9c8-e89b-5cc4-9d76-9c1e0ec3407f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-881]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-881")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-881", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "feefeae4-caa5-5456-b306-d7b13c8e5306"}, .name = "feefeae4-caa5-5456-b306-d7b13c8e5306", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-855]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-855")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-855", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-855"}, .name = "testNP-855", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dfb9847a-e3ef-5fa3-8ca4-7e6b6f642b4d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["feefeae4-caa5-5456-b306-d7b13c8e5306"]}, .span = ["testNode-85"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-856"}, .name = "testNP-856", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f15c712f-6c6a-5de2-b8ef-0c825ac70dc1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dfb9847a-e3ef-5fa3-8ca4-7e6b6f642b4d"]}, .span = ["testNode-85"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-857"}, .name = "testNP-857", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6a33dd1e-de7b-5491-a7c7-007326195700"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f15c712f-6c6a-5de2-b8ef-0c825ac70dc1"]}, .span = ["testNode-85"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-858"}, .name = "testNP-858", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["701fbb2f-0621-52bf-aba1-92529ed87bd9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6a33dd1e-de7b-5491-a7c7-007326195700"]}, .span = ["testNode-85"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-859"}, .name = "testNP-859", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d298c36d-54b7-558f-958c-7925cf71754b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["701fbb2f-0621-52bf-aba1-92529ed87bd9"]}, .span = ["testNode-85"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-860"}, .name = "testNP-860", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4f5ff37a-f3dd-582a-9b41-1f71c97a8b32"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d298c36d-54b7-558f-958c-7925cf71754b"]}, .span = ["testNode-86"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-861"}, .name = "testNP-861", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["83282519-3b79-54a8-b605-484ff79b7da9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4f5ff37a-f3dd-582a-9b41-1f71c97a8b32"]}, .span = ["testNode-86"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-862"}, .name = "testNP-862", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["128c484b-a554-5f39-85a2-4fe9825493fe"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["83282519-3b79-54a8-b605-484ff79b7da9"]}, .span = ["testNode-86"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-863"}, .name = "testNP-863", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bc154c74-f996-5fb8-afdc-9b14cadcbbec"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["128c484b-a554-5f39-85a2-4fe9825493fe"]}, .span = ["testNode-86"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-864"}, .name = "testNP-864", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6235322d-41d9-59a7-a78e-d28d043dc611"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bc154c74-f996-5fb8-afdc-9b14cadcbbec"]}, .span = ["testNode-86"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-865"}, .name = "testNP-865", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d2485d57-408b-5fac-a69f-03791df49253"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6235322d-41d9-59a7-a78e-d28d043dc611"]}, .span = ["testNode-86"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-866"}, .name = "testNP-866", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4044a800-c149-5545-9150-bf9f6a0761f8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d2485d57-408b-5fac-a69f-03791df49253"]}, .span = ["testNode-86"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-867"}, .name = "testNP-867", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8a482c2c-e818-5398-8913-75585c22de74"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4044a800-c149-5545-9150-bf9f6a0761f8"]}, .span = ["testNode-86"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-868"}, .name = "testNP-868", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["49afe997-ec38-59cd-a0c6-c7427edbb40b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8a482c2c-e818-5398-8913-75585c22de74"]}, .span = ["testNode-86"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-869"}, .name = "testNP-869", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0cbc69ea-8e07-55b2-83c6-92645190f77c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["49afe997-ec38-59cd-a0c6-c7427edbb40b"]}, .span = ["testNode-86"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-870"}, .name = "testNP-870", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["abcd656c-d354-55a3-b087-f0e512fafa1e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0cbc69ea-8e07-55b2-83c6-92645190f77c"]}, .span = ["testNode-87"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-871"}, .name = "testNP-871", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d2c1af28-7fdf-50d3-95a4-7334fdf456a9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["abcd656c-d354-55a3-b087-f0e512fafa1e"]}, .span = ["testNode-87"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-872"}, .name = "testNP-872", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["04d6ef89-313b-5b8f-bf99-63e7e002158d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d2c1af28-7fdf-50d3-95a4-7334fdf456a9"]}, .span = ["testNode-87"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-873"}, .name = "testNP-873", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a7c4a33d-d205-53e7-b085-07212fa3d42e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["04d6ef89-313b-5b8f-bf99-63e7e002158d"]}, .span = ["testNode-87"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-874"}, .name = "testNP-874", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a278241a-7d2a-5ca5-a7a4-2dbeed5a881c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a7c4a33d-d205-53e7-b085-07212fa3d42e"]}, .span = ["testNode-87"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-875"}, .name = "testNP-875", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ab9bd443-2685-5c7d-9215-4ed0341f0854"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a278241a-7d2a-5ca5-a7a4-2dbeed5a881c"]}, .span = ["testNode-87"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-876"}, .name = "testNP-876", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["81196bc3-feaf-50fe-a385-1142b124de58"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ab9bd443-2685-5c7d-9215-4ed0341f0854"]}, .span = ["testNode-87"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-877"}, .name = "testNP-877", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f25a07d0-1076-5241-b6b2-adc9e86e07cf"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["81196bc3-feaf-50fe-a385-1142b124de58"]}, .span = ["testNode-87"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-878"}, .name = "testNP-878", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9dfa0006-5e86-5ff7-b9b7-0448657bccae"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f25a07d0-1076-5241-b6b2-adc9e86e07cf"]}, .span = ["testNode-87"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-879"}, .name = "testNP-879", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["eaa7718a-9af3-5a5a-94db-b06185bff2ef"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9dfa0006-5e86-5ff7-b9b7-0448657bccae"]}, .span = ["testNode-87"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-880"}, .name = "testNP-880", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f358a9c8-e89b-5cc4-9d76-9c1e0ec3407f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["eaa7718a-9af3-5a5a-94db-b06185bff2ef"]}, .span = ["testNode-88"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-881"}, .name = "testNP-881", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["eda2e03c-1bab-548d-8dc0-0784ff4141fa"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f358a9c8-e89b-5cc4-9d76-9c1e0ec3407f"]}, .span = ["testNode-88"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-882"}, .name = "testNP-882", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["20b0336a-8759-5739-90ca-ad95ac7ace98"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["eda2e03c-1bab-548d-8dc0-0784ff4141fa"]}, .span = ["testNode-88"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-883"}, .name = "testNP-883", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["649fabb7-1346-5398-8540-b02141c9100f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["20b0336a-8759-5739-90ca-ad95ac7ace98"]}, .span = ["testNode-88"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-884"}, .name = "testNP-884", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2ce4cfc7-dacf-5b61-ad41-753f077d6b65"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["649fabb7-1346-5398-8540-b02141c9100f"]}, .span = ["testNode-88"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-885"}, .name = "testNP-885", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["37ad6291-8e99-5eb8-99fa-bc15607fec3a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2ce4cfc7-dacf-5b61-ad41-753f077d6b65"]}, .span = ["testNode-88"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-886"}, .name = "testNP-886", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ee01a01e-b786-58ab-b30a-6c1349da0d3e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["37ad6291-8e99-5eb8-99fa-bc15607fec3a"]}, .span = ["testNode-88"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "00e2f0e4-2164-5b09-bfe7-9adb0ce43cdd"}, .name = "00e2f0e4-2164-5b09-bfe7-9adb0ce43cdd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-897]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-897")], .matchExpressions = []}}}}, .addresses = ["10.10.89.7"], .span = ["testNode-89"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0eddb568-45d7-5c98-85ed-15bb7b617b32"}, .name = "0eddb568-45d7-5c98-85ed-15bb7b617b32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-902]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-902")], .matchExpressions = []}}}}, .addresses = ["10.10.90.2"], .span = ["testNode-90"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1717d5d7-4e0d-5930-8270-218ea2d38527"}, .name = "1717d5d7-4e0d-5930-8270-218ea2d38527", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-912]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-912")], .matchExpressions = []}}}}, .addresses = ["10.10.91.2"], .span = ["testNode-91"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1918d2a7-8005-55aa-b506-521184923d98"}, .name = "1918d2a7-8005-55aa-b506-521184923d98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-908]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-908")], .matchExpressions = []}}}}, .addresses = ["10.10.90.8"], .span = ["testNode-90"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1fa03a1a-c6ae-5008-ab16-3562c6863a41"}, .name = "1fa03a1a-c6ae-5008-ab16-3562c6863a41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-894]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-894")], .matchExpressions = []}}}}, .addresses = ["10.10.89.4"], .span = ["testNode-89"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "225094da-f449-5e13-928b-c8bbaef749ae"}, .name = "225094da-f449-5e13-928b-c8bbaef749ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-899]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-899")], .matchExpressions = []}}}}, .addresses = ["10.10.89.9"], .span = ["testNode-89"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2720a763-7cdf-5fdd-ad3e-af54d337714e"}, .name = "2720a763-7cdf-5fdd-ad3e-af54d337714e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-914]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-914")], .matchExpressions = []}}}}, .addresses = ["10.10.91.4"], .span = ["testNode-91"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3568a811-4a06-515d-a03c-a79ef93a44f9"}, .name = "3568a811-4a06-515d-a03c-a79ef93a44f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-901]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-901")], .matchExpressions = []}}}}, .addresses = ["10.10.90.1"], .span = ["testNode-90"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3f63b4d0-d681-5dd2-94c2-3587ab090fea"}, .name = "3f63b4d0-d681-5dd2-94c2-3587ab090fea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-918]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-918")], .matchExpressions = []}}}}, .addresses = ["10.10.91.8"], .span = ["testNode-91"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "43911beb-59cc-5988-bb3b-af6aae148d95"}, .name = "43911beb-59cc-5988-bb3b-af6aae148d95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-911]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-911")], .matchExpressions = []}}}}, .addresses = ["10.10.91.1"], .span = ["testNode-91"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "448c0733-62b0-584d-b076-5f0401d7f739"}, .name = "448c0733-62b0-584d-b076-5f0401d7f739", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-893]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-893")], .matchExpressions = []}}}}, .addresses = ["10.10.89.3"], .span = ["testNode-89"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4560caa7-4bfa-5621-8e1e-d35a85c39924"}, .name = "4560caa7-4bfa-5621-8e1e-d35a85c39924", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-916]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-916")], .matchExpressions = []}}}}, .addresses = ["10.10.91.6"], .span = ["testNode-91"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6597f5ac-9b8c-5d1e-855b-cbbedbfcc6f6"}, .name = "6597f5ac-9b8c-5d1e-855b-cbbedbfcc6f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-895]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-895")], .matchExpressions = []}}}}, .addresses = ["10.10.89.5"], .span = ["testNode-89"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6abb6004-5aed-5881-a895-2e7ae6d22706"}, .name = "6abb6004-5aed-5881-a895-2e7ae6d22706", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-907]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-907")], .matchExpressions = []}}}}, .addresses = ["10.10.90.7"], .span = ["testNode-90"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6dd4e049-f2f0-53dc-a992-5c0f91821fb2"}, .name = "6dd4e049-f2f0-53dc-a992-5c0f91821fb2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-904]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-904")], .matchExpressions = []}}}}, .addresses = ["10.10.90.4"], .span = ["testNode-90"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6e39a276-e0ea-57fb-97ab-c913d427e7df"}, .name = "6e39a276-e0ea-57fb-97ab-c913d427e7df", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-903]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-903")], .matchExpressions = []}}}}, .addresses = ["10.10.90.3"], .span = ["testNode-90"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7271050c-dfc9-5fc8-aec1-8d8633282dba"}, .name = "7271050c-dfc9-5fc8-aec1-8d8633282dba", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-915]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-915")], .matchExpressions = []}}}}, .addresses = ["10.10.91.5"], .span = ["testNode-91"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7e579803-3f5f-5e8c-b0f4-447b4b5b0157"}, .name = "7e579803-3f5f-5e8c-b0f4-447b4b5b0157", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-906]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-906")], .matchExpressions = []}}}}, .addresses = ["10.10.90.6"], .span = ["testNode-90"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8c2fc324-8113-5345-bf12-c53be5ee8b6d"}, .name = "8c2fc324-8113-5345-bf12-c53be5ee8b6d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-919]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-919")], .matchExpressions = []}}}}, .addresses = ["10.10.91.9"], .span = ["testNode-91"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8d11b2b1-faff-5fee-8127-7656c3ded4e1"}, .name = "8d11b2b1-faff-5fee-8127-7656c3ded4e1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-909]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-909")], .matchExpressions = []}}}}, .addresses = ["10.10.90.9"], .span = ["testNode-90"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "93ff7ea7-e59f-5463-82dd-534da2c2dd1b"}, .name = "93ff7ea7-e59f-5463-82dd-534da2c2dd1b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-888]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-888")], .matchExpressions = []}}}}, .addresses = ["10.10.88.8"], .span = ["testNode-88"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9a8f8fad-2ec7-59a9-b2cc-91f5f0029650"}, .name = "9a8f8fad-2ec7-59a9-b2cc-91f5f0029650", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-905]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-905")], .matchExpressions = []}}}}, .addresses = ["10.10.90.5"], .span = ["testNode-90"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a251ff50-c398-5a13-a17c-ddc9f0b08b2a"}, .name = "a251ff50-c398-5a13-a17c-ddc9f0b08b2a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-900]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-900")], .matchExpressions = []}}}}, .addresses = ["10.10.90.0"], .span = ["testNode-89"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a67fc880-3c0d-577d-a4c8-36d949723a6c"}, .name = "a67fc880-3c0d-577d-a4c8-36d949723a6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-917]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-917")], .matchExpressions = []}}}}, .addresses = ["10.10.91.7"], .span = ["testNode-91"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ab13ed9c-243c-5eee-ade8-cb91f15d3568"}, .name = "ab13ed9c-243c-5eee-ade8-cb91f15d3568", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-896]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-896")], .matchExpressions = []}}}}, .addresses = ["10.10.89.6"], .span = ["testNode-89"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ad60f9e4-f65e-5543-a1eb-8b3ddb92d06b"}, .name = "ad60f9e4-f65e-5543-a1eb-8b3ddb92d06b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-889]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-889")], .matchExpressions = []}}}}, .addresses = ["10.10.88.9"], .span = ["testNode-88"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bf7abd2d-7819-5f74-afb5-50977a8bdda7"}, .name = "bf7abd2d-7819-5f74-afb5-50977a8bdda7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-910]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-910")], .matchExpressions = []}}}}, .addresses = ["10.10.91.0"], .span = ["testNode-90"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d9811ed8-34e4-5d7f-b1d7-292aee68b40d"}, .name = "d9811ed8-34e4-5d7f-b1d7-292aee68b40d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-898]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-898")], .matchExpressions = []}}}}, .addresses = ["10.10.89.8"], .span = ["testNode-89"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "da078bb0-cbad-5a9f-ac2c-4e0a2b3968c1"}, .name = "da078bb0-cbad-5a9f-ac2c-4e0a2b3968c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-891]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-891")], .matchExpressions = []}}}}, .addresses = ["10.10.89.1"], .span = ["testNode-89"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e30e99e2-29cd-5fe8-83fb-c5bf3bba56bc"}, .name = "e30e99e2-29cd-5fe8-83fb-c5bf3bba56bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-913]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-913")], .matchExpressions = []}}}}, .addresses = ["10.10.91.3"], .span = ["testNode-91"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f37d3656-5c7b-5a86-895c-1ce6ac7d0b04"}, .name = "f37d3656-5c7b-5a86-895c-1ce6ac7d0b04", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-890]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-890")], .matchExpressions = []}}}}, .addresses = ["10.10.89.0"], .span = ["testNode-88"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f6e75d67-6165-5ae0-820f-8f317c258594"}, .name = "f6e75d67-6165-5ae0-820f-8f317c258594", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-892]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-892")], .matchExpressions = []}}}}, .addresses = ["10.10.89.2"], .span = ["testNode-89"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "00e2f0e4-2164-5b09-bfe7-9adb0ce43cdd"}, .name = "00e2f0e4-2164-5b09-bfe7-9adb0ce43cdd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-897]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-897")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-897", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0eddb568-45d7-5c98-85ed-15bb7b617b32"}, .name = "0eddb568-45d7-5c98-85ed-15bb7b617b32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-902]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-902")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-902", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1717d5d7-4e0d-5930-8270-218ea2d38527"}, .name = "1717d5d7-4e0d-5930-8270-218ea2d38527", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-912]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-912")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-912", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1918d2a7-8005-55aa-b506-521184923d98"}, .name = "1918d2a7-8005-55aa-b506-521184923d98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-908]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-908")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-908", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1fa03a1a-c6ae-5008-ab16-3562c6863a41"}, .name = "1fa03a1a-c6ae-5008-ab16-3562c6863a41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-894]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-894")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-894", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "225094da-f449-5e13-928b-c8bbaef749ae"}, .name = "225094da-f449-5e13-928b-c8bbaef749ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-899]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-899")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-899", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2720a763-7cdf-5fdd-ad3e-af54d337714e"}, .name = "2720a763-7cdf-5fdd-ad3e-af54d337714e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-914]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-914")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-914", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3568a811-4a06-515d-a03c-a79ef93a44f9"}, .name = "3568a811-4a06-515d-a03c-a79ef93a44f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-901]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-901")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-901", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3f63b4d0-d681-5dd2-94c2-3587ab090fea"}, .name = "3f63b4d0-d681-5dd2-94c2-3587ab090fea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-918]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-918")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-918", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "43911beb-59cc-5988-bb3b-af6aae148d95"}, .name = "43911beb-59cc-5988-bb3b-af6aae148d95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-911]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-911")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-911", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "448c0733-62b0-584d-b076-5f0401d7f739"}, .name = "448c0733-62b0-584d-b076-5f0401d7f739", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-893]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-893")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-893", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4560caa7-4bfa-5621-8e1e-d35a85c39924"}, .name = "4560caa7-4bfa-5621-8e1e-d35a85c39924", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-916]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-916")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-916", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6597f5ac-9b8c-5d1e-855b-cbbedbfcc6f6"}, .name = "6597f5ac-9b8c-5d1e-855b-cbbedbfcc6f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-895]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-895")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-895", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6abb6004-5aed-5881-a895-2e7ae6d22706"}, .name = "6abb6004-5aed-5881-a895-2e7ae6d22706", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-907]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-907")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-907", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6dd4e049-f2f0-53dc-a992-5c0f91821fb2"}, .name = "6dd4e049-f2f0-53dc-a992-5c0f91821fb2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-904]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-904")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-904", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6e39a276-e0ea-57fb-97ab-c913d427e7df"}, .name = "6e39a276-e0ea-57fb-97ab-c913d427e7df", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-903]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-903")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-903", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7271050c-dfc9-5fc8-aec1-8d8633282dba"}, .name = "7271050c-dfc9-5fc8-aec1-8d8633282dba", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-915]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-915")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-915", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7e579803-3f5f-5e8c-b0f4-447b4b5b0157"}, .name = "7e579803-3f5f-5e8c-b0f4-447b4b5b0157", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-906]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-906")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-906", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8d11b2b1-faff-5fee-8127-7656c3ded4e1"}, .name = "8d11b2b1-faff-5fee-8127-7656c3ded4e1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-909]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-909")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-909", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "93ff7ea7-e59f-5463-82dd-534da2c2dd1b"}, .name = "93ff7ea7-e59f-5463-82dd-534da2c2dd1b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-888]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-888")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-888", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9a8f8fad-2ec7-59a9-b2cc-91f5f0029650"}, .name = "9a8f8fad-2ec7-59a9-b2cc-91f5f0029650", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-905]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-905")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-905", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a251ff50-c398-5a13-a17c-ddc9f0b08b2a"}, .name = "a251ff50-c398-5a13-a17c-ddc9f0b08b2a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-900]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-900")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-900", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a67fc880-3c0d-577d-a4c8-36d949723a6c"}, .name = "a67fc880-3c0d-577d-a4c8-36d949723a6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-917]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-917")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-917", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ab13ed9c-243c-5eee-ade8-cb91f15d3568"}, .name = "ab13ed9c-243c-5eee-ade8-cb91f15d3568", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-896]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-896")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-896", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ad60f9e4-f65e-5543-a1eb-8b3ddb92d06b"}, .name = "ad60f9e4-f65e-5543-a1eb-8b3ddb92d06b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-889]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-889")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-889", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bf7abd2d-7819-5f74-afb5-50977a8bdda7"}, .name = "bf7abd2d-7819-5f74-afb5-50977a8bdda7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-910]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-910")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-910", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d9811ed8-34e4-5d7f-b1d7-292aee68b40d"}, .name = "d9811ed8-34e4-5d7f-b1d7-292aee68b40d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-898]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-898")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-898", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "da078bb0-cbad-5a9f-ac2c-4e0a2b3968c1"}, .name = "da078bb0-cbad-5a9f-ac2c-4e0a2b3968c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-891]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-891")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-891", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e30e99e2-29cd-5fe8-83fb-c5bf3bba56bc"}, .name = "e30e99e2-29cd-5fe8-83fb-c5bf3bba56bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-913]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-913")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-913", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ee01a01e-b786-58ab-b30a-6c1349da0d3e"}, .name = "ee01a01e-b786-58ab-b30a-6c1349da0d3e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-887]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-887")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-887", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f37d3656-5c7b-5a86-895c-1ce6ac7d0b04"}, .name = "f37d3656-5c7b-5a86-895c-1ce6ac7d0b04", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-890]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-890")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-890", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f6e75d67-6165-5ae0-820f-8f317c258594"}, .name = "f6e75d67-6165-5ae0-820f-8f317c258594", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-892]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-892")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-892", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-887"}, .name = "testNP-887", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["93ff7ea7-e59f-5463-82dd-534da2c2dd1b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ee01a01e-b786-58ab-b30a-6c1349da0d3e"]}, .span = ["testNode-88"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-888"}, .name = "testNP-888", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ad60f9e4-f65e-5543-a1eb-8b3ddb92d06b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["93ff7ea7-e59f-5463-82dd-534da2c2dd1b"]}, .span = ["testNode-88"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-889"}, .name = "testNP-889", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f37d3656-5c7b-5a86-895c-1ce6ac7d0b04"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ad60f9e4-f65e-5543-a1eb-8b3ddb92d06b"]}, .span = ["testNode-88"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-890"}, .name = "testNP-890", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["da078bb0-cbad-5a9f-ac2c-4e0a2b3968c1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f37d3656-5c7b-5a86-895c-1ce6ac7d0b04"]}, .span = ["testNode-89"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-891"}, .name = "testNP-891", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f6e75d67-6165-5ae0-820f-8f317c258594"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["da078bb0-cbad-5a9f-ac2c-4e0a2b3968c1"]}, .span = ["testNode-89"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-892"}, .name = "testNP-892", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["448c0733-62b0-584d-b076-5f0401d7f739"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f6e75d67-6165-5ae0-820f-8f317c258594"]}, .span = ["testNode-89"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-893"}, .name = "testNP-893", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1fa03a1a-c6ae-5008-ab16-3562c6863a41"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["448c0733-62b0-584d-b076-5f0401d7f739"]}, .span = ["testNode-89"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-894"}, .name = "testNP-894", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6597f5ac-9b8c-5d1e-855b-cbbedbfcc6f6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1fa03a1a-c6ae-5008-ab16-3562c6863a41"]}, .span = ["testNode-89"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-895"}, .name = "testNP-895", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ab13ed9c-243c-5eee-ade8-cb91f15d3568"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6597f5ac-9b8c-5d1e-855b-cbbedbfcc6f6"]}, .span = ["testNode-89"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-896"}, .name = "testNP-896", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["00e2f0e4-2164-5b09-bfe7-9adb0ce43cdd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ab13ed9c-243c-5eee-ade8-cb91f15d3568"]}, .span = ["testNode-89"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-897"}, .name = "testNP-897", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d9811ed8-34e4-5d7f-b1d7-292aee68b40d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["00e2f0e4-2164-5b09-bfe7-9adb0ce43cdd"]}, .span = ["testNode-89"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-898"}, .name = "testNP-898", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["225094da-f449-5e13-928b-c8bbaef749ae"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d9811ed8-34e4-5d7f-b1d7-292aee68b40d"]}, .span = ["testNode-89"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-899"}, .name = "testNP-899", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a251ff50-c398-5a13-a17c-ddc9f0b08b2a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["225094da-f449-5e13-928b-c8bbaef749ae"]}, .span = ["testNode-89"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-900"}, .name = "testNP-900", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3568a811-4a06-515d-a03c-a79ef93a44f9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a251ff50-c398-5a13-a17c-ddc9f0b08b2a"]}, .span = ["testNode-90"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-901"}, .name = "testNP-901", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0eddb568-45d7-5c98-85ed-15bb7b617b32"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3568a811-4a06-515d-a03c-a79ef93a44f9"]}, .span = ["testNode-90"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-902"}, .name = "testNP-902", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6e39a276-e0ea-57fb-97ab-c913d427e7df"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0eddb568-45d7-5c98-85ed-15bb7b617b32"]}, .span = ["testNode-90"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-903"}, .name = "testNP-903", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6dd4e049-f2f0-53dc-a992-5c0f91821fb2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6e39a276-e0ea-57fb-97ab-c913d427e7df"]}, .span = ["testNode-90"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-904"}, .name = "testNP-904", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9a8f8fad-2ec7-59a9-b2cc-91f5f0029650"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6dd4e049-f2f0-53dc-a992-5c0f91821fb2"]}, .span = ["testNode-90"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-905"}, .name = "testNP-905", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7e579803-3f5f-5e8c-b0f4-447b4b5b0157"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9a8f8fad-2ec7-59a9-b2cc-91f5f0029650"]}, .span = ["testNode-90"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-906"}, .name = "testNP-906", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6abb6004-5aed-5881-a895-2e7ae6d22706"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7e579803-3f5f-5e8c-b0f4-447b4b5b0157"]}, .span = ["testNode-90"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-907"}, .name = "testNP-907", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1918d2a7-8005-55aa-b506-521184923d98"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6abb6004-5aed-5881-a895-2e7ae6d22706"]}, .span = ["testNode-90"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-908"}, .name = "testNP-908", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8d11b2b1-faff-5fee-8127-7656c3ded4e1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1918d2a7-8005-55aa-b506-521184923d98"]}, .span = ["testNode-90"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-909"}, .name = "testNP-909", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bf7abd2d-7819-5f74-afb5-50977a8bdda7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8d11b2b1-faff-5fee-8127-7656c3ded4e1"]}, .span = ["testNode-90"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-910"}, .name = "testNP-910", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["43911beb-59cc-5988-bb3b-af6aae148d95"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bf7abd2d-7819-5f74-afb5-50977a8bdda7"]}, .span = ["testNode-91"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-911"}, .name = "testNP-911", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1717d5d7-4e0d-5930-8270-218ea2d38527"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["43911beb-59cc-5988-bb3b-af6aae148d95"]}, .span = ["testNode-91"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-912"}, .name = "testNP-912", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e30e99e2-29cd-5fe8-83fb-c5bf3bba56bc"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1717d5d7-4e0d-5930-8270-218ea2d38527"]}, .span = ["testNode-91"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-913"}, .name = "testNP-913", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2720a763-7cdf-5fdd-ad3e-af54d337714e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e30e99e2-29cd-5fe8-83fb-c5bf3bba56bc"]}, .span = ["testNode-91"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-914"}, .name = "testNP-914", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7271050c-dfc9-5fc8-aec1-8d8633282dba"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2720a763-7cdf-5fdd-ad3e-af54d337714e"]}, .span = ["testNode-91"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-915"}, .name = "testNP-915", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4560caa7-4bfa-5621-8e1e-d35a85c39924"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7271050c-dfc9-5fc8-aec1-8d8633282dba"]}, .span = ["testNode-91"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-916"}, .name = "testNP-916", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a67fc880-3c0d-577d-a4c8-36d949723a6c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4560caa7-4bfa-5621-8e1e-d35a85c39924"]}, .span = ["testNode-91"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-917"}, .name = "testNP-917", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3f63b4d0-d681-5dd2-94c2-3587ab090fea"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a67fc880-3c0d-577d-a4c8-36d949723a6c"]}, .span = ["testNode-91"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-918"}, .name = "testNP-918", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8c2fc324-8113-5345-bf12-c53be5ee8b6d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3f63b4d0-d681-5dd2-94c2-3587ab090fea"]}, .span = ["testNode-91"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0403956a-38b3-5303-807f-15089fc71b22"}, .name = "0403956a-38b3-5303-807f-15089fc71b22", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-922]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-922")], .matchExpressions = []}}}}, .addresses = ["10.10.92.2"], .span = ["testNode-92"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "065b2a74-f9ff-50df-a81a-2c73d4b0bfd6"}, .name = "065b2a74-f9ff-50df-a81a-2c73d4b0bfd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-925]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-925")], .matchExpressions = []}}}}, .addresses = ["10.10.92.5"], .span = ["testNode-92"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "11091fe7-de5c-5447-9a4c-798bf9ca054c"}, .name = "11091fe7-de5c-5447-9a4c-798bf9ca054c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-936]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-936")], .matchExpressions = []}}}}, .addresses = ["10.10.93.6"], .span = ["testNode-93"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "11eb7cdf-3508-5ff9-8e09-41e573ddbc8d"}, .name = "11eb7cdf-3508-5ff9-8e09-41e573ddbc8d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-926]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-926")], .matchExpressions = []}}}}, .addresses = ["10.10.92.6"], .span = ["testNode-92"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "15177777-9707-58fb-9156-86d565a89a19"}, .name = "15177777-9707-58fb-9156-86d565a89a19", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-945]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-945")], .matchExpressions = []}}}}, .addresses = ["10.10.94.5"], .span = ["testNode-94"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1f03374c-e2d1-5e42-bf57-27f78bf217c5"}, .name = "1f03374c-e2d1-5e42-bf57-27f78bf217c5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-951]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-951")], .matchExpressions = []}}}}, .addresses = ["10.10.95.1"], .span = ["testNode-95"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2ebe1a50-8580-5c80-b944-cd3bf7b2d3f7"}, .name = "2ebe1a50-8580-5c80-b944-cd3bf7b2d3f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-928]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-928")], .matchExpressions = []}}}}, .addresses = ["10.10.92.8"], .span = ["testNode-92"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "327a9e3a-4ad5-5842-a95c-df59834e40d2"}, .name = "327a9e3a-4ad5-5842-a95c-df59834e40d2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-932]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-932")], .matchExpressions = []}}}}, .addresses = ["10.10.93.2"], .span = ["testNode-93"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5bbd7489-83af-58ec-b085-f1b12910a84f"}, .name = "5bbd7489-83af-58ec-b085-f1b12910a84f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-920]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-920")], .matchExpressions = []}}}}, .addresses = ["10.10.92.0"], .span = ["testNode-91"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6b09ef30-cc39-54ff-8316-eaee4792d66f"}, .name = "6b09ef30-cc39-54ff-8316-eaee4792d66f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-935]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-935")], .matchExpressions = []}}}}, .addresses = ["10.10.93.5"], .span = ["testNode-93"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6cd84c3a-20eb-577a-83ab-6d8c386b56b3"}, .name = "6cd84c3a-20eb-577a-83ab-6d8c386b56b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-947]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-947")], .matchExpressions = []}}}}, .addresses = ["10.10.94.7"], .span = ["testNode-94"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "70e19acf-a83e-5c16-bd42-a45a4f48a194"}, .name = "70e19acf-a83e-5c16-bd42-a45a4f48a194", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-921]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-921")], .matchExpressions = []}}}}, .addresses = ["10.10.92.1"], .span = ["testNode-92"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "80077af4-c0d0-5ca1-b0c5-b03ca4f7e3cf"}, .name = "80077af4-c0d0-5ca1-b0c5-b03ca4f7e3cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-939]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-939")], .matchExpressions = []}}}}, .addresses = ["10.10.93.9"], .span = ["testNode-93"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "898cd4e5-11a6-53d6-b5a9-a15a13cb03a0"}, .name = "898cd4e5-11a6-53d6-b5a9-a15a13cb03a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-929]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-929")], .matchExpressions = []}}}}, .addresses = ["10.10.92.9"], .span = ["testNode-92"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8f45a19b-25b8-53c9-bde8-660e583f892f"}, .name = "8f45a19b-25b8-53c9-bde8-660e583f892f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-931]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-931")], .matchExpressions = []}}}}, .addresses = ["10.10.93.1"], .span = ["testNode-93"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9480cdcf-42f4-5145-936c-f142ac7d015a"}, .name = "9480cdcf-42f4-5145-936c-f142ac7d015a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-946]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-946")], .matchExpressions = []}}}}, .addresses = ["10.10.94.6"], .span = ["testNode-94"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9c181f04-663a-5c47-83fc-ef4ba644e415"}, .name = "9c181f04-663a-5c47-83fc-ef4ba644e415", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-948]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-948")], .matchExpressions = []}}}}, .addresses = ["10.10.94.8"], .span = ["testNode-94"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a22300db-2ae2-54df-afa2-0d2fc5bdd332"}, .name = "a22300db-2ae2-54df-afa2-0d2fc5bdd332", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-930]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-930")], .matchExpressions = []}}}}, .addresses = ["10.10.93.0"], .span = ["testNode-92"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a8f25465-f134-52e0-bca1-5a9d16c463f3"}, .name = "a8f25465-f134-52e0-bca1-5a9d16c463f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-949]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-949")], .matchExpressions = []}}}}, .addresses = ["10.10.94.9"], .span = ["testNode-94"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "aa4b093f-ffd9-5490-9e4a-66b74d9c0ea3"}, .name = "aa4b093f-ffd9-5490-9e4a-66b74d9c0ea3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-940]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-940")], .matchExpressions = []}}}}, .addresses = ["10.10.94.0"], .span = ["testNode-93"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ac435a05-1fb1-50d4-bf31-20ac6ab2ea93"}, .name = "ac435a05-1fb1-50d4-bf31-20ac6ab2ea93", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-950]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-950")], .matchExpressions = []}}}}, .addresses = ["10.10.95.0"], .span = ["testNode-94"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "aedda896-4265-5fdc-8ca3-ff38691e7c0b"}, .name = "aedda896-4265-5fdc-8ca3-ff38691e7c0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-934]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-934")], .matchExpressions = []}}}}, .addresses = ["10.10.93.4"], .span = ["testNode-93"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b457c8ff-44a4-5b41-a4bd-c84d79505043"}, .name = "b457c8ff-44a4-5b41-a4bd-c84d79505043", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-937]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-937")], .matchExpressions = []}}}}, .addresses = ["10.10.93.7"], .span = ["testNode-93"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b984a6be-b45c-5405-ab16-d94c807b6601"}, .name = "b984a6be-b45c-5405-ab16-d94c807b6601", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-923]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-923")], .matchExpressions = []}}}}, .addresses = ["10.10.92.3"], .span = ["testNode-92"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bcd40813-2c4e-5f33-b964-8bcae036383a"}, .name = "bcd40813-2c4e-5f33-b964-8bcae036383a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-924]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-924")], .matchExpressions = []}}}}, .addresses = ["10.10.92.4"], .span = ["testNode-92"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c1a4ee88-b63e-53c3-aeee-6461eda4ddbb"}, .name = "c1a4ee88-b63e-53c3-aeee-6461eda4ddbb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-927]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-927")], .matchExpressions = []}}}}, .addresses = ["10.10.92.7"], .span = ["testNode-92"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d5ddb8fc-c0b8-5f52-a656-937f1314be1f"}, .name = "d5ddb8fc-c0b8-5f52-a656-937f1314be1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-941]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-941")], .matchExpressions = []}}}}, .addresses = ["10.10.94.1"], .span = ["testNode-94"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d6edfef5-dedc-5d1d-8b89-9e59d603df79"}, .name = "d6edfef5-dedc-5d1d-8b89-9e59d603df79", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-938]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-938")], .matchExpressions = []}}}}, .addresses = ["10.10.93.8"], .span = ["testNode-93"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d88e08f2-9454-5cc4-9d72-ac18e0f1f8e0"}, .name = "d88e08f2-9454-5cc4-9d72-ac18e0f1f8e0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-933]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-933")], .matchExpressions = []}}}}, .addresses = ["10.10.93.3"], .span = ["testNode-93"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e6d55e7a-684c-5439-af68-04096cd02c9e"}, .name = "e6d55e7a-684c-5439-af68-04096cd02c9e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-944]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-944")], .matchExpressions = []}}}}, .addresses = ["10.10.94.4"], .span = ["testNode-94"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e7e5f73f-fa9d-50c2-9fc7-c4260b1e57f8"}, .name = "e7e5f73f-fa9d-50c2-9fc7-c4260b1e57f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-943]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-943")], .matchExpressions = []}}}}, .addresses = ["10.10.94.3"], .span = ["testNode-94"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f9b14591-2c15-52f1-b40b-7126f31ec92b"}, .name = "f9b14591-2c15-52f1-b40b-7126f31ec92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-942]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-942")], .matchExpressions = []}}}}, .addresses = ["10.10.94.2"], .span = ["testNode-94"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0403956a-38b3-5303-807f-15089fc71b22"}, .name = "0403956a-38b3-5303-807f-15089fc71b22", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-922]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-922")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-922", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "065b2a74-f9ff-50df-a81a-2c73d4b0bfd6"}, .name = "065b2a74-f9ff-50df-a81a-2c73d4b0bfd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-925]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-925")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-925", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "11091fe7-de5c-5447-9a4c-798bf9ca054c"}, .name = "11091fe7-de5c-5447-9a4c-798bf9ca054c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-936]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-936")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-936", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "11eb7cdf-3508-5ff9-8e09-41e573ddbc8d"}, .name = "11eb7cdf-3508-5ff9-8e09-41e573ddbc8d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-926]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-926")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-926", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "15177777-9707-58fb-9156-86d565a89a19"}, .name = "15177777-9707-58fb-9156-86d565a89a19", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-945]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-945")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-945", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2ebe1a50-8580-5c80-b944-cd3bf7b2d3f7"}, .name = "2ebe1a50-8580-5c80-b944-cd3bf7b2d3f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-928]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-928")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-928", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "327a9e3a-4ad5-5842-a95c-df59834e40d2"}, .name = "327a9e3a-4ad5-5842-a95c-df59834e40d2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-932]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-932")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-932", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5bbd7489-83af-58ec-b085-f1b12910a84f"}, .name = "5bbd7489-83af-58ec-b085-f1b12910a84f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-920]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-920")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-920", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6b09ef30-cc39-54ff-8316-eaee4792d66f"}, .name = "6b09ef30-cc39-54ff-8316-eaee4792d66f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-935]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-935")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-935", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6cd84c3a-20eb-577a-83ab-6d8c386b56b3"}, .name = "6cd84c3a-20eb-577a-83ab-6d8c386b56b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-947]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-947")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-947", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "70e19acf-a83e-5c16-bd42-a45a4f48a194"}, .name = "70e19acf-a83e-5c16-bd42-a45a4f48a194", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-921]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-921")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-921", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "80077af4-c0d0-5ca1-b0c5-b03ca4f7e3cf"}, .name = "80077af4-c0d0-5ca1-b0c5-b03ca4f7e3cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-939]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-939")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-939", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "898cd4e5-11a6-53d6-b5a9-a15a13cb03a0"}, .name = "898cd4e5-11a6-53d6-b5a9-a15a13cb03a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-929]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-929")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-929", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8c2fc324-8113-5345-bf12-c53be5ee8b6d"}, .name = "8c2fc324-8113-5345-bf12-c53be5ee8b6d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-919]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-919")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-919", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8f45a19b-25b8-53c9-bde8-660e583f892f"}, .name = "8f45a19b-25b8-53c9-bde8-660e583f892f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-931]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-931")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-931", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9480cdcf-42f4-5145-936c-f142ac7d015a"}, .name = "9480cdcf-42f4-5145-936c-f142ac7d015a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-946]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-946")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-946", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9c181f04-663a-5c47-83fc-ef4ba644e415"}, .name = "9c181f04-663a-5c47-83fc-ef4ba644e415", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-948]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-948")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-948", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a22300db-2ae2-54df-afa2-0d2fc5bdd332"}, .name = "a22300db-2ae2-54df-afa2-0d2fc5bdd332", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-930]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-930")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-930", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a8f25465-f134-52e0-bca1-5a9d16c463f3"}, .name = "a8f25465-f134-52e0-bca1-5a9d16c463f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-949]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-949")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-949", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "aa4b093f-ffd9-5490-9e4a-66b74d9c0ea3"}, .name = "aa4b093f-ffd9-5490-9e4a-66b74d9c0ea3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-940]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-940")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-940", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ac435a05-1fb1-50d4-bf31-20ac6ab2ea93"}, .name = "ac435a05-1fb1-50d4-bf31-20ac6ab2ea93", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-950]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-950")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-950", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "aedda896-4265-5fdc-8ca3-ff38691e7c0b"}, .name = "aedda896-4265-5fdc-8ca3-ff38691e7c0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-934]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-934")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-934", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b457c8ff-44a4-5b41-a4bd-c84d79505043"}, .name = "b457c8ff-44a4-5b41-a4bd-c84d79505043", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-937]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-937")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-937", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b984a6be-b45c-5405-ab16-d94c807b6601"}, .name = "b984a6be-b45c-5405-ab16-d94c807b6601", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-923]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-923")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-923", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bcd40813-2c4e-5f33-b964-8bcae036383a"}, .name = "bcd40813-2c4e-5f33-b964-8bcae036383a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-924]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-924")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-924", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c1a4ee88-b63e-53c3-aeee-6461eda4ddbb"}, .name = "c1a4ee88-b63e-53c3-aeee-6461eda4ddbb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-927]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-927")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-927", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d5ddb8fc-c0b8-5f52-a656-937f1314be1f"}, .name = "d5ddb8fc-c0b8-5f52-a656-937f1314be1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-941]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-941")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-941", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d6edfef5-dedc-5d1d-8b89-9e59d603df79"}, .name = "d6edfef5-dedc-5d1d-8b89-9e59d603df79", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-938]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-938")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-938", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d88e08f2-9454-5cc4-9d72-ac18e0f1f8e0"}, .name = "d88e08f2-9454-5cc4-9d72-ac18e0f1f8e0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-933]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-933")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-933", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e6d55e7a-684c-5439-af68-04096cd02c9e"}, .name = "e6d55e7a-684c-5439-af68-04096cd02c9e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-944]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-944")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-944", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e7e5f73f-fa9d-50c2-9fc7-c4260b1e57f8"}, .name = "e7e5f73f-fa9d-50c2-9fc7-c4260b1e57f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-943]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-943")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-943", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f9b14591-2c15-52f1-b40b-7126f31ec92b"}, .name = "f9b14591-2c15-52f1-b40b-7126f31ec92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-942]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-942")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-942", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-919"}, .name = "testNP-919", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5bbd7489-83af-58ec-b085-f1b12910a84f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8c2fc324-8113-5345-bf12-c53be5ee8b6d"]}, .span = ["testNode-91"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-920"}, .name = "testNP-920", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["70e19acf-a83e-5c16-bd42-a45a4f48a194"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5bbd7489-83af-58ec-b085-f1b12910a84f"]}, .span = ["testNode-92"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-921"}, .name = "testNP-921", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0403956a-38b3-5303-807f-15089fc71b22"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["70e19acf-a83e-5c16-bd42-a45a4f48a194"]}, .span = ["testNode-92"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-922"}, .name = "testNP-922", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b984a6be-b45c-5405-ab16-d94c807b6601"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0403956a-38b3-5303-807f-15089fc71b22"]}, .span = ["testNode-92"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-923"}, .name = "testNP-923", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bcd40813-2c4e-5f33-b964-8bcae036383a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b984a6be-b45c-5405-ab16-d94c807b6601"]}, .span = ["testNode-92"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-924"}, .name = "testNP-924", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["065b2a74-f9ff-50df-a81a-2c73d4b0bfd6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bcd40813-2c4e-5f33-b964-8bcae036383a"]}, .span = ["testNode-92"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-925"}, .name = "testNP-925", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["11eb7cdf-3508-5ff9-8e09-41e573ddbc8d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["065b2a74-f9ff-50df-a81a-2c73d4b0bfd6"]}, .span = ["testNode-92"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-926"}, .name = "testNP-926", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c1a4ee88-b63e-53c3-aeee-6461eda4ddbb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["11eb7cdf-3508-5ff9-8e09-41e573ddbc8d"]}, .span = ["testNode-92"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-927"}, .name = "testNP-927", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2ebe1a50-8580-5c80-b944-cd3bf7b2d3f7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c1a4ee88-b63e-53c3-aeee-6461eda4ddbb"]}, .span = ["testNode-92"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-928"}, .name = "testNP-928", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["898cd4e5-11a6-53d6-b5a9-a15a13cb03a0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2ebe1a50-8580-5c80-b944-cd3bf7b2d3f7"]}, .span = ["testNode-92"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-929"}, .name = "testNP-929", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a22300db-2ae2-54df-afa2-0d2fc5bdd332"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["898cd4e5-11a6-53d6-b5a9-a15a13cb03a0"]}, .span = ["testNode-92"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-930"}, .name = "testNP-930", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8f45a19b-25b8-53c9-bde8-660e583f892f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a22300db-2ae2-54df-afa2-0d2fc5bdd332"]}, .span = ["testNode-93"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-931"}, .name = "testNP-931", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["327a9e3a-4ad5-5842-a95c-df59834e40d2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8f45a19b-25b8-53c9-bde8-660e583f892f"]}, .span = ["testNode-93"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-932"}, .name = "testNP-932", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d88e08f2-9454-5cc4-9d72-ac18e0f1f8e0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["327a9e3a-4ad5-5842-a95c-df59834e40d2"]}, .span = ["testNode-93"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-933"}, .name = "testNP-933", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["aedda896-4265-5fdc-8ca3-ff38691e7c0b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d88e08f2-9454-5cc4-9d72-ac18e0f1f8e0"]}, .span = ["testNode-93"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-934"}, .name = "testNP-934", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6b09ef30-cc39-54ff-8316-eaee4792d66f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["aedda896-4265-5fdc-8ca3-ff38691e7c0b"]}, .span = ["testNode-93"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-935"}, .name = "testNP-935", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["11091fe7-de5c-5447-9a4c-798bf9ca054c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6b09ef30-cc39-54ff-8316-eaee4792d66f"]}, .span = ["testNode-93"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-936"}, .name = "testNP-936", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b457c8ff-44a4-5b41-a4bd-c84d79505043"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["11091fe7-de5c-5447-9a4c-798bf9ca054c"]}, .span = ["testNode-93"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-937"}, .name = "testNP-937", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d6edfef5-dedc-5d1d-8b89-9e59d603df79"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b457c8ff-44a4-5b41-a4bd-c84d79505043"]}, .span = ["testNode-93"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-938"}, .name = "testNP-938", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["80077af4-c0d0-5ca1-b0c5-b03ca4f7e3cf"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d6edfef5-dedc-5d1d-8b89-9e59d603df79"]}, .span = ["testNode-93"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-939"}, .name = "testNP-939", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["aa4b093f-ffd9-5490-9e4a-66b74d9c0ea3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["80077af4-c0d0-5ca1-b0c5-b03ca4f7e3cf"]}, .span = ["testNode-93"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-940"}, .name = "testNP-940", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d5ddb8fc-c0b8-5f52-a656-937f1314be1f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["aa4b093f-ffd9-5490-9e4a-66b74d9c0ea3"]}, .span = ["testNode-94"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-941"}, .name = "testNP-941", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f9b14591-2c15-52f1-b40b-7126f31ec92b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d5ddb8fc-c0b8-5f52-a656-937f1314be1f"]}, .span = ["testNode-94"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-942"}, .name = "testNP-942", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e7e5f73f-fa9d-50c2-9fc7-c4260b1e57f8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f9b14591-2c15-52f1-b40b-7126f31ec92b"]}, .span = ["testNode-94"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-943"}, .name = "testNP-943", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e6d55e7a-684c-5439-af68-04096cd02c9e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e7e5f73f-fa9d-50c2-9fc7-c4260b1e57f8"]}, .span = ["testNode-94"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-944"}, .name = "testNP-944", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["15177777-9707-58fb-9156-86d565a89a19"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e6d55e7a-684c-5439-af68-04096cd02c9e"]}, .span = ["testNode-94"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-945"}, .name = "testNP-945", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9480cdcf-42f4-5145-936c-f142ac7d015a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["15177777-9707-58fb-9156-86d565a89a19"]}, .span = ["testNode-94"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-946"}, .name = "testNP-946", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6cd84c3a-20eb-577a-83ab-6d8c386b56b3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9480cdcf-42f4-5145-936c-f142ac7d015a"]}, .span = ["testNode-94"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-947"}, .name = "testNP-947", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9c181f04-663a-5c47-83fc-ef4ba644e415"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6cd84c3a-20eb-577a-83ab-6d8c386b56b3"]}, .span = ["testNode-94"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-948"}, .name = "testNP-948", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a8f25465-f134-52e0-bca1-5a9d16c463f3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9c181f04-663a-5c47-83fc-ef4ba644e415"]}, .span = ["testNode-94"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-949"}, .name = "testNP-949", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ac435a05-1fb1-50d4-bf31-20ac6ab2ea93"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a8f25465-f134-52e0-bca1-5a9d16c463f3"]}, .span = ["testNode-94"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-950"}, .name = "testNP-950", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1f03374c-e2d1-5e42-bf57-27f78bf217c5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ac435a05-1fb1-50d4-bf31-20ac6ab2ea93"]}, .span = ["testNode-95"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "053b911e-f779-5223-88ad-adeacd6ac46d"}, .name = "053b911e-f779-5223-88ad-adeacd6ac46d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-977]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-977")], .matchExpressions = []}}}}, .addresses = ["10.10.97.7"], .span = ["testNode-97"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "09c365f6-b998-5c6a-ba07-88aa29b9025d"}, .name = "09c365f6-b998-5c6a-ba07-88aa29b9025d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-963]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-963")], .matchExpressions = []}}}}, .addresses = ["10.10.96.3"], .span = ["testNode-96"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "151d9a1e-9621-5138-bcb3-e1ad3cbd4073"}, .name = "151d9a1e-9621-5138-bcb3-e1ad3cbd4073", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-978]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-978")], .matchExpressions = []}}}}, .addresses = ["10.10.97.8"], .span = ["testNode-97"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2c124475-1012-52ee-b743-a9c0fe4b2c39"}, .name = "2c124475-1012-52ee-b743-a9c0fe4b2c39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-983]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-983")], .matchExpressions = []}}}}, .addresses = ["10.10.98.3"], .span = ["testNode-98"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3b340918-7875-5eed-af0e-e2d05a2f5eb1"}, .name = "3b340918-7875-5eed-af0e-e2d05a2f5eb1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-958]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-958")], .matchExpressions = []}}}}, .addresses = ["10.10.95.8"], .span = ["testNode-95"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3e501e31-92ce-52dc-8056-5a4609d68a1a"}, .name = "3e501e31-92ce-52dc-8056-5a4609d68a1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-972]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-972")], .matchExpressions = []}}}}, .addresses = ["10.10.97.2"], .span = ["testNode-97"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "441b4612-b19a-57d1-a51d-987a11f82cb6"}, .name = "441b4612-b19a-57d1-a51d-987a11f82cb6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-967]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-967")], .matchExpressions = []}}}}, .addresses = ["10.10.96.7"], .span = ["testNode-96"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "44a486b4-08fa-5d04-8395-ae9f858dae71"}, .name = "44a486b4-08fa-5d04-8395-ae9f858dae71", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-952]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-952")], .matchExpressions = []}}}}, .addresses = ["10.10.95.2"], .span = ["testNode-95"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4946277f-112c-5c0a-b567-7dbf39c25f99"}, .name = "4946277f-112c-5c0a-b567-7dbf39c25f99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-982]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-982")], .matchExpressions = []}}}}, .addresses = ["10.10.98.2"], .span = ["testNode-98"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4b90ebf9-b9f9-5e5c-bc9c-bb4fc077b962"}, .name = "4b90ebf9-b9f9-5e5c-bc9c-bb4fc077b962", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-953]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-953")], .matchExpressions = []}}}}, .addresses = ["10.10.95.3"], .span = ["testNode-95"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4e12a308-a5b9-5a87-8bf5-007597bc8ca4"}, .name = "4e12a308-a5b9-5a87-8bf5-007597bc8ca4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-969]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-969")], .matchExpressions = []}}}}, .addresses = ["10.10.96.9"], .span = ["testNode-96"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5c58d104-083b-5905-becc-0fb8a350b32d"}, .name = "5c58d104-083b-5905-becc-0fb8a350b32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-974]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-974")], .matchExpressions = []}}}}, .addresses = ["10.10.97.4"], .span = ["testNode-97"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5d845c29-e8a6-5b71-a48a-d6f40ef0a1e9"}, .name = "5d845c29-e8a6-5b71-a48a-d6f40ef0a1e9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-981]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-981")], .matchExpressions = []}}}}, .addresses = ["10.10.98.1"], .span = ["testNode-98"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "664af069-b28d-5f5d-976a-a6316cf5a57c"}, .name = "664af069-b28d-5f5d-976a-a6316cf5a57c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-954]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-954")], .matchExpressions = []}}}}, .addresses = ["10.10.95.4"], .span = ["testNode-95"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "68c40fce-3187-554d-a351-8dfd5702ad84"}, .name = "68c40fce-3187-554d-a351-8dfd5702ad84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-957]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-957")], .matchExpressions = []}}}}, .addresses = ["10.10.95.7"], .span = ["testNode-95"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6f102093-a719-56d9-9715-f985470613a0"}, .name = "6f102093-a719-56d9-9715-f985470613a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-979]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-979")], .matchExpressions = []}}}}, .addresses = ["10.10.97.9"], .span = ["testNode-97"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "710f331c-7055-5ef5-9a3e-e183984b3fa4"}, .name = "710f331c-7055-5ef5-9a3e-e183984b3fa4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-964]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-964")], .matchExpressions = []}}}}, .addresses = ["10.10.96.4"], .span = ["testNode-96"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "76bd6cc8-46e5-5304-886c-914de4703352"}, .name = "76bd6cc8-46e5-5304-886c-914de4703352", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-959]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-959")], .matchExpressions = []}}}}, .addresses = ["10.10.95.9"], .span = ["testNode-95"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7cd9d1b3-9a5b-5a9e-83d0-e291784a8f60"}, .name = "7cd9d1b3-9a5b-5a9e-83d0-e291784a8f60", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-960]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-960")], .matchExpressions = []}}}}, .addresses = ["10.10.96.0"], .span = ["testNode-95"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9a7755fa-d2bf-5708-bdd0-2558b81deca4"}, .name = "9a7755fa-d2bf-5708-bdd0-2558b81deca4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-980]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-980")], .matchExpressions = []}}}}, .addresses = ["10.10.98.0"], .span = ["testNode-97"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9d3406e4-cce3-549e-bf12-0dbf95c6d493"}, .name = "9d3406e4-cce3-549e-bf12-0dbf95c6d493", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-968]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-968")], .matchExpressions = []}}}}, .addresses = ["10.10.96.8"], .span = ["testNode-96"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9f8158db-4ae3-5689-9fc7-d219f8de62b5"}, .name = "9f8158db-4ae3-5689-9fc7-d219f8de62b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-956]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-956")], .matchExpressions = []}}}}, .addresses = ["10.10.95.6"], .span = ["testNode-95"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "aa616b38-d052-517d-abcd-a27f5a00267e"}, .name = "aa616b38-d052-517d-abcd-a27f5a00267e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-970]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-970")], .matchExpressions = []}}}}, .addresses = ["10.10.97.0"], .span = ["testNode-96"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b373361a-ddd5-5382-932b-3e85eaeb56d9"}, .name = "b373361a-ddd5-5382-932b-3e85eaeb56d9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-955]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-955")], .matchExpressions = []}}}}, .addresses = ["10.10.95.5"], .span = ["testNode-95"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b602a98f-75dd-5ff8-bca1-34374622ca3e"}, .name = "b602a98f-75dd-5ff8-bca1-34374622ca3e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-976]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-976")], .matchExpressions = []}}}}, .addresses = ["10.10.97.6"], .span = ["testNode-97"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c79967df-d6ae-5625-b615-50e91452308a"}, .name = "c79967df-d6ae-5625-b615-50e91452308a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-966]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-966")], .matchExpressions = []}}}}, .addresses = ["10.10.96.6"], .span = ["testNode-96"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d04cdbb6-065a-5ae0-84db-719000c6f354"}, .name = "d04cdbb6-065a-5ae0-84db-719000c6f354", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-965]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-965")], .matchExpressions = []}}}}, .addresses = ["10.10.96.5"], .span = ["testNode-96"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dd9ebacf-29d0-5cfd-adb2-e690e57fc751"}, .name = "dd9ebacf-29d0-5cfd-adb2-e690e57fc751", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-973]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-973")], .matchExpressions = []}}}}, .addresses = ["10.10.97.3"], .span = ["testNode-97"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f70694b4-9442-56ed-80aa-096d94a52960"}, .name = "f70694b4-9442-56ed-80aa-096d94a52960", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-971]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-971")], .matchExpressions = []}}}}, .addresses = ["10.10.97.1"], .span = ["testNode-97"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f78fc18a-9f59-51f8-a488-261ae966e239"}, .name = "f78fc18a-9f59-51f8-a488-261ae966e239", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-961]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-961")], .matchExpressions = []}}}}, .addresses = ["10.10.96.1"], .span = ["testNode-96"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ff4623f5-131b-5aca-a81a-3ecf31283419"}, .name = "ff4623f5-131b-5aca-a81a-3ecf31283419", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-962]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-962")], .matchExpressions = []}}}}, .addresses = ["10.10.96.2"], .span = ["testNode-96"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ff4f1351-b9d3-5650-8c86-db65f6388989"}, .name = "ff4f1351-b9d3-5650-8c86-db65f6388989", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-975]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-975")], .matchExpressions = []}}}}, .addresses = ["10.10.97.5"], .span = ["testNode-97"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "053b911e-f779-5223-88ad-adeacd6ac46d"}, .name = "053b911e-f779-5223-88ad-adeacd6ac46d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-977]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-977")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-977", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "09c365f6-b998-5c6a-ba07-88aa29b9025d"}, .name = "09c365f6-b998-5c6a-ba07-88aa29b9025d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-963]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-963")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-963", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "151d9a1e-9621-5138-bcb3-e1ad3cbd4073"}, .name = "151d9a1e-9621-5138-bcb3-e1ad3cbd4073", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-978]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-978")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-978", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1f03374c-e2d1-5e42-bf57-27f78bf217c5"}, .name = "1f03374c-e2d1-5e42-bf57-27f78bf217c5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-951]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-951")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-951", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3b340918-7875-5eed-af0e-e2d05a2f5eb1"}, .name = "3b340918-7875-5eed-af0e-e2d05a2f5eb1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-958]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-958")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-958", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3e501e31-92ce-52dc-8056-5a4609d68a1a"}, .name = "3e501e31-92ce-52dc-8056-5a4609d68a1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-972]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-972")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-972", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "441b4612-b19a-57d1-a51d-987a11f82cb6"}, .name = "441b4612-b19a-57d1-a51d-987a11f82cb6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-967]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-967")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-967", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "44a486b4-08fa-5d04-8395-ae9f858dae71"}, .name = "44a486b4-08fa-5d04-8395-ae9f858dae71", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-952]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-952")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-952", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4946277f-112c-5c0a-b567-7dbf39c25f99"}, .name = "4946277f-112c-5c0a-b567-7dbf39c25f99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-982]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-982")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-982", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4b90ebf9-b9f9-5e5c-bc9c-bb4fc077b962"}, .name = "4b90ebf9-b9f9-5e5c-bc9c-bb4fc077b962", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-953]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-953")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-953", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4e12a308-a5b9-5a87-8bf5-007597bc8ca4"}, .name = "4e12a308-a5b9-5a87-8bf5-007597bc8ca4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-969]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-969")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-969", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5c58d104-083b-5905-becc-0fb8a350b32d"}, .name = "5c58d104-083b-5905-becc-0fb8a350b32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-974]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-974")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-974", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5d845c29-e8a6-5b71-a48a-d6f40ef0a1e9"}, .name = "5d845c29-e8a6-5b71-a48a-d6f40ef0a1e9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-981]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-981")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-981", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "664af069-b28d-5f5d-976a-a6316cf5a57c"}, .name = "664af069-b28d-5f5d-976a-a6316cf5a57c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-954]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-954")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-954", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "68c40fce-3187-554d-a351-8dfd5702ad84"}, .name = "68c40fce-3187-554d-a351-8dfd5702ad84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-957]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-957")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-957", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6f102093-a719-56d9-9715-f985470613a0"}, .name = "6f102093-a719-56d9-9715-f985470613a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-979]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-979")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-979", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "710f331c-7055-5ef5-9a3e-e183984b3fa4"}, .name = "710f331c-7055-5ef5-9a3e-e183984b3fa4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-964]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-964")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-964", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "76bd6cc8-46e5-5304-886c-914de4703352"}, .name = "76bd6cc8-46e5-5304-886c-914de4703352", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-959]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-959")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-959", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7cd9d1b3-9a5b-5a9e-83d0-e291784a8f60"}, .name = "7cd9d1b3-9a5b-5a9e-83d0-e291784a8f60", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-960]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-960")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-960", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9a7755fa-d2bf-5708-bdd0-2558b81deca4"}, .name = "9a7755fa-d2bf-5708-bdd0-2558b81deca4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-980]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-980")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-980", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9d3406e4-cce3-549e-bf12-0dbf95c6d493"}, .name = "9d3406e4-cce3-549e-bf12-0dbf95c6d493", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-968]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-968")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-968", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9f8158db-4ae3-5689-9fc7-d219f8de62b5"}, .name = "9f8158db-4ae3-5689-9fc7-d219f8de62b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-956]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-956")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-956", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "aa616b38-d052-517d-abcd-a27f5a00267e"}, .name = "aa616b38-d052-517d-abcd-a27f5a00267e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-970]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-970")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-970", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b373361a-ddd5-5382-932b-3e85eaeb56d9"}, .name = "b373361a-ddd5-5382-932b-3e85eaeb56d9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-955]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-955")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-955", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b602a98f-75dd-5ff8-bca1-34374622ca3e"}, .name = "b602a98f-75dd-5ff8-bca1-34374622ca3e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-976]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-976")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-976", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c79967df-d6ae-5625-b615-50e91452308a"}, .name = "c79967df-d6ae-5625-b615-50e91452308a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-966]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-966")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-966", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d04cdbb6-065a-5ae0-84db-719000c6f354"}, .name = "d04cdbb6-065a-5ae0-84db-719000c6f354", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-965]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-965")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-965", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dd9ebacf-29d0-5cfd-adb2-e690e57fc751"}, .name = "dd9ebacf-29d0-5cfd-adb2-e690e57fc751", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-973]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-973")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-973", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f70694b4-9442-56ed-80aa-096d94a52960"}, .name = "f70694b4-9442-56ed-80aa-096d94a52960", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-971]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-971")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-971", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f78fc18a-9f59-51f8-a488-261ae966e239"}, .name = "f78fc18a-9f59-51f8-a488-261ae966e239", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-961]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-961")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-961", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ff4623f5-131b-5aca-a81a-3ecf31283419"}, .name = "ff4623f5-131b-5aca-a81a-3ecf31283419", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-962]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-962")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-962", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ff4f1351-b9d3-5650-8c86-db65f6388989"}, .name = "ff4f1351-b9d3-5650-8c86-db65f6388989", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-975]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-975")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-975", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-951"}, .name = "testNP-951", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["44a486b4-08fa-5d04-8395-ae9f858dae71"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1f03374c-e2d1-5e42-bf57-27f78bf217c5"]}, .span = ["testNode-95"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-952"}, .name = "testNP-952", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4b90ebf9-b9f9-5e5c-bc9c-bb4fc077b962"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["44a486b4-08fa-5d04-8395-ae9f858dae71"]}, .span = ["testNode-95"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-953"}, .name = "testNP-953", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["664af069-b28d-5f5d-976a-a6316cf5a57c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4b90ebf9-b9f9-5e5c-bc9c-bb4fc077b962"]}, .span = ["testNode-95"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-954"}, .name = "testNP-954", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b373361a-ddd5-5382-932b-3e85eaeb56d9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["664af069-b28d-5f5d-976a-a6316cf5a57c"]}, .span = ["testNode-95"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-955"}, .name = "testNP-955", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9f8158db-4ae3-5689-9fc7-d219f8de62b5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b373361a-ddd5-5382-932b-3e85eaeb56d9"]}, .span = ["testNode-95"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-956"}, .name = "testNP-956", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["68c40fce-3187-554d-a351-8dfd5702ad84"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9f8158db-4ae3-5689-9fc7-d219f8de62b5"]}, .span = ["testNode-95"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-957"}, .name = "testNP-957", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3b340918-7875-5eed-af0e-e2d05a2f5eb1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["68c40fce-3187-554d-a351-8dfd5702ad84"]}, .span = ["testNode-95"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-958"}, .name = "testNP-958", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["76bd6cc8-46e5-5304-886c-914de4703352"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3b340918-7875-5eed-af0e-e2d05a2f5eb1"]}, .span = ["testNode-95"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-959"}, .name = "testNP-959", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7cd9d1b3-9a5b-5a9e-83d0-e291784a8f60"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["76bd6cc8-46e5-5304-886c-914de4703352"]}, .span = ["testNode-95"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-960"}, .name = "testNP-960", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f78fc18a-9f59-51f8-a488-261ae966e239"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7cd9d1b3-9a5b-5a9e-83d0-e291784a8f60"]}, .span = ["testNode-96"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-961"}, .name = "testNP-961", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ff4623f5-131b-5aca-a81a-3ecf31283419"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f78fc18a-9f59-51f8-a488-261ae966e239"]}, .span = ["testNode-96"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-962"}, .name = "testNP-962", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["09c365f6-b998-5c6a-ba07-88aa29b9025d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ff4623f5-131b-5aca-a81a-3ecf31283419"]}, .span = ["testNode-96"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-963"}, .name = "testNP-963", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["710f331c-7055-5ef5-9a3e-e183984b3fa4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["09c365f6-b998-5c6a-ba07-88aa29b9025d"]}, .span = ["testNode-96"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-964"}, .name = "testNP-964", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d04cdbb6-065a-5ae0-84db-719000c6f354"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["710f331c-7055-5ef5-9a3e-e183984b3fa4"]}, .span = ["testNode-96"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-965"}, .name = "testNP-965", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c79967df-d6ae-5625-b615-50e91452308a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d04cdbb6-065a-5ae0-84db-719000c6f354"]}, .span = ["testNode-96"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-966"}, .name = "testNP-966", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["441b4612-b19a-57d1-a51d-987a11f82cb6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c79967df-d6ae-5625-b615-50e91452308a"]}, .span = ["testNode-96"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-967"}, .name = "testNP-967", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9d3406e4-cce3-549e-bf12-0dbf95c6d493"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["441b4612-b19a-57d1-a51d-987a11f82cb6"]}, .span = ["testNode-96"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-968"}, .name = "testNP-968", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4e12a308-a5b9-5a87-8bf5-007597bc8ca4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9d3406e4-cce3-549e-bf12-0dbf95c6d493"]}, .span = ["testNode-96"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-969"}, .name = "testNP-969", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["aa616b38-d052-517d-abcd-a27f5a00267e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4e12a308-a5b9-5a87-8bf5-007597bc8ca4"]}, .span = ["testNode-96"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-970"}, .name = "testNP-970", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f70694b4-9442-56ed-80aa-096d94a52960"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["aa616b38-d052-517d-abcd-a27f5a00267e"]}, .span = ["testNode-97"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-971"}, .name = "testNP-971", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3e501e31-92ce-52dc-8056-5a4609d68a1a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f70694b4-9442-56ed-80aa-096d94a52960"]}, .span = ["testNode-97"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-972"}, .name = "testNP-972", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dd9ebacf-29d0-5cfd-adb2-e690e57fc751"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3e501e31-92ce-52dc-8056-5a4609d68a1a"]}, .span = ["testNode-97"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-973"}, .name = "testNP-973", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5c58d104-083b-5905-becc-0fb8a350b32d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dd9ebacf-29d0-5cfd-adb2-e690e57fc751"]}, .span = ["testNode-97"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-974"}, .name = "testNP-974", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ff4f1351-b9d3-5650-8c86-db65f6388989"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5c58d104-083b-5905-becc-0fb8a350b32d"]}, .span = ["testNode-97"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-975"}, .name = "testNP-975", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b602a98f-75dd-5ff8-bca1-34374622ca3e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ff4f1351-b9d3-5650-8c86-db65f6388989"]}, .span = ["testNode-97"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-976"}, .name = "testNP-976", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["053b911e-f779-5223-88ad-adeacd6ac46d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b602a98f-75dd-5ff8-bca1-34374622ca3e"]}, .span = ["testNode-97"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-977"}, .name = "testNP-977", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["151d9a1e-9621-5138-bcb3-e1ad3cbd4073"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["053b911e-f779-5223-88ad-adeacd6ac46d"]}, .span = ["testNode-97"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-978"}, .name = "testNP-978", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6f102093-a719-56d9-9715-f985470613a0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["151d9a1e-9621-5138-bcb3-e1ad3cbd4073"]}, .span = ["testNode-97"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-979"}, .name = "testNP-979", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9a7755fa-d2bf-5708-bdd0-2558b81deca4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6f102093-a719-56d9-9715-f985470613a0"]}, .span = ["testNode-97"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-980"}, .name = "testNP-980", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5d845c29-e8a6-5b71-a48a-d6f40ef0a1e9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9a7755fa-d2bf-5708-bdd0-2558b81deca4"]}, .span = ["testNode-98"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-981"}, .name = "testNP-981", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4946277f-112c-5c0a-b567-7dbf39c25f99"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5d845c29-e8a6-5b71-a48a-d6f40ef0a1e9"]}, .span = ["testNode-98"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-982"}, .name = "testNP-982", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2c124475-1012-52ee-b743-a9c0fe4b2c39"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4946277f-112c-5c0a-b567-7dbf39c25f99"]}, .span = ["testNode-98"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0ee1add2-7289-5b58-aae3-e5794b840d69"}, .name = "0ee1add2-7289-5b58-aae3-e5794b840d69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-988]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-988")], .matchExpressions = []}}}}, .addresses = ["10.10.98.8"], .span = ["testNode-98"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "139204dd-0667-5289-9758-35e557541c67"}, .name = "139204dd-0667-5289-9758-35e557541c67", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-994]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-994")], .matchExpressions = []}}}}, .addresses = ["10.10.99.4"], .span = ["testNode-99"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3b147d3a-c6eb-58d9-b74c-268660681262"}, .name = "3b147d3a-c6eb-58d9-b74c-268660681262", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-991]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-991")], .matchExpressions = []}}}}, .addresses = ["10.10.99.1"], .span = ["testNode-99"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4ea23e82-39c7-5c27-beb4-60d8c278da12"}, .name = "4ea23e82-39c7-5c27-beb4-60d8c278da12", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-995]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-995")], .matchExpressions = []}}}}, .addresses = ["10.10.99.5"], .span = ["testNode-99"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4fd8dd76-8a86-5dfc-8d03-690d43e9169c"}, .name = "4fd8dd76-8a86-5dfc-8d03-690d43e9169c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-0]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-0")], .matchExpressions = []}}}}, .addresses = ["10.10.0.0"], .span = ["testNode-99"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5e62393f-49b9-57d7-8f57-b8d07ac308c1"}, .name = "5e62393f-49b9-57d7-8f57-b8d07ac308c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-985]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-985")], .matchExpressions = []}}}}, .addresses = ["10.10.98.5"], .span = ["testNode-98"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9871a4f9-437b-5129-9d0c-732851248c55"}, .name = "9871a4f9-437b-5129-9d0c-732851248c55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-987]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-987")], .matchExpressions = []}}}}, .addresses = ["10.10.98.7"], .span = ["testNode-98"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a1625391-7909-5d71-af5f-21316088012f"}, .name = "a1625391-7909-5d71-af5f-21316088012f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-989]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-989")], .matchExpressions = []}}}}, .addresses = ["10.10.98.9"], .span = ["testNode-98"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a1699d64-1b1e-5f4e-8b14-aea884b85fb1"}, .name = "a1699d64-1b1e-5f4e-8b14-aea884b85fb1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-997]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-997")], .matchExpressions = []}}}}, .addresses = ["10.10.99.7"], .span = ["testNode-99"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ad5dc842-e9b1-594a-acc0-da13e87f70de"}, .name = "ad5dc842-e9b1-594a-acc0-da13e87f70de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-992]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-992")], .matchExpressions = []}}}}, .addresses = ["10.10.99.2"], .span = ["testNode-99"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ae1590d0-d91f-516f-8406-da4fd6b6703c"}, .name = "ae1590d0-d91f-516f-8406-da4fd6b6703c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-984]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-984")], .matchExpressions = []}}}}, .addresses = ["10.10.98.4"], .span = ["testNode-98"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ae523f8f-2fae-5a35-8da4-01bc8ab1c111"}, .name = "ae523f8f-2fae-5a35-8da4-01bc8ab1c111", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-996]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-996")], .matchExpressions = []}}}}, .addresses = ["10.10.99.6"], .span = ["testNode-99"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b34f72a0-4572-56f0-8824-233988fed91c"}, .name = "b34f72a0-4572-56f0-8824-233988fed91c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-998]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-998")], .matchExpressions = []}}}}, .addresses = ["10.10.99.8"], .span = ["testNode-99"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e37fbe64-4268-584d-b541-f2c27d8d7d8c"}, .name = "e37fbe64-4268-584d-b541-f2c27d8d7d8c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-986]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-986")], .matchExpressions = []}}}}, .addresses = ["10.10.98.6"], .span = ["testNode-98"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ef9920d6-2b33-52b0-8c61-8c9a61ee39e3"}, .name = "ef9920d6-2b33-52b0-8c61-8c9a61ee39e3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-993]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-993")], .matchExpressions = []}}}}, .addresses = ["10.10.99.3"], .span = ["testNode-99"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fb2c68c4-3797-5ee0-9955-6f457273a8da"}, .name = "fb2c68c4-3797-5ee0-9955-6f457273a8da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-999]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-999")], .matchExpressions = []}}}}, .addresses = ["10.10.99.9"], .span = ["testNode-99"]}: +1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ff174ecf-ef7b-5f5f-b5e9-4d9508d26a4f"}, .name = "ff174ecf-ef7b-5f5f-b5e9-4d9508d26a4f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-990]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-990")], .matchExpressions = []}}}}, .addresses = ["10.10.99.0"], .span = ["testNode-98"]}: +1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0ee1add2-7289-5b58-aae3-e5794b840d69"}, .name = "0ee1add2-7289-5b58-aae3-e5794b840d69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-988]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-988")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-988", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "139204dd-0667-5289-9758-35e557541c67"}, .name = "139204dd-0667-5289-9758-35e557541c67", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-994]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-994")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-994", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2c124475-1012-52ee-b743-a9c0fe4b2c39"}, .name = "2c124475-1012-52ee-b743-a9c0fe4b2c39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-983]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-983")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-983", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3b147d3a-c6eb-58d9-b74c-268660681262"}, .name = "3b147d3a-c6eb-58d9-b74c-268660681262", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-991]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-991")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-991", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4ea23e82-39c7-5c27-beb4-60d8c278da12"}, .name = "4ea23e82-39c7-5c27-beb4-60d8c278da12", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-995]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-995")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-995", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5e62393f-49b9-57d7-8f57-b8d07ac308c1"}, .name = "5e62393f-49b9-57d7-8f57-b8d07ac308c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-985]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-985")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-985", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9871a4f9-437b-5129-9d0c-732851248c55"}, .name = "9871a4f9-437b-5129-9d0c-732851248c55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-987]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-987")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-987", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a1625391-7909-5d71-af5f-21316088012f"}, .name = "a1625391-7909-5d71-af5f-21316088012f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-989]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-989")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-989", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a1699d64-1b1e-5f4e-8b14-aea884b85fb1"}, .name = "a1699d64-1b1e-5f4e-8b14-aea884b85fb1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-997]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-997")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-997", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ad5dc842-e9b1-594a-acc0-da13e87f70de"}, .name = "ad5dc842-e9b1-594a-acc0-da13e87f70de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-992]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-992")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-992", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ae1590d0-d91f-516f-8406-da4fd6b6703c"}, .name = "ae1590d0-d91f-516f-8406-da4fd6b6703c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-984]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-984")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-984", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ae523f8f-2fae-5a35-8da4-01bc8ab1c111"}, .name = "ae523f8f-2fae-5a35-8da4-01bc8ab1c111", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-996]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-996")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-996", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b34f72a0-4572-56f0-8824-233988fed91c"}, .name = "b34f72a0-4572-56f0-8824-233988fed91c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-998]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-998")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-998", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e37fbe64-4268-584d-b541-f2c27d8d7d8c"}, .name = "e37fbe64-4268-584d-b541-f2c27d8d7d8c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-986]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-986")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-986", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ef9920d6-2b33-52b0-8c61-8c9a61ee39e3"}, .name = "ef9920d6-2b33-52b0-8c61-8c9a61ee39e3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-993]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-993")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-993", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fb2c68c4-3797-5ee0-9955-6f457273a8da"}, .name = "fb2c68c4-3797-5ee0-9955-6f457273a8da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-999]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-999")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-999", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: +1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ff174ecf-ef7b-5f5f-b5e9-4d9508d26a4f"}, .name = "ff174ecf-ef7b-5f5f-b5e9-4d9508d26a4f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-990]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-990")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-990", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: +1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-983"}, .name = "testNP-983", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ae1590d0-d91f-516f-8406-da4fd6b6703c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2c124475-1012-52ee-b743-a9c0fe4b2c39"]}, .span = ["testNode-98"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-984"}, .name = "testNP-984", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5e62393f-49b9-57d7-8f57-b8d07ac308c1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ae1590d0-d91f-516f-8406-da4fd6b6703c"]}, .span = ["testNode-98"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-985"}, .name = "testNP-985", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e37fbe64-4268-584d-b541-f2c27d8d7d8c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5e62393f-49b9-57d7-8f57-b8d07ac308c1"]}, .span = ["testNode-98"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-986"}, .name = "testNP-986", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9871a4f9-437b-5129-9d0c-732851248c55"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e37fbe64-4268-584d-b541-f2c27d8d7d8c"]}, .span = ["testNode-98"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-987"}, .name = "testNP-987", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0ee1add2-7289-5b58-aae3-e5794b840d69"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9871a4f9-437b-5129-9d0c-732851248c55"]}, .span = ["testNode-98"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-988"}, .name = "testNP-988", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a1625391-7909-5d71-af5f-21316088012f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0ee1add2-7289-5b58-aae3-e5794b840d69"]}, .span = ["testNode-98"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-989"}, .name = "testNP-989", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ff174ecf-ef7b-5f5f-b5e9-4d9508d26a4f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a1625391-7909-5d71-af5f-21316088012f"]}, .span = ["testNode-98"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-990"}, .name = "testNP-990", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3b147d3a-c6eb-58d9-b74c-268660681262"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ff174ecf-ef7b-5f5f-b5e9-4d9508d26a4f"]}, .span = ["testNode-99"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-991"}, .name = "testNP-991", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ad5dc842-e9b1-594a-acc0-da13e87f70de"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3b147d3a-c6eb-58d9-b74c-268660681262"]}, .span = ["testNode-99"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-992"}, .name = "testNP-992", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ef9920d6-2b33-52b0-8c61-8c9a61ee39e3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ad5dc842-e9b1-594a-acc0-da13e87f70de"]}, .span = ["testNode-99"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-993"}, .name = "testNP-993", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["139204dd-0667-5289-9758-35e557541c67"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ef9920d6-2b33-52b0-8c61-8c9a61ee39e3"]}, .span = ["testNode-99"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-994"}, .name = "testNP-994", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4ea23e82-39c7-5c27-beb4-60d8c278da12"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["139204dd-0667-5289-9758-35e557541c67"]}, .span = ["testNode-99"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-995"}, .name = "testNP-995", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ae523f8f-2fae-5a35-8da4-01bc8ab1c111"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4ea23e82-39c7-5c27-beb4-60d8c278da12"]}, .span = ["testNode-99"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-996"}, .name = "testNP-996", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a1699d64-1b1e-5f4e-8b14-aea884b85fb1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ae523f8f-2fae-5a35-8da4-01bc8ab1c111"]}, .span = ["testNode-99"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-997"}, .name = "testNP-997", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b34f72a0-4572-56f0-8824-233988fed91c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a1699d64-1b1e-5f4e-8b14-aea884b85fb1"]}, .span = ["testNode-99"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-998"}, .name = "testNP-998", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fb2c68c4-3797-5ee0-9955-6f457273a8da"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b34f72a0-4572-56f0-8824-233988fed91c"]}, .span = ["testNode-99"]}: +1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-999"}, .name = "testNP-999", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4fd8dd76-8a86-5dfc-8d03-690d43e9169c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fb2c68c4-3797-5ee0-9955-6f457273a8da"]}, .span = ["testNode-99"]}: +1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "208f3afd-4faf-5761-b65a-bf568a99ccb5"}, .name = "208f3afd-4faf-5761-b65a-bf568a99ccb5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-12]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-12")], .matchExpressions = []}}}}, .addresses = ["10.10.1.2"], .span = ["testNode-1"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2147989f-e6af-5749-ba0e-83f61f60fefe"}, .name = "2147989f-e6af-5749-ba0e-83f61f60fefe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-1]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-1")], .matchExpressions = []}}}}, .addresses = ["10.10.0.1"], .span = ["testNode-0"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "21968c46-41c3-5a04-a5cf-a647f6f656b6"}, .name = "21968c46-41c3-5a04-a5cf-a647f6f656b6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-3]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-3")], .matchExpressions = []}}}}, .addresses = ["10.10.0.3"], .span = ["testNode-0"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2c4f71d7-2a06-5e6d-b36c-6eb4e2e2f3cf"}, .name = "2c4f71d7-2a06-5e6d-b36c-6eb4e2e2f3cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-17]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-17")], .matchExpressions = []}}}}, .addresses = ["10.10.1.7"], .span = ["testNode-1"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2d81c219-d357-5304-a6cb-b8f2ebcc2294"}, .name = "2d81c219-d357-5304-a6cb-b8f2ebcc2294", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-14]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-14")], .matchExpressions = []}}}}, .addresses = ["10.10.1.4"], .span = ["testNode-1"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2f4c3477-a740-579b-8eb2-1a48a21f5fa0"}, .name = "2f4c3477-a740-579b-8eb2-1a48a21f5fa0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-5]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-5")], .matchExpressions = []}}}}, .addresses = ["10.10.0.5"], .span = ["testNode-0"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "33c89372-d5b7-5b27-9b11-7081dc6c75c6"}, .name = "33c89372-d5b7-5b27-9b11-7081dc6c75c6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-29]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-29")], .matchExpressions = []}}}}, .addresses = ["10.10.2.9"], .span = ["testNode-2"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3d076cea-adb0-5b25-a9c3-eb0fc9cc237f"}, .name = "3d076cea-adb0-5b25-a9c3-eb0fc9cc237f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-31]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-31")], .matchExpressions = []}}}}, .addresses = ["10.10.3.1"], .span = ["testNode-3"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "48751966-7751-5e92-82c2-ca4e0df2c7e7"}, .name = "48751966-7751-5e92-82c2-ca4e0df2c7e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-4]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-4")], .matchExpressions = []}}}}, .addresses = ["10.10.0.4"], .span = ["testNode-0"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "48aff4f5-0c50-54f0-af33-70e2ab77f5b0"}, .name = "48aff4f5-0c50-54f0-af33-70e2ab77f5b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-30]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-30")], .matchExpressions = []}}}}, .addresses = ["10.10.3.0"], .span = ["testNode-2"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4962d527-1649-5cd9-9aa6-95739cc1ed2f"}, .name = "4962d527-1649-5cd9-9aa6-95739cc1ed2f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-24]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-24")], .matchExpressions = []}}}}, .addresses = ["10.10.2.4"], .span = ["testNode-2"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4cd21ab0-e6f3-5cbf-9d3f-baeec77a57f3"}, .name = "4cd21ab0-e6f3-5cbf-9d3f-baeec77a57f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-2]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-2")], .matchExpressions = []}}}}, .addresses = ["10.10.0.2"], .span = ["testNode-0"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "53c31970-d212-502d-a92f-f295fef40016"}, .name = "53c31970-d212-502d-a92f-f295fef40016", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-18]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-18")], .matchExpressions = []}}}}, .addresses = ["10.10.1.8"], .span = ["testNode-1"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "68c691f2-7eb5-5354-b3f7-88c4aa2ac23f"}, .name = "68c691f2-7eb5-5354-b3f7-88c4aa2ac23f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-22]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-22")], .matchExpressions = []}}}}, .addresses = ["10.10.2.2"], .span = ["testNode-2"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6ce6739e-834b-5cc8-b9f6-0bd7d7a785dd"}, .name = "6ce6739e-834b-5cc8-b9f6-0bd7d7a785dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-32]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-32")], .matchExpressions = []}}}}, .addresses = ["10.10.3.2"], .span = ["testNode-3"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6da38bf0-1965-54d4-b4da-3981a9cb3abd"}, .name = "6da38bf0-1965-54d4-b4da-3981a9cb3abd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-7]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-7")], .matchExpressions = []}}}}, .addresses = ["10.10.0.7"], .span = ["testNode-0"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "84d95faa-012d-5288-ae40-788efddb92a0"}, .name = "84d95faa-012d-5288-ae40-788efddb92a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-23]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-23")], .matchExpressions = []}}}}, .addresses = ["10.10.2.3"], .span = ["testNode-2"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8729fd0a-5c54-5db9-af45-51cadb9497ad"}, .name = "8729fd0a-5c54-5db9-af45-51cadb9497ad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-8]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-8")], .matchExpressions = []}}}}, .addresses = ["10.10.0.8"], .span = ["testNode-0"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "893f2a29-28c2-5766-9b9a-b90764ba0e1f"}, .name = "893f2a29-28c2-5766-9b9a-b90764ba0e1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-15]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-15")], .matchExpressions = []}}}}, .addresses = ["10.10.1.5"], .span = ["testNode-1"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "93a645bc-031d-5524-82a0-ca445ae1d1d4"}, .name = "93a645bc-031d-5524-82a0-ca445ae1d1d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-9]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-9")], .matchExpressions = []}}}}, .addresses = ["10.10.0.9"], .span = ["testNode-0"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a86be111-0734-5db8-a656-ee4e8bf0aed7"}, .name = "a86be111-0734-5db8-a656-ee4e8bf0aed7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-21]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-21")], .matchExpressions = []}}}}, .addresses = ["10.10.2.1"], .span = ["testNode-2"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ab6503c0-5611-5c9a-a9d4-e544fa70549f"}, .name = "ab6503c0-5611-5c9a-a9d4-e544fa70549f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-10]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-10")], .matchExpressions = []}}}}, .addresses = ["10.10.1.0"], .span = ["testNode-0"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b1bca95d-220e-5b74-b38d-0de3c9090ed8"}, .name = "b1bca95d-220e-5b74-b38d-0de3c9090ed8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-11]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-11")], .matchExpressions = []}}}}, .addresses = ["10.10.1.1"], .span = ["testNode-1"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c30355fd-716b-5eaa-a629-601ff71fe936"}, .name = "c30355fd-716b-5eaa-a629-601ff71fe936", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-16]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-16")], .matchExpressions = []}}}}, .addresses = ["10.10.1.6"], .span = ["testNode-1"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c8d3f620-d41d-5ddf-bb54-94d2b26ee8cd"}, .name = "c8d3f620-d41d-5ddf-bb54-94d2b26ee8cd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-13]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-13")], .matchExpressions = []}}}}, .addresses = ["10.10.1.3"], .span = ["testNode-1"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ce44739f-83fa-5414-b860-366a7b1cee45"}, .name = "ce44739f-83fa-5414-b860-366a7b1cee45", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-28]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-28")], .matchExpressions = []}}}}, .addresses = ["10.10.2.8"], .span = ["testNode-2"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d7337363-189b-53ad-89fa-0f7cbfe68534"}, .name = "d7337363-189b-53ad-89fa-0f7cbfe68534", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-27]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-27")], .matchExpressions = []}}}}, .addresses = ["10.10.2.7"], .span = ["testNode-2"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e39017a8-50a8-542e-a4ef-0a3f387e7bf2"}, .name = "e39017a8-50a8-542e-a4ef-0a3f387e7bf2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-19]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-19")], .matchExpressions = []}}}}, .addresses = ["10.10.1.9"], .span = ["testNode-1"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ea45898f-2a72-5623-85ed-14b453031175"}, .name = "ea45898f-2a72-5623-85ed-14b453031175", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-20]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-20")], .matchExpressions = []}}}}, .addresses = ["10.10.2.0"], .span = ["testNode-1"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f35e9b05-11d6-5059-9067-bd9d8be5b836"}, .name = "f35e9b05-11d6-5059-9067-bd9d8be5b836", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-6]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-6")], .matchExpressions = []}}}}, .addresses = ["10.10.0.6"], .span = ["testNode-0"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f489cdaa-c5e8-5a99-8070-b15ba9f0dcca"}, .name = "f489cdaa-c5e8-5a99-8070-b15ba9f0dcca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-26]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-26")], .matchExpressions = []}}}}, .addresses = ["10.10.2.6"], .span = ["testNode-2"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f9af42e5-d01e-5852-906f-94d78a462008"}, .name = "f9af42e5-d01e-5852-906f-94d78a462008", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-25]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-25")], .matchExpressions = []}}}}, .addresses = ["10.10.2.5"], .span = ["testNode-2"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "208f3afd-4faf-5761-b65a-bf568a99ccb5"}, .name = "208f3afd-4faf-5761-b65a-bf568a99ccb5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-12]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-12")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-12", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2147989f-e6af-5749-ba0e-83f61f60fefe"}, .name = "2147989f-e6af-5749-ba0e-83f61f60fefe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-1]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-1")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-1", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "21968c46-41c3-5a04-a5cf-a647f6f656b6"}, .name = "21968c46-41c3-5a04-a5cf-a647f6f656b6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-3]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-3")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-3", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2c4f71d7-2a06-5e6d-b36c-6eb4e2e2f3cf"}, .name = "2c4f71d7-2a06-5e6d-b36c-6eb4e2e2f3cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-17]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-17")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-17", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2d81c219-d357-5304-a6cb-b8f2ebcc2294"}, .name = "2d81c219-d357-5304-a6cb-b8f2ebcc2294", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-14]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-14")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-14", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2f4c3477-a740-579b-8eb2-1a48a21f5fa0"}, .name = "2f4c3477-a740-579b-8eb2-1a48a21f5fa0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-5]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-5")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-5", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "33c89372-d5b7-5b27-9b11-7081dc6c75c6"}, .name = "33c89372-d5b7-5b27-9b11-7081dc6c75c6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-29]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-29")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-29", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3d076cea-adb0-5b25-a9c3-eb0fc9cc237f"}, .name = "3d076cea-adb0-5b25-a9c3-eb0fc9cc237f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-31]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-31")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-31", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "48751966-7751-5e92-82c2-ca4e0df2c7e7"}, .name = "48751966-7751-5e92-82c2-ca4e0df2c7e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-4]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-4")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-4", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "48aff4f5-0c50-54f0-af33-70e2ab77f5b0"}, .name = "48aff4f5-0c50-54f0-af33-70e2ab77f5b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-30]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-30")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-30", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4962d527-1649-5cd9-9aa6-95739cc1ed2f"}, .name = "4962d527-1649-5cd9-9aa6-95739cc1ed2f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-24]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-24")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-24", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4cd21ab0-e6f3-5cbf-9d3f-baeec77a57f3"}, .name = "4cd21ab0-e6f3-5cbf-9d3f-baeec77a57f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-2]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-2")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-2", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4fd8dd76-8a86-5dfc-8d03-690d43e9169c"}, .name = "4fd8dd76-8a86-5dfc-8d03-690d43e9169c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-0]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-0")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-0", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "53c31970-d212-502d-a92f-f295fef40016"}, .name = "53c31970-d212-502d-a92f-f295fef40016", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-18]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-18")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-18", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "68c691f2-7eb5-5354-b3f7-88c4aa2ac23f"}, .name = "68c691f2-7eb5-5354-b3f7-88c4aa2ac23f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-22]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-22")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-22", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6da38bf0-1965-54d4-b4da-3981a9cb3abd"}, .name = "6da38bf0-1965-54d4-b4da-3981a9cb3abd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-7]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-7")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-7", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "84d95faa-012d-5288-ae40-788efddb92a0"}, .name = "84d95faa-012d-5288-ae40-788efddb92a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-23]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-23")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-23", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8729fd0a-5c54-5db9-af45-51cadb9497ad"}, .name = "8729fd0a-5c54-5db9-af45-51cadb9497ad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-8]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-8")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-8", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "893f2a29-28c2-5766-9b9a-b90764ba0e1f"}, .name = "893f2a29-28c2-5766-9b9a-b90764ba0e1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-15]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-15")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-15", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "93a645bc-031d-5524-82a0-ca445ae1d1d4"}, .name = "93a645bc-031d-5524-82a0-ca445ae1d1d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-9]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-9")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-9", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a86be111-0734-5db8-a656-ee4e8bf0aed7"}, .name = "a86be111-0734-5db8-a656-ee4e8bf0aed7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-21]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-21")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-21", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ab6503c0-5611-5c9a-a9d4-e544fa70549f"}, .name = "ab6503c0-5611-5c9a-a9d4-e544fa70549f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-10]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-10")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-10", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b1bca95d-220e-5b74-b38d-0de3c9090ed8"}, .name = "b1bca95d-220e-5b74-b38d-0de3c9090ed8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-11]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-11")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-11", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c30355fd-716b-5eaa-a629-601ff71fe936"}, .name = "c30355fd-716b-5eaa-a629-601ff71fe936", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-16]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-16")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-16", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c8d3f620-d41d-5ddf-bb54-94d2b26ee8cd"}, .name = "c8d3f620-d41d-5ddf-bb54-94d2b26ee8cd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-13]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-13")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-13", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ce44739f-83fa-5414-b860-366a7b1cee45"}, .name = "ce44739f-83fa-5414-b860-366a7b1cee45", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-28]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-28")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-28", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d7337363-189b-53ad-89fa-0f7cbfe68534"}, .name = "d7337363-189b-53ad-89fa-0f7cbfe68534", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-27]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-27")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-27", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e39017a8-50a8-542e-a4ef-0a3f387e7bf2"}, .name = "e39017a8-50a8-542e-a4ef-0a3f387e7bf2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-19]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-19")], .matchExpressions = []}}}}, .podsByNode = [("testNode-1", [k8spolicy.PodReference{.name = "testPod-19", .namespace = "testNamespace"}])], .span = ["testNode-1"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ea45898f-2a72-5623-85ed-14b453031175"}, .name = "ea45898f-2a72-5623-85ed-14b453031175", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-20]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-20")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-20", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f35e9b05-11d6-5059-9067-bd9d8be5b836"}, .name = "f35e9b05-11d6-5059-9067-bd9d8be5b836", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-6]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-6")], .matchExpressions = []}}}}, .podsByNode = [("testNode-0", [k8spolicy.PodReference{.name = "testPod-6", .namespace = "testNamespace"}])], .span = ["testNode-0"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f489cdaa-c5e8-5a99-8070-b15ba9f0dcca"}, .name = "f489cdaa-c5e8-5a99-8070-b15ba9f0dcca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-26]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-26")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-26", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f9af42e5-d01e-5852-906f-94d78a462008"}, .name = "f9af42e5-d01e-5852-906f-94d78a462008", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-25]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-25")], .matchExpressions = []}}}}, .podsByNode = [("testNode-2", [k8spolicy.PodReference{.name = "testPod-25", .namespace = "testNamespace"}])], .span = ["testNode-2"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-0"}, .name = "testNP-0", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2147989f-e6af-5749-ba0e-83f61f60fefe"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4fd8dd76-8a86-5dfc-8d03-690d43e9169c"]}, .span = ["testNode-0"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-1"}, .name = "testNP-1", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4cd21ab0-e6f3-5cbf-9d3f-baeec77a57f3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2147989f-e6af-5749-ba0e-83f61f60fefe"]}, .span = ["testNode-0"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-10"}, .name = "testNP-10", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b1bca95d-220e-5b74-b38d-0de3c9090ed8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ab6503c0-5611-5c9a-a9d4-e544fa70549f"]}, .span = ["testNode-1"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-11"}, .name = "testNP-11", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["208f3afd-4faf-5761-b65a-bf568a99ccb5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b1bca95d-220e-5b74-b38d-0de3c9090ed8"]}, .span = ["testNode-1"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-12"}, .name = "testNP-12", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c8d3f620-d41d-5ddf-bb54-94d2b26ee8cd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["208f3afd-4faf-5761-b65a-bf568a99ccb5"]}, .span = ["testNode-1"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-13"}, .name = "testNP-13", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2d81c219-d357-5304-a6cb-b8f2ebcc2294"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c8d3f620-d41d-5ddf-bb54-94d2b26ee8cd"]}, .span = ["testNode-1"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-14"}, .name = "testNP-14", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["893f2a29-28c2-5766-9b9a-b90764ba0e1f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2d81c219-d357-5304-a6cb-b8f2ebcc2294"]}, .span = ["testNode-1"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-15"}, .name = "testNP-15", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c30355fd-716b-5eaa-a629-601ff71fe936"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["893f2a29-28c2-5766-9b9a-b90764ba0e1f"]}, .span = ["testNode-1"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-16"}, .name = "testNP-16", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2c4f71d7-2a06-5e6d-b36c-6eb4e2e2f3cf"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c30355fd-716b-5eaa-a629-601ff71fe936"]}, .span = ["testNode-1"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-17"}, .name = "testNP-17", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["53c31970-d212-502d-a92f-f295fef40016"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2c4f71d7-2a06-5e6d-b36c-6eb4e2e2f3cf"]}, .span = ["testNode-1"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-18"}, .name = "testNP-18", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e39017a8-50a8-542e-a4ef-0a3f387e7bf2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["53c31970-d212-502d-a92f-f295fef40016"]}, .span = ["testNode-1"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-19"}, .name = "testNP-19", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ea45898f-2a72-5623-85ed-14b453031175"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e39017a8-50a8-542e-a4ef-0a3f387e7bf2"]}, .span = ["testNode-1"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-2"}, .name = "testNP-2", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["21968c46-41c3-5a04-a5cf-a647f6f656b6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4cd21ab0-e6f3-5cbf-9d3f-baeec77a57f3"]}, .span = ["testNode-0"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-20"}, .name = "testNP-20", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a86be111-0734-5db8-a656-ee4e8bf0aed7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ea45898f-2a72-5623-85ed-14b453031175"]}, .span = ["testNode-2"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-21"}, .name = "testNP-21", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["68c691f2-7eb5-5354-b3f7-88c4aa2ac23f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a86be111-0734-5db8-a656-ee4e8bf0aed7"]}, .span = ["testNode-2"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-22"}, .name = "testNP-22", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["84d95faa-012d-5288-ae40-788efddb92a0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["68c691f2-7eb5-5354-b3f7-88c4aa2ac23f"]}, .span = ["testNode-2"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-23"}, .name = "testNP-23", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4962d527-1649-5cd9-9aa6-95739cc1ed2f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["84d95faa-012d-5288-ae40-788efddb92a0"]}, .span = ["testNode-2"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-24"}, .name = "testNP-24", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f9af42e5-d01e-5852-906f-94d78a462008"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4962d527-1649-5cd9-9aa6-95739cc1ed2f"]}, .span = ["testNode-2"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-25"}, .name = "testNP-25", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f489cdaa-c5e8-5a99-8070-b15ba9f0dcca"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f9af42e5-d01e-5852-906f-94d78a462008"]}, .span = ["testNode-2"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-26"}, .name = "testNP-26", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d7337363-189b-53ad-89fa-0f7cbfe68534"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f489cdaa-c5e8-5a99-8070-b15ba9f0dcca"]}, .span = ["testNode-2"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-27"}, .name = "testNP-27", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ce44739f-83fa-5414-b860-366a7b1cee45"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d7337363-189b-53ad-89fa-0f7cbfe68534"]}, .span = ["testNode-2"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-28"}, .name = "testNP-28", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["33c89372-d5b7-5b27-9b11-7081dc6c75c6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ce44739f-83fa-5414-b860-366a7b1cee45"]}, .span = ["testNode-2"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-29"}, .name = "testNP-29", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["48aff4f5-0c50-54f0-af33-70e2ab77f5b0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["33c89372-d5b7-5b27-9b11-7081dc6c75c6"]}, .span = ["testNode-2"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-3"}, .name = "testNP-3", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["48751966-7751-5e92-82c2-ca4e0df2c7e7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["21968c46-41c3-5a04-a5cf-a647f6f656b6"]}, .span = ["testNode-0"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-30"}, .name = "testNP-30", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3d076cea-adb0-5b25-a9c3-eb0fc9cc237f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["48aff4f5-0c50-54f0-af33-70e2ab77f5b0"]}, .span = ["testNode-3"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-31"}, .name = "testNP-31", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6ce6739e-834b-5cc8-b9f6-0bd7d7a785dd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3d076cea-adb0-5b25-a9c3-eb0fc9cc237f"]}, .span = ["testNode-3"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-4"}, .name = "testNP-4", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2f4c3477-a740-579b-8eb2-1a48a21f5fa0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["48751966-7751-5e92-82c2-ca4e0df2c7e7"]}, .span = ["testNode-0"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-5"}, .name = "testNP-5", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f35e9b05-11d6-5059-9067-bd9d8be5b836"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2f4c3477-a740-579b-8eb2-1a48a21f5fa0"]}, .span = ["testNode-0"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-6"}, .name = "testNP-6", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6da38bf0-1965-54d4-b4da-3981a9cb3abd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f35e9b05-11d6-5059-9067-bd9d8be5b836"]}, .span = ["testNode-0"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-7"}, .name = "testNP-7", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8729fd0a-5c54-5db9-af45-51cadb9497ad"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6da38bf0-1965-54d4-b4da-3981a9cb3abd"]}, .span = ["testNode-0"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-8"}, .name = "testNP-8", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["93a645bc-031d-5524-82a0-ca445ae1d1d4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8729fd0a-5c54-5db9-af45-51cadb9497ad"]}, .span = ["testNode-0"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-9"}, .name = "testNP-9", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ab6503c0-5611-5c9a-a9d4-e544fa70549f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["93a645bc-031d-5524-82a0-ca445ae1d1d4"]}, .span = ["testNode-0"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0f9fbc5c-5a7b-5c5f-9aee-9a43fd621356"}, .name = "0f9fbc5c-5a7b-5c5f-9aee-9a43fd621356", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-50]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-50")], .matchExpressions = []}}}}, .addresses = ["10.10.5.0"], .span = ["testNode-4"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1c975463-0c20-5ec3-9552-7dc30a671eab"}, .name = "1c975463-0c20-5ec3-9552-7dc30a671eab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-64]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-64")], .matchExpressions = []}}}}, .addresses = ["10.10.6.4"], .span = ["testNode-6"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1d0f8788-a5a7-56a5-842e-dfef785034b1"}, .name = "1d0f8788-a5a7-56a5-842e-dfef785034b1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-61]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-61")], .matchExpressions = []}}}}, .addresses = ["10.10.6.1"], .span = ["testNode-6"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1dae3d30-30b8-5bff-a131-5db10e5e5837"}, .name = "1dae3d30-30b8-5bff-a131-5db10e5e5837", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-59]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-59")], .matchExpressions = []}}}}, .addresses = ["10.10.5.9"], .span = ["testNode-5"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1f0cec39-f9a3-5773-a5f8-d75c15ebc195"}, .name = "1f0cec39-f9a3-5773-a5f8-d75c15ebc195", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-60]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-60")], .matchExpressions = []}}}}, .addresses = ["10.10.6.0"], .span = ["testNode-5"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "210240b9-6894-57ce-9c87-05e71d4dfadb"}, .name = "210240b9-6894-57ce-9c87-05e71d4dfadb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-40]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-40")], .matchExpressions = []}}}}, .addresses = ["10.10.4.0"], .span = ["testNode-3"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "23869241-7820-549f-a94b-50ad97b9fb31"}, .name = "23869241-7820-549f-a94b-50ad97b9fb31", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-37]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-37")], .matchExpressions = []}}}}, .addresses = ["10.10.3.7"], .span = ["testNode-3"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2d7c595d-9ae7-5c49-a196-9bf7e286c7ae"}, .name = "2d7c595d-9ae7-5c49-a196-9bf7e286c7ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-51]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-51")], .matchExpressions = []}}}}, .addresses = ["10.10.5.1"], .span = ["testNode-5"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "34c56586-0b5e-5952-a438-e695a1eaf662"}, .name = "34c56586-0b5e-5952-a438-e695a1eaf662", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-33]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-33")], .matchExpressions = []}}}}, .addresses = ["10.10.3.3"], .span = ["testNode-3"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "475c83de-e4e5-51b7-8e62-923c954d24a0"}, .name = "475c83de-e4e5-51b7-8e62-923c954d24a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-42]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-42")], .matchExpressions = []}}}}, .addresses = ["10.10.4.2"], .span = ["testNode-4"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "55a30f68-81ce-5650-b9a1-7f0b3689dde6"}, .name = "55a30f68-81ce-5650-b9a1-7f0b3689dde6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-55]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-55")], .matchExpressions = []}}}}, .addresses = ["10.10.5.5"], .span = ["testNode-5"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5a00ebaf-738c-52e4-aa5b-86f171891e67"}, .name = "5a00ebaf-738c-52e4-aa5b-86f171891e67", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-54]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-54")], .matchExpressions = []}}}}, .addresses = ["10.10.5.4"], .span = ["testNode-5"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "602c5722-753f-5d2c-ab9c-9991b7170ddb"}, .name = "602c5722-753f-5d2c-ab9c-9991b7170ddb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-41]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-41")], .matchExpressions = []}}}}, .addresses = ["10.10.4.1"], .span = ["testNode-4"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "641838ad-7bfd-5cd6-a02d-fb5f08f35318"}, .name = "641838ad-7bfd-5cd6-a02d-fb5f08f35318", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-38]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-38")], .matchExpressions = []}}}}, .addresses = ["10.10.3.8"], .span = ["testNode-3"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "66501457-d7ea-568b-9e57-2211ab397fce"}, .name = "66501457-d7ea-568b-9e57-2211ab397fce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-35]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-35")], .matchExpressions = []}}}}, .addresses = ["10.10.3.5"], .span = ["testNode-3"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "71083daa-f480-59d1-a72a-046de2f709db"}, .name = "71083daa-f480-59d1-a72a-046de2f709db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-48]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-48")], .matchExpressions = []}}}}, .addresses = ["10.10.4.8"], .span = ["testNode-4"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "71b0271b-444a-5dfd-bd9a-20a347925a84"}, .name = "71b0271b-444a-5dfd-bd9a-20a347925a84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-58]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-58")], .matchExpressions = []}}}}, .addresses = ["10.10.5.8"], .span = ["testNode-5"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "71b8a0db-408a-5bdd-954c-0a5c1eadc9d4"}, .name = "71b8a0db-408a-5bdd-954c-0a5c1eadc9d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-46]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-46")], .matchExpressions = []}}}}, .addresses = ["10.10.4.6"], .span = ["testNode-4"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "785109ce-b196-523d-a25e-126f78b2b7a6"}, .name = "785109ce-b196-523d-a25e-126f78b2b7a6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-53]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-53")], .matchExpressions = []}}}}, .addresses = ["10.10.5.3"], .span = ["testNode-5"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9485d685-c6cd-518f-8452-c787dcb05835"}, .name = "9485d685-c6cd-518f-8452-c787dcb05835", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-34]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-34")], .matchExpressions = []}}}}, .addresses = ["10.10.3.4"], .span = ["testNode-3"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "94d3564e-0363-5fa2-9f6d-be334db4bcb6"}, .name = "94d3564e-0363-5fa2-9f6d-be334db4bcb6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-49]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-49")], .matchExpressions = []}}}}, .addresses = ["10.10.4.9"], .span = ["testNode-4"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "98321256-678d-57ed-a5f3-fc3d3571ebaa"}, .name = "98321256-678d-57ed-a5f3-fc3d3571ebaa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-63]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-63")], .matchExpressions = []}}}}, .addresses = ["10.10.6.3"], .span = ["testNode-6"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a2225ae3-9b53-5d5f-866f-fb4c2eabdc4a"}, .name = "a2225ae3-9b53-5d5f-866f-fb4c2eabdc4a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-57]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-57")], .matchExpressions = []}}}}, .addresses = ["10.10.5.7"], .span = ["testNode-5"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a82b6b17-7be3-5ebf-8d0d-3c47a657b459"}, .name = "a82b6b17-7be3-5ebf-8d0d-3c47a657b459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-52]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-52")], .matchExpressions = []}}}}, .addresses = ["10.10.5.2"], .span = ["testNode-5"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a9f74d5b-ce62-5626-8198-ce25bf81ad15"}, .name = "a9f74d5b-ce62-5626-8198-ce25bf81ad15", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-45]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-45")], .matchExpressions = []}}}}, .addresses = ["10.10.4.5"], .span = ["testNode-4"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bc921a89-938a-5c34-94cc-104ece73c6a4"}, .name = "bc921a89-938a-5c34-94cc-104ece73c6a4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-44]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-44")], .matchExpressions = []}}}}, .addresses = ["10.10.4.4"], .span = ["testNode-4"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "db0f718e-38be-519e-8247-4318117fe02a"}, .name = "db0f718e-38be-519e-8247-4318117fe02a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-39]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-39")], .matchExpressions = []}}}}, .addresses = ["10.10.3.9"], .span = ["testNode-3"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e9ece707-d3a9-56b7-b64f-5e06272be2ae"}, .name = "e9ece707-d3a9-56b7-b64f-5e06272be2ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-56]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-56")], .matchExpressions = []}}}}, .addresses = ["10.10.5.6"], .span = ["testNode-5"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ed4f616f-9f03-59f5-8080-968295e9b45a"}, .name = "ed4f616f-9f03-59f5-8080-968295e9b45a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-47]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-47")], .matchExpressions = []}}}}, .addresses = ["10.10.4.7"], .span = ["testNode-4"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f3f45705-4e21-5ed2-9f79-2f41496f57c6"}, .name = "f3f45705-4e21-5ed2-9f79-2f41496f57c6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-62]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-62")], .matchExpressions = []}}}}, .addresses = ["10.10.6.2"], .span = ["testNode-6"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fb1e260b-b5c2-546d-970a-3e472dd9fb2a"}, .name = "fb1e260b-b5c2-546d-970a-3e472dd9fb2a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-36]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-36")], .matchExpressions = []}}}}, .addresses = ["10.10.3.6"], .span = ["testNode-3"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fed401ba-d98f-5082-b730-1c9d3d891ae1"}, .name = "fed401ba-d98f-5082-b730-1c9d3d891ae1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-43]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-43")], .matchExpressions = []}}}}, .addresses = ["10.10.4.3"], .span = ["testNode-4"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0f9fbc5c-5a7b-5c5f-9aee-9a43fd621356"}, .name = "0f9fbc5c-5a7b-5c5f-9aee-9a43fd621356", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-50]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-50")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-50", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1d0f8788-a5a7-56a5-842e-dfef785034b1"}, .name = "1d0f8788-a5a7-56a5-842e-dfef785034b1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-61]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-61")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-61", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1dae3d30-30b8-5bff-a131-5db10e5e5837"}, .name = "1dae3d30-30b8-5bff-a131-5db10e5e5837", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-59]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-59")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-59", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1f0cec39-f9a3-5773-a5f8-d75c15ebc195"}, .name = "1f0cec39-f9a3-5773-a5f8-d75c15ebc195", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-60]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-60")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-60", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "210240b9-6894-57ce-9c87-05e71d4dfadb"}, .name = "210240b9-6894-57ce-9c87-05e71d4dfadb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-40]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-40")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-40", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "23869241-7820-549f-a94b-50ad97b9fb31"}, .name = "23869241-7820-549f-a94b-50ad97b9fb31", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-37]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-37")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-37", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2d7c595d-9ae7-5c49-a196-9bf7e286c7ae"}, .name = "2d7c595d-9ae7-5c49-a196-9bf7e286c7ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-51]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-51")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-51", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "34c56586-0b5e-5952-a438-e695a1eaf662"}, .name = "34c56586-0b5e-5952-a438-e695a1eaf662", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-33]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-33")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-33", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "475c83de-e4e5-51b7-8e62-923c954d24a0"}, .name = "475c83de-e4e5-51b7-8e62-923c954d24a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-42]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-42")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-42", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "55a30f68-81ce-5650-b9a1-7f0b3689dde6"}, .name = "55a30f68-81ce-5650-b9a1-7f0b3689dde6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-55]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-55")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-55", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5a00ebaf-738c-52e4-aa5b-86f171891e67"}, .name = "5a00ebaf-738c-52e4-aa5b-86f171891e67", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-54]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-54")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-54", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "602c5722-753f-5d2c-ab9c-9991b7170ddb"}, .name = "602c5722-753f-5d2c-ab9c-9991b7170ddb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-41]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-41")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-41", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "641838ad-7bfd-5cd6-a02d-fb5f08f35318"}, .name = "641838ad-7bfd-5cd6-a02d-fb5f08f35318", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-38]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-38")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-38", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "66501457-d7ea-568b-9e57-2211ab397fce"}, .name = "66501457-d7ea-568b-9e57-2211ab397fce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-35]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-35")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-35", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6ce6739e-834b-5cc8-b9f6-0bd7d7a785dd"}, .name = "6ce6739e-834b-5cc8-b9f6-0bd7d7a785dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-32]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-32")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-32", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "71083daa-f480-59d1-a72a-046de2f709db"}, .name = "71083daa-f480-59d1-a72a-046de2f709db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-48]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-48")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-48", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "71b0271b-444a-5dfd-bd9a-20a347925a84"}, .name = "71b0271b-444a-5dfd-bd9a-20a347925a84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-58]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-58")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-58", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "71b8a0db-408a-5bdd-954c-0a5c1eadc9d4"}, .name = "71b8a0db-408a-5bdd-954c-0a5c1eadc9d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-46]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-46")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-46", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "785109ce-b196-523d-a25e-126f78b2b7a6"}, .name = "785109ce-b196-523d-a25e-126f78b2b7a6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-53]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-53")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-53", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9485d685-c6cd-518f-8452-c787dcb05835"}, .name = "9485d685-c6cd-518f-8452-c787dcb05835", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-34]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-34")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-34", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "94d3564e-0363-5fa2-9f6d-be334db4bcb6"}, .name = "94d3564e-0363-5fa2-9f6d-be334db4bcb6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-49]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-49")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-49", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "98321256-678d-57ed-a5f3-fc3d3571ebaa"}, .name = "98321256-678d-57ed-a5f3-fc3d3571ebaa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-63]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-63")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-63", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a2225ae3-9b53-5d5f-866f-fb4c2eabdc4a"}, .name = "a2225ae3-9b53-5d5f-866f-fb4c2eabdc4a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-57]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-57")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-57", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a82b6b17-7be3-5ebf-8d0d-3c47a657b459"}, .name = "a82b6b17-7be3-5ebf-8d0d-3c47a657b459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-52]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-52")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-52", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a9f74d5b-ce62-5626-8198-ce25bf81ad15"}, .name = "a9f74d5b-ce62-5626-8198-ce25bf81ad15", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-45]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-45")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-45", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bc921a89-938a-5c34-94cc-104ece73c6a4"}, .name = "bc921a89-938a-5c34-94cc-104ece73c6a4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-44]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-44")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-44", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "db0f718e-38be-519e-8247-4318117fe02a"}, .name = "db0f718e-38be-519e-8247-4318117fe02a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-39]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-39")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-39", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e9ece707-d3a9-56b7-b64f-5e06272be2ae"}, .name = "e9ece707-d3a9-56b7-b64f-5e06272be2ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-56]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-56")], .matchExpressions = []}}}}, .podsByNode = [("testNode-5", [k8spolicy.PodReference{.name = "testPod-56", .namespace = "testNamespace"}])], .span = ["testNode-5"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ed4f616f-9f03-59f5-8080-968295e9b45a"}, .name = "ed4f616f-9f03-59f5-8080-968295e9b45a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-47]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-47")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-47", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f3f45705-4e21-5ed2-9f79-2f41496f57c6"}, .name = "f3f45705-4e21-5ed2-9f79-2f41496f57c6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-62]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-62")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-62", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fb1e260b-b5c2-546d-970a-3e472dd9fb2a"}, .name = "fb1e260b-b5c2-546d-970a-3e472dd9fb2a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-36]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-36")], .matchExpressions = []}}}}, .podsByNode = [("testNode-3", [k8spolicy.PodReference{.name = "testPod-36", .namespace = "testNamespace"}])], .span = ["testNode-3"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fed401ba-d98f-5082-b730-1c9d3d891ae1"}, .name = "fed401ba-d98f-5082-b730-1c9d3d891ae1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-43]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-43")], .matchExpressions = []}}}}, .podsByNode = [("testNode-4", [k8spolicy.PodReference{.name = "testPod-43", .namespace = "testNamespace"}])], .span = ["testNode-4"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-32"}, .name = "testNP-32", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["34c56586-0b5e-5952-a438-e695a1eaf662"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6ce6739e-834b-5cc8-b9f6-0bd7d7a785dd"]}, .span = ["testNode-3"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-33"}, .name = "testNP-33", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9485d685-c6cd-518f-8452-c787dcb05835"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["34c56586-0b5e-5952-a438-e695a1eaf662"]}, .span = ["testNode-3"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-34"}, .name = "testNP-34", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["66501457-d7ea-568b-9e57-2211ab397fce"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9485d685-c6cd-518f-8452-c787dcb05835"]}, .span = ["testNode-3"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-35"}, .name = "testNP-35", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fb1e260b-b5c2-546d-970a-3e472dd9fb2a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["66501457-d7ea-568b-9e57-2211ab397fce"]}, .span = ["testNode-3"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-36"}, .name = "testNP-36", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["23869241-7820-549f-a94b-50ad97b9fb31"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fb1e260b-b5c2-546d-970a-3e472dd9fb2a"]}, .span = ["testNode-3"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-37"}, .name = "testNP-37", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["641838ad-7bfd-5cd6-a02d-fb5f08f35318"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["23869241-7820-549f-a94b-50ad97b9fb31"]}, .span = ["testNode-3"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-38"}, .name = "testNP-38", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["db0f718e-38be-519e-8247-4318117fe02a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["641838ad-7bfd-5cd6-a02d-fb5f08f35318"]}, .span = ["testNode-3"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-39"}, .name = "testNP-39", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["210240b9-6894-57ce-9c87-05e71d4dfadb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["db0f718e-38be-519e-8247-4318117fe02a"]}, .span = ["testNode-3"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-40"}, .name = "testNP-40", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["602c5722-753f-5d2c-ab9c-9991b7170ddb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["210240b9-6894-57ce-9c87-05e71d4dfadb"]}, .span = ["testNode-4"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-41"}, .name = "testNP-41", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["475c83de-e4e5-51b7-8e62-923c954d24a0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["602c5722-753f-5d2c-ab9c-9991b7170ddb"]}, .span = ["testNode-4"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-42"}, .name = "testNP-42", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fed401ba-d98f-5082-b730-1c9d3d891ae1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["475c83de-e4e5-51b7-8e62-923c954d24a0"]}, .span = ["testNode-4"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-43"}, .name = "testNP-43", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bc921a89-938a-5c34-94cc-104ece73c6a4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fed401ba-d98f-5082-b730-1c9d3d891ae1"]}, .span = ["testNode-4"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-44"}, .name = "testNP-44", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a9f74d5b-ce62-5626-8198-ce25bf81ad15"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bc921a89-938a-5c34-94cc-104ece73c6a4"]}, .span = ["testNode-4"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-45"}, .name = "testNP-45", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["71b8a0db-408a-5bdd-954c-0a5c1eadc9d4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a9f74d5b-ce62-5626-8198-ce25bf81ad15"]}, .span = ["testNode-4"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-46"}, .name = "testNP-46", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ed4f616f-9f03-59f5-8080-968295e9b45a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["71b8a0db-408a-5bdd-954c-0a5c1eadc9d4"]}, .span = ["testNode-4"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-47"}, .name = "testNP-47", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["71083daa-f480-59d1-a72a-046de2f709db"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ed4f616f-9f03-59f5-8080-968295e9b45a"]}, .span = ["testNode-4"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-48"}, .name = "testNP-48", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["94d3564e-0363-5fa2-9f6d-be334db4bcb6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["71083daa-f480-59d1-a72a-046de2f709db"]}, .span = ["testNode-4"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-49"}, .name = "testNP-49", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0f9fbc5c-5a7b-5c5f-9aee-9a43fd621356"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["94d3564e-0363-5fa2-9f6d-be334db4bcb6"]}, .span = ["testNode-4"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-50"}, .name = "testNP-50", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2d7c595d-9ae7-5c49-a196-9bf7e286c7ae"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0f9fbc5c-5a7b-5c5f-9aee-9a43fd621356"]}, .span = ["testNode-5"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-51"}, .name = "testNP-51", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a82b6b17-7be3-5ebf-8d0d-3c47a657b459"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2d7c595d-9ae7-5c49-a196-9bf7e286c7ae"]}, .span = ["testNode-5"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-52"}, .name = "testNP-52", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["785109ce-b196-523d-a25e-126f78b2b7a6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a82b6b17-7be3-5ebf-8d0d-3c47a657b459"]}, .span = ["testNode-5"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-53"}, .name = "testNP-53", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5a00ebaf-738c-52e4-aa5b-86f171891e67"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["785109ce-b196-523d-a25e-126f78b2b7a6"]}, .span = ["testNode-5"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-54"}, .name = "testNP-54", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["55a30f68-81ce-5650-b9a1-7f0b3689dde6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5a00ebaf-738c-52e4-aa5b-86f171891e67"]}, .span = ["testNode-5"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-55"}, .name = "testNP-55", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e9ece707-d3a9-56b7-b64f-5e06272be2ae"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["55a30f68-81ce-5650-b9a1-7f0b3689dde6"]}, .span = ["testNode-5"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-56"}, .name = "testNP-56", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a2225ae3-9b53-5d5f-866f-fb4c2eabdc4a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e9ece707-d3a9-56b7-b64f-5e06272be2ae"]}, .span = ["testNode-5"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-57"}, .name = "testNP-57", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["71b0271b-444a-5dfd-bd9a-20a347925a84"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a2225ae3-9b53-5d5f-866f-fb4c2eabdc4a"]}, .span = ["testNode-5"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-58"}, .name = "testNP-58", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1dae3d30-30b8-5bff-a131-5db10e5e5837"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["71b0271b-444a-5dfd-bd9a-20a347925a84"]}, .span = ["testNode-5"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-59"}, .name = "testNP-59", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1f0cec39-f9a3-5773-a5f8-d75c15ebc195"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1dae3d30-30b8-5bff-a131-5db10e5e5837"]}, .span = ["testNode-5"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-60"}, .name = "testNP-60", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1d0f8788-a5a7-56a5-842e-dfef785034b1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1f0cec39-f9a3-5773-a5f8-d75c15ebc195"]}, .span = ["testNode-6"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-61"}, .name = "testNP-61", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f3f45705-4e21-5ed2-9f79-2f41496f57c6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1d0f8788-a5a7-56a5-842e-dfef785034b1"]}, .span = ["testNode-6"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-62"}, .name = "testNP-62", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["98321256-678d-57ed-a5f3-fc3d3571ebaa"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f3f45705-4e21-5ed2-9f79-2f41496f57c6"]}, .span = ["testNode-6"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-63"}, .name = "testNP-63", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1c975463-0c20-5ec3-9552-7dc30a671eab"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["98321256-678d-57ed-a5f3-fc3d3571ebaa"]}, .span = ["testNode-6"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "10b59112-a57e-5d49-968b-9f862c18d974"}, .name = "10b59112-a57e-5d49-968b-9f862c18d974", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-90]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-90")], .matchExpressions = []}}}}, .addresses = ["10.10.9.0"], .span = ["testNode-8"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1132ef39-23a8-50b0-832a-4e2d43e672b0"}, .name = "1132ef39-23a8-50b0-832a-4e2d43e672b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-85]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-85")], .matchExpressions = []}}}}, .addresses = ["10.10.8.5"], .span = ["testNode-8"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1a7851fa-a0ed-5c12-b4e0-6131bc09537e"}, .name = "1a7851fa-a0ed-5c12-b4e0-6131bc09537e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-78]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-78")], .matchExpressions = []}}}}, .addresses = ["10.10.7.8"], .span = ["testNode-7"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "20f53c16-05ce-54e7-ae47-396d24111604"}, .name = "20f53c16-05ce-54e7-ae47-396d24111604", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-66]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-66")], .matchExpressions = []}}}}, .addresses = ["10.10.6.6"], .span = ["testNode-6"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2d6dfac2-8829-539a-b265-c63a13346b09"}, .name = "2d6dfac2-8829-539a-b265-c63a13346b09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-93]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-93")], .matchExpressions = []}}}}, .addresses = ["10.10.9.3"], .span = ["testNode-9"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "30dca5ab-9fda-5d4c-8615-48e88970ce52"}, .name = "30dca5ab-9fda-5d4c-8615-48e88970ce52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-92]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-92")], .matchExpressions = []}}}}, .addresses = ["10.10.9.2"], .span = ["testNode-9"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "351946b5-58ff-5208-85f5-88334f3e3451"}, .name = "351946b5-58ff-5208-85f5-88334f3e3451", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-75]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-75")], .matchExpressions = []}}}}, .addresses = ["10.10.7.5"], .span = ["testNode-7"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3eb6c25e-0252-58bf-b260-387044d53667"}, .name = "3eb6c25e-0252-58bf-b260-387044d53667", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-67]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-67")], .matchExpressions = []}}}}, .addresses = ["10.10.6.7"], .span = ["testNode-6"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4c5fc267-d043-5294-9044-61ec13124b6d"}, .name = "4c5fc267-d043-5294-9044-61ec13124b6d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-80]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-80")], .matchExpressions = []}}}}, .addresses = ["10.10.8.0"], .span = ["testNode-7"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "547c302e-bf61-5241-be2f-d5d117fa27d3"}, .name = "547c302e-bf61-5241-be2f-d5d117fa27d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-72]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-72")], .matchExpressions = []}}}}, .addresses = ["10.10.7.2"], .span = ["testNode-7"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "66b6f1bc-f1f0-50be-a451-a991f5bf4a0b"}, .name = "66b6f1bc-f1f0-50be-a451-a991f5bf4a0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-95]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-95")], .matchExpressions = []}}}}, .addresses = ["10.10.9.5"], .span = ["testNode-9"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "66e00457-0849-5184-bf00-abca386fc613"}, .name = "66e00457-0849-5184-bf00-abca386fc613", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-81]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-81")], .matchExpressions = []}}}}, .addresses = ["10.10.8.1"], .span = ["testNode-8"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6e418e67-6108-51aa-9efd-15ab697d244e"}, .name = "6e418e67-6108-51aa-9efd-15ab697d244e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-91]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-91")], .matchExpressions = []}}}}, .addresses = ["10.10.9.1"], .span = ["testNode-9"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "724801bc-ac83-557b-b23e-987677738d87"}, .name = "724801bc-ac83-557b-b23e-987677738d87", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-65]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-65")], .matchExpressions = []}}}}, .addresses = ["10.10.6.5"], .span = ["testNode-6"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "75e75e2b-cc28-5038-bc0c-b760d589dbc3"}, .name = "75e75e2b-cc28-5038-bc0c-b760d589dbc3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-79]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-79")], .matchExpressions = []}}}}, .addresses = ["10.10.7.9"], .span = ["testNode-7"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "87abc5e5-eac1-5746-8fcc-5a7c58a66130"}, .name = "87abc5e5-eac1-5746-8fcc-5a7c58a66130", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-83]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-83")], .matchExpressions = []}}}}, .addresses = ["10.10.8.3"], .span = ["testNode-8"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8d5c17dc-85b5-55db-ba20-2565a735cb5b"}, .name = "8d5c17dc-85b5-55db-ba20-2565a735cb5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-96]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-96")], .matchExpressions = []}}}}, .addresses = ["10.10.9.6"], .span = ["testNode-9"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "95a27b70-9e78-5dc7-826b-fb7baa062f41"}, .name = "95a27b70-9e78-5dc7-826b-fb7baa062f41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-82]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-82")], .matchExpressions = []}}}}, .addresses = ["10.10.8.2"], .span = ["testNode-8"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9bc6b652-a82f-57cd-9a60-91ce90eb3785"}, .name = "9bc6b652-a82f-57cd-9a60-91ce90eb3785", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-73]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-73")], .matchExpressions = []}}}}, .addresses = ["10.10.7.3"], .span = ["testNode-7"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a28f565b-d559-57df-ba26-e0167663a7a9"}, .name = "a28f565b-d559-57df-ba26-e0167663a7a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-74]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-74")], .matchExpressions = []}}}}, .addresses = ["10.10.7.4"], .span = ["testNode-7"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a87c4deb-1fb9-5126-b493-cda9d5907866"}, .name = "a87c4deb-1fb9-5126-b493-cda9d5907866", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-88]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-88")], .matchExpressions = []}}}}, .addresses = ["10.10.8.8"], .span = ["testNode-8"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a9772eb5-79d4-5e3e-9b39-c76348a18dce"}, .name = "a9772eb5-79d4-5e3e-9b39-c76348a18dce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-68]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-68")], .matchExpressions = []}}}}, .addresses = ["10.10.6.8"], .span = ["testNode-6"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b5cfaa7e-2d4a-5223-8550-75d22758ad09"}, .name = "b5cfaa7e-2d4a-5223-8550-75d22758ad09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-76]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-76")], .matchExpressions = []}}}}, .addresses = ["10.10.7.6"], .span = ["testNode-7"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b72103a0-bf2c-5823-b0f8-5ba0e64b36b3"}, .name = "b72103a0-bf2c-5823-b0f8-5ba0e64b36b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-87]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-87")], .matchExpressions = []}}}}, .addresses = ["10.10.8.7"], .span = ["testNode-8"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b787ad4d-f2ec-58ae-8a53-eb5575093bf4"}, .name = "b787ad4d-f2ec-58ae-8a53-eb5575093bf4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-89]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-89")], .matchExpressions = []}}}}, .addresses = ["10.10.8.9"], .span = ["testNode-8"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "be36e14b-32d0-59d6-a7c5-aafc86f1a9d1"}, .name = "be36e14b-32d0-59d6-a7c5-aafc86f1a9d1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-84]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-84")], .matchExpressions = []}}}}, .addresses = ["10.10.8.4"], .span = ["testNode-8"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c9ed6d19-c495-52d4-b1b7-1750965a71f9"}, .name = "c9ed6d19-c495-52d4-b1b7-1750965a71f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-86]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-86")], .matchExpressions = []}}}}, .addresses = ["10.10.8.6"], .span = ["testNode-8"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cbe789bf-430c-5438-a094-736e589d4406"}, .name = "cbe789bf-430c-5438-a094-736e589d4406", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-70]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-70")], .matchExpressions = []}}}}, .addresses = ["10.10.7.0"], .span = ["testNode-6"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d38dae7c-8908-5aeb-85fa-35c607f3e0ce"}, .name = "d38dae7c-8908-5aeb-85fa-35c607f3e0ce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-71]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-71")], .matchExpressions = []}}}}, .addresses = ["10.10.7.1"], .span = ["testNode-7"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dc35e506-127b-51f2-a292-a61d8edb6c43"}, .name = "dc35e506-127b-51f2-a292-a61d8edb6c43", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-69]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-69")], .matchExpressions = []}}}}, .addresses = ["10.10.6.9"], .span = ["testNode-6"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f3a4ed7e-bf9b-51b2-a75d-becfe6013225"}, .name = "f3a4ed7e-bf9b-51b2-a75d-becfe6013225", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-94]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-94")], .matchExpressions = []}}}}, .addresses = ["10.10.9.4"], .span = ["testNode-9"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f3ae1307-2bd5-5fc8-81c8-d5945eaa33fb"}, .name = "f3ae1307-2bd5-5fc8-81c8-d5945eaa33fb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-77]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-77")], .matchExpressions = []}}}}, .addresses = ["10.10.7.7"], .span = ["testNode-7"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "10b59112-a57e-5d49-968b-9f862c18d974"}, .name = "10b59112-a57e-5d49-968b-9f862c18d974", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-90]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-90")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-90", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1132ef39-23a8-50b0-832a-4e2d43e672b0"}, .name = "1132ef39-23a8-50b0-832a-4e2d43e672b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-85]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-85")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-85", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1a7851fa-a0ed-5c12-b4e0-6131bc09537e"}, .name = "1a7851fa-a0ed-5c12-b4e0-6131bc09537e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-78]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-78")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-78", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1c975463-0c20-5ec3-9552-7dc30a671eab"}, .name = "1c975463-0c20-5ec3-9552-7dc30a671eab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-64]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-64")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-64", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "20f53c16-05ce-54e7-ae47-396d24111604"}, .name = "20f53c16-05ce-54e7-ae47-396d24111604", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-66]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-66")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-66", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2d6dfac2-8829-539a-b265-c63a13346b09"}, .name = "2d6dfac2-8829-539a-b265-c63a13346b09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-93]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-93")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-93", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "30dca5ab-9fda-5d4c-8615-48e88970ce52"}, .name = "30dca5ab-9fda-5d4c-8615-48e88970ce52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-92]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-92")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-92", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "351946b5-58ff-5208-85f5-88334f3e3451"}, .name = "351946b5-58ff-5208-85f5-88334f3e3451", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-75]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-75")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-75", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3eb6c25e-0252-58bf-b260-387044d53667"}, .name = "3eb6c25e-0252-58bf-b260-387044d53667", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-67]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-67")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-67", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4c5fc267-d043-5294-9044-61ec13124b6d"}, .name = "4c5fc267-d043-5294-9044-61ec13124b6d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-80]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-80")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-80", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "547c302e-bf61-5241-be2f-d5d117fa27d3"}, .name = "547c302e-bf61-5241-be2f-d5d117fa27d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-72]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-72")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-72", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "66b6f1bc-f1f0-50be-a451-a991f5bf4a0b"}, .name = "66b6f1bc-f1f0-50be-a451-a991f5bf4a0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-95]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-95")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-95", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "66e00457-0849-5184-bf00-abca386fc613"}, .name = "66e00457-0849-5184-bf00-abca386fc613", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-81]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-81")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-81", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6e418e67-6108-51aa-9efd-15ab697d244e"}, .name = "6e418e67-6108-51aa-9efd-15ab697d244e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-91]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-91")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-91", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "724801bc-ac83-557b-b23e-987677738d87"}, .name = "724801bc-ac83-557b-b23e-987677738d87", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-65]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-65")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-65", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "75e75e2b-cc28-5038-bc0c-b760d589dbc3"}, .name = "75e75e2b-cc28-5038-bc0c-b760d589dbc3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-79]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-79")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-79", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "87abc5e5-eac1-5746-8fcc-5a7c58a66130"}, .name = "87abc5e5-eac1-5746-8fcc-5a7c58a66130", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-83]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-83")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-83", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "95a27b70-9e78-5dc7-826b-fb7baa062f41"}, .name = "95a27b70-9e78-5dc7-826b-fb7baa062f41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-82]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-82")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-82", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9bc6b652-a82f-57cd-9a60-91ce90eb3785"}, .name = "9bc6b652-a82f-57cd-9a60-91ce90eb3785", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-73]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-73")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-73", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a28f565b-d559-57df-ba26-e0167663a7a9"}, .name = "a28f565b-d559-57df-ba26-e0167663a7a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-74]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-74")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-74", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a87c4deb-1fb9-5126-b493-cda9d5907866"}, .name = "a87c4deb-1fb9-5126-b493-cda9d5907866", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-88]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-88")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-88", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a9772eb5-79d4-5e3e-9b39-c76348a18dce"}, .name = "a9772eb5-79d4-5e3e-9b39-c76348a18dce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-68]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-68")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-68", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b5cfaa7e-2d4a-5223-8550-75d22758ad09"}, .name = "b5cfaa7e-2d4a-5223-8550-75d22758ad09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-76]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-76")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-76", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b72103a0-bf2c-5823-b0f8-5ba0e64b36b3"}, .name = "b72103a0-bf2c-5823-b0f8-5ba0e64b36b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-87]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-87")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-87", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b787ad4d-f2ec-58ae-8a53-eb5575093bf4"}, .name = "b787ad4d-f2ec-58ae-8a53-eb5575093bf4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-89]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-89")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-89", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "be36e14b-32d0-59d6-a7c5-aafc86f1a9d1"}, .name = "be36e14b-32d0-59d6-a7c5-aafc86f1a9d1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-84]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-84")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-84", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c9ed6d19-c495-52d4-b1b7-1750965a71f9"}, .name = "c9ed6d19-c495-52d4-b1b7-1750965a71f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-86]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-86")], .matchExpressions = []}}}}, .podsByNode = [("testNode-8", [k8spolicy.PodReference{.name = "testPod-86", .namespace = "testNamespace"}])], .span = ["testNode-8"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cbe789bf-430c-5438-a094-736e589d4406"}, .name = "cbe789bf-430c-5438-a094-736e589d4406", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-70]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-70")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-70", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d38dae7c-8908-5aeb-85fa-35c607f3e0ce"}, .name = "d38dae7c-8908-5aeb-85fa-35c607f3e0ce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-71]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-71")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-71", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dc35e506-127b-51f2-a292-a61d8edb6c43"}, .name = "dc35e506-127b-51f2-a292-a61d8edb6c43", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-69]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-69")], .matchExpressions = []}}}}, .podsByNode = [("testNode-6", [k8spolicy.PodReference{.name = "testPod-69", .namespace = "testNamespace"}])], .span = ["testNode-6"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f3a4ed7e-bf9b-51b2-a75d-becfe6013225"}, .name = "f3a4ed7e-bf9b-51b2-a75d-becfe6013225", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-94]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-94")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-94", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f3ae1307-2bd5-5fc8-81c8-d5945eaa33fb"}, .name = "f3ae1307-2bd5-5fc8-81c8-d5945eaa33fb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-77]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-77")], .matchExpressions = []}}}}, .podsByNode = [("testNode-7", [k8spolicy.PodReference{.name = "testPod-77", .namespace = "testNamespace"}])], .span = ["testNode-7"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-64"}, .name = "testNP-64", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["724801bc-ac83-557b-b23e-987677738d87"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1c975463-0c20-5ec3-9552-7dc30a671eab"]}, .span = ["testNode-6"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-65"}, .name = "testNP-65", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["20f53c16-05ce-54e7-ae47-396d24111604"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["724801bc-ac83-557b-b23e-987677738d87"]}, .span = ["testNode-6"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-66"}, .name = "testNP-66", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3eb6c25e-0252-58bf-b260-387044d53667"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["20f53c16-05ce-54e7-ae47-396d24111604"]}, .span = ["testNode-6"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-67"}, .name = "testNP-67", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a9772eb5-79d4-5e3e-9b39-c76348a18dce"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3eb6c25e-0252-58bf-b260-387044d53667"]}, .span = ["testNode-6"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-68"}, .name = "testNP-68", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dc35e506-127b-51f2-a292-a61d8edb6c43"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a9772eb5-79d4-5e3e-9b39-c76348a18dce"]}, .span = ["testNode-6"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-69"}, .name = "testNP-69", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cbe789bf-430c-5438-a094-736e589d4406"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dc35e506-127b-51f2-a292-a61d8edb6c43"]}, .span = ["testNode-6"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-70"}, .name = "testNP-70", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d38dae7c-8908-5aeb-85fa-35c607f3e0ce"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cbe789bf-430c-5438-a094-736e589d4406"]}, .span = ["testNode-7"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-71"}, .name = "testNP-71", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["547c302e-bf61-5241-be2f-d5d117fa27d3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d38dae7c-8908-5aeb-85fa-35c607f3e0ce"]}, .span = ["testNode-7"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-72"}, .name = "testNP-72", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9bc6b652-a82f-57cd-9a60-91ce90eb3785"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["547c302e-bf61-5241-be2f-d5d117fa27d3"]}, .span = ["testNode-7"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-73"}, .name = "testNP-73", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a28f565b-d559-57df-ba26-e0167663a7a9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9bc6b652-a82f-57cd-9a60-91ce90eb3785"]}, .span = ["testNode-7"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-74"}, .name = "testNP-74", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["351946b5-58ff-5208-85f5-88334f3e3451"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a28f565b-d559-57df-ba26-e0167663a7a9"]}, .span = ["testNode-7"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-75"}, .name = "testNP-75", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b5cfaa7e-2d4a-5223-8550-75d22758ad09"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["351946b5-58ff-5208-85f5-88334f3e3451"]}, .span = ["testNode-7"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-76"}, .name = "testNP-76", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f3ae1307-2bd5-5fc8-81c8-d5945eaa33fb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b5cfaa7e-2d4a-5223-8550-75d22758ad09"]}, .span = ["testNode-7"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-77"}, .name = "testNP-77", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1a7851fa-a0ed-5c12-b4e0-6131bc09537e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f3ae1307-2bd5-5fc8-81c8-d5945eaa33fb"]}, .span = ["testNode-7"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-78"}, .name = "testNP-78", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["75e75e2b-cc28-5038-bc0c-b760d589dbc3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1a7851fa-a0ed-5c12-b4e0-6131bc09537e"]}, .span = ["testNode-7"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-79"}, .name = "testNP-79", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4c5fc267-d043-5294-9044-61ec13124b6d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["75e75e2b-cc28-5038-bc0c-b760d589dbc3"]}, .span = ["testNode-7"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-80"}, .name = "testNP-80", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["66e00457-0849-5184-bf00-abca386fc613"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4c5fc267-d043-5294-9044-61ec13124b6d"]}, .span = ["testNode-8"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-81"}, .name = "testNP-81", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["95a27b70-9e78-5dc7-826b-fb7baa062f41"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["66e00457-0849-5184-bf00-abca386fc613"]}, .span = ["testNode-8"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-82"}, .name = "testNP-82", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["87abc5e5-eac1-5746-8fcc-5a7c58a66130"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["95a27b70-9e78-5dc7-826b-fb7baa062f41"]}, .span = ["testNode-8"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-83"}, .name = "testNP-83", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["be36e14b-32d0-59d6-a7c5-aafc86f1a9d1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["87abc5e5-eac1-5746-8fcc-5a7c58a66130"]}, .span = ["testNode-8"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-84"}, .name = "testNP-84", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1132ef39-23a8-50b0-832a-4e2d43e672b0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["be36e14b-32d0-59d6-a7c5-aafc86f1a9d1"]}, .span = ["testNode-8"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-85"}, .name = "testNP-85", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c9ed6d19-c495-52d4-b1b7-1750965a71f9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1132ef39-23a8-50b0-832a-4e2d43e672b0"]}, .span = ["testNode-8"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-86"}, .name = "testNP-86", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b72103a0-bf2c-5823-b0f8-5ba0e64b36b3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c9ed6d19-c495-52d4-b1b7-1750965a71f9"]}, .span = ["testNode-8"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-87"}, .name = "testNP-87", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a87c4deb-1fb9-5126-b493-cda9d5907866"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b72103a0-bf2c-5823-b0f8-5ba0e64b36b3"]}, .span = ["testNode-8"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-88"}, .name = "testNP-88", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b787ad4d-f2ec-58ae-8a53-eb5575093bf4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a87c4deb-1fb9-5126-b493-cda9d5907866"]}, .span = ["testNode-8"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-89"}, .name = "testNP-89", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["10b59112-a57e-5d49-968b-9f862c18d974"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b787ad4d-f2ec-58ae-8a53-eb5575093bf4"]}, .span = ["testNode-8"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-90"}, .name = "testNP-90", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6e418e67-6108-51aa-9efd-15ab697d244e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["10b59112-a57e-5d49-968b-9f862c18d974"]}, .span = ["testNode-9"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-91"}, .name = "testNP-91", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["30dca5ab-9fda-5d4c-8615-48e88970ce52"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6e418e67-6108-51aa-9efd-15ab697d244e"]}, .span = ["testNode-9"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-92"}, .name = "testNP-92", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2d6dfac2-8829-539a-b265-c63a13346b09"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["30dca5ab-9fda-5d4c-8615-48e88970ce52"]}, .span = ["testNode-9"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-93"}, .name = "testNP-93", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f3a4ed7e-bf9b-51b2-a75d-becfe6013225"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2d6dfac2-8829-539a-b265-c63a13346b09"]}, .span = ["testNode-9"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-94"}, .name = "testNP-94", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["66b6f1bc-f1f0-50be-a451-a991f5bf4a0b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f3a4ed7e-bf9b-51b2-a75d-becfe6013225"]}, .span = ["testNode-9"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-95"}, .name = "testNP-95", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8d5c17dc-85b5-55db-ba20-2565a735cb5b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["66b6f1bc-f1f0-50be-a451-a991f5bf4a0b"]}, .span = ["testNode-9"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1be816da-1b7c-51a7-b348-474c6219c3de"}, .name = "1be816da-1b7c-51a7-b348-474c6219c3de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-116]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-116")], .matchExpressions = []}}}}, .addresses = ["10.10.11.6"], .span = ["testNode-11"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1e435a5d-47b4-5c5a-bee8-24096b4dc8a9"}, .name = "1e435a5d-47b4-5c5a-bee8-24096b4dc8a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-108]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-108")], .matchExpressions = []}}}}, .addresses = ["10.10.10.8"], .span = ["testNode-10"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2460f5dd-bde1-5ee0-9f92-4e516f71e307"}, .name = "2460f5dd-bde1-5ee0-9f92-4e516f71e307", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-105]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-105")], .matchExpressions = []}}}}, .addresses = ["10.10.10.5"], .span = ["testNode-10"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "35cb1ca6-4dc8-5e2d-97fa-2f3a7bc9a542"}, .name = "35cb1ca6-4dc8-5e2d-97fa-2f3a7bc9a542", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-97]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-97")], .matchExpressions = []}}}}, .addresses = ["10.10.9.7"], .span = ["testNode-9"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "398e6939-9175-5476-888b-77fd6b52270f"}, .name = "398e6939-9175-5476-888b-77fd6b52270f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-107]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-107")], .matchExpressions = []}}}}, .addresses = ["10.10.10.7"], .span = ["testNode-10"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3f13776d-7893-50d4-8996-a85dfef34459"}, .name = "3f13776d-7893-50d4-8996-a85dfef34459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-113]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-113")], .matchExpressions = []}}}}, .addresses = ["10.10.11.3"], .span = ["testNode-11"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "41e4bb6c-03e1-5ba9-a6f3-2d070417bfb8"}, .name = "41e4bb6c-03e1-5ba9-a6f3-2d070417bfb8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-111]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-111")], .matchExpressions = []}}}}, .addresses = ["10.10.11.1"], .span = ["testNode-11"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4918f96c-ce60-5e9a-a85d-2dfff6c6106e"}, .name = "4918f96c-ce60-5e9a-a85d-2dfff6c6106e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-101]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-101")], .matchExpressions = []}}}}, .addresses = ["10.10.10.1"], .span = ["testNode-10"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4e39750f-48ff-5a5e-adb8-a9a10a577af4"}, .name = "4e39750f-48ff-5a5e-adb8-a9a10a577af4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-109]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-109")], .matchExpressions = []}}}}, .addresses = ["10.10.10.9"], .span = ["testNode-10"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5062681d-34e1-5c2a-8279-f82765d643d5"}, .name = "5062681d-34e1-5c2a-8279-f82765d643d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-104]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-104")], .matchExpressions = []}}}}, .addresses = ["10.10.10.4"], .span = ["testNode-10"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "529fe570-ec28-5fac-acdd-44b8870d6108"}, .name = "529fe570-ec28-5fac-acdd-44b8870d6108", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-126]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-126")], .matchExpressions = []}}}}, .addresses = ["10.10.12.6"], .span = ["testNode-12"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "531f863f-1131-55d0-9c8e-2446ef21de09"}, .name = "531f863f-1131-55d0-9c8e-2446ef21de09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-112]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-112")], .matchExpressions = []}}}}, .addresses = ["10.10.11.2"], .span = ["testNode-11"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5d97f3f8-cfb6-5a84-9c49-c43cb45fbcd6"}, .name = "5d97f3f8-cfb6-5a84-9c49-c43cb45fbcd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-118]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-118")], .matchExpressions = []}}}}, .addresses = ["10.10.11.8"], .span = ["testNode-11"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "65bd741e-bf4a-57bd-b810-965b3fb7e619"}, .name = "65bd741e-bf4a-57bd-b810-965b3fb7e619", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-122]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-122")], .matchExpressions = []}}}}, .addresses = ["10.10.12.2"], .span = ["testNode-12"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "67b263a9-d60a-56b3-9aa8-7c0af1d64459"}, .name = "67b263a9-d60a-56b3-9aa8-7c0af1d64459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-106]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-106")], .matchExpressions = []}}}}, .addresses = ["10.10.10.6"], .span = ["testNode-10"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "75faa48f-e4d8-507d-a68b-66e729b79084"}, .name = "75faa48f-e4d8-507d-a68b-66e729b79084", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-110]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-110")], .matchExpressions = []}}}}, .addresses = ["10.10.11.0"], .span = ["testNode-10"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7a612d99-6fd0-5c13-b062-6498518fb30a"}, .name = "7a612d99-6fd0-5c13-b062-6498518fb30a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-121]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-121")], .matchExpressions = []}}}}, .addresses = ["10.10.12.1"], .span = ["testNode-12"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7a6aaed2-c276-574a-b2df-601fdc3f5104"}, .name = "7a6aaed2-c276-574a-b2df-601fdc3f5104", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-124]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-124")], .matchExpressions = []}}}}, .addresses = ["10.10.12.4"], .span = ["testNode-12"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8017f305-3d4a-55a4-bbb0-a99fc77d7f75"}, .name = "8017f305-3d4a-55a4-bbb0-a99fc77d7f75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-114]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-114")], .matchExpressions = []}}}}, .addresses = ["10.10.11.4"], .span = ["testNode-11"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8560ea08-8412-5100-b137-dac29e35fa23"}, .name = "8560ea08-8412-5100-b137-dac29e35fa23", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-123]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-123")], .matchExpressions = []}}}}, .addresses = ["10.10.12.3"], .span = ["testNode-12"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "879c3085-735c-5bf2-bc12-c6460ffd58d7"}, .name = "879c3085-735c-5bf2-bc12-c6460ffd58d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-98]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-98")], .matchExpressions = []}}}}, .addresses = ["10.10.9.8"], .span = ["testNode-9"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "87f0e55c-6c51-5e85-9d7d-493146f7f46e"}, .name = "87f0e55c-6c51-5e85-9d7d-493146f7f46e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-127]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-127")], .matchExpressions = []}}}}, .addresses = ["10.10.12.7"], .span = ["testNode-12"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8b3f7a81-161a-51ff-8401-2d1875f5e429"}, .name = "8b3f7a81-161a-51ff-8401-2d1875f5e429", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-102]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-102")], .matchExpressions = []}}}}, .addresses = ["10.10.10.2"], .span = ["testNode-10"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9f5874ca-a706-5d9a-8b0a-27075810d9d8"}, .name = "9f5874ca-a706-5d9a-8b0a-27075810d9d8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-119]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-119")], .matchExpressions = []}}}}, .addresses = ["10.10.11.9"], .span = ["testNode-11"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a08d9a49-92c3-5076-8b73-15bfeafb0f46"}, .name = "a08d9a49-92c3-5076-8b73-15bfeafb0f46", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-103]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-103")], .matchExpressions = []}}}}, .addresses = ["10.10.10.3"], .span = ["testNode-10"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c3df4641-d2bb-5aa9-930e-51d73740a87d"}, .name = "c3df4641-d2bb-5aa9-930e-51d73740a87d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-100]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-100")], .matchExpressions = []}}}}, .addresses = ["10.10.10.0"], .span = ["testNode-9"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c83caa8e-9d9b-5aad-93fc-641e567a7a8f"}, .name = "c83caa8e-9d9b-5aad-93fc-641e567a7a8f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-125]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-125")], .matchExpressions = []}}}}, .addresses = ["10.10.12.5"], .span = ["testNode-12"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cdc1dd63-75b7-554c-88c5-3fcac40d6e12"}, .name = "cdc1dd63-75b7-554c-88c5-3fcac40d6e12", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-128]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-128")], .matchExpressions = []}}}}, .addresses = ["10.10.12.8"], .span = ["testNode-12"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d7425640-2e50-5a48-b84f-318532f355d4"}, .name = "d7425640-2e50-5a48-b84f-318532f355d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-99]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-99")], .matchExpressions = []}}}}, .addresses = ["10.10.9.9"], .span = ["testNode-9"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ed48d86d-2640-5a21-9f41-3f5ddedbb8db"}, .name = "ed48d86d-2640-5a21-9f41-3f5ddedbb8db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-117]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-117")], .matchExpressions = []}}}}, .addresses = ["10.10.11.7"], .span = ["testNode-11"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f8fd2286-9b94-5d2f-a4c9-15f522768c90"}, .name = "f8fd2286-9b94-5d2f-a4c9-15f522768c90", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-120]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-120")], .matchExpressions = []}}}}, .addresses = ["10.10.12.0"], .span = ["testNode-11"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fc24a88e-5356-50e7-bb4d-a5394fcf47cf"}, .name = "fc24a88e-5356-50e7-bb4d-a5394fcf47cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-115]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-115")], .matchExpressions = []}}}}, .addresses = ["10.10.11.5"], .span = ["testNode-11"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1be816da-1b7c-51a7-b348-474c6219c3de"}, .name = "1be816da-1b7c-51a7-b348-474c6219c3de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-116]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-116")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-116", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1e435a5d-47b4-5c5a-bee8-24096b4dc8a9"}, .name = "1e435a5d-47b4-5c5a-bee8-24096b4dc8a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-108]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-108")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-108", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2460f5dd-bde1-5ee0-9f92-4e516f71e307"}, .name = "2460f5dd-bde1-5ee0-9f92-4e516f71e307", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-105]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-105")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-105", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "35cb1ca6-4dc8-5e2d-97fa-2f3a7bc9a542"}, .name = "35cb1ca6-4dc8-5e2d-97fa-2f3a7bc9a542", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-97]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-97")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-97", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "398e6939-9175-5476-888b-77fd6b52270f"}, .name = "398e6939-9175-5476-888b-77fd6b52270f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-107]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-107")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-107", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3f13776d-7893-50d4-8996-a85dfef34459"}, .name = "3f13776d-7893-50d4-8996-a85dfef34459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-113]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-113")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-113", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "41e4bb6c-03e1-5ba9-a6f3-2d070417bfb8"}, .name = "41e4bb6c-03e1-5ba9-a6f3-2d070417bfb8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-111]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-111")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-111", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4918f96c-ce60-5e9a-a85d-2dfff6c6106e"}, .name = "4918f96c-ce60-5e9a-a85d-2dfff6c6106e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-101]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-101")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-101", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4e39750f-48ff-5a5e-adb8-a9a10a577af4"}, .name = "4e39750f-48ff-5a5e-adb8-a9a10a577af4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-109]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-109")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-109", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5062681d-34e1-5c2a-8279-f82765d643d5"}, .name = "5062681d-34e1-5c2a-8279-f82765d643d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-104]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-104")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-104", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "529fe570-ec28-5fac-acdd-44b8870d6108"}, .name = "529fe570-ec28-5fac-acdd-44b8870d6108", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-126]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-126")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-126", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "531f863f-1131-55d0-9c8e-2446ef21de09"}, .name = "531f863f-1131-55d0-9c8e-2446ef21de09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-112]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-112")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-112", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5d97f3f8-cfb6-5a84-9c49-c43cb45fbcd6"}, .name = "5d97f3f8-cfb6-5a84-9c49-c43cb45fbcd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-118]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-118")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-118", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "65bd741e-bf4a-57bd-b810-965b3fb7e619"}, .name = "65bd741e-bf4a-57bd-b810-965b3fb7e619", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-122]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-122")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-122", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "67b263a9-d60a-56b3-9aa8-7c0af1d64459"}, .name = "67b263a9-d60a-56b3-9aa8-7c0af1d64459", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-106]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-106")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-106", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "75faa48f-e4d8-507d-a68b-66e729b79084"}, .name = "75faa48f-e4d8-507d-a68b-66e729b79084", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-110]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-110")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-110", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7a612d99-6fd0-5c13-b062-6498518fb30a"}, .name = "7a612d99-6fd0-5c13-b062-6498518fb30a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-121]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-121")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-121", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7a6aaed2-c276-574a-b2df-601fdc3f5104"}, .name = "7a6aaed2-c276-574a-b2df-601fdc3f5104", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-124]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-124")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-124", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8017f305-3d4a-55a4-bbb0-a99fc77d7f75"}, .name = "8017f305-3d4a-55a4-bbb0-a99fc77d7f75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-114]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-114")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-114", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8560ea08-8412-5100-b137-dac29e35fa23"}, .name = "8560ea08-8412-5100-b137-dac29e35fa23", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-123]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-123")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-123", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "879c3085-735c-5bf2-bc12-c6460ffd58d7"}, .name = "879c3085-735c-5bf2-bc12-c6460ffd58d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-98]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-98")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-98", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "87f0e55c-6c51-5e85-9d7d-493146f7f46e"}, .name = "87f0e55c-6c51-5e85-9d7d-493146f7f46e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-127]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-127")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-127", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8b3f7a81-161a-51ff-8401-2d1875f5e429"}, .name = "8b3f7a81-161a-51ff-8401-2d1875f5e429", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-102]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-102")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-102", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8d5c17dc-85b5-55db-ba20-2565a735cb5b"}, .name = "8d5c17dc-85b5-55db-ba20-2565a735cb5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-96]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-96")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-96", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9f5874ca-a706-5d9a-8b0a-27075810d9d8"}, .name = "9f5874ca-a706-5d9a-8b0a-27075810d9d8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-119]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-119")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-119", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a08d9a49-92c3-5076-8b73-15bfeafb0f46"}, .name = "a08d9a49-92c3-5076-8b73-15bfeafb0f46", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-103]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-103")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-103", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c3df4641-d2bb-5aa9-930e-51d73740a87d"}, .name = "c3df4641-d2bb-5aa9-930e-51d73740a87d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-100]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-100")], .matchExpressions = []}}}}, .podsByNode = [("testNode-10", [k8spolicy.PodReference{.name = "testPod-100", .namespace = "testNamespace"}])], .span = ["testNode-10"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c83caa8e-9d9b-5aad-93fc-641e567a7a8f"}, .name = "c83caa8e-9d9b-5aad-93fc-641e567a7a8f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-125]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-125")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-125", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d7425640-2e50-5a48-b84f-318532f355d4"}, .name = "d7425640-2e50-5a48-b84f-318532f355d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-99]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-99")], .matchExpressions = []}}}}, .podsByNode = [("testNode-9", [k8spolicy.PodReference{.name = "testPod-99", .namespace = "testNamespace"}])], .span = ["testNode-9"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ed48d86d-2640-5a21-9f41-3f5ddedbb8db"}, .name = "ed48d86d-2640-5a21-9f41-3f5ddedbb8db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-117]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-117")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-117", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f8fd2286-9b94-5d2f-a4c9-15f522768c90"}, .name = "f8fd2286-9b94-5d2f-a4c9-15f522768c90", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-120]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-120")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-120", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fc24a88e-5356-50e7-bb4d-a5394fcf47cf"}, .name = "fc24a88e-5356-50e7-bb4d-a5394fcf47cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-115]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-115")], .matchExpressions = []}}}}, .podsByNode = [("testNode-11", [k8spolicy.PodReference{.name = "testPod-115", .namespace = "testNamespace"}])], .span = ["testNode-11"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-100"}, .name = "testNP-100", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4918f96c-ce60-5e9a-a85d-2dfff6c6106e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c3df4641-d2bb-5aa9-930e-51d73740a87d"]}, .span = ["testNode-10"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-101"}, .name = "testNP-101", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8b3f7a81-161a-51ff-8401-2d1875f5e429"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4918f96c-ce60-5e9a-a85d-2dfff6c6106e"]}, .span = ["testNode-10"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-102"}, .name = "testNP-102", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a08d9a49-92c3-5076-8b73-15bfeafb0f46"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8b3f7a81-161a-51ff-8401-2d1875f5e429"]}, .span = ["testNode-10"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-103"}, .name = "testNP-103", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5062681d-34e1-5c2a-8279-f82765d643d5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a08d9a49-92c3-5076-8b73-15bfeafb0f46"]}, .span = ["testNode-10"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-104"}, .name = "testNP-104", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2460f5dd-bde1-5ee0-9f92-4e516f71e307"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5062681d-34e1-5c2a-8279-f82765d643d5"]}, .span = ["testNode-10"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-105"}, .name = "testNP-105", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["67b263a9-d60a-56b3-9aa8-7c0af1d64459"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2460f5dd-bde1-5ee0-9f92-4e516f71e307"]}, .span = ["testNode-10"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-106"}, .name = "testNP-106", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["398e6939-9175-5476-888b-77fd6b52270f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["67b263a9-d60a-56b3-9aa8-7c0af1d64459"]}, .span = ["testNode-10"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-107"}, .name = "testNP-107", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1e435a5d-47b4-5c5a-bee8-24096b4dc8a9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["398e6939-9175-5476-888b-77fd6b52270f"]}, .span = ["testNode-10"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-108"}, .name = "testNP-108", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4e39750f-48ff-5a5e-adb8-a9a10a577af4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1e435a5d-47b4-5c5a-bee8-24096b4dc8a9"]}, .span = ["testNode-10"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-109"}, .name = "testNP-109", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["75faa48f-e4d8-507d-a68b-66e729b79084"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4e39750f-48ff-5a5e-adb8-a9a10a577af4"]}, .span = ["testNode-10"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-110"}, .name = "testNP-110", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["41e4bb6c-03e1-5ba9-a6f3-2d070417bfb8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["75faa48f-e4d8-507d-a68b-66e729b79084"]}, .span = ["testNode-11"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-111"}, .name = "testNP-111", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["531f863f-1131-55d0-9c8e-2446ef21de09"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["41e4bb6c-03e1-5ba9-a6f3-2d070417bfb8"]}, .span = ["testNode-11"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-112"}, .name = "testNP-112", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3f13776d-7893-50d4-8996-a85dfef34459"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["531f863f-1131-55d0-9c8e-2446ef21de09"]}, .span = ["testNode-11"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-113"}, .name = "testNP-113", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8017f305-3d4a-55a4-bbb0-a99fc77d7f75"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3f13776d-7893-50d4-8996-a85dfef34459"]}, .span = ["testNode-11"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-114"}, .name = "testNP-114", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fc24a88e-5356-50e7-bb4d-a5394fcf47cf"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8017f305-3d4a-55a4-bbb0-a99fc77d7f75"]}, .span = ["testNode-11"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-115"}, .name = "testNP-115", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1be816da-1b7c-51a7-b348-474c6219c3de"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fc24a88e-5356-50e7-bb4d-a5394fcf47cf"]}, .span = ["testNode-11"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-116"}, .name = "testNP-116", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ed48d86d-2640-5a21-9f41-3f5ddedbb8db"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1be816da-1b7c-51a7-b348-474c6219c3de"]}, .span = ["testNode-11"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-117"}, .name = "testNP-117", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5d97f3f8-cfb6-5a84-9c49-c43cb45fbcd6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ed48d86d-2640-5a21-9f41-3f5ddedbb8db"]}, .span = ["testNode-11"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-118"}, .name = "testNP-118", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9f5874ca-a706-5d9a-8b0a-27075810d9d8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5d97f3f8-cfb6-5a84-9c49-c43cb45fbcd6"]}, .span = ["testNode-11"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-119"}, .name = "testNP-119", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f8fd2286-9b94-5d2f-a4c9-15f522768c90"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9f5874ca-a706-5d9a-8b0a-27075810d9d8"]}, .span = ["testNode-11"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-120"}, .name = "testNP-120", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7a612d99-6fd0-5c13-b062-6498518fb30a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f8fd2286-9b94-5d2f-a4c9-15f522768c90"]}, .span = ["testNode-12"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-121"}, .name = "testNP-121", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["65bd741e-bf4a-57bd-b810-965b3fb7e619"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7a612d99-6fd0-5c13-b062-6498518fb30a"]}, .span = ["testNode-12"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-122"}, .name = "testNP-122", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8560ea08-8412-5100-b137-dac29e35fa23"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["65bd741e-bf4a-57bd-b810-965b3fb7e619"]}, .span = ["testNode-12"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-123"}, .name = "testNP-123", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7a6aaed2-c276-574a-b2df-601fdc3f5104"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8560ea08-8412-5100-b137-dac29e35fa23"]}, .span = ["testNode-12"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-124"}, .name = "testNP-124", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c83caa8e-9d9b-5aad-93fc-641e567a7a8f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7a6aaed2-c276-574a-b2df-601fdc3f5104"]}, .span = ["testNode-12"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-125"}, .name = "testNP-125", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["529fe570-ec28-5fac-acdd-44b8870d6108"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c83caa8e-9d9b-5aad-93fc-641e567a7a8f"]}, .span = ["testNode-12"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-126"}, .name = "testNP-126", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["87f0e55c-6c51-5e85-9d7d-493146f7f46e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["529fe570-ec28-5fac-acdd-44b8870d6108"]}, .span = ["testNode-12"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-127"}, .name = "testNP-127", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cdc1dd63-75b7-554c-88c5-3fcac40d6e12"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["87f0e55c-6c51-5e85-9d7d-493146f7f46e"]}, .span = ["testNode-12"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-96"}, .name = "testNP-96", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["35cb1ca6-4dc8-5e2d-97fa-2f3a7bc9a542"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8d5c17dc-85b5-55db-ba20-2565a735cb5b"]}, .span = ["testNode-9"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-97"}, .name = "testNP-97", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["879c3085-735c-5bf2-bc12-c6460ffd58d7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["35cb1ca6-4dc8-5e2d-97fa-2f3a7bc9a542"]}, .span = ["testNode-9"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-98"}, .name = "testNP-98", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d7425640-2e50-5a48-b84f-318532f355d4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["879c3085-735c-5bf2-bc12-c6460ffd58d7"]}, .span = ["testNode-9"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-99"}, .name = "testNP-99", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c3df4641-d2bb-5aa9-930e-51d73740a87d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d7425640-2e50-5a48-b84f-318532f355d4"]}, .span = ["testNode-9"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "03e49b54-6729-5e12-8d61-f782ee539650"}, .name = "03e49b54-6729-5e12-8d61-f782ee539650", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-141]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-141")], .matchExpressions = []}}}}, .addresses = ["10.10.14.1"], .span = ["testNode-14"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "11f3401e-7ad6-5382-8c45-71974428e3c4"}, .name = "11f3401e-7ad6-5382-8c45-71974428e3c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-132]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-132")], .matchExpressions = []}}}}, .addresses = ["10.10.13.2"], .span = ["testNode-13"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "19f52090-285c-5684-861f-5e37131d390f"}, .name = "19f52090-285c-5684-861f-5e37131d390f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-137]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-137")], .matchExpressions = []}}}}, .addresses = ["10.10.13.7"], .span = ["testNode-13"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "24581ca6-ed7c-5737-94ef-e306779dae8b"}, .name = "24581ca6-ed7c-5737-94ef-e306779dae8b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-138]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-138")], .matchExpressions = []}}}}, .addresses = ["10.10.13.8"], .span = ["testNode-13"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2f32884d-930f-5128-9be6-c381f8cbafd3"}, .name = "2f32884d-930f-5128-9be6-c381f8cbafd3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-154]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-154")], .matchExpressions = []}}}}, .addresses = ["10.10.15.4"], .span = ["testNode-15"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "408035a5-0b4c-599f-a516-938d95dc268f"}, .name = "408035a5-0b4c-599f-a516-938d95dc268f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-160]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-160")], .matchExpressions = []}}}}, .addresses = ["10.10.16.0"], .span = ["testNode-15"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "426f3de4-0c3d-56af-b8de-ee0d5a35ca8b"}, .name = "426f3de4-0c3d-56af-b8de-ee0d5a35ca8b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-142]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-142")], .matchExpressions = []}}}}, .addresses = ["10.10.14.2"], .span = ["testNode-14"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "42a664bb-7479-5e6c-bc90-d47696558019"}, .name = "42a664bb-7479-5e6c-bc90-d47696558019", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-146]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-146")], .matchExpressions = []}}}}, .addresses = ["10.10.14.6"], .span = ["testNode-14"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4c297f4e-4bdd-511c-85f6-43b9a4194d32"}, .name = "4c297f4e-4bdd-511c-85f6-43b9a4194d32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-155]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-155")], .matchExpressions = []}}}}, .addresses = ["10.10.15.5"], .span = ["testNode-15"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4de5254f-140b-5efb-8f31-8c35be80198a"}, .name = "4de5254f-140b-5efb-8f31-8c35be80198a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-139]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-139")], .matchExpressions = []}}}}, .addresses = ["10.10.13.9"], .span = ["testNode-13"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4f35dbdb-51a8-526d-8499-46af611d9c78"}, .name = "4f35dbdb-51a8-526d-8499-46af611d9c78", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-149]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-149")], .matchExpressions = []}}}}, .addresses = ["10.10.14.9"], .span = ["testNode-14"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4f668fe7-976a-55cd-8e8f-464d4ed8373d"}, .name = "4f668fe7-976a-55cd-8e8f-464d4ed8373d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-151]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-151")], .matchExpressions = []}}}}, .addresses = ["10.10.15.1"], .span = ["testNode-15"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5711bdd9-7b7c-5dc7-9a4a-8d3d208127c7"}, .name = "5711bdd9-7b7c-5dc7-9a4a-8d3d208127c7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-158]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-158")], .matchExpressions = []}}}}, .addresses = ["10.10.15.8"], .span = ["testNode-15"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "604b7ae8-c85d-5292-8a2e-da3fd3cdcbe4"}, .name = "604b7ae8-c85d-5292-8a2e-da3fd3cdcbe4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-147]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-147")], .matchExpressions = []}}}}, .addresses = ["10.10.14.7"], .span = ["testNode-14"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6ab84c4f-df5f-5774-a9ff-25cc55b46ff8"}, .name = "6ab84c4f-df5f-5774-a9ff-25cc55b46ff8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-144]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-144")], .matchExpressions = []}}}}, .addresses = ["10.10.14.4"], .span = ["testNode-14"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6d6bd21c-f2c1-516e-a5cb-81c72bc417b8"}, .name = "6d6bd21c-f2c1-516e-a5cb-81c72bc417b8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-152]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-152")], .matchExpressions = []}}}}, .addresses = ["10.10.15.2"], .span = ["testNode-15"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "72d207a7-a39f-5992-b79f-cd6d08bb402a"}, .name = "72d207a7-a39f-5992-b79f-cd6d08bb402a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-133]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-133")], .matchExpressions = []}}}}, .addresses = ["10.10.13.3"], .span = ["testNode-13"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7e7a9320-c4cd-517f-a01e-978c0ced3771"}, .name = "7e7a9320-c4cd-517f-a01e-978c0ced3771", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-131]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-131")], .matchExpressions = []}}}}, .addresses = ["10.10.13.1"], .span = ["testNode-13"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "80d5c095-c7ec-5cb5-8ce4-dc8bbc7de41f"}, .name = "80d5c095-c7ec-5cb5-8ce4-dc8bbc7de41f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-150]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-150")], .matchExpressions = []}}}}, .addresses = ["10.10.15.0"], .span = ["testNode-14"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a3426a67-ac84-50b5-abd6-4f86f99a1c95"}, .name = "a3426a67-ac84-50b5-abd6-4f86f99a1c95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-140]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-140")], .matchExpressions = []}}}}, .addresses = ["10.10.14.0"], .span = ["testNode-13"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a4e510b0-76a7-5988-8174-b0d8161e0ff1"}, .name = "a4e510b0-76a7-5988-8174-b0d8161e0ff1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-135]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-135")], .matchExpressions = []}}}}, .addresses = ["10.10.13.5"], .span = ["testNode-13"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "af21e800-ff3a-53a1-8640-448f384f20ba"}, .name = "af21e800-ff3a-53a1-8640-448f384f20ba", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-130]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-130")], .matchExpressions = []}}}}, .addresses = ["10.10.13.0"], .span = ["testNode-12"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b6adf8a6-f496-58ad-8918-5d70e040fe00"}, .name = "b6adf8a6-f496-58ad-8918-5d70e040fe00", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-136]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-136")], .matchExpressions = []}}}}, .addresses = ["10.10.13.6"], .span = ["testNode-13"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c64c2040-82c5-5dbb-9ce9-412bdb6f665e"}, .name = "c64c2040-82c5-5dbb-9ce9-412bdb6f665e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-134]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-134")], .matchExpressions = []}}}}, .addresses = ["10.10.13.4"], .span = ["testNode-13"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c8a7b51b-b949-51bc-82ea-3fd6f5e86973"}, .name = "c8a7b51b-b949-51bc-82ea-3fd6f5e86973", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-159]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-159")], .matchExpressions = []}}}}, .addresses = ["10.10.15.9"], .span = ["testNode-15"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d75961d2-c492-5966-8737-2caa0f8e4e91"}, .name = "d75961d2-c492-5966-8737-2caa0f8e4e91", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-148]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-148")], .matchExpressions = []}}}}, .addresses = ["10.10.14.8"], .span = ["testNode-14"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d778a7fa-39fa-5b01-ae44-33c20b301e92"}, .name = "d778a7fa-39fa-5b01-ae44-33c20b301e92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-157]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-157")], .matchExpressions = []}}}}, .addresses = ["10.10.15.7"], .span = ["testNode-15"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ddc28bc8-1071-5af0-89be-79967257532e"}, .name = "ddc28bc8-1071-5af0-89be-79967257532e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-143]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-143")], .matchExpressions = []}}}}, .addresses = ["10.10.14.3"], .span = ["testNode-14"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e2d588c5-5a40-5ebf-bb15-6c653c573e34"}, .name = "e2d588c5-5a40-5ebf-bb15-6c653c573e34", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-156]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-156")], .matchExpressions = []}}}}, .addresses = ["10.10.15.6"], .span = ["testNode-15"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ef5132fe-043c-5862-aa70-bf9ed5b832c2"}, .name = "ef5132fe-043c-5862-aa70-bf9ed5b832c2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-129]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-129")], .matchExpressions = []}}}}, .addresses = ["10.10.12.9"], .span = ["testNode-12"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f6853f7d-2dd9-58d9-b1d7-d873db3f6bd0"}, .name = "f6853f7d-2dd9-58d9-b1d7-d873db3f6bd0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-153]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-153")], .matchExpressions = []}}}}, .addresses = ["10.10.15.3"], .span = ["testNode-15"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fcb01e76-dc36-5ccd-81b4-eb8de4328f3c"}, .name = "fcb01e76-dc36-5ccd-81b4-eb8de4328f3c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-145]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-145")], .matchExpressions = []}}}}, .addresses = ["10.10.14.5"], .span = ["testNode-14"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "03e49b54-6729-5e12-8d61-f782ee539650"}, .name = "03e49b54-6729-5e12-8d61-f782ee539650", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-141]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-141")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-141", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "11f3401e-7ad6-5382-8c45-71974428e3c4"}, .name = "11f3401e-7ad6-5382-8c45-71974428e3c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-132]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-132")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-132", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "19f52090-285c-5684-861f-5e37131d390f"}, .name = "19f52090-285c-5684-861f-5e37131d390f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-137]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-137")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-137", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "24581ca6-ed7c-5737-94ef-e306779dae8b"}, .name = "24581ca6-ed7c-5737-94ef-e306779dae8b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-138]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-138")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-138", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2f32884d-930f-5128-9be6-c381f8cbafd3"}, .name = "2f32884d-930f-5128-9be6-c381f8cbafd3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-154]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-154")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-154", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "426f3de4-0c3d-56af-b8de-ee0d5a35ca8b"}, .name = "426f3de4-0c3d-56af-b8de-ee0d5a35ca8b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-142]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-142")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-142", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "42a664bb-7479-5e6c-bc90-d47696558019"}, .name = "42a664bb-7479-5e6c-bc90-d47696558019", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-146]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-146")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-146", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4c297f4e-4bdd-511c-85f6-43b9a4194d32"}, .name = "4c297f4e-4bdd-511c-85f6-43b9a4194d32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-155]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-155")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-155", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4de5254f-140b-5efb-8f31-8c35be80198a"}, .name = "4de5254f-140b-5efb-8f31-8c35be80198a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-139]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-139")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-139", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4f35dbdb-51a8-526d-8499-46af611d9c78"}, .name = "4f35dbdb-51a8-526d-8499-46af611d9c78", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-149]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-149")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-149", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4f668fe7-976a-55cd-8e8f-464d4ed8373d"}, .name = "4f668fe7-976a-55cd-8e8f-464d4ed8373d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-151]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-151")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-151", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5711bdd9-7b7c-5dc7-9a4a-8d3d208127c7"}, .name = "5711bdd9-7b7c-5dc7-9a4a-8d3d208127c7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-158]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-158")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-158", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "604b7ae8-c85d-5292-8a2e-da3fd3cdcbe4"}, .name = "604b7ae8-c85d-5292-8a2e-da3fd3cdcbe4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-147]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-147")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-147", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6ab84c4f-df5f-5774-a9ff-25cc55b46ff8"}, .name = "6ab84c4f-df5f-5774-a9ff-25cc55b46ff8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-144]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-144")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-144", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6d6bd21c-f2c1-516e-a5cb-81c72bc417b8"}, .name = "6d6bd21c-f2c1-516e-a5cb-81c72bc417b8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-152]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-152")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-152", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "72d207a7-a39f-5992-b79f-cd6d08bb402a"}, .name = "72d207a7-a39f-5992-b79f-cd6d08bb402a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-133]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-133")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-133", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7e7a9320-c4cd-517f-a01e-978c0ced3771"}, .name = "7e7a9320-c4cd-517f-a01e-978c0ced3771", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-131]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-131")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-131", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "80d5c095-c7ec-5cb5-8ce4-dc8bbc7de41f"}, .name = "80d5c095-c7ec-5cb5-8ce4-dc8bbc7de41f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-150]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-150")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-150", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a3426a67-ac84-50b5-abd6-4f86f99a1c95"}, .name = "a3426a67-ac84-50b5-abd6-4f86f99a1c95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-140]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-140")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-140", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a4e510b0-76a7-5988-8174-b0d8161e0ff1"}, .name = "a4e510b0-76a7-5988-8174-b0d8161e0ff1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-135]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-135")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-135", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "af21e800-ff3a-53a1-8640-448f384f20ba"}, .name = "af21e800-ff3a-53a1-8640-448f384f20ba", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-130]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-130")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-130", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b6adf8a6-f496-58ad-8918-5d70e040fe00"}, .name = "b6adf8a6-f496-58ad-8918-5d70e040fe00", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-136]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-136")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-136", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c64c2040-82c5-5dbb-9ce9-412bdb6f665e"}, .name = "c64c2040-82c5-5dbb-9ce9-412bdb6f665e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-134]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-134")], .matchExpressions = []}}}}, .podsByNode = [("testNode-13", [k8spolicy.PodReference{.name = "testPod-134", .namespace = "testNamespace"}])], .span = ["testNode-13"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c8a7b51b-b949-51bc-82ea-3fd6f5e86973"}, .name = "c8a7b51b-b949-51bc-82ea-3fd6f5e86973", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-159]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-159")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-159", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cdc1dd63-75b7-554c-88c5-3fcac40d6e12"}, .name = "cdc1dd63-75b7-554c-88c5-3fcac40d6e12", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-128]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-128")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-128", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d75961d2-c492-5966-8737-2caa0f8e4e91"}, .name = "d75961d2-c492-5966-8737-2caa0f8e4e91", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-148]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-148")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-148", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d778a7fa-39fa-5b01-ae44-33c20b301e92"}, .name = "d778a7fa-39fa-5b01-ae44-33c20b301e92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-157]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-157")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-157", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ddc28bc8-1071-5af0-89be-79967257532e"}, .name = "ddc28bc8-1071-5af0-89be-79967257532e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-143]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-143")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-143", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e2d588c5-5a40-5ebf-bb15-6c653c573e34"}, .name = "e2d588c5-5a40-5ebf-bb15-6c653c573e34", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-156]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-156")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-156", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ef5132fe-043c-5862-aa70-bf9ed5b832c2"}, .name = "ef5132fe-043c-5862-aa70-bf9ed5b832c2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-129]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-129")], .matchExpressions = []}}}}, .podsByNode = [("testNode-12", [k8spolicy.PodReference{.name = "testPod-129", .namespace = "testNamespace"}])], .span = ["testNode-12"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f6853f7d-2dd9-58d9-b1d7-d873db3f6bd0"}, .name = "f6853f7d-2dd9-58d9-b1d7-d873db3f6bd0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-153]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-153")], .matchExpressions = []}}}}, .podsByNode = [("testNode-15", [k8spolicy.PodReference{.name = "testPod-153", .namespace = "testNamespace"}])], .span = ["testNode-15"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fcb01e76-dc36-5ccd-81b4-eb8de4328f3c"}, .name = "fcb01e76-dc36-5ccd-81b4-eb8de4328f3c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-145]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-145")], .matchExpressions = []}}}}, .podsByNode = [("testNode-14", [k8spolicy.PodReference{.name = "testPod-145", .namespace = "testNamespace"}])], .span = ["testNode-14"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-128"}, .name = "testNP-128", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ef5132fe-043c-5862-aa70-bf9ed5b832c2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cdc1dd63-75b7-554c-88c5-3fcac40d6e12"]}, .span = ["testNode-12"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-129"}, .name = "testNP-129", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["af21e800-ff3a-53a1-8640-448f384f20ba"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ef5132fe-043c-5862-aa70-bf9ed5b832c2"]}, .span = ["testNode-12"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-130"}, .name = "testNP-130", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7e7a9320-c4cd-517f-a01e-978c0ced3771"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["af21e800-ff3a-53a1-8640-448f384f20ba"]}, .span = ["testNode-13"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-131"}, .name = "testNP-131", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["11f3401e-7ad6-5382-8c45-71974428e3c4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7e7a9320-c4cd-517f-a01e-978c0ced3771"]}, .span = ["testNode-13"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-132"}, .name = "testNP-132", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["72d207a7-a39f-5992-b79f-cd6d08bb402a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["11f3401e-7ad6-5382-8c45-71974428e3c4"]}, .span = ["testNode-13"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-133"}, .name = "testNP-133", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c64c2040-82c5-5dbb-9ce9-412bdb6f665e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["72d207a7-a39f-5992-b79f-cd6d08bb402a"]}, .span = ["testNode-13"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-134"}, .name = "testNP-134", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a4e510b0-76a7-5988-8174-b0d8161e0ff1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c64c2040-82c5-5dbb-9ce9-412bdb6f665e"]}, .span = ["testNode-13"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-135"}, .name = "testNP-135", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b6adf8a6-f496-58ad-8918-5d70e040fe00"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a4e510b0-76a7-5988-8174-b0d8161e0ff1"]}, .span = ["testNode-13"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-136"}, .name = "testNP-136", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["19f52090-285c-5684-861f-5e37131d390f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b6adf8a6-f496-58ad-8918-5d70e040fe00"]}, .span = ["testNode-13"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-137"}, .name = "testNP-137", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["24581ca6-ed7c-5737-94ef-e306779dae8b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["19f52090-285c-5684-861f-5e37131d390f"]}, .span = ["testNode-13"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-138"}, .name = "testNP-138", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4de5254f-140b-5efb-8f31-8c35be80198a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["24581ca6-ed7c-5737-94ef-e306779dae8b"]}, .span = ["testNode-13"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-139"}, .name = "testNP-139", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a3426a67-ac84-50b5-abd6-4f86f99a1c95"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4de5254f-140b-5efb-8f31-8c35be80198a"]}, .span = ["testNode-13"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-140"}, .name = "testNP-140", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["03e49b54-6729-5e12-8d61-f782ee539650"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a3426a67-ac84-50b5-abd6-4f86f99a1c95"]}, .span = ["testNode-14"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-141"}, .name = "testNP-141", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["426f3de4-0c3d-56af-b8de-ee0d5a35ca8b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["03e49b54-6729-5e12-8d61-f782ee539650"]}, .span = ["testNode-14"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-142"}, .name = "testNP-142", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ddc28bc8-1071-5af0-89be-79967257532e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["426f3de4-0c3d-56af-b8de-ee0d5a35ca8b"]}, .span = ["testNode-14"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-143"}, .name = "testNP-143", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6ab84c4f-df5f-5774-a9ff-25cc55b46ff8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ddc28bc8-1071-5af0-89be-79967257532e"]}, .span = ["testNode-14"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-144"}, .name = "testNP-144", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fcb01e76-dc36-5ccd-81b4-eb8de4328f3c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6ab84c4f-df5f-5774-a9ff-25cc55b46ff8"]}, .span = ["testNode-14"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-145"}, .name = "testNP-145", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["42a664bb-7479-5e6c-bc90-d47696558019"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fcb01e76-dc36-5ccd-81b4-eb8de4328f3c"]}, .span = ["testNode-14"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-146"}, .name = "testNP-146", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["604b7ae8-c85d-5292-8a2e-da3fd3cdcbe4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["42a664bb-7479-5e6c-bc90-d47696558019"]}, .span = ["testNode-14"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-147"}, .name = "testNP-147", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d75961d2-c492-5966-8737-2caa0f8e4e91"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["604b7ae8-c85d-5292-8a2e-da3fd3cdcbe4"]}, .span = ["testNode-14"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-148"}, .name = "testNP-148", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4f35dbdb-51a8-526d-8499-46af611d9c78"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d75961d2-c492-5966-8737-2caa0f8e4e91"]}, .span = ["testNode-14"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-149"}, .name = "testNP-149", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["80d5c095-c7ec-5cb5-8ce4-dc8bbc7de41f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4f35dbdb-51a8-526d-8499-46af611d9c78"]}, .span = ["testNode-14"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-150"}, .name = "testNP-150", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4f668fe7-976a-55cd-8e8f-464d4ed8373d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["80d5c095-c7ec-5cb5-8ce4-dc8bbc7de41f"]}, .span = ["testNode-15"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-151"}, .name = "testNP-151", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6d6bd21c-f2c1-516e-a5cb-81c72bc417b8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4f668fe7-976a-55cd-8e8f-464d4ed8373d"]}, .span = ["testNode-15"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-152"}, .name = "testNP-152", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f6853f7d-2dd9-58d9-b1d7-d873db3f6bd0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6d6bd21c-f2c1-516e-a5cb-81c72bc417b8"]}, .span = ["testNode-15"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-153"}, .name = "testNP-153", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2f32884d-930f-5128-9be6-c381f8cbafd3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f6853f7d-2dd9-58d9-b1d7-d873db3f6bd0"]}, .span = ["testNode-15"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-154"}, .name = "testNP-154", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4c297f4e-4bdd-511c-85f6-43b9a4194d32"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2f32884d-930f-5128-9be6-c381f8cbafd3"]}, .span = ["testNode-15"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-155"}, .name = "testNP-155", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e2d588c5-5a40-5ebf-bb15-6c653c573e34"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4c297f4e-4bdd-511c-85f6-43b9a4194d32"]}, .span = ["testNode-15"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-156"}, .name = "testNP-156", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d778a7fa-39fa-5b01-ae44-33c20b301e92"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e2d588c5-5a40-5ebf-bb15-6c653c573e34"]}, .span = ["testNode-15"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-157"}, .name = "testNP-157", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5711bdd9-7b7c-5dc7-9a4a-8d3d208127c7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d778a7fa-39fa-5b01-ae44-33c20b301e92"]}, .span = ["testNode-15"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-158"}, .name = "testNP-158", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c8a7b51b-b949-51bc-82ea-3fd6f5e86973"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5711bdd9-7b7c-5dc7-9a4a-8d3d208127c7"]}, .span = ["testNode-15"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-159"}, .name = "testNP-159", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["408035a5-0b4c-599f-a516-938d95dc268f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c8a7b51b-b949-51bc-82ea-3fd6f5e86973"]}, .span = ["testNode-15"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "020d29e9-0d59-56f2-be4f-80e1ca9f7324"}, .name = "020d29e9-0d59-56f2-be4f-80e1ca9f7324", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-184]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-184")], .matchExpressions = []}}}}, .addresses = ["10.10.18.4"], .span = ["testNode-18"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0780f699-f6e9-5158-ad62-c012c34da8e7"}, .name = "0780f699-f6e9-5158-ad62-c012c34da8e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-179]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-179")], .matchExpressions = []}}}}, .addresses = ["10.10.17.9"], .span = ["testNode-17"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "07a8fcfd-8014-5a34-a8bd-13c6c03c89c0"}, .name = "07a8fcfd-8014-5a34-a8bd-13c6c03c89c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-181]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-181")], .matchExpressions = []}}}}, .addresses = ["10.10.18.1"], .span = ["testNode-18"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0cfb85fe-e1fa-5967-bee3-5530bc9b0038"}, .name = "0cfb85fe-e1fa-5967-bee3-5530bc9b0038", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-185]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-185")], .matchExpressions = []}}}}, .addresses = ["10.10.18.5"], .span = ["testNode-18"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0f4b2596-a4ed-55a9-bf6e-e3af9547edc0"}, .name = "0f4b2596-a4ed-55a9-bf6e-e3af9547edc0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-188]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-188")], .matchExpressions = []}}}}, .addresses = ["10.10.18.8"], .span = ["testNode-18"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1b7f97a5-596f-5d36-9973-c53a4ac5c695"}, .name = "1b7f97a5-596f-5d36-9973-c53a4ac5c695", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-171]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-171")], .matchExpressions = []}}}}, .addresses = ["10.10.17.1"], .span = ["testNode-17"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "24fa442f-2cd2-541e-9765-3d4849131cd5"}, .name = "24fa442f-2cd2-541e-9765-3d4849131cd5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-169]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-169")], .matchExpressions = []}}}}, .addresses = ["10.10.16.9"], .span = ["testNode-16"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "300f8933-6918-5c2a-9d54-003daf562271"}, .name = "300f8933-6918-5c2a-9d54-003daf562271", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-166]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-166")], .matchExpressions = []}}}}, .addresses = ["10.10.16.6"], .span = ["testNode-16"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3239de67-04a5-5398-89c0-6b0dfa4da238"}, .name = "3239de67-04a5-5398-89c0-6b0dfa4da238", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-165]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-165")], .matchExpressions = []}}}}, .addresses = ["10.10.16.5"], .span = ["testNode-16"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3365f5f5-f370-5479-90bc-b38d0e8b9b3c"}, .name = "3365f5f5-f370-5479-90bc-b38d0e8b9b3c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-174]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-174")], .matchExpressions = []}}}}, .addresses = ["10.10.17.4"], .span = ["testNode-17"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "33e664f1-3b9a-575d-a9d1-a8332819cc7a"}, .name = "33e664f1-3b9a-575d-a9d1-a8332819cc7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-191]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-191")], .matchExpressions = []}}}}, .addresses = ["10.10.19.1"], .span = ["testNode-19"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "40baec0e-95e4-5295-806c-91c9d764414f"}, .name = "40baec0e-95e4-5295-806c-91c9d764414f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-178]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-178")], .matchExpressions = []}}}}, .addresses = ["10.10.17.8"], .span = ["testNode-17"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "443fdf9f-19c2-5a22-8bd7-43e3e4457931"}, .name = "443fdf9f-19c2-5a22-8bd7-43e3e4457931", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-163]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-163")], .matchExpressions = []}}}}, .addresses = ["10.10.16.3"], .span = ["testNode-16"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4cb5e2ff-79de-563a-9956-a634c80863b5"}, .name = "4cb5e2ff-79de-563a-9956-a634c80863b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-175]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-175")], .matchExpressions = []}}}}, .addresses = ["10.10.17.5"], .span = ["testNode-17"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "63e80977-fc88-57e2-9ab0-f8fe8fa6bb75"}, .name = "63e80977-fc88-57e2-9ab0-f8fe8fa6bb75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-162]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-162")], .matchExpressions = []}}}}, .addresses = ["10.10.16.2"], .span = ["testNode-16"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6b1af6fc-e75e-5e52-84bb-2829d56b9e68"}, .name = "6b1af6fc-e75e-5e52-84bb-2829d56b9e68", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-176]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-176")], .matchExpressions = []}}}}, .addresses = ["10.10.17.6"], .span = ["testNode-17"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "769af438-e108-5287-a978-31ac710b46fb"}, .name = "769af438-e108-5287-a978-31ac710b46fb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-183]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-183")], .matchExpressions = []}}}}, .addresses = ["10.10.18.3"], .span = ["testNode-18"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8cda303a-bbf0-52d3-9fe9-378528fa9f1f"}, .name = "8cda303a-bbf0-52d3-9fe9-378528fa9f1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-164]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-164")], .matchExpressions = []}}}}, .addresses = ["10.10.16.4"], .span = ["testNode-16"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a2c0ddbd-27ca-5a9b-a410-20a188a1171d"}, .name = "a2c0ddbd-27ca-5a9b-a410-20a188a1171d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-173]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-173")], .matchExpressions = []}}}}, .addresses = ["10.10.17.3"], .span = ["testNode-17"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a8cfccc3-0404-525a-b3d3-284dd5c38257"}, .name = "a8cfccc3-0404-525a-b3d3-284dd5c38257", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-180]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-180")], .matchExpressions = []}}}}, .addresses = ["10.10.18.0"], .span = ["testNode-17"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "afa64984-2df6-5f21-9d9c-7ab14dc108f4"}, .name = "afa64984-2df6-5f21-9d9c-7ab14dc108f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-190]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-190")], .matchExpressions = []}}}}, .addresses = ["10.10.19.0"], .span = ["testNode-18"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b1fcb01a-565c-5b61-becc-800d4492eb33"}, .name = "b1fcb01a-565c-5b61-becc-800d4492eb33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-189]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-189")], .matchExpressions = []}}}}, .addresses = ["10.10.18.9"], .span = ["testNode-18"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b30d6aa7-f2f6-5bce-ba24-615b7eba3103"}, .name = "b30d6aa7-f2f6-5bce-ba24-615b7eba3103", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-161]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-161")], .matchExpressions = []}}}}, .addresses = ["10.10.16.1"], .span = ["testNode-16"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b8974eff-5e85-5907-bda4-4bd7b8ac6687"}, .name = "b8974eff-5e85-5907-bda4-4bd7b8ac6687", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-168]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-168")], .matchExpressions = []}}}}, .addresses = ["10.10.16.8"], .span = ["testNode-16"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bf93e384-8ebe-5643-85f5-1f91edd0f14b"}, .name = "bf93e384-8ebe-5643-85f5-1f91edd0f14b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-192]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-192")], .matchExpressions = []}}}}, .addresses = ["10.10.19.2"], .span = ["testNode-19"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bff693b4-df3f-5e7c-b929-9d26f3aab586"}, .name = "bff693b4-df3f-5e7c-b929-9d26f3aab586", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-177]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-177")], .matchExpressions = []}}}}, .addresses = ["10.10.17.7"], .span = ["testNode-17"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ccbd00da-4e21-58a1-83e6-f6ebc038945b"}, .name = "ccbd00da-4e21-58a1-83e6-f6ebc038945b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-170]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-170")], .matchExpressions = []}}}}, .addresses = ["10.10.17.0"], .span = ["testNode-16"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d4d1d1c3-3e8b-59c0-aa4d-09d26aa0f8f6"}, .name = "d4d1d1c3-3e8b-59c0-aa4d-09d26aa0f8f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-172]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-172")], .matchExpressions = []}}}}, .addresses = ["10.10.17.2"], .span = ["testNode-17"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "eab2a7f1-a404-59d7-8f5f-7ec0bdbdb0b8"}, .name = "eab2a7f1-a404-59d7-8f5f-7ec0bdbdb0b8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-167]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-167")], .matchExpressions = []}}}}, .addresses = ["10.10.16.7"], .span = ["testNode-16"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f1ae3082-14a4-598f-b762-2e7287c81ffe"}, .name = "f1ae3082-14a4-598f-b762-2e7287c81ffe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-182]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-182")], .matchExpressions = []}}}}, .addresses = ["10.10.18.2"], .span = ["testNode-18"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f4a63453-6945-5801-9c67-f941d090041b"}, .name = "f4a63453-6945-5801-9c67-f941d090041b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-187]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-187")], .matchExpressions = []}}}}, .addresses = ["10.10.18.7"], .span = ["testNode-18"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fc09e241-cdaa-52a0-9cc4-04d72757d13b"}, .name = "fc09e241-cdaa-52a0-9cc4-04d72757d13b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-186]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-186")], .matchExpressions = []}}}}, .addresses = ["10.10.18.6"], .span = ["testNode-18"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "020d29e9-0d59-56f2-be4f-80e1ca9f7324"}, .name = "020d29e9-0d59-56f2-be4f-80e1ca9f7324", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-184]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-184")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-184", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0780f699-f6e9-5158-ad62-c012c34da8e7"}, .name = "0780f699-f6e9-5158-ad62-c012c34da8e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-179]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-179")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-179", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "07a8fcfd-8014-5a34-a8bd-13c6c03c89c0"}, .name = "07a8fcfd-8014-5a34-a8bd-13c6c03c89c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-181]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-181")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-181", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0cfb85fe-e1fa-5967-bee3-5530bc9b0038"}, .name = "0cfb85fe-e1fa-5967-bee3-5530bc9b0038", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-185]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-185")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-185", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0f4b2596-a4ed-55a9-bf6e-e3af9547edc0"}, .name = "0f4b2596-a4ed-55a9-bf6e-e3af9547edc0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-188]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-188")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-188", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1b7f97a5-596f-5d36-9973-c53a4ac5c695"}, .name = "1b7f97a5-596f-5d36-9973-c53a4ac5c695", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-171]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-171")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-171", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "24fa442f-2cd2-541e-9765-3d4849131cd5"}, .name = "24fa442f-2cd2-541e-9765-3d4849131cd5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-169]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-169")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-169", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "300f8933-6918-5c2a-9d54-003daf562271"}, .name = "300f8933-6918-5c2a-9d54-003daf562271", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-166]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-166")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-166", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3239de67-04a5-5398-89c0-6b0dfa4da238"}, .name = "3239de67-04a5-5398-89c0-6b0dfa4da238", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-165]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-165")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-165", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3365f5f5-f370-5479-90bc-b38d0e8b9b3c"}, .name = "3365f5f5-f370-5479-90bc-b38d0e8b9b3c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-174]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-174")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-174", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "33e664f1-3b9a-575d-a9d1-a8332819cc7a"}, .name = "33e664f1-3b9a-575d-a9d1-a8332819cc7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-191]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-191")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-191", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "408035a5-0b4c-599f-a516-938d95dc268f"}, .name = "408035a5-0b4c-599f-a516-938d95dc268f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-160]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-160")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-160", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "40baec0e-95e4-5295-806c-91c9d764414f"}, .name = "40baec0e-95e4-5295-806c-91c9d764414f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-178]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-178")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-178", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "443fdf9f-19c2-5a22-8bd7-43e3e4457931"}, .name = "443fdf9f-19c2-5a22-8bd7-43e3e4457931", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-163]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-163")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-163", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4cb5e2ff-79de-563a-9956-a634c80863b5"}, .name = "4cb5e2ff-79de-563a-9956-a634c80863b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-175]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-175")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-175", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "63e80977-fc88-57e2-9ab0-f8fe8fa6bb75"}, .name = "63e80977-fc88-57e2-9ab0-f8fe8fa6bb75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-162]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-162")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-162", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6b1af6fc-e75e-5e52-84bb-2829d56b9e68"}, .name = "6b1af6fc-e75e-5e52-84bb-2829d56b9e68", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-176]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-176")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-176", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "769af438-e108-5287-a978-31ac710b46fb"}, .name = "769af438-e108-5287-a978-31ac710b46fb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-183]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-183")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-183", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8cda303a-bbf0-52d3-9fe9-378528fa9f1f"}, .name = "8cda303a-bbf0-52d3-9fe9-378528fa9f1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-164]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-164")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-164", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a2c0ddbd-27ca-5a9b-a410-20a188a1171d"}, .name = "a2c0ddbd-27ca-5a9b-a410-20a188a1171d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-173]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-173")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-173", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a8cfccc3-0404-525a-b3d3-284dd5c38257"}, .name = "a8cfccc3-0404-525a-b3d3-284dd5c38257", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-180]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-180")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-180", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "afa64984-2df6-5f21-9d9c-7ab14dc108f4"}, .name = "afa64984-2df6-5f21-9d9c-7ab14dc108f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-190]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-190")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-190", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b1fcb01a-565c-5b61-becc-800d4492eb33"}, .name = "b1fcb01a-565c-5b61-becc-800d4492eb33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-189]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-189")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-189", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b30d6aa7-f2f6-5bce-ba24-615b7eba3103"}, .name = "b30d6aa7-f2f6-5bce-ba24-615b7eba3103", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-161]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-161")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-161", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b8974eff-5e85-5907-bda4-4bd7b8ac6687"}, .name = "b8974eff-5e85-5907-bda4-4bd7b8ac6687", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-168]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-168")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-168", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bff693b4-df3f-5e7c-b929-9d26f3aab586"}, .name = "bff693b4-df3f-5e7c-b929-9d26f3aab586", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-177]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-177")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-177", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ccbd00da-4e21-58a1-83e6-f6ebc038945b"}, .name = "ccbd00da-4e21-58a1-83e6-f6ebc038945b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-170]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-170")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-170", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d4d1d1c3-3e8b-59c0-aa4d-09d26aa0f8f6"}, .name = "d4d1d1c3-3e8b-59c0-aa4d-09d26aa0f8f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-172]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-172")], .matchExpressions = []}}}}, .podsByNode = [("testNode-17", [k8spolicy.PodReference{.name = "testPod-172", .namespace = "testNamespace"}])], .span = ["testNode-17"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "eab2a7f1-a404-59d7-8f5f-7ec0bdbdb0b8"}, .name = "eab2a7f1-a404-59d7-8f5f-7ec0bdbdb0b8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-167]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-167")], .matchExpressions = []}}}}, .podsByNode = [("testNode-16", [k8spolicy.PodReference{.name = "testPod-167", .namespace = "testNamespace"}])], .span = ["testNode-16"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f1ae3082-14a4-598f-b762-2e7287c81ffe"}, .name = "f1ae3082-14a4-598f-b762-2e7287c81ffe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-182]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-182")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-182", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f4a63453-6945-5801-9c67-f941d090041b"}, .name = "f4a63453-6945-5801-9c67-f941d090041b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-187]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-187")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-187", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fc09e241-cdaa-52a0-9cc4-04d72757d13b"}, .name = "fc09e241-cdaa-52a0-9cc4-04d72757d13b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-186]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-186")], .matchExpressions = []}}}}, .podsByNode = [("testNode-18", [k8spolicy.PodReference{.name = "testPod-186", .namespace = "testNamespace"}])], .span = ["testNode-18"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-160"}, .name = "testNP-160", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b30d6aa7-f2f6-5bce-ba24-615b7eba3103"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["408035a5-0b4c-599f-a516-938d95dc268f"]}, .span = ["testNode-16"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-161"}, .name = "testNP-161", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["63e80977-fc88-57e2-9ab0-f8fe8fa6bb75"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b30d6aa7-f2f6-5bce-ba24-615b7eba3103"]}, .span = ["testNode-16"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-162"}, .name = "testNP-162", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["443fdf9f-19c2-5a22-8bd7-43e3e4457931"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["63e80977-fc88-57e2-9ab0-f8fe8fa6bb75"]}, .span = ["testNode-16"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-163"}, .name = "testNP-163", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8cda303a-bbf0-52d3-9fe9-378528fa9f1f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["443fdf9f-19c2-5a22-8bd7-43e3e4457931"]}, .span = ["testNode-16"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-164"}, .name = "testNP-164", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3239de67-04a5-5398-89c0-6b0dfa4da238"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8cda303a-bbf0-52d3-9fe9-378528fa9f1f"]}, .span = ["testNode-16"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-165"}, .name = "testNP-165", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["300f8933-6918-5c2a-9d54-003daf562271"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3239de67-04a5-5398-89c0-6b0dfa4da238"]}, .span = ["testNode-16"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-166"}, .name = "testNP-166", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["eab2a7f1-a404-59d7-8f5f-7ec0bdbdb0b8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["300f8933-6918-5c2a-9d54-003daf562271"]}, .span = ["testNode-16"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-167"}, .name = "testNP-167", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b8974eff-5e85-5907-bda4-4bd7b8ac6687"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["eab2a7f1-a404-59d7-8f5f-7ec0bdbdb0b8"]}, .span = ["testNode-16"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-168"}, .name = "testNP-168", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["24fa442f-2cd2-541e-9765-3d4849131cd5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b8974eff-5e85-5907-bda4-4bd7b8ac6687"]}, .span = ["testNode-16"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-169"}, .name = "testNP-169", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ccbd00da-4e21-58a1-83e6-f6ebc038945b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["24fa442f-2cd2-541e-9765-3d4849131cd5"]}, .span = ["testNode-16"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-170"}, .name = "testNP-170", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1b7f97a5-596f-5d36-9973-c53a4ac5c695"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ccbd00da-4e21-58a1-83e6-f6ebc038945b"]}, .span = ["testNode-17"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-171"}, .name = "testNP-171", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d4d1d1c3-3e8b-59c0-aa4d-09d26aa0f8f6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1b7f97a5-596f-5d36-9973-c53a4ac5c695"]}, .span = ["testNode-17"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-172"}, .name = "testNP-172", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a2c0ddbd-27ca-5a9b-a410-20a188a1171d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d4d1d1c3-3e8b-59c0-aa4d-09d26aa0f8f6"]}, .span = ["testNode-17"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-173"}, .name = "testNP-173", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3365f5f5-f370-5479-90bc-b38d0e8b9b3c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a2c0ddbd-27ca-5a9b-a410-20a188a1171d"]}, .span = ["testNode-17"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-174"}, .name = "testNP-174", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4cb5e2ff-79de-563a-9956-a634c80863b5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3365f5f5-f370-5479-90bc-b38d0e8b9b3c"]}, .span = ["testNode-17"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-175"}, .name = "testNP-175", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6b1af6fc-e75e-5e52-84bb-2829d56b9e68"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4cb5e2ff-79de-563a-9956-a634c80863b5"]}, .span = ["testNode-17"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-176"}, .name = "testNP-176", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bff693b4-df3f-5e7c-b929-9d26f3aab586"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6b1af6fc-e75e-5e52-84bb-2829d56b9e68"]}, .span = ["testNode-17"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-177"}, .name = "testNP-177", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["40baec0e-95e4-5295-806c-91c9d764414f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bff693b4-df3f-5e7c-b929-9d26f3aab586"]}, .span = ["testNode-17"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-178"}, .name = "testNP-178", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0780f699-f6e9-5158-ad62-c012c34da8e7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["40baec0e-95e4-5295-806c-91c9d764414f"]}, .span = ["testNode-17"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-179"}, .name = "testNP-179", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a8cfccc3-0404-525a-b3d3-284dd5c38257"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0780f699-f6e9-5158-ad62-c012c34da8e7"]}, .span = ["testNode-17"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-180"}, .name = "testNP-180", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["07a8fcfd-8014-5a34-a8bd-13c6c03c89c0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a8cfccc3-0404-525a-b3d3-284dd5c38257"]}, .span = ["testNode-18"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-181"}, .name = "testNP-181", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f1ae3082-14a4-598f-b762-2e7287c81ffe"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["07a8fcfd-8014-5a34-a8bd-13c6c03c89c0"]}, .span = ["testNode-18"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-182"}, .name = "testNP-182", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["769af438-e108-5287-a978-31ac710b46fb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f1ae3082-14a4-598f-b762-2e7287c81ffe"]}, .span = ["testNode-18"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-183"}, .name = "testNP-183", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["020d29e9-0d59-56f2-be4f-80e1ca9f7324"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["769af438-e108-5287-a978-31ac710b46fb"]}, .span = ["testNode-18"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-184"}, .name = "testNP-184", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0cfb85fe-e1fa-5967-bee3-5530bc9b0038"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["020d29e9-0d59-56f2-be4f-80e1ca9f7324"]}, .span = ["testNode-18"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-185"}, .name = "testNP-185", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fc09e241-cdaa-52a0-9cc4-04d72757d13b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0cfb85fe-e1fa-5967-bee3-5530bc9b0038"]}, .span = ["testNode-18"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-186"}, .name = "testNP-186", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f4a63453-6945-5801-9c67-f941d090041b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fc09e241-cdaa-52a0-9cc4-04d72757d13b"]}, .span = ["testNode-18"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-187"}, .name = "testNP-187", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0f4b2596-a4ed-55a9-bf6e-e3af9547edc0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f4a63453-6945-5801-9c67-f941d090041b"]}, .span = ["testNode-18"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-188"}, .name = "testNP-188", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b1fcb01a-565c-5b61-becc-800d4492eb33"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0f4b2596-a4ed-55a9-bf6e-e3af9547edc0"]}, .span = ["testNode-18"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-189"}, .name = "testNP-189", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["afa64984-2df6-5f21-9d9c-7ab14dc108f4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b1fcb01a-565c-5b61-becc-800d4492eb33"]}, .span = ["testNode-18"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-190"}, .name = "testNP-190", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["33e664f1-3b9a-575d-a9d1-a8332819cc7a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["afa64984-2df6-5f21-9d9c-7ab14dc108f4"]}, .span = ["testNode-19"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-191"}, .name = "testNP-191", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bf93e384-8ebe-5643-85f5-1f91edd0f14b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["33e664f1-3b9a-575d-a9d1-a8332819cc7a"]}, .span = ["testNode-19"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0f032ba9-271b-5ea5-a68c-a17f073e0684"}, .name = "0f032ba9-271b-5ea5-a68c-a17f073e0684", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-220]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-220")], .matchExpressions = []}}}}, .addresses = ["10.10.22.0"], .span = ["testNode-21"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1354dfc4-d07d-599b-9202-2a047d7887b2"}, .name = "1354dfc4-d07d-599b-9202-2a047d7887b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-198]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-198")], .matchExpressions = []}}}}, .addresses = ["10.10.19.8"], .span = ["testNode-19"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1753b9da-5ccf-53e6-b0fb-d05a9c7baeab"}, .name = "1753b9da-5ccf-53e6-b0fb-d05a9c7baeab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-201]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-201")], .matchExpressions = []}}}}, .addresses = ["10.10.20.1"], .span = ["testNode-20"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "195b0d0c-b87d-5d28-9286-324a27604bc6"}, .name = "195b0d0c-b87d-5d28-9286-324a27604bc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-203]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-203")], .matchExpressions = []}}}}, .addresses = ["10.10.20.3"], .span = ["testNode-20"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1ec66c94-f36e-5c6f-af53-9982c106d92b"}, .name = "1ec66c94-f36e-5c6f-af53-9982c106d92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-211]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-211")], .matchExpressions = []}}}}, .addresses = ["10.10.21.1"], .span = ["testNode-21"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "28385eef-7119-578d-b809-9694ba7a8f16"}, .name = "28385eef-7119-578d-b809-9694ba7a8f16", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-194]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-194")], .matchExpressions = []}}}}, .addresses = ["10.10.19.4"], .span = ["testNode-19"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2b1b9fe7-7a74-57c5-9583-858774654c70"}, .name = "2b1b9fe7-7a74-57c5-9583-858774654c70", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-193]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-193")], .matchExpressions = []}}}}, .addresses = ["10.10.19.3"], .span = ["testNode-19"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "30f5106e-9e8f-5329-a04f-f5223d313f94"}, .name = "30f5106e-9e8f-5329-a04f-f5223d313f94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-223]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-223")], .matchExpressions = []}}}}, .addresses = ["10.10.22.3"], .span = ["testNode-22"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3921fc8d-a686-5d41-b716-bc5b4ef1f544"}, .name = "3921fc8d-a686-5d41-b716-bc5b4ef1f544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-202]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-202")], .matchExpressions = []}}}}, .addresses = ["10.10.20.2"], .span = ["testNode-20"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3f0884f0-cc39-51b6-b019-74e3b40de51a"}, .name = "3f0884f0-cc39-51b6-b019-74e3b40de51a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-204]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-204")], .matchExpressions = []}}}}, .addresses = ["10.10.20.4"], .span = ["testNode-20"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4851ef1b-a775-5343-b0c7-53be5c924be1"}, .name = "4851ef1b-a775-5343-b0c7-53be5c924be1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-209]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-209")], .matchExpressions = []}}}}, .addresses = ["10.10.20.9"], .span = ["testNode-20"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "49ca4e77-1929-5c26-943c-472b2f1f196d"}, .name = "49ca4e77-1929-5c26-943c-472b2f1f196d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-196]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-196")], .matchExpressions = []}}}}, .addresses = ["10.10.19.6"], .span = ["testNode-19"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5a3c3917-155a-502d-bc7e-0656e685b6d5"}, .name = "5a3c3917-155a-502d-bc7e-0656e685b6d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-208]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-208")], .matchExpressions = []}}}}, .addresses = ["10.10.20.8"], .span = ["testNode-20"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "79e24dbc-1919-5e6c-b7c1-9d4fe977a00b"}, .name = "79e24dbc-1919-5e6c-b7c1-9d4fe977a00b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-197]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-197")], .matchExpressions = []}}}}, .addresses = ["10.10.19.7"], .span = ["testNode-19"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8b40256f-1904-56da-8ebb-021e3b859d5e"}, .name = "8b40256f-1904-56da-8ebb-021e3b859d5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-210]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-210")], .matchExpressions = []}}}}, .addresses = ["10.10.21.0"], .span = ["testNode-20"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "96ef11fc-8238-5331-acdc-7a54fa317a5e"}, .name = "96ef11fc-8238-5331-acdc-7a54fa317a5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-224]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-224")], .matchExpressions = []}}}}, .addresses = ["10.10.22.4"], .span = ["testNode-22"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9b0ff54c-090b-5ae2-8883-8c9f80e245bc"}, .name = "9b0ff54c-090b-5ae2-8883-8c9f80e245bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-200]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-200")], .matchExpressions = []}}}}, .addresses = ["10.10.20.0"], .span = ["testNode-19"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ab251978-7739-5005-b186-1b8b695e9ff7"}, .name = "ab251978-7739-5005-b186-1b8b695e9ff7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-207]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-207")], .matchExpressions = []}}}}, .addresses = ["10.10.20.7"], .span = ["testNode-20"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b6558d90-dfdf-57f0-a0f0-47b447973e52"}, .name = "b6558d90-dfdf-57f0-a0f0-47b447973e52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-205]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-205")], .matchExpressions = []}}}}, .addresses = ["10.10.20.5"], .span = ["testNode-20"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b6bd599b-8fbe-5e7c-978a-d72910190a25"}, .name = "b6bd599b-8fbe-5e7c-978a-d72910190a25", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-206]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-206")], .matchExpressions = []}}}}, .addresses = ["10.10.20.6"], .span = ["testNode-20"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b71aafae-50e7-5119-9d3a-52b08374c3a9"}, .name = "b71aafae-50e7-5119-9d3a-52b08374c3a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-212]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-212")], .matchExpressions = []}}}}, .addresses = ["10.10.21.2"], .span = ["testNode-21"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "be90137d-1291-5421-be9a-568c1d5576dd"}, .name = "be90137d-1291-5421-be9a-568c1d5576dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-199]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-199")], .matchExpressions = []}}}}, .addresses = ["10.10.19.9"], .span = ["testNode-19"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bf4b8e21-c64f-52cb-a0e0-5c7a300ef5eb"}, .name = "bf4b8e21-c64f-52cb-a0e0-5c7a300ef5eb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-222]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-222")], .matchExpressions = []}}}}, .addresses = ["10.10.22.2"], .span = ["testNode-22"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cce6e1d9-a389-58ee-bf74-9faadfa24055"}, .name = "cce6e1d9-a389-58ee-bf74-9faadfa24055", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-217]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-217")], .matchExpressions = []}}}}, .addresses = ["10.10.21.7"], .span = ["testNode-21"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cd184987-3c4e-52a2-82de-406b959e19b5"}, .name = "cd184987-3c4e-52a2-82de-406b959e19b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-218]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-218")], .matchExpressions = []}}}}, .addresses = ["10.10.21.8"], .span = ["testNode-21"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ce0ff344-2eaf-5ade-9cd0-be745f89ee6c"}, .name = "ce0ff344-2eaf-5ade-9cd0-be745f89ee6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-215]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-215")], .matchExpressions = []}}}}, .addresses = ["10.10.21.5"], .span = ["testNode-21"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e0b6d092-d299-5591-ac2f-94ba68eac577"}, .name = "e0b6d092-d299-5591-ac2f-94ba68eac577", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-216]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-216")], .matchExpressions = []}}}}, .addresses = ["10.10.21.6"], .span = ["testNode-21"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e33c9672-9427-5cbe-abab-4284039d39b9"}, .name = "e33c9672-9427-5cbe-abab-4284039d39b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-195]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-195")], .matchExpressions = []}}}}, .addresses = ["10.10.19.5"], .span = ["testNode-19"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e61a021b-d18d-5759-bc20-c440a1def743"}, .name = "e61a021b-d18d-5759-bc20-c440a1def743", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-219]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-219")], .matchExpressions = []}}}}, .addresses = ["10.10.21.9"], .span = ["testNode-21"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f07da573-7e4c-5433-bf13-8fa09504fc0f"}, .name = "f07da573-7e4c-5433-bf13-8fa09504fc0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-214]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-214")], .matchExpressions = []}}}}, .addresses = ["10.10.21.4"], .span = ["testNode-21"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f320cdee-caa8-577e-8561-bbcc5a6cd900"}, .name = "f320cdee-caa8-577e-8561-bbcc5a6cd900", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-213]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-213")], .matchExpressions = []}}}}, .addresses = ["10.10.21.3"], .span = ["testNode-21"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "faec8054-e271-5a63-8328-d0b7a1decbb9"}, .name = "faec8054-e271-5a63-8328-d0b7a1decbb9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-221]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-221")], .matchExpressions = []}}}}, .addresses = ["10.10.22.1"], .span = ["testNode-22"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0f032ba9-271b-5ea5-a68c-a17f073e0684"}, .name = "0f032ba9-271b-5ea5-a68c-a17f073e0684", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-220]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-220")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-220", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1354dfc4-d07d-599b-9202-2a047d7887b2"}, .name = "1354dfc4-d07d-599b-9202-2a047d7887b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-198]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-198")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-198", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1753b9da-5ccf-53e6-b0fb-d05a9c7baeab"}, .name = "1753b9da-5ccf-53e6-b0fb-d05a9c7baeab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-201]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-201")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-201", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "195b0d0c-b87d-5d28-9286-324a27604bc6"}, .name = "195b0d0c-b87d-5d28-9286-324a27604bc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-203]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-203")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-203", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1ec66c94-f36e-5c6f-af53-9982c106d92b"}, .name = "1ec66c94-f36e-5c6f-af53-9982c106d92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-211]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-211")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-211", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "28385eef-7119-578d-b809-9694ba7a8f16"}, .name = "28385eef-7119-578d-b809-9694ba7a8f16", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-194]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-194")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-194", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2b1b9fe7-7a74-57c5-9583-858774654c70"}, .name = "2b1b9fe7-7a74-57c5-9583-858774654c70", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-193]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-193")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-193", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "30f5106e-9e8f-5329-a04f-f5223d313f94"}, .name = "30f5106e-9e8f-5329-a04f-f5223d313f94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-223]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-223")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-223", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3921fc8d-a686-5d41-b716-bc5b4ef1f544"}, .name = "3921fc8d-a686-5d41-b716-bc5b4ef1f544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-202]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-202")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-202", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3f0884f0-cc39-51b6-b019-74e3b40de51a"}, .name = "3f0884f0-cc39-51b6-b019-74e3b40de51a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-204]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-204")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-204", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4851ef1b-a775-5343-b0c7-53be5c924be1"}, .name = "4851ef1b-a775-5343-b0c7-53be5c924be1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-209]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-209")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-209", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "49ca4e77-1929-5c26-943c-472b2f1f196d"}, .name = "49ca4e77-1929-5c26-943c-472b2f1f196d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-196]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-196")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-196", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5a3c3917-155a-502d-bc7e-0656e685b6d5"}, .name = "5a3c3917-155a-502d-bc7e-0656e685b6d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-208]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-208")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-208", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "79e24dbc-1919-5e6c-b7c1-9d4fe977a00b"}, .name = "79e24dbc-1919-5e6c-b7c1-9d4fe977a00b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-197]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-197")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-197", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8b40256f-1904-56da-8ebb-021e3b859d5e"}, .name = "8b40256f-1904-56da-8ebb-021e3b859d5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-210]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-210")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-210", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9b0ff54c-090b-5ae2-8883-8c9f80e245bc"}, .name = "9b0ff54c-090b-5ae2-8883-8c9f80e245bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-200]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-200")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-200", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ab251978-7739-5005-b186-1b8b695e9ff7"}, .name = "ab251978-7739-5005-b186-1b8b695e9ff7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-207]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-207")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-207", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b6558d90-dfdf-57f0-a0f0-47b447973e52"}, .name = "b6558d90-dfdf-57f0-a0f0-47b447973e52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-205]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-205")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-205", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b6bd599b-8fbe-5e7c-978a-d72910190a25"}, .name = "b6bd599b-8fbe-5e7c-978a-d72910190a25", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-206]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-206")], .matchExpressions = []}}}}, .podsByNode = [("testNode-20", [k8spolicy.PodReference{.name = "testPod-206", .namespace = "testNamespace"}])], .span = ["testNode-20"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b71aafae-50e7-5119-9d3a-52b08374c3a9"}, .name = "b71aafae-50e7-5119-9d3a-52b08374c3a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-212]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-212")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-212", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "be90137d-1291-5421-be9a-568c1d5576dd"}, .name = "be90137d-1291-5421-be9a-568c1d5576dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-199]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-199")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-199", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bf4b8e21-c64f-52cb-a0e0-5c7a300ef5eb"}, .name = "bf4b8e21-c64f-52cb-a0e0-5c7a300ef5eb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-222]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-222")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-222", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bf93e384-8ebe-5643-85f5-1f91edd0f14b"}, .name = "bf93e384-8ebe-5643-85f5-1f91edd0f14b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-192]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-192")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-192", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cce6e1d9-a389-58ee-bf74-9faadfa24055"}, .name = "cce6e1d9-a389-58ee-bf74-9faadfa24055", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-217]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-217")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-217", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cd184987-3c4e-52a2-82de-406b959e19b5"}, .name = "cd184987-3c4e-52a2-82de-406b959e19b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-218]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-218")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-218", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ce0ff344-2eaf-5ade-9cd0-be745f89ee6c"}, .name = "ce0ff344-2eaf-5ade-9cd0-be745f89ee6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-215]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-215")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-215", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e0b6d092-d299-5591-ac2f-94ba68eac577"}, .name = "e0b6d092-d299-5591-ac2f-94ba68eac577", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-216]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-216")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-216", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e33c9672-9427-5cbe-abab-4284039d39b9"}, .name = "e33c9672-9427-5cbe-abab-4284039d39b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-195]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-195")], .matchExpressions = []}}}}, .podsByNode = [("testNode-19", [k8spolicy.PodReference{.name = "testPod-195", .namespace = "testNamespace"}])], .span = ["testNode-19"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e61a021b-d18d-5759-bc20-c440a1def743"}, .name = "e61a021b-d18d-5759-bc20-c440a1def743", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-219]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-219")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-219", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f07da573-7e4c-5433-bf13-8fa09504fc0f"}, .name = "f07da573-7e4c-5433-bf13-8fa09504fc0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-214]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-214")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-214", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f320cdee-caa8-577e-8561-bbcc5a6cd900"}, .name = "f320cdee-caa8-577e-8561-bbcc5a6cd900", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-213]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-213")], .matchExpressions = []}}}}, .podsByNode = [("testNode-21", [k8spolicy.PodReference{.name = "testPod-213", .namespace = "testNamespace"}])], .span = ["testNode-21"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "faec8054-e271-5a63-8328-d0b7a1decbb9"}, .name = "faec8054-e271-5a63-8328-d0b7a1decbb9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-221]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-221")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-221", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-192"}, .name = "testNP-192", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2b1b9fe7-7a74-57c5-9583-858774654c70"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bf93e384-8ebe-5643-85f5-1f91edd0f14b"]}, .span = ["testNode-19"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-193"}, .name = "testNP-193", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["28385eef-7119-578d-b809-9694ba7a8f16"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2b1b9fe7-7a74-57c5-9583-858774654c70"]}, .span = ["testNode-19"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-194"}, .name = "testNP-194", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e33c9672-9427-5cbe-abab-4284039d39b9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["28385eef-7119-578d-b809-9694ba7a8f16"]}, .span = ["testNode-19"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-195"}, .name = "testNP-195", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["49ca4e77-1929-5c26-943c-472b2f1f196d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e33c9672-9427-5cbe-abab-4284039d39b9"]}, .span = ["testNode-19"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-196"}, .name = "testNP-196", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["79e24dbc-1919-5e6c-b7c1-9d4fe977a00b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["49ca4e77-1929-5c26-943c-472b2f1f196d"]}, .span = ["testNode-19"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-197"}, .name = "testNP-197", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1354dfc4-d07d-599b-9202-2a047d7887b2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["79e24dbc-1919-5e6c-b7c1-9d4fe977a00b"]}, .span = ["testNode-19"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-198"}, .name = "testNP-198", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["be90137d-1291-5421-be9a-568c1d5576dd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1354dfc4-d07d-599b-9202-2a047d7887b2"]}, .span = ["testNode-19"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-199"}, .name = "testNP-199", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9b0ff54c-090b-5ae2-8883-8c9f80e245bc"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["be90137d-1291-5421-be9a-568c1d5576dd"]}, .span = ["testNode-19"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-200"}, .name = "testNP-200", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1753b9da-5ccf-53e6-b0fb-d05a9c7baeab"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9b0ff54c-090b-5ae2-8883-8c9f80e245bc"]}, .span = ["testNode-20"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-201"}, .name = "testNP-201", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3921fc8d-a686-5d41-b716-bc5b4ef1f544"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1753b9da-5ccf-53e6-b0fb-d05a9c7baeab"]}, .span = ["testNode-20"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-202"}, .name = "testNP-202", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["195b0d0c-b87d-5d28-9286-324a27604bc6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3921fc8d-a686-5d41-b716-bc5b4ef1f544"]}, .span = ["testNode-20"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-203"}, .name = "testNP-203", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3f0884f0-cc39-51b6-b019-74e3b40de51a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["195b0d0c-b87d-5d28-9286-324a27604bc6"]}, .span = ["testNode-20"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-204"}, .name = "testNP-204", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b6558d90-dfdf-57f0-a0f0-47b447973e52"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3f0884f0-cc39-51b6-b019-74e3b40de51a"]}, .span = ["testNode-20"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-205"}, .name = "testNP-205", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b6bd599b-8fbe-5e7c-978a-d72910190a25"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b6558d90-dfdf-57f0-a0f0-47b447973e52"]}, .span = ["testNode-20"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-206"}, .name = "testNP-206", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ab251978-7739-5005-b186-1b8b695e9ff7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b6bd599b-8fbe-5e7c-978a-d72910190a25"]}, .span = ["testNode-20"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-207"}, .name = "testNP-207", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5a3c3917-155a-502d-bc7e-0656e685b6d5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ab251978-7739-5005-b186-1b8b695e9ff7"]}, .span = ["testNode-20"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-208"}, .name = "testNP-208", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4851ef1b-a775-5343-b0c7-53be5c924be1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5a3c3917-155a-502d-bc7e-0656e685b6d5"]}, .span = ["testNode-20"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-209"}, .name = "testNP-209", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8b40256f-1904-56da-8ebb-021e3b859d5e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4851ef1b-a775-5343-b0c7-53be5c924be1"]}, .span = ["testNode-20"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-210"}, .name = "testNP-210", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1ec66c94-f36e-5c6f-af53-9982c106d92b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8b40256f-1904-56da-8ebb-021e3b859d5e"]}, .span = ["testNode-21"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-211"}, .name = "testNP-211", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b71aafae-50e7-5119-9d3a-52b08374c3a9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1ec66c94-f36e-5c6f-af53-9982c106d92b"]}, .span = ["testNode-21"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-212"}, .name = "testNP-212", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f320cdee-caa8-577e-8561-bbcc5a6cd900"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b71aafae-50e7-5119-9d3a-52b08374c3a9"]}, .span = ["testNode-21"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-213"}, .name = "testNP-213", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f07da573-7e4c-5433-bf13-8fa09504fc0f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f320cdee-caa8-577e-8561-bbcc5a6cd900"]}, .span = ["testNode-21"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-214"}, .name = "testNP-214", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ce0ff344-2eaf-5ade-9cd0-be745f89ee6c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f07da573-7e4c-5433-bf13-8fa09504fc0f"]}, .span = ["testNode-21"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-215"}, .name = "testNP-215", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e0b6d092-d299-5591-ac2f-94ba68eac577"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ce0ff344-2eaf-5ade-9cd0-be745f89ee6c"]}, .span = ["testNode-21"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-216"}, .name = "testNP-216", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cce6e1d9-a389-58ee-bf74-9faadfa24055"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e0b6d092-d299-5591-ac2f-94ba68eac577"]}, .span = ["testNode-21"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-217"}, .name = "testNP-217", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cd184987-3c4e-52a2-82de-406b959e19b5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cce6e1d9-a389-58ee-bf74-9faadfa24055"]}, .span = ["testNode-21"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-218"}, .name = "testNP-218", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e61a021b-d18d-5759-bc20-c440a1def743"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cd184987-3c4e-52a2-82de-406b959e19b5"]}, .span = ["testNode-21"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-219"}, .name = "testNP-219", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0f032ba9-271b-5ea5-a68c-a17f073e0684"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e61a021b-d18d-5759-bc20-c440a1def743"]}, .span = ["testNode-21"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-220"}, .name = "testNP-220", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["faec8054-e271-5a63-8328-d0b7a1decbb9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0f032ba9-271b-5ea5-a68c-a17f073e0684"]}, .span = ["testNode-22"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-221"}, .name = "testNP-221", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bf4b8e21-c64f-52cb-a0e0-5c7a300ef5eb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["faec8054-e271-5a63-8328-d0b7a1decbb9"]}, .span = ["testNode-22"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-222"}, .name = "testNP-222", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["30f5106e-9e8f-5329-a04f-f5223d313f94"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bf4b8e21-c64f-52cb-a0e0-5c7a300ef5eb"]}, .span = ["testNode-22"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-223"}, .name = "testNP-223", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["96ef11fc-8238-5331-acdc-7a54fa317a5e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["30f5106e-9e8f-5329-a04f-f5223d313f94"]}, .span = ["testNode-22"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "03c30831-91b6-580f-a2e1-24562dcc1da1"}, .name = "03c30831-91b6-580f-a2e1-24562dcc1da1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-241]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-241")], .matchExpressions = []}}}}, .addresses = ["10.10.24.1"], .span = ["testNode-24"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1046e105-938c-51f2-b9a2-7cb6d3d6f3a7"}, .name = "1046e105-938c-51f2-b9a2-7cb6d3d6f3a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-253]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-253")], .matchExpressions = []}}}}, .addresses = ["10.10.25.3"], .span = ["testNode-25"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "12363c7f-6a05-50df-bc3c-49a85d7c9fed"}, .name = "12363c7f-6a05-50df-bc3c-49a85d7c9fed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-234]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-234")], .matchExpressions = []}}}}, .addresses = ["10.10.23.4"], .span = ["testNode-23"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "18ad0ba6-aaa4-574f-a7e5-5380d9decdae"}, .name = "18ad0ba6-aaa4-574f-a7e5-5380d9decdae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-244]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-244")], .matchExpressions = []}}}}, .addresses = ["10.10.24.4"], .span = ["testNode-24"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "25e29314-9597-55b2-b357-ce6cad43a1df"}, .name = "25e29314-9597-55b2-b357-ce6cad43a1df", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-225]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-225")], .matchExpressions = []}}}}, .addresses = ["10.10.22.5"], .span = ["testNode-22"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2f31d01d-e600-5abf-a95d-7f691b736b75"}, .name = "2f31d01d-e600-5abf-a95d-7f691b736b75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-247]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-247")], .matchExpressions = []}}}}, .addresses = ["10.10.24.7"], .span = ["testNode-24"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3743225e-5982-515c-8798-cd2d602abc0e"}, .name = "3743225e-5982-515c-8798-cd2d602abc0e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-250]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-250")], .matchExpressions = []}}}}, .addresses = ["10.10.25.0"], .span = ["testNode-24"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3b3928b2-19ee-5d88-8ffb-4da451fabbc2"}, .name = "3b3928b2-19ee-5d88-8ffb-4da451fabbc2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-229]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-229")], .matchExpressions = []}}}}, .addresses = ["10.10.22.9"], .span = ["testNode-22"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3cf363d5-9f6d-5fbe-bce8-ead2115f300b"}, .name = "3cf363d5-9f6d-5fbe-bce8-ead2115f300b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-227]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-227")], .matchExpressions = []}}}}, .addresses = ["10.10.22.7"], .span = ["testNode-22"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "44710353-c3a3-594d-91e3-188bce89c2e8"}, .name = "44710353-c3a3-594d-91e3-188bce89c2e8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-251]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-251")], .matchExpressions = []}}}}, .addresses = ["10.10.25.1"], .span = ["testNode-25"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4a4af55a-eac9-527c-8aee-491684848e3a"}, .name = "4a4af55a-eac9-527c-8aee-491684848e3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-233]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-233")], .matchExpressions = []}}}}, .addresses = ["10.10.23.3"], .span = ["testNode-23"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5b27e3c4-7fb5-5646-9309-e6b53a932e56"}, .name = "5b27e3c4-7fb5-5646-9309-e6b53a932e56", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-228]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-228")], .matchExpressions = []}}}}, .addresses = ["10.10.22.8"], .span = ["testNode-22"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6325a183-1cca-5fa2-93a7-8d93436debc6"}, .name = "6325a183-1cca-5fa2-93a7-8d93436debc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-237]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-237")], .matchExpressions = []}}}}, .addresses = ["10.10.23.7"], .span = ["testNode-23"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "69361e9c-1095-5e70-bed3-1e101dd52e49"}, .name = "69361e9c-1095-5e70-bed3-1e101dd52e49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-249]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-249")], .matchExpressions = []}}}}, .addresses = ["10.10.24.9"], .span = ["testNode-24"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "75258fb6-3b10-56b5-bb55-e60abd84638b"}, .name = "75258fb6-3b10-56b5-bb55-e60abd84638b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-254]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-254")], .matchExpressions = []}}}}, .addresses = ["10.10.25.4"], .span = ["testNode-25"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "76c862b9-bfd6-5bf9-9b43-cb1fbcbca5a6"}, .name = "76c862b9-bfd6-5bf9-9b43-cb1fbcbca5a6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-252]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-252")], .matchExpressions = []}}}}, .addresses = ["10.10.25.2"], .span = ["testNode-25"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7e09417a-9bf1-5ba5-9fa1-211122179e6c"}, .name = "7e09417a-9bf1-5ba5-9fa1-211122179e6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-239]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-239")], .matchExpressions = []}}}}, .addresses = ["10.10.23.9"], .span = ["testNode-23"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8f496125-eb17-5c5e-8643-dd1f181798ab"}, .name = "8f496125-eb17-5c5e-8643-dd1f181798ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-243]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-243")], .matchExpressions = []}}}}, .addresses = ["10.10.24.3"], .span = ["testNode-24"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "969d4a4d-0d73-5ff1-ac23-9a3c6060fa32"}, .name = "969d4a4d-0d73-5ff1-ac23-9a3c6060fa32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-238]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-238")], .matchExpressions = []}}}}, .addresses = ["10.10.23.8"], .span = ["testNode-23"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "96cf2a9c-7745-5799-805c-f5491131be7a"}, .name = "96cf2a9c-7745-5799-805c-f5491131be7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-235]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-235")], .matchExpressions = []}}}}, .addresses = ["10.10.23.5"], .span = ["testNode-23"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "af7d4a1c-0403-5ead-b5ab-424c37808ecb"}, .name = "af7d4a1c-0403-5ead-b5ab-424c37808ecb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-245]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-245")], .matchExpressions = []}}}}, .addresses = ["10.10.24.5"], .span = ["testNode-24"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b7bbd971-6410-546b-bdec-d44038b03226"}, .name = "b7bbd971-6410-546b-bdec-d44038b03226", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-246]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-246")], .matchExpressions = []}}}}, .addresses = ["10.10.24.6"], .span = ["testNode-24"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bbd75deb-2c15-5e08-a6f1-37aaa90ceeb3"}, .name = "bbd75deb-2c15-5e08-a6f1-37aaa90ceeb3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-255]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-255")], .matchExpressions = []}}}}, .addresses = ["10.10.25.5"], .span = ["testNode-25"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c307d582-5f15-57ff-9bc8-84b78be06d82"}, .name = "c307d582-5f15-57ff-9bc8-84b78be06d82", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-232]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-232")], .matchExpressions = []}}}}, .addresses = ["10.10.23.2"], .span = ["testNode-23"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c9e17850-2963-5c1f-aba2-fe7636551e9c"}, .name = "c9e17850-2963-5c1f-aba2-fe7636551e9c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-236]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-236")], .matchExpressions = []}}}}, .addresses = ["10.10.23.6"], .span = ["testNode-23"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "db570279-dd87-5b76-8602-bd407ca2586d"}, .name = "db570279-dd87-5b76-8602-bd407ca2586d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-230]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-230")], .matchExpressions = []}}}}, .addresses = ["10.10.23.0"], .span = ["testNode-22"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dfeba82d-1edf-50bf-8ab9-0f84b7d679b4"}, .name = "dfeba82d-1edf-50bf-8ab9-0f84b7d679b4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-226]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-226")], .matchExpressions = []}}}}, .addresses = ["10.10.22.6"], .span = ["testNode-22"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e403cccb-89fd-5709-a1f4-49bbfcf39a51"}, .name = "e403cccb-89fd-5709-a1f4-49bbfcf39a51", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-242]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-242")], .matchExpressions = []}}}}, .addresses = ["10.10.24.2"], .span = ["testNode-24"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "eb41ee19-8b4d-56bc-9bc6-6baa5fdcc2a4"}, .name = "eb41ee19-8b4d-56bc-9bc6-6baa5fdcc2a4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-256]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-256")], .matchExpressions = []}}}}, .addresses = ["10.10.25.6"], .span = ["testNode-25"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f170bb2c-7146-5078-9c22-3bfd840e2691"}, .name = "f170bb2c-7146-5078-9c22-3bfd840e2691", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-240]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-240")], .matchExpressions = []}}}}, .addresses = ["10.10.24.0"], .span = ["testNode-23"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f1abb1fc-ef88-52a9-806e-ca9360600fe8"}, .name = "f1abb1fc-ef88-52a9-806e-ca9360600fe8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-248]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-248")], .matchExpressions = []}}}}, .addresses = ["10.10.24.8"], .span = ["testNode-24"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f4c6592f-9d24-5299-a825-1b870d36158f"}, .name = "f4c6592f-9d24-5299-a825-1b870d36158f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-231]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-231")], .matchExpressions = []}}}}, .addresses = ["10.10.23.1"], .span = ["testNode-23"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "03c30831-91b6-580f-a2e1-24562dcc1da1"}, .name = "03c30831-91b6-580f-a2e1-24562dcc1da1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-241]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-241")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-241", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1046e105-938c-51f2-b9a2-7cb6d3d6f3a7"}, .name = "1046e105-938c-51f2-b9a2-7cb6d3d6f3a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-253]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-253")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-253", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "12363c7f-6a05-50df-bc3c-49a85d7c9fed"}, .name = "12363c7f-6a05-50df-bc3c-49a85d7c9fed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-234]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-234")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-234", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "18ad0ba6-aaa4-574f-a7e5-5380d9decdae"}, .name = "18ad0ba6-aaa4-574f-a7e5-5380d9decdae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-244]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-244")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-244", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "25e29314-9597-55b2-b357-ce6cad43a1df"}, .name = "25e29314-9597-55b2-b357-ce6cad43a1df", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-225]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-225")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-225", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2f31d01d-e600-5abf-a95d-7f691b736b75"}, .name = "2f31d01d-e600-5abf-a95d-7f691b736b75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-247]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-247")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-247", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3743225e-5982-515c-8798-cd2d602abc0e"}, .name = "3743225e-5982-515c-8798-cd2d602abc0e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-250]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-250")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-250", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3b3928b2-19ee-5d88-8ffb-4da451fabbc2"}, .name = "3b3928b2-19ee-5d88-8ffb-4da451fabbc2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-229]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-229")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-229", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3cf363d5-9f6d-5fbe-bce8-ead2115f300b"}, .name = "3cf363d5-9f6d-5fbe-bce8-ead2115f300b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-227]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-227")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-227", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "44710353-c3a3-594d-91e3-188bce89c2e8"}, .name = "44710353-c3a3-594d-91e3-188bce89c2e8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-251]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-251")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-251", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4a4af55a-eac9-527c-8aee-491684848e3a"}, .name = "4a4af55a-eac9-527c-8aee-491684848e3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-233]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-233")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-233", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5b27e3c4-7fb5-5646-9309-e6b53a932e56"}, .name = "5b27e3c4-7fb5-5646-9309-e6b53a932e56", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-228]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-228")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-228", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6325a183-1cca-5fa2-93a7-8d93436debc6"}, .name = "6325a183-1cca-5fa2-93a7-8d93436debc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-237]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-237")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-237", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "69361e9c-1095-5e70-bed3-1e101dd52e49"}, .name = "69361e9c-1095-5e70-bed3-1e101dd52e49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-249]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-249")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-249", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "75258fb6-3b10-56b5-bb55-e60abd84638b"}, .name = "75258fb6-3b10-56b5-bb55-e60abd84638b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-254]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-254")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-254", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "76c862b9-bfd6-5bf9-9b43-cb1fbcbca5a6"}, .name = "76c862b9-bfd6-5bf9-9b43-cb1fbcbca5a6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-252]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-252")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-252", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7e09417a-9bf1-5ba5-9fa1-211122179e6c"}, .name = "7e09417a-9bf1-5ba5-9fa1-211122179e6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-239]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-239")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-239", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8f496125-eb17-5c5e-8643-dd1f181798ab"}, .name = "8f496125-eb17-5c5e-8643-dd1f181798ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-243]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-243")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-243", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "969d4a4d-0d73-5ff1-ac23-9a3c6060fa32"}, .name = "969d4a4d-0d73-5ff1-ac23-9a3c6060fa32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-238]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-238")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-238", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "96cf2a9c-7745-5799-805c-f5491131be7a"}, .name = "96cf2a9c-7745-5799-805c-f5491131be7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-235]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-235")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-235", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "96ef11fc-8238-5331-acdc-7a54fa317a5e"}, .name = "96ef11fc-8238-5331-acdc-7a54fa317a5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-224]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-224")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-224", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "af7d4a1c-0403-5ead-b5ab-424c37808ecb"}, .name = "af7d4a1c-0403-5ead-b5ab-424c37808ecb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-245]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-245")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-245", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b7bbd971-6410-546b-bdec-d44038b03226"}, .name = "b7bbd971-6410-546b-bdec-d44038b03226", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-246]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-246")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-246", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bbd75deb-2c15-5e08-a6f1-37aaa90ceeb3"}, .name = "bbd75deb-2c15-5e08-a6f1-37aaa90ceeb3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-255]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-255")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-255", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c307d582-5f15-57ff-9bc8-84b78be06d82"}, .name = "c307d582-5f15-57ff-9bc8-84b78be06d82", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-232]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-232")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-232", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c9e17850-2963-5c1f-aba2-fe7636551e9c"}, .name = "c9e17850-2963-5c1f-aba2-fe7636551e9c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-236]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-236")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-236", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "db570279-dd87-5b76-8602-bd407ca2586d"}, .name = "db570279-dd87-5b76-8602-bd407ca2586d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-230]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-230")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-230", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dfeba82d-1edf-50bf-8ab9-0f84b7d679b4"}, .name = "dfeba82d-1edf-50bf-8ab9-0f84b7d679b4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-226]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-226")], .matchExpressions = []}}}}, .podsByNode = [("testNode-22", [k8spolicy.PodReference{.name = "testPod-226", .namespace = "testNamespace"}])], .span = ["testNode-22"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e403cccb-89fd-5709-a1f4-49bbfcf39a51"}, .name = "e403cccb-89fd-5709-a1f4-49bbfcf39a51", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-242]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-242")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-242", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f170bb2c-7146-5078-9c22-3bfd840e2691"}, .name = "f170bb2c-7146-5078-9c22-3bfd840e2691", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-240]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-240")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-240", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f1abb1fc-ef88-52a9-806e-ca9360600fe8"}, .name = "f1abb1fc-ef88-52a9-806e-ca9360600fe8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-248]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-248")], .matchExpressions = []}}}}, .podsByNode = [("testNode-24", [k8spolicy.PodReference{.name = "testPod-248", .namespace = "testNamespace"}])], .span = ["testNode-24"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f4c6592f-9d24-5299-a825-1b870d36158f"}, .name = "f4c6592f-9d24-5299-a825-1b870d36158f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-231]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-231")], .matchExpressions = []}}}}, .podsByNode = [("testNode-23", [k8spolicy.PodReference{.name = "testPod-231", .namespace = "testNamespace"}])], .span = ["testNode-23"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-224"}, .name = "testNP-224", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["25e29314-9597-55b2-b357-ce6cad43a1df"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["96ef11fc-8238-5331-acdc-7a54fa317a5e"]}, .span = ["testNode-22"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-225"}, .name = "testNP-225", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dfeba82d-1edf-50bf-8ab9-0f84b7d679b4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["25e29314-9597-55b2-b357-ce6cad43a1df"]}, .span = ["testNode-22"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-226"}, .name = "testNP-226", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3cf363d5-9f6d-5fbe-bce8-ead2115f300b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dfeba82d-1edf-50bf-8ab9-0f84b7d679b4"]}, .span = ["testNode-22"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-227"}, .name = "testNP-227", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5b27e3c4-7fb5-5646-9309-e6b53a932e56"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3cf363d5-9f6d-5fbe-bce8-ead2115f300b"]}, .span = ["testNode-22"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-228"}, .name = "testNP-228", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3b3928b2-19ee-5d88-8ffb-4da451fabbc2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5b27e3c4-7fb5-5646-9309-e6b53a932e56"]}, .span = ["testNode-22"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-229"}, .name = "testNP-229", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["db570279-dd87-5b76-8602-bd407ca2586d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3b3928b2-19ee-5d88-8ffb-4da451fabbc2"]}, .span = ["testNode-22"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-230"}, .name = "testNP-230", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f4c6592f-9d24-5299-a825-1b870d36158f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["db570279-dd87-5b76-8602-bd407ca2586d"]}, .span = ["testNode-23"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-231"}, .name = "testNP-231", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c307d582-5f15-57ff-9bc8-84b78be06d82"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f4c6592f-9d24-5299-a825-1b870d36158f"]}, .span = ["testNode-23"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-232"}, .name = "testNP-232", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4a4af55a-eac9-527c-8aee-491684848e3a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c307d582-5f15-57ff-9bc8-84b78be06d82"]}, .span = ["testNode-23"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-233"}, .name = "testNP-233", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["12363c7f-6a05-50df-bc3c-49a85d7c9fed"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4a4af55a-eac9-527c-8aee-491684848e3a"]}, .span = ["testNode-23"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-234"}, .name = "testNP-234", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["96cf2a9c-7745-5799-805c-f5491131be7a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["12363c7f-6a05-50df-bc3c-49a85d7c9fed"]}, .span = ["testNode-23"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-235"}, .name = "testNP-235", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c9e17850-2963-5c1f-aba2-fe7636551e9c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["96cf2a9c-7745-5799-805c-f5491131be7a"]}, .span = ["testNode-23"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-236"}, .name = "testNP-236", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6325a183-1cca-5fa2-93a7-8d93436debc6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c9e17850-2963-5c1f-aba2-fe7636551e9c"]}, .span = ["testNode-23"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-237"}, .name = "testNP-237", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["969d4a4d-0d73-5ff1-ac23-9a3c6060fa32"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6325a183-1cca-5fa2-93a7-8d93436debc6"]}, .span = ["testNode-23"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-238"}, .name = "testNP-238", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7e09417a-9bf1-5ba5-9fa1-211122179e6c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["969d4a4d-0d73-5ff1-ac23-9a3c6060fa32"]}, .span = ["testNode-23"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-239"}, .name = "testNP-239", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f170bb2c-7146-5078-9c22-3bfd840e2691"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7e09417a-9bf1-5ba5-9fa1-211122179e6c"]}, .span = ["testNode-23"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-240"}, .name = "testNP-240", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["03c30831-91b6-580f-a2e1-24562dcc1da1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f170bb2c-7146-5078-9c22-3bfd840e2691"]}, .span = ["testNode-24"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-241"}, .name = "testNP-241", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e403cccb-89fd-5709-a1f4-49bbfcf39a51"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["03c30831-91b6-580f-a2e1-24562dcc1da1"]}, .span = ["testNode-24"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-242"}, .name = "testNP-242", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8f496125-eb17-5c5e-8643-dd1f181798ab"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e403cccb-89fd-5709-a1f4-49bbfcf39a51"]}, .span = ["testNode-24"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-243"}, .name = "testNP-243", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["18ad0ba6-aaa4-574f-a7e5-5380d9decdae"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8f496125-eb17-5c5e-8643-dd1f181798ab"]}, .span = ["testNode-24"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-244"}, .name = "testNP-244", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["af7d4a1c-0403-5ead-b5ab-424c37808ecb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["18ad0ba6-aaa4-574f-a7e5-5380d9decdae"]}, .span = ["testNode-24"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-245"}, .name = "testNP-245", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b7bbd971-6410-546b-bdec-d44038b03226"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["af7d4a1c-0403-5ead-b5ab-424c37808ecb"]}, .span = ["testNode-24"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-246"}, .name = "testNP-246", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2f31d01d-e600-5abf-a95d-7f691b736b75"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b7bbd971-6410-546b-bdec-d44038b03226"]}, .span = ["testNode-24"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-247"}, .name = "testNP-247", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f1abb1fc-ef88-52a9-806e-ca9360600fe8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2f31d01d-e600-5abf-a95d-7f691b736b75"]}, .span = ["testNode-24"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-248"}, .name = "testNP-248", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["69361e9c-1095-5e70-bed3-1e101dd52e49"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f1abb1fc-ef88-52a9-806e-ca9360600fe8"]}, .span = ["testNode-24"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-249"}, .name = "testNP-249", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3743225e-5982-515c-8798-cd2d602abc0e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["69361e9c-1095-5e70-bed3-1e101dd52e49"]}, .span = ["testNode-24"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-250"}, .name = "testNP-250", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["44710353-c3a3-594d-91e3-188bce89c2e8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3743225e-5982-515c-8798-cd2d602abc0e"]}, .span = ["testNode-25"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-251"}, .name = "testNP-251", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["76c862b9-bfd6-5bf9-9b43-cb1fbcbca5a6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["44710353-c3a3-594d-91e3-188bce89c2e8"]}, .span = ["testNode-25"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-252"}, .name = "testNP-252", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1046e105-938c-51f2-b9a2-7cb6d3d6f3a7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["76c862b9-bfd6-5bf9-9b43-cb1fbcbca5a6"]}, .span = ["testNode-25"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-253"}, .name = "testNP-253", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["75258fb6-3b10-56b5-bb55-e60abd84638b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1046e105-938c-51f2-b9a2-7cb6d3d6f3a7"]}, .span = ["testNode-25"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-254"}, .name = "testNP-254", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bbd75deb-2c15-5e08-a6f1-37aaa90ceeb3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["75258fb6-3b10-56b5-bb55-e60abd84638b"]}, .span = ["testNode-25"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-255"}, .name = "testNP-255", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["eb41ee19-8b4d-56bc-9bc6-6baa5fdcc2a4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bbd75deb-2c15-5e08-a6f1-37aaa90ceeb3"]}, .span = ["testNode-25"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "09d3e153-0eab-5d9f-b6a1-ded45eafea58"}, .name = "09d3e153-0eab-5d9f-b6a1-ded45eafea58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-280]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-280")], .matchExpressions = []}}}}, .addresses = ["10.10.28.0"], .span = ["testNode-27"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0f87d503-ec80-5aa3-a688-8e1d94b260c1"}, .name = "0f87d503-ec80-5aa3-a688-8e1d94b260c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-285]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-285")], .matchExpressions = []}}}}, .addresses = ["10.10.28.5"], .span = ["testNode-28"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1d000c95-4daa-53e8-8849-adc210cc89ae"}, .name = "1d000c95-4daa-53e8-8849-adc210cc89ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-268]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-268")], .matchExpressions = []}}}}, .addresses = ["10.10.26.8"], .span = ["testNode-26"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "252988af-827c-5c19-874a-2b41c094a567"}, .name = "252988af-827c-5c19-874a-2b41c094a567", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-257]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-257")], .matchExpressions = []}}}}, .addresses = ["10.10.25.7"], .span = ["testNode-25"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "28c1693e-9f7f-598e-b11f-78f7d0b3663e"}, .name = "28c1693e-9f7f-598e-b11f-78f7d0b3663e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-260]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-260")], .matchExpressions = []}}}}, .addresses = ["10.10.26.0"], .span = ["testNode-25"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "34c915dd-cc6d-5a19-97fb-17c1208c2346"}, .name = "34c915dd-cc6d-5a19-97fb-17c1208c2346", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-287]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-287")], .matchExpressions = []}}}}, .addresses = ["10.10.28.7"], .span = ["testNode-28"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4089121a-75ca-5f8e-a05e-a3c9775c538d"}, .name = "4089121a-75ca-5f8e-a05e-a3c9775c538d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-266]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-266")], .matchExpressions = []}}}}, .addresses = ["10.10.26.6"], .span = ["testNode-26"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4f30bdd6-6eb9-576f-820b-06f111a31100"}, .name = "4f30bdd6-6eb9-576f-820b-06f111a31100", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-262]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-262")], .matchExpressions = []}}}}, .addresses = ["10.10.26.2"], .span = ["testNode-26"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5031874f-b679-5ac2-abbf-affbdd110aa5"}, .name = "5031874f-b679-5ac2-abbf-affbdd110aa5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-265]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-265")], .matchExpressions = []}}}}, .addresses = ["10.10.26.5"], .span = ["testNode-26"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5fbd046a-a401-5321-8e1c-d14171e05b51"}, .name = "5fbd046a-a401-5321-8e1c-d14171e05b51", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-263]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-263")], .matchExpressions = []}}}}, .addresses = ["10.10.26.3"], .span = ["testNode-26"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "62b8d8a6-3d39-5505-8060-58ec197192e1"}, .name = "62b8d8a6-3d39-5505-8060-58ec197192e1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-288]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-288")], .matchExpressions = []}}}}, .addresses = ["10.10.28.8"], .span = ["testNode-28"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "66a7e8ad-365f-56cc-a437-39062f7d0c7f"}, .name = "66a7e8ad-365f-56cc-a437-39062f7d0c7f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-272]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-272")], .matchExpressions = []}}}}, .addresses = ["10.10.27.2"], .span = ["testNode-27"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6fd5e87f-9bf5-51c5-9f33-e0465acd4f3a"}, .name = "6fd5e87f-9bf5-51c5-9f33-e0465acd4f3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-270]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-270")], .matchExpressions = []}}}}, .addresses = ["10.10.27.0"], .span = ["testNode-26"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "76daf596-83d2-5607-bcdc-95e838a0a93d"}, .name = "76daf596-83d2-5607-bcdc-95e838a0a93d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-274]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-274")], .matchExpressions = []}}}}, .addresses = ["10.10.27.4"], .span = ["testNode-27"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "89fcbb82-ccbe-5bb4-b942-08bc7ca3e1cf"}, .name = "89fcbb82-ccbe-5bb4-b942-08bc7ca3e1cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-283]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-283")], .matchExpressions = []}}}}, .addresses = ["10.10.28.3"], .span = ["testNode-28"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8afa0b81-c994-5d3c-be76-bfb62cfd2abb"}, .name = "8afa0b81-c994-5d3c-be76-bfb62cfd2abb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-273]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-273")], .matchExpressions = []}}}}, .addresses = ["10.10.27.3"], .span = ["testNode-27"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "910e6b35-104a-5787-b0a5-e0a02a996aa7"}, .name = "910e6b35-104a-5787-b0a5-e0a02a996aa7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-278]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-278")], .matchExpressions = []}}}}, .addresses = ["10.10.27.8"], .span = ["testNode-27"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9e156ff4-26ce-5a44-9eab-44feb066dd0b"}, .name = "9e156ff4-26ce-5a44-9eab-44feb066dd0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-261]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-261")], .matchExpressions = []}}}}, .addresses = ["10.10.26.1"], .span = ["testNode-26"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a1a57ff1-2217-59c3-9b5f-84ae0610926d"}, .name = "a1a57ff1-2217-59c3-9b5f-84ae0610926d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-277]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-277")], .matchExpressions = []}}}}, .addresses = ["10.10.27.7"], .span = ["testNode-27"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a9d1cdf9-051d-5eb8-8a31-55cb54f19b86"}, .name = "a9d1cdf9-051d-5eb8-8a31-55cb54f19b86", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-269]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-269")], .matchExpressions = []}}}}, .addresses = ["10.10.26.9"], .span = ["testNode-26"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ab4db34c-4f8e-5a49-92fd-e280ff8610af"}, .name = "ab4db34c-4f8e-5a49-92fd-e280ff8610af", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-271]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-271")], .matchExpressions = []}}}}, .addresses = ["10.10.27.1"], .span = ["testNode-27"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "aede1b9f-e8ff-5860-9bd4-fe58d7778187"}, .name = "aede1b9f-e8ff-5860-9bd4-fe58d7778187", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-286]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-286")], .matchExpressions = []}}}}, .addresses = ["10.10.28.6"], .span = ["testNode-28"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b3950538-7b64-5a87-bb38-37e2fcd4577e"}, .name = "b3950538-7b64-5a87-bb38-37e2fcd4577e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-258]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-258")], .matchExpressions = []}}}}, .addresses = ["10.10.25.8"], .span = ["testNode-25"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b6499d7c-5393-5f94-b3e2-5b90801a284a"}, .name = "b6499d7c-5393-5f94-b3e2-5b90801a284a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-279]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-279")], .matchExpressions = []}}}}, .addresses = ["10.10.27.9"], .span = ["testNode-27"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cadbea6e-d3b9-5caf-a5e2-20d0dc81079f"}, .name = "cadbea6e-d3b9-5caf-a5e2-20d0dc81079f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-282]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-282")], .matchExpressions = []}}}}, .addresses = ["10.10.28.2"], .span = ["testNode-28"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cafe0372-7b41-5768-93b7-a40709563c33"}, .name = "cafe0372-7b41-5768-93b7-a40709563c33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-284]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-284")], .matchExpressions = []}}}}, .addresses = ["10.10.28.4"], .span = ["testNode-28"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d0b62e6a-3ca5-5779-b226-f501695f7c66"}, .name = "d0b62e6a-3ca5-5779-b226-f501695f7c66", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-281]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-281")], .matchExpressions = []}}}}, .addresses = ["10.10.28.1"], .span = ["testNode-28"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e66ee496-dc95-5ad9-b85a-3b1ed35a5cfb"}, .name = "e66ee496-dc95-5ad9-b85a-3b1ed35a5cfb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-267]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-267")], .matchExpressions = []}}}}, .addresses = ["10.10.26.7"], .span = ["testNode-26"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ed4ee79b-f5da-5c29-9934-d38e15f2f157"}, .name = "ed4ee79b-f5da-5c29-9934-d38e15f2f157", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-264]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-264")], .matchExpressions = []}}}}, .addresses = ["10.10.26.4"], .span = ["testNode-26"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f1c59909-0f1a-5693-b2ba-a4b4ef40df30"}, .name = "f1c59909-0f1a-5693-b2ba-a4b4ef40df30", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-276]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-276")], .matchExpressions = []}}}}, .addresses = ["10.10.27.6"], .span = ["testNode-27"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f1e7cddd-c6e8-5717-8129-e2f531b580cb"}, .name = "f1e7cddd-c6e8-5717-8129-e2f531b580cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-275]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-275")], .matchExpressions = []}}}}, .addresses = ["10.10.27.5"], .span = ["testNode-27"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fbd0c9ef-bc08-536a-91f3-d7c220ecb186"}, .name = "fbd0c9ef-bc08-536a-91f3-d7c220ecb186", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-259]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-259")], .matchExpressions = []}}}}, .addresses = ["10.10.25.9"], .span = ["testNode-25"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "09d3e153-0eab-5d9f-b6a1-ded45eafea58"}, .name = "09d3e153-0eab-5d9f-b6a1-ded45eafea58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-280]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-280")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-280", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0f87d503-ec80-5aa3-a688-8e1d94b260c1"}, .name = "0f87d503-ec80-5aa3-a688-8e1d94b260c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-285]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-285")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-285", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1d000c95-4daa-53e8-8849-adc210cc89ae"}, .name = "1d000c95-4daa-53e8-8849-adc210cc89ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-268]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-268")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-268", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "252988af-827c-5c19-874a-2b41c094a567"}, .name = "252988af-827c-5c19-874a-2b41c094a567", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-257]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-257")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-257", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "28c1693e-9f7f-598e-b11f-78f7d0b3663e"}, .name = "28c1693e-9f7f-598e-b11f-78f7d0b3663e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-260]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-260")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-260", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "34c915dd-cc6d-5a19-97fb-17c1208c2346"}, .name = "34c915dd-cc6d-5a19-97fb-17c1208c2346", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-287]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-287")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-287", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4089121a-75ca-5f8e-a05e-a3c9775c538d"}, .name = "4089121a-75ca-5f8e-a05e-a3c9775c538d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-266]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-266")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-266", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4f30bdd6-6eb9-576f-820b-06f111a31100"}, .name = "4f30bdd6-6eb9-576f-820b-06f111a31100", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-262]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-262")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-262", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5031874f-b679-5ac2-abbf-affbdd110aa5"}, .name = "5031874f-b679-5ac2-abbf-affbdd110aa5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-265]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-265")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-265", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5fbd046a-a401-5321-8e1c-d14171e05b51"}, .name = "5fbd046a-a401-5321-8e1c-d14171e05b51", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-263]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-263")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-263", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "66a7e8ad-365f-56cc-a437-39062f7d0c7f"}, .name = "66a7e8ad-365f-56cc-a437-39062f7d0c7f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-272]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-272")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-272", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6fd5e87f-9bf5-51c5-9f33-e0465acd4f3a"}, .name = "6fd5e87f-9bf5-51c5-9f33-e0465acd4f3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-270]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-270")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-270", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "76daf596-83d2-5607-bcdc-95e838a0a93d"}, .name = "76daf596-83d2-5607-bcdc-95e838a0a93d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-274]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-274")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-274", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "89fcbb82-ccbe-5bb4-b942-08bc7ca3e1cf"}, .name = "89fcbb82-ccbe-5bb4-b942-08bc7ca3e1cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-283]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-283")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-283", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8afa0b81-c994-5d3c-be76-bfb62cfd2abb"}, .name = "8afa0b81-c994-5d3c-be76-bfb62cfd2abb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-273]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-273")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-273", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "910e6b35-104a-5787-b0a5-e0a02a996aa7"}, .name = "910e6b35-104a-5787-b0a5-e0a02a996aa7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-278]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-278")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-278", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9e156ff4-26ce-5a44-9eab-44feb066dd0b"}, .name = "9e156ff4-26ce-5a44-9eab-44feb066dd0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-261]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-261")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-261", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a1a57ff1-2217-59c3-9b5f-84ae0610926d"}, .name = "a1a57ff1-2217-59c3-9b5f-84ae0610926d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-277]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-277")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-277", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a9d1cdf9-051d-5eb8-8a31-55cb54f19b86"}, .name = "a9d1cdf9-051d-5eb8-8a31-55cb54f19b86", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-269]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-269")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-269", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ab4db34c-4f8e-5a49-92fd-e280ff8610af"}, .name = "ab4db34c-4f8e-5a49-92fd-e280ff8610af", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-271]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-271")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-271", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "aede1b9f-e8ff-5860-9bd4-fe58d7778187"}, .name = "aede1b9f-e8ff-5860-9bd4-fe58d7778187", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-286]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-286")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-286", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b3950538-7b64-5a87-bb38-37e2fcd4577e"}, .name = "b3950538-7b64-5a87-bb38-37e2fcd4577e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-258]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-258")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-258", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b6499d7c-5393-5f94-b3e2-5b90801a284a"}, .name = "b6499d7c-5393-5f94-b3e2-5b90801a284a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-279]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-279")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-279", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cadbea6e-d3b9-5caf-a5e2-20d0dc81079f"}, .name = "cadbea6e-d3b9-5caf-a5e2-20d0dc81079f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-282]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-282")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-282", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cafe0372-7b41-5768-93b7-a40709563c33"}, .name = "cafe0372-7b41-5768-93b7-a40709563c33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-284]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-284")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-284", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d0b62e6a-3ca5-5779-b226-f501695f7c66"}, .name = "d0b62e6a-3ca5-5779-b226-f501695f7c66", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-281]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-281")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-281", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e66ee496-dc95-5ad9-b85a-3b1ed35a5cfb"}, .name = "e66ee496-dc95-5ad9-b85a-3b1ed35a5cfb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-267]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-267")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-267", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "eb41ee19-8b4d-56bc-9bc6-6baa5fdcc2a4"}, .name = "eb41ee19-8b4d-56bc-9bc6-6baa5fdcc2a4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-256]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-256")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-256", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ed4ee79b-f5da-5c29-9934-d38e15f2f157"}, .name = "ed4ee79b-f5da-5c29-9934-d38e15f2f157", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-264]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-264")], .matchExpressions = []}}}}, .podsByNode = [("testNode-26", [k8spolicy.PodReference{.name = "testPod-264", .namespace = "testNamespace"}])], .span = ["testNode-26"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f1c59909-0f1a-5693-b2ba-a4b4ef40df30"}, .name = "f1c59909-0f1a-5693-b2ba-a4b4ef40df30", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-276]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-276")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-276", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f1e7cddd-c6e8-5717-8129-e2f531b580cb"}, .name = "f1e7cddd-c6e8-5717-8129-e2f531b580cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-275]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-275")], .matchExpressions = []}}}}, .podsByNode = [("testNode-27", [k8spolicy.PodReference{.name = "testPod-275", .namespace = "testNamespace"}])], .span = ["testNode-27"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fbd0c9ef-bc08-536a-91f3-d7c220ecb186"}, .name = "fbd0c9ef-bc08-536a-91f3-d7c220ecb186", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-259]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-259")], .matchExpressions = []}}}}, .podsByNode = [("testNode-25", [k8spolicy.PodReference{.name = "testPod-259", .namespace = "testNamespace"}])], .span = ["testNode-25"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-256"}, .name = "testNP-256", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["252988af-827c-5c19-874a-2b41c094a567"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["eb41ee19-8b4d-56bc-9bc6-6baa5fdcc2a4"]}, .span = ["testNode-25"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-257"}, .name = "testNP-257", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b3950538-7b64-5a87-bb38-37e2fcd4577e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["252988af-827c-5c19-874a-2b41c094a567"]}, .span = ["testNode-25"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-258"}, .name = "testNP-258", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fbd0c9ef-bc08-536a-91f3-d7c220ecb186"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b3950538-7b64-5a87-bb38-37e2fcd4577e"]}, .span = ["testNode-25"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-259"}, .name = "testNP-259", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["28c1693e-9f7f-598e-b11f-78f7d0b3663e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fbd0c9ef-bc08-536a-91f3-d7c220ecb186"]}, .span = ["testNode-25"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-260"}, .name = "testNP-260", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9e156ff4-26ce-5a44-9eab-44feb066dd0b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["28c1693e-9f7f-598e-b11f-78f7d0b3663e"]}, .span = ["testNode-26"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-261"}, .name = "testNP-261", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4f30bdd6-6eb9-576f-820b-06f111a31100"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9e156ff4-26ce-5a44-9eab-44feb066dd0b"]}, .span = ["testNode-26"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-262"}, .name = "testNP-262", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5fbd046a-a401-5321-8e1c-d14171e05b51"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4f30bdd6-6eb9-576f-820b-06f111a31100"]}, .span = ["testNode-26"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-263"}, .name = "testNP-263", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ed4ee79b-f5da-5c29-9934-d38e15f2f157"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5fbd046a-a401-5321-8e1c-d14171e05b51"]}, .span = ["testNode-26"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-264"}, .name = "testNP-264", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5031874f-b679-5ac2-abbf-affbdd110aa5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ed4ee79b-f5da-5c29-9934-d38e15f2f157"]}, .span = ["testNode-26"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-265"}, .name = "testNP-265", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4089121a-75ca-5f8e-a05e-a3c9775c538d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5031874f-b679-5ac2-abbf-affbdd110aa5"]}, .span = ["testNode-26"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-266"}, .name = "testNP-266", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e66ee496-dc95-5ad9-b85a-3b1ed35a5cfb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4089121a-75ca-5f8e-a05e-a3c9775c538d"]}, .span = ["testNode-26"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-267"}, .name = "testNP-267", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1d000c95-4daa-53e8-8849-adc210cc89ae"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e66ee496-dc95-5ad9-b85a-3b1ed35a5cfb"]}, .span = ["testNode-26"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-268"}, .name = "testNP-268", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a9d1cdf9-051d-5eb8-8a31-55cb54f19b86"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1d000c95-4daa-53e8-8849-adc210cc89ae"]}, .span = ["testNode-26"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-269"}, .name = "testNP-269", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6fd5e87f-9bf5-51c5-9f33-e0465acd4f3a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a9d1cdf9-051d-5eb8-8a31-55cb54f19b86"]}, .span = ["testNode-26"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-270"}, .name = "testNP-270", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ab4db34c-4f8e-5a49-92fd-e280ff8610af"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6fd5e87f-9bf5-51c5-9f33-e0465acd4f3a"]}, .span = ["testNode-27"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-271"}, .name = "testNP-271", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["66a7e8ad-365f-56cc-a437-39062f7d0c7f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ab4db34c-4f8e-5a49-92fd-e280ff8610af"]}, .span = ["testNode-27"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-272"}, .name = "testNP-272", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8afa0b81-c994-5d3c-be76-bfb62cfd2abb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["66a7e8ad-365f-56cc-a437-39062f7d0c7f"]}, .span = ["testNode-27"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-273"}, .name = "testNP-273", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["76daf596-83d2-5607-bcdc-95e838a0a93d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8afa0b81-c994-5d3c-be76-bfb62cfd2abb"]}, .span = ["testNode-27"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-274"}, .name = "testNP-274", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f1e7cddd-c6e8-5717-8129-e2f531b580cb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["76daf596-83d2-5607-bcdc-95e838a0a93d"]}, .span = ["testNode-27"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-275"}, .name = "testNP-275", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f1c59909-0f1a-5693-b2ba-a4b4ef40df30"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f1e7cddd-c6e8-5717-8129-e2f531b580cb"]}, .span = ["testNode-27"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-276"}, .name = "testNP-276", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a1a57ff1-2217-59c3-9b5f-84ae0610926d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f1c59909-0f1a-5693-b2ba-a4b4ef40df30"]}, .span = ["testNode-27"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-277"}, .name = "testNP-277", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["910e6b35-104a-5787-b0a5-e0a02a996aa7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a1a57ff1-2217-59c3-9b5f-84ae0610926d"]}, .span = ["testNode-27"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-278"}, .name = "testNP-278", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b6499d7c-5393-5f94-b3e2-5b90801a284a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["910e6b35-104a-5787-b0a5-e0a02a996aa7"]}, .span = ["testNode-27"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-279"}, .name = "testNP-279", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["09d3e153-0eab-5d9f-b6a1-ded45eafea58"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b6499d7c-5393-5f94-b3e2-5b90801a284a"]}, .span = ["testNode-27"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-280"}, .name = "testNP-280", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d0b62e6a-3ca5-5779-b226-f501695f7c66"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["09d3e153-0eab-5d9f-b6a1-ded45eafea58"]}, .span = ["testNode-28"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-281"}, .name = "testNP-281", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cadbea6e-d3b9-5caf-a5e2-20d0dc81079f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d0b62e6a-3ca5-5779-b226-f501695f7c66"]}, .span = ["testNode-28"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-282"}, .name = "testNP-282", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["89fcbb82-ccbe-5bb4-b942-08bc7ca3e1cf"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cadbea6e-d3b9-5caf-a5e2-20d0dc81079f"]}, .span = ["testNode-28"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-283"}, .name = "testNP-283", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cafe0372-7b41-5768-93b7-a40709563c33"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["89fcbb82-ccbe-5bb4-b942-08bc7ca3e1cf"]}, .span = ["testNode-28"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-284"}, .name = "testNP-284", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0f87d503-ec80-5aa3-a688-8e1d94b260c1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cafe0372-7b41-5768-93b7-a40709563c33"]}, .span = ["testNode-28"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-285"}, .name = "testNP-285", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["aede1b9f-e8ff-5860-9bd4-fe58d7778187"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0f87d503-ec80-5aa3-a688-8e1d94b260c1"]}, .span = ["testNode-28"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-286"}, .name = "testNP-286", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["34c915dd-cc6d-5a19-97fb-17c1208c2346"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["aede1b9f-e8ff-5860-9bd4-fe58d7778187"]}, .span = ["testNode-28"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-287"}, .name = "testNP-287", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["62b8d8a6-3d39-5505-8060-58ec197192e1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["34c915dd-cc6d-5a19-97fb-17c1208c2346"]}, .span = ["testNode-28"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "04827c12-8834-5b78-aaf4-13a23b580cfa"}, .name = "04827c12-8834-5b78-aaf4-13a23b580cfa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-307]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-307")], .matchExpressions = []}}}}, .addresses = ["10.10.30.7"], .span = ["testNode-30"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "13647042-d81e-5bc0-a488-6e89ffbdded0"}, .name = "13647042-d81e-5bc0-a488-6e89ffbdded0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-308]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-308")], .matchExpressions = []}}}}, .addresses = ["10.10.30.8"], .span = ["testNode-30"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "14b6433f-13ec-52f2-84ad-e1ac2264a8ea"}, .name = "14b6433f-13ec-52f2-84ad-e1ac2264a8ea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-317]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-317")], .matchExpressions = []}}}}, .addresses = ["10.10.31.7"], .span = ["testNode-31"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "15b81544-1fa6-52c1-8122-bf92b33b7487"}, .name = "15b81544-1fa6-52c1-8122-bf92b33b7487", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-320]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-320")], .matchExpressions = []}}}}, .addresses = ["10.10.32.0"], .span = ["testNode-31"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1ae7ad27-c08a-5897-8f8e-53b3f0bc298f"}, .name = "1ae7ad27-c08a-5897-8f8e-53b3f0bc298f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-311]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-311")], .matchExpressions = []}}}}, .addresses = ["10.10.31.1"], .span = ["testNode-31"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1be9909a-f805-5a65-a182-12dfdd134ba7"}, .name = "1be9909a-f805-5a65-a182-12dfdd134ba7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-318]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-318")], .matchExpressions = []}}}}, .addresses = ["10.10.31.8"], .span = ["testNode-31"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1f07c1d4-1329-5b42-b57e-4d849cbe1d1d"}, .name = "1f07c1d4-1329-5b42-b57e-4d849cbe1d1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-303]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-303")], .matchExpressions = []}}}}, .addresses = ["10.10.30.3"], .span = ["testNode-30"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2923a2b9-94c5-58d4-9d3c-3cf29feb2a59"}, .name = "2923a2b9-94c5-58d4-9d3c-3cf29feb2a59", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-300]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-300")], .matchExpressions = []}}}}, .addresses = ["10.10.30.0"], .span = ["testNode-29"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2a1b0785-8c58-523d-9f54-767680124ed9"}, .name = "2a1b0785-8c58-523d-9f54-767680124ed9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-290]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-290")], .matchExpressions = []}}}}, .addresses = ["10.10.29.0"], .span = ["testNode-28"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4f866be1-7dc0-5f46-a7d1-08e0e2752603"}, .name = "4f866be1-7dc0-5f46-a7d1-08e0e2752603", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-309]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-309")], .matchExpressions = []}}}}, .addresses = ["10.10.30.9"], .span = ["testNode-30"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "54360a2c-7954-5bdf-8772-3a22e051a979"}, .name = "54360a2c-7954-5bdf-8772-3a22e051a979", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-302]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-302")], .matchExpressions = []}}}}, .addresses = ["10.10.30.2"], .span = ["testNode-30"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "56ccd122-bd82-5f69-9650-8ba3897dc10d"}, .name = "56ccd122-bd82-5f69-9650-8ba3897dc10d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-315]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-315")], .matchExpressions = []}}}}, .addresses = ["10.10.31.5"], .span = ["testNode-31"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5c3b3b30-b3a1-5a0c-b052-ca65f877c73e"}, .name = "5c3b3b30-b3a1-5a0c-b052-ca65f877c73e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-314]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-314")], .matchExpressions = []}}}}, .addresses = ["10.10.31.4"], .span = ["testNode-31"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "61c1c6bc-dd19-5e48-b06e-aecc4efc77a7"}, .name = "61c1c6bc-dd19-5e48-b06e-aecc4efc77a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-291]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-291")], .matchExpressions = []}}}}, .addresses = ["10.10.29.1"], .span = ["testNode-29"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "633f85d6-137e-59cd-8d38-78ae94c35df8"}, .name = "633f85d6-137e-59cd-8d38-78ae94c35df8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-304]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-304")], .matchExpressions = []}}}}, .addresses = ["10.10.30.4"], .span = ["testNode-30"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "749f1310-23ed-5f5c-94e8-1bdc3af407cb"}, .name = "749f1310-23ed-5f5c-94e8-1bdc3af407cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-296]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-296")], .matchExpressions = []}}}}, .addresses = ["10.10.29.6"], .span = ["testNode-29"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7eb32b19-8544-5c7c-93e4-2b34b4eef721"}, .name = "7eb32b19-8544-5c7c-93e4-2b34b4eef721", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-316]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-316")], .matchExpressions = []}}}}, .addresses = ["10.10.31.6"], .span = ["testNode-31"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "84139e66-ca7e-595e-9b8d-56a4ffc9bb48"}, .name = "84139e66-ca7e-595e-9b8d-56a4ffc9bb48", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-319]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-319")], .matchExpressions = []}}}}, .addresses = ["10.10.31.9"], .span = ["testNode-31"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a5768ada-4cb4-5d11-b90d-72963504a188"}, .name = "a5768ada-4cb4-5d11-b90d-72963504a188", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-312]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-312")], .matchExpressions = []}}}}, .addresses = ["10.10.31.2"], .span = ["testNode-31"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b3c83e85-baf8-5ec6-922e-528d510c6b40"}, .name = "b3c83e85-baf8-5ec6-922e-528d510c6b40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-293]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-293")], .matchExpressions = []}}}}, .addresses = ["10.10.29.3"], .span = ["testNode-29"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ba4e676a-d4cb-5006-bf88-ded93f6d4e56"}, .name = "ba4e676a-d4cb-5006-bf88-ded93f6d4e56", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-313]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-313")], .matchExpressions = []}}}}, .addresses = ["10.10.31.3"], .span = ["testNode-31"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c1f45caf-1be9-56e8-88f8-42b3b2a12275"}, .name = "c1f45caf-1be9-56e8-88f8-42b3b2a12275", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-306]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-306")], .matchExpressions = []}}}}, .addresses = ["10.10.30.6"], .span = ["testNode-30"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c5e4ca67-72f4-5e68-b605-8f9396c4298f"}, .name = "c5e4ca67-72f4-5e68-b605-8f9396c4298f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-299]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-299")], .matchExpressions = []}}}}, .addresses = ["10.10.29.9"], .span = ["testNode-29"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c82e0678-bfff-57a3-88a2-b806f1e5aae0"}, .name = "c82e0678-bfff-57a3-88a2-b806f1e5aae0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-305]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-305")], .matchExpressions = []}}}}, .addresses = ["10.10.30.5"], .span = ["testNode-30"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cf495622-9442-57ec-a381-7588122951ed"}, .name = "cf495622-9442-57ec-a381-7588122951ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-297]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-297")], .matchExpressions = []}}}}, .addresses = ["10.10.29.7"], .span = ["testNode-29"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d3266260-b666-54f8-8144-4db8db24578f"}, .name = "d3266260-b666-54f8-8144-4db8db24578f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-292]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-292")], .matchExpressions = []}}}}, .addresses = ["10.10.29.2"], .span = ["testNode-29"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "db636b9e-6fe7-5d33-a6f8-3cccfcbea99a"}, .name = "db636b9e-6fe7-5d33-a6f8-3cccfcbea99a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-294]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-294")], .matchExpressions = []}}}}, .addresses = ["10.10.29.4"], .span = ["testNode-29"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e64245f9-b730-56a4-b311-a818f36640fe"}, .name = "e64245f9-b730-56a4-b311-a818f36640fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-298]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-298")], .matchExpressions = []}}}}, .addresses = ["10.10.29.8"], .span = ["testNode-29"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ec2708d6-c4c9-5490-a15c-686ece151d7f"}, .name = "ec2708d6-c4c9-5490-a15c-686ece151d7f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-289]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-289")], .matchExpressions = []}}}}, .addresses = ["10.10.28.9"], .span = ["testNode-28"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f0c5bdca-4d21-545a-88ff-12f1347a4ae6"}, .name = "f0c5bdca-4d21-545a-88ff-12f1347a4ae6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-301]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-301")], .matchExpressions = []}}}}, .addresses = ["10.10.30.1"], .span = ["testNode-30"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f0d7b431-cdc6-5739-ac1b-b3e4ec9bb731"}, .name = "f0d7b431-cdc6-5739-ac1b-b3e4ec9bb731", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-295]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-295")], .matchExpressions = []}}}}, .addresses = ["10.10.29.5"], .span = ["testNode-29"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ffb9a16e-a6c4-54f3-b569-9ed72b59d84d"}, .name = "ffb9a16e-a6c4-54f3-b569-9ed72b59d84d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-310]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-310")], .matchExpressions = []}}}}, .addresses = ["10.10.31.0"], .span = ["testNode-30"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "04827c12-8834-5b78-aaf4-13a23b580cfa"}, .name = "04827c12-8834-5b78-aaf4-13a23b580cfa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-307]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-307")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-307", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "13647042-d81e-5bc0-a488-6e89ffbdded0"}, .name = "13647042-d81e-5bc0-a488-6e89ffbdded0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-308]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-308")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-308", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "14b6433f-13ec-52f2-84ad-e1ac2264a8ea"}, .name = "14b6433f-13ec-52f2-84ad-e1ac2264a8ea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-317]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-317")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-317", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1ae7ad27-c08a-5897-8f8e-53b3f0bc298f"}, .name = "1ae7ad27-c08a-5897-8f8e-53b3f0bc298f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-311]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-311")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-311", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1be9909a-f805-5a65-a182-12dfdd134ba7"}, .name = "1be9909a-f805-5a65-a182-12dfdd134ba7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-318]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-318")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-318", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1f07c1d4-1329-5b42-b57e-4d849cbe1d1d"}, .name = "1f07c1d4-1329-5b42-b57e-4d849cbe1d1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-303]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-303")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-303", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2923a2b9-94c5-58d4-9d3c-3cf29feb2a59"}, .name = "2923a2b9-94c5-58d4-9d3c-3cf29feb2a59", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-300]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-300")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-300", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2a1b0785-8c58-523d-9f54-767680124ed9"}, .name = "2a1b0785-8c58-523d-9f54-767680124ed9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-290]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-290")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-290", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4f866be1-7dc0-5f46-a7d1-08e0e2752603"}, .name = "4f866be1-7dc0-5f46-a7d1-08e0e2752603", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-309]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-309")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-309", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "54360a2c-7954-5bdf-8772-3a22e051a979"}, .name = "54360a2c-7954-5bdf-8772-3a22e051a979", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-302]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-302")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-302", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "56ccd122-bd82-5f69-9650-8ba3897dc10d"}, .name = "56ccd122-bd82-5f69-9650-8ba3897dc10d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-315]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-315")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-315", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5c3b3b30-b3a1-5a0c-b052-ca65f877c73e"}, .name = "5c3b3b30-b3a1-5a0c-b052-ca65f877c73e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-314]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-314")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-314", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "61c1c6bc-dd19-5e48-b06e-aecc4efc77a7"}, .name = "61c1c6bc-dd19-5e48-b06e-aecc4efc77a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-291]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-291")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-291", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "62b8d8a6-3d39-5505-8060-58ec197192e1"}, .name = "62b8d8a6-3d39-5505-8060-58ec197192e1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-288]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-288")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-288", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "633f85d6-137e-59cd-8d38-78ae94c35df8"}, .name = "633f85d6-137e-59cd-8d38-78ae94c35df8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-304]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-304")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-304", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "749f1310-23ed-5f5c-94e8-1bdc3af407cb"}, .name = "749f1310-23ed-5f5c-94e8-1bdc3af407cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-296]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-296")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-296", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7eb32b19-8544-5c7c-93e4-2b34b4eef721"}, .name = "7eb32b19-8544-5c7c-93e4-2b34b4eef721", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-316]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-316")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-316", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "84139e66-ca7e-595e-9b8d-56a4ffc9bb48"}, .name = "84139e66-ca7e-595e-9b8d-56a4ffc9bb48", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-319]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-319")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-319", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a5768ada-4cb4-5d11-b90d-72963504a188"}, .name = "a5768ada-4cb4-5d11-b90d-72963504a188", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-312]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-312")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-312", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b3c83e85-baf8-5ec6-922e-528d510c6b40"}, .name = "b3c83e85-baf8-5ec6-922e-528d510c6b40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-293]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-293")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-293", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ba4e676a-d4cb-5006-bf88-ded93f6d4e56"}, .name = "ba4e676a-d4cb-5006-bf88-ded93f6d4e56", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-313]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-313")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-313", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c1f45caf-1be9-56e8-88f8-42b3b2a12275"}, .name = "c1f45caf-1be9-56e8-88f8-42b3b2a12275", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-306]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-306")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-306", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c5e4ca67-72f4-5e68-b605-8f9396c4298f"}, .name = "c5e4ca67-72f4-5e68-b605-8f9396c4298f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-299]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-299")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-299", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c82e0678-bfff-57a3-88a2-b806f1e5aae0"}, .name = "c82e0678-bfff-57a3-88a2-b806f1e5aae0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-305]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-305")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-305", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cf495622-9442-57ec-a381-7588122951ed"}, .name = "cf495622-9442-57ec-a381-7588122951ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-297]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-297")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-297", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d3266260-b666-54f8-8144-4db8db24578f"}, .name = "d3266260-b666-54f8-8144-4db8db24578f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-292]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-292")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-292", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "db636b9e-6fe7-5d33-a6f8-3cccfcbea99a"}, .name = "db636b9e-6fe7-5d33-a6f8-3cccfcbea99a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-294]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-294")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-294", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e64245f9-b730-56a4-b311-a818f36640fe"}, .name = "e64245f9-b730-56a4-b311-a818f36640fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-298]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-298")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-298", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ec2708d6-c4c9-5490-a15c-686ece151d7f"}, .name = "ec2708d6-c4c9-5490-a15c-686ece151d7f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-289]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-289")], .matchExpressions = []}}}}, .podsByNode = [("testNode-28", [k8spolicy.PodReference{.name = "testPod-289", .namespace = "testNamespace"}])], .span = ["testNode-28"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f0c5bdca-4d21-545a-88ff-12f1347a4ae6"}, .name = "f0c5bdca-4d21-545a-88ff-12f1347a4ae6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-301]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-301")], .matchExpressions = []}}}}, .podsByNode = [("testNode-30", [k8spolicy.PodReference{.name = "testPod-301", .namespace = "testNamespace"}])], .span = ["testNode-30"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f0d7b431-cdc6-5739-ac1b-b3e4ec9bb731"}, .name = "f0d7b431-cdc6-5739-ac1b-b3e4ec9bb731", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-295]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-295")], .matchExpressions = []}}}}, .podsByNode = [("testNode-29", [k8spolicy.PodReference{.name = "testPod-295", .namespace = "testNamespace"}])], .span = ["testNode-29"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ffb9a16e-a6c4-54f3-b569-9ed72b59d84d"}, .name = "ffb9a16e-a6c4-54f3-b569-9ed72b59d84d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-310]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-310")], .matchExpressions = []}}}}, .podsByNode = [("testNode-31", [k8spolicy.PodReference{.name = "testPod-310", .namespace = "testNamespace"}])], .span = ["testNode-31"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-288"}, .name = "testNP-288", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ec2708d6-c4c9-5490-a15c-686ece151d7f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["62b8d8a6-3d39-5505-8060-58ec197192e1"]}, .span = ["testNode-28"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-289"}, .name = "testNP-289", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2a1b0785-8c58-523d-9f54-767680124ed9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ec2708d6-c4c9-5490-a15c-686ece151d7f"]}, .span = ["testNode-28"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-290"}, .name = "testNP-290", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["61c1c6bc-dd19-5e48-b06e-aecc4efc77a7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2a1b0785-8c58-523d-9f54-767680124ed9"]}, .span = ["testNode-29"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-291"}, .name = "testNP-291", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d3266260-b666-54f8-8144-4db8db24578f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["61c1c6bc-dd19-5e48-b06e-aecc4efc77a7"]}, .span = ["testNode-29"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-292"}, .name = "testNP-292", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b3c83e85-baf8-5ec6-922e-528d510c6b40"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d3266260-b666-54f8-8144-4db8db24578f"]}, .span = ["testNode-29"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-293"}, .name = "testNP-293", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["db636b9e-6fe7-5d33-a6f8-3cccfcbea99a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b3c83e85-baf8-5ec6-922e-528d510c6b40"]}, .span = ["testNode-29"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-294"}, .name = "testNP-294", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f0d7b431-cdc6-5739-ac1b-b3e4ec9bb731"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["db636b9e-6fe7-5d33-a6f8-3cccfcbea99a"]}, .span = ["testNode-29"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-295"}, .name = "testNP-295", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["749f1310-23ed-5f5c-94e8-1bdc3af407cb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f0d7b431-cdc6-5739-ac1b-b3e4ec9bb731"]}, .span = ["testNode-29"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-296"}, .name = "testNP-296", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cf495622-9442-57ec-a381-7588122951ed"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["749f1310-23ed-5f5c-94e8-1bdc3af407cb"]}, .span = ["testNode-29"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-297"}, .name = "testNP-297", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e64245f9-b730-56a4-b311-a818f36640fe"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cf495622-9442-57ec-a381-7588122951ed"]}, .span = ["testNode-29"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-298"}, .name = "testNP-298", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c5e4ca67-72f4-5e68-b605-8f9396c4298f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e64245f9-b730-56a4-b311-a818f36640fe"]}, .span = ["testNode-29"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-299"}, .name = "testNP-299", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2923a2b9-94c5-58d4-9d3c-3cf29feb2a59"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c5e4ca67-72f4-5e68-b605-8f9396c4298f"]}, .span = ["testNode-29"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-300"}, .name = "testNP-300", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f0c5bdca-4d21-545a-88ff-12f1347a4ae6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2923a2b9-94c5-58d4-9d3c-3cf29feb2a59"]}, .span = ["testNode-30"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-301"}, .name = "testNP-301", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["54360a2c-7954-5bdf-8772-3a22e051a979"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f0c5bdca-4d21-545a-88ff-12f1347a4ae6"]}, .span = ["testNode-30"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-302"}, .name = "testNP-302", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1f07c1d4-1329-5b42-b57e-4d849cbe1d1d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["54360a2c-7954-5bdf-8772-3a22e051a979"]}, .span = ["testNode-30"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-303"}, .name = "testNP-303", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["633f85d6-137e-59cd-8d38-78ae94c35df8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1f07c1d4-1329-5b42-b57e-4d849cbe1d1d"]}, .span = ["testNode-30"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-304"}, .name = "testNP-304", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c82e0678-bfff-57a3-88a2-b806f1e5aae0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["633f85d6-137e-59cd-8d38-78ae94c35df8"]}, .span = ["testNode-30"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-305"}, .name = "testNP-305", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c1f45caf-1be9-56e8-88f8-42b3b2a12275"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c82e0678-bfff-57a3-88a2-b806f1e5aae0"]}, .span = ["testNode-30"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-306"}, .name = "testNP-306", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["04827c12-8834-5b78-aaf4-13a23b580cfa"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c1f45caf-1be9-56e8-88f8-42b3b2a12275"]}, .span = ["testNode-30"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-307"}, .name = "testNP-307", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["13647042-d81e-5bc0-a488-6e89ffbdded0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["04827c12-8834-5b78-aaf4-13a23b580cfa"]}, .span = ["testNode-30"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-308"}, .name = "testNP-308", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4f866be1-7dc0-5f46-a7d1-08e0e2752603"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["13647042-d81e-5bc0-a488-6e89ffbdded0"]}, .span = ["testNode-30"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-309"}, .name = "testNP-309", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ffb9a16e-a6c4-54f3-b569-9ed72b59d84d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4f866be1-7dc0-5f46-a7d1-08e0e2752603"]}, .span = ["testNode-30"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-310"}, .name = "testNP-310", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1ae7ad27-c08a-5897-8f8e-53b3f0bc298f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ffb9a16e-a6c4-54f3-b569-9ed72b59d84d"]}, .span = ["testNode-31"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-311"}, .name = "testNP-311", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a5768ada-4cb4-5d11-b90d-72963504a188"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1ae7ad27-c08a-5897-8f8e-53b3f0bc298f"]}, .span = ["testNode-31"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-312"}, .name = "testNP-312", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ba4e676a-d4cb-5006-bf88-ded93f6d4e56"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a5768ada-4cb4-5d11-b90d-72963504a188"]}, .span = ["testNode-31"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-313"}, .name = "testNP-313", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5c3b3b30-b3a1-5a0c-b052-ca65f877c73e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ba4e676a-d4cb-5006-bf88-ded93f6d4e56"]}, .span = ["testNode-31"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-314"}, .name = "testNP-314", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["56ccd122-bd82-5f69-9650-8ba3897dc10d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5c3b3b30-b3a1-5a0c-b052-ca65f877c73e"]}, .span = ["testNode-31"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-315"}, .name = "testNP-315", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7eb32b19-8544-5c7c-93e4-2b34b4eef721"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["56ccd122-bd82-5f69-9650-8ba3897dc10d"]}, .span = ["testNode-31"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-316"}, .name = "testNP-316", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["14b6433f-13ec-52f2-84ad-e1ac2264a8ea"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7eb32b19-8544-5c7c-93e4-2b34b4eef721"]}, .span = ["testNode-31"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-317"}, .name = "testNP-317", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1be9909a-f805-5a65-a182-12dfdd134ba7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["14b6433f-13ec-52f2-84ad-e1ac2264a8ea"]}, .span = ["testNode-31"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-318"}, .name = "testNP-318", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["84139e66-ca7e-595e-9b8d-56a4ffc9bb48"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1be9909a-f805-5a65-a182-12dfdd134ba7"]}, .span = ["testNode-31"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-319"}, .name = "testNP-319", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["15b81544-1fa6-52c1-8122-bf92b33b7487"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["84139e66-ca7e-595e-9b8d-56a4ffc9bb48"]}, .span = ["testNode-31"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0622ca77-ea88-56f5-9b85-5d3e1949cb14"}, .name = "0622ca77-ea88-56f5-9b85-5d3e1949cb14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-341]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-341")], .matchExpressions = []}}}}, .addresses = ["10.10.34.1"], .span = ["testNode-34"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "11855802-3ee1-5dfa-826b-b32f0fa49a49"}, .name = "11855802-3ee1-5dfa-826b-b32f0fa49a49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-345]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-345")], .matchExpressions = []}}}}, .addresses = ["10.10.34.5"], .span = ["testNode-34"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "14d11b3f-177b-5b7f-a489-faf82db28522"}, .name = "14d11b3f-177b-5b7f-a489-faf82db28522", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-336]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-336")], .matchExpressions = []}}}}, .addresses = ["10.10.33.6"], .span = ["testNode-33"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "168aa805-2746-5c72-934e-eb04f710c762"}, .name = "168aa805-2746-5c72-934e-eb04f710c762", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-331]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-331")], .matchExpressions = []}}}}, .addresses = ["10.10.33.1"], .span = ["testNode-33"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2037a85c-4419-539f-9062-53066da2367e"}, .name = "2037a85c-4419-539f-9062-53066da2367e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-350]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-350")], .matchExpressions = []}}}}, .addresses = ["10.10.35.0"], .span = ["testNode-34"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "291575ba-268e-5347-88c2-4efe6d8793ab"}, .name = "291575ba-268e-5347-88c2-4efe6d8793ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-337]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-337")], .matchExpressions = []}}}}, .addresses = ["10.10.33.7"], .span = ["testNode-33"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "367f024c-9e28-51b1-9440-f3610253ec50"}, .name = "367f024c-9e28-51b1-9440-f3610253ec50", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-346]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-346")], .matchExpressions = []}}}}, .addresses = ["10.10.34.6"], .span = ["testNode-34"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "40f01ec2-a95e-5c7e-85cb-8c9543bcd35c"}, .name = "40f01ec2-a95e-5c7e-85cb-8c9543bcd35c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-327]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-327")], .matchExpressions = []}}}}, .addresses = ["10.10.32.7"], .span = ["testNode-32"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4da84640-576a-5937-b204-f52f78ea3736"}, .name = "4da84640-576a-5937-b204-f52f78ea3736", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-343]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-343")], .matchExpressions = []}}}}, .addresses = ["10.10.34.3"], .span = ["testNode-34"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4e93bc66-c667-59b8-83c7-4c2f0db92b11"}, .name = "4e93bc66-c667-59b8-83c7-4c2f0db92b11", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-348]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-348")], .matchExpressions = []}}}}, .addresses = ["10.10.34.8"], .span = ["testNode-34"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "524bd920-497c-5a79-9482-4730b381fad4"}, .name = "524bd920-497c-5a79-9482-4730b381fad4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-339]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-339")], .matchExpressions = []}}}}, .addresses = ["10.10.33.9"], .span = ["testNode-33"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "535ae5cb-5535-5a53-a721-3fb07b71ac40"}, .name = "535ae5cb-5535-5a53-a721-3fb07b71ac40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-340]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-340")], .matchExpressions = []}}}}, .addresses = ["10.10.34.0"], .span = ["testNode-33"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "541ef843-2371-5bba-8ee4-f7763d970fa6"}, .name = "541ef843-2371-5bba-8ee4-f7763d970fa6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-322]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-322")], .matchExpressions = []}}}}, .addresses = ["10.10.32.2"], .span = ["testNode-32"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5d58fc5f-fa22-552b-8d5c-fca0c86f3bbe"}, .name = "5d58fc5f-fa22-552b-8d5c-fca0c86f3bbe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-323]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-323")], .matchExpressions = []}}}}, .addresses = ["10.10.32.3"], .span = ["testNode-32"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5ebdad12-c5fb-57e6-bc25-0c590fac8e4c"}, .name = "5ebdad12-c5fb-57e6-bc25-0c590fac8e4c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-338]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-338")], .matchExpressions = []}}}}, .addresses = ["10.10.33.8"], .span = ["testNode-33"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "649e663c-7902-5f6a-b621-2a2627cb4973"}, .name = "649e663c-7902-5f6a-b621-2a2627cb4973", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-344]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-344")], .matchExpressions = []}}}}, .addresses = ["10.10.34.4"], .span = ["testNode-34"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6524cb14-d79b-5c8d-9d5d-9c9b5051f2ef"}, .name = "6524cb14-d79b-5c8d-9d5d-9c9b5051f2ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-328]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-328")], .matchExpressions = []}}}}, .addresses = ["10.10.32.8"], .span = ["testNode-32"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "667d61a0-d979-5f78-85a3-469b35bc9f21"}, .name = "667d61a0-d979-5f78-85a3-469b35bc9f21", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-347]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-347")], .matchExpressions = []}}}}, .addresses = ["10.10.34.7"], .span = ["testNode-34"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6ae95ac3-9478-5ddb-b790-65b9bb698a98"}, .name = "6ae95ac3-9478-5ddb-b790-65b9bb698a98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-351]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-351")], .matchExpressions = []}}}}, .addresses = ["10.10.35.1"], .span = ["testNode-35"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6ed3632f-896b-5527-ba9f-a78568e64764"}, .name = "6ed3632f-896b-5527-ba9f-a78568e64764", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-326]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-326")], .matchExpressions = []}}}}, .addresses = ["10.10.32.6"], .span = ["testNode-32"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "70679cbc-7724-55bf-972e-7cc0262e4948"}, .name = "70679cbc-7724-55bf-972e-7cc0262e4948", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-330]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-330")], .matchExpressions = []}}}}, .addresses = ["10.10.33.0"], .span = ["testNode-32"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "80c8573b-7c4c-51dd-b183-2619e511d6c0"}, .name = "80c8573b-7c4c-51dd-b183-2619e511d6c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-342]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-342")], .matchExpressions = []}}}}, .addresses = ["10.10.34.2"], .span = ["testNode-34"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "834ae5e9-8c30-5d93-a80f-5024f4caec94"}, .name = "834ae5e9-8c30-5d93-a80f-5024f4caec94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-349]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-349")], .matchExpressions = []}}}}, .addresses = ["10.10.34.9"], .span = ["testNode-34"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "95a4b722-ad92-5054-8f8a-a1e6dee7a45a"}, .name = "95a4b722-ad92-5054-8f8a-a1e6dee7a45a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-321]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-321")], .matchExpressions = []}}}}, .addresses = ["10.10.32.1"], .span = ["testNode-32"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a75351a4-1505-59ff-b02a-61bc98a1731d"}, .name = "a75351a4-1505-59ff-b02a-61bc98a1731d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-334]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-334")], .matchExpressions = []}}}}, .addresses = ["10.10.33.4"], .span = ["testNode-33"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a8a24c12-4a7b-5c3d-b44a-3bf6f18e75ee"}, .name = "a8a24c12-4a7b-5c3d-b44a-3bf6f18e75ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-324]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-324")], .matchExpressions = []}}}}, .addresses = ["10.10.32.4"], .span = ["testNode-32"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cebbfc08-f37e-5e72-bbed-09c8bf14093f"}, .name = "cebbfc08-f37e-5e72-bbed-09c8bf14093f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-325]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-325")], .matchExpressions = []}}}}, .addresses = ["10.10.32.5"], .span = ["testNode-32"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cf194dd7-bac5-5b8f-8f0a-53b725e63452"}, .name = "cf194dd7-bac5-5b8f-8f0a-53b725e63452", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-329]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-329")], .matchExpressions = []}}}}, .addresses = ["10.10.32.9"], .span = ["testNode-32"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ddc3ff50-3578-5622-b267-07f75659916d"}, .name = "ddc3ff50-3578-5622-b267-07f75659916d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-352]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-352")], .matchExpressions = []}}}}, .addresses = ["10.10.35.2"], .span = ["testNode-35"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "eedc0444-1ce9-5021-9f14-95dce9a5c697"}, .name = "eedc0444-1ce9-5021-9f14-95dce9a5c697", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-333]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-333")], .matchExpressions = []}}}}, .addresses = ["10.10.33.3"], .span = ["testNode-33"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fa105b92-431e-5fed-ac1a-4021e55d7364"}, .name = "fa105b92-431e-5fed-ac1a-4021e55d7364", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-335]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-335")], .matchExpressions = []}}}}, .addresses = ["10.10.33.5"], .span = ["testNode-33"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fef47bfc-bc28-5f02-9354-7ce265e5a12e"}, .name = "fef47bfc-bc28-5f02-9354-7ce265e5a12e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-332]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-332")], .matchExpressions = []}}}}, .addresses = ["10.10.33.2"], .span = ["testNode-33"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0622ca77-ea88-56f5-9b85-5d3e1949cb14"}, .name = "0622ca77-ea88-56f5-9b85-5d3e1949cb14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-341]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-341")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-341", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "11855802-3ee1-5dfa-826b-b32f0fa49a49"}, .name = "11855802-3ee1-5dfa-826b-b32f0fa49a49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-345]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-345")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-345", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "14d11b3f-177b-5b7f-a489-faf82db28522"}, .name = "14d11b3f-177b-5b7f-a489-faf82db28522", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-336]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-336")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-336", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "15b81544-1fa6-52c1-8122-bf92b33b7487"}, .name = "15b81544-1fa6-52c1-8122-bf92b33b7487", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-320]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-320")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-320", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "168aa805-2746-5c72-934e-eb04f710c762"}, .name = "168aa805-2746-5c72-934e-eb04f710c762", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-331]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-331")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-331", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2037a85c-4419-539f-9062-53066da2367e"}, .name = "2037a85c-4419-539f-9062-53066da2367e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-350]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-350")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-350", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "291575ba-268e-5347-88c2-4efe6d8793ab"}, .name = "291575ba-268e-5347-88c2-4efe6d8793ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-337]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-337")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-337", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "367f024c-9e28-51b1-9440-f3610253ec50"}, .name = "367f024c-9e28-51b1-9440-f3610253ec50", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-346]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-346")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-346", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "40f01ec2-a95e-5c7e-85cb-8c9543bcd35c"}, .name = "40f01ec2-a95e-5c7e-85cb-8c9543bcd35c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-327]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-327")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-327", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4da84640-576a-5937-b204-f52f78ea3736"}, .name = "4da84640-576a-5937-b204-f52f78ea3736", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-343]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-343")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-343", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4e93bc66-c667-59b8-83c7-4c2f0db92b11"}, .name = "4e93bc66-c667-59b8-83c7-4c2f0db92b11", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-348]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-348")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-348", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "524bd920-497c-5a79-9482-4730b381fad4"}, .name = "524bd920-497c-5a79-9482-4730b381fad4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-339]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-339")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-339", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "535ae5cb-5535-5a53-a721-3fb07b71ac40"}, .name = "535ae5cb-5535-5a53-a721-3fb07b71ac40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-340]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-340")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-340", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "541ef843-2371-5bba-8ee4-f7763d970fa6"}, .name = "541ef843-2371-5bba-8ee4-f7763d970fa6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-322]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-322")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-322", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5d58fc5f-fa22-552b-8d5c-fca0c86f3bbe"}, .name = "5d58fc5f-fa22-552b-8d5c-fca0c86f3bbe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-323]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-323")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-323", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5ebdad12-c5fb-57e6-bc25-0c590fac8e4c"}, .name = "5ebdad12-c5fb-57e6-bc25-0c590fac8e4c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-338]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-338")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-338", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "649e663c-7902-5f6a-b621-2a2627cb4973"}, .name = "649e663c-7902-5f6a-b621-2a2627cb4973", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-344]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-344")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-344", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6524cb14-d79b-5c8d-9d5d-9c9b5051f2ef"}, .name = "6524cb14-d79b-5c8d-9d5d-9c9b5051f2ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-328]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-328")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-328", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "667d61a0-d979-5f78-85a3-469b35bc9f21"}, .name = "667d61a0-d979-5f78-85a3-469b35bc9f21", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-347]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-347")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-347", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6ae95ac3-9478-5ddb-b790-65b9bb698a98"}, .name = "6ae95ac3-9478-5ddb-b790-65b9bb698a98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-351]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-351")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-351", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6ed3632f-896b-5527-ba9f-a78568e64764"}, .name = "6ed3632f-896b-5527-ba9f-a78568e64764", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-326]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-326")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-326", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "70679cbc-7724-55bf-972e-7cc0262e4948"}, .name = "70679cbc-7724-55bf-972e-7cc0262e4948", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-330]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-330")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-330", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "80c8573b-7c4c-51dd-b183-2619e511d6c0"}, .name = "80c8573b-7c4c-51dd-b183-2619e511d6c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-342]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-342")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-342", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "834ae5e9-8c30-5d93-a80f-5024f4caec94"}, .name = "834ae5e9-8c30-5d93-a80f-5024f4caec94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-349]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-349")], .matchExpressions = []}}}}, .podsByNode = [("testNode-34", [k8spolicy.PodReference{.name = "testPod-349", .namespace = "testNamespace"}])], .span = ["testNode-34"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "95a4b722-ad92-5054-8f8a-a1e6dee7a45a"}, .name = "95a4b722-ad92-5054-8f8a-a1e6dee7a45a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-321]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-321")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-321", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a75351a4-1505-59ff-b02a-61bc98a1731d"}, .name = "a75351a4-1505-59ff-b02a-61bc98a1731d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-334]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-334")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-334", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a8a24c12-4a7b-5c3d-b44a-3bf6f18e75ee"}, .name = "a8a24c12-4a7b-5c3d-b44a-3bf6f18e75ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-324]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-324")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-324", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cebbfc08-f37e-5e72-bbed-09c8bf14093f"}, .name = "cebbfc08-f37e-5e72-bbed-09c8bf14093f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-325]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-325")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-325", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cf194dd7-bac5-5b8f-8f0a-53b725e63452"}, .name = "cf194dd7-bac5-5b8f-8f0a-53b725e63452", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-329]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-329")], .matchExpressions = []}}}}, .podsByNode = [("testNode-32", [k8spolicy.PodReference{.name = "testPod-329", .namespace = "testNamespace"}])], .span = ["testNode-32"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "eedc0444-1ce9-5021-9f14-95dce9a5c697"}, .name = "eedc0444-1ce9-5021-9f14-95dce9a5c697", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-333]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-333")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-333", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fa105b92-431e-5fed-ac1a-4021e55d7364"}, .name = "fa105b92-431e-5fed-ac1a-4021e55d7364", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-335]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-335")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-335", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fef47bfc-bc28-5f02-9354-7ce265e5a12e"}, .name = "fef47bfc-bc28-5f02-9354-7ce265e5a12e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-332]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-332")], .matchExpressions = []}}}}, .podsByNode = [("testNode-33", [k8spolicy.PodReference{.name = "testPod-332", .namespace = "testNamespace"}])], .span = ["testNode-33"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-320"}, .name = "testNP-320", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["95a4b722-ad92-5054-8f8a-a1e6dee7a45a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["15b81544-1fa6-52c1-8122-bf92b33b7487"]}, .span = ["testNode-32"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-321"}, .name = "testNP-321", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["541ef843-2371-5bba-8ee4-f7763d970fa6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["95a4b722-ad92-5054-8f8a-a1e6dee7a45a"]}, .span = ["testNode-32"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-322"}, .name = "testNP-322", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5d58fc5f-fa22-552b-8d5c-fca0c86f3bbe"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["541ef843-2371-5bba-8ee4-f7763d970fa6"]}, .span = ["testNode-32"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-323"}, .name = "testNP-323", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a8a24c12-4a7b-5c3d-b44a-3bf6f18e75ee"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5d58fc5f-fa22-552b-8d5c-fca0c86f3bbe"]}, .span = ["testNode-32"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-324"}, .name = "testNP-324", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cebbfc08-f37e-5e72-bbed-09c8bf14093f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a8a24c12-4a7b-5c3d-b44a-3bf6f18e75ee"]}, .span = ["testNode-32"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-325"}, .name = "testNP-325", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6ed3632f-896b-5527-ba9f-a78568e64764"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cebbfc08-f37e-5e72-bbed-09c8bf14093f"]}, .span = ["testNode-32"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-326"}, .name = "testNP-326", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["40f01ec2-a95e-5c7e-85cb-8c9543bcd35c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6ed3632f-896b-5527-ba9f-a78568e64764"]}, .span = ["testNode-32"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-327"}, .name = "testNP-327", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6524cb14-d79b-5c8d-9d5d-9c9b5051f2ef"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["40f01ec2-a95e-5c7e-85cb-8c9543bcd35c"]}, .span = ["testNode-32"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-328"}, .name = "testNP-328", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cf194dd7-bac5-5b8f-8f0a-53b725e63452"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6524cb14-d79b-5c8d-9d5d-9c9b5051f2ef"]}, .span = ["testNode-32"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-329"}, .name = "testNP-329", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["70679cbc-7724-55bf-972e-7cc0262e4948"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cf194dd7-bac5-5b8f-8f0a-53b725e63452"]}, .span = ["testNode-32"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-330"}, .name = "testNP-330", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["168aa805-2746-5c72-934e-eb04f710c762"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["70679cbc-7724-55bf-972e-7cc0262e4948"]}, .span = ["testNode-33"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-331"}, .name = "testNP-331", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fef47bfc-bc28-5f02-9354-7ce265e5a12e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["168aa805-2746-5c72-934e-eb04f710c762"]}, .span = ["testNode-33"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-332"}, .name = "testNP-332", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["eedc0444-1ce9-5021-9f14-95dce9a5c697"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fef47bfc-bc28-5f02-9354-7ce265e5a12e"]}, .span = ["testNode-33"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-333"}, .name = "testNP-333", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a75351a4-1505-59ff-b02a-61bc98a1731d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["eedc0444-1ce9-5021-9f14-95dce9a5c697"]}, .span = ["testNode-33"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-334"}, .name = "testNP-334", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fa105b92-431e-5fed-ac1a-4021e55d7364"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a75351a4-1505-59ff-b02a-61bc98a1731d"]}, .span = ["testNode-33"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-335"}, .name = "testNP-335", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["14d11b3f-177b-5b7f-a489-faf82db28522"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fa105b92-431e-5fed-ac1a-4021e55d7364"]}, .span = ["testNode-33"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-336"}, .name = "testNP-336", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["291575ba-268e-5347-88c2-4efe6d8793ab"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["14d11b3f-177b-5b7f-a489-faf82db28522"]}, .span = ["testNode-33"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-337"}, .name = "testNP-337", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5ebdad12-c5fb-57e6-bc25-0c590fac8e4c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["291575ba-268e-5347-88c2-4efe6d8793ab"]}, .span = ["testNode-33"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-338"}, .name = "testNP-338", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["524bd920-497c-5a79-9482-4730b381fad4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5ebdad12-c5fb-57e6-bc25-0c590fac8e4c"]}, .span = ["testNode-33"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-339"}, .name = "testNP-339", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["535ae5cb-5535-5a53-a721-3fb07b71ac40"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["524bd920-497c-5a79-9482-4730b381fad4"]}, .span = ["testNode-33"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-340"}, .name = "testNP-340", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0622ca77-ea88-56f5-9b85-5d3e1949cb14"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["535ae5cb-5535-5a53-a721-3fb07b71ac40"]}, .span = ["testNode-34"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-341"}, .name = "testNP-341", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["80c8573b-7c4c-51dd-b183-2619e511d6c0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0622ca77-ea88-56f5-9b85-5d3e1949cb14"]}, .span = ["testNode-34"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-342"}, .name = "testNP-342", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4da84640-576a-5937-b204-f52f78ea3736"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["80c8573b-7c4c-51dd-b183-2619e511d6c0"]}, .span = ["testNode-34"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-343"}, .name = "testNP-343", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["649e663c-7902-5f6a-b621-2a2627cb4973"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4da84640-576a-5937-b204-f52f78ea3736"]}, .span = ["testNode-34"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-344"}, .name = "testNP-344", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["11855802-3ee1-5dfa-826b-b32f0fa49a49"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["649e663c-7902-5f6a-b621-2a2627cb4973"]}, .span = ["testNode-34"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-345"}, .name = "testNP-345", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["367f024c-9e28-51b1-9440-f3610253ec50"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["11855802-3ee1-5dfa-826b-b32f0fa49a49"]}, .span = ["testNode-34"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-346"}, .name = "testNP-346", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["667d61a0-d979-5f78-85a3-469b35bc9f21"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["367f024c-9e28-51b1-9440-f3610253ec50"]}, .span = ["testNode-34"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-347"}, .name = "testNP-347", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4e93bc66-c667-59b8-83c7-4c2f0db92b11"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["667d61a0-d979-5f78-85a3-469b35bc9f21"]}, .span = ["testNode-34"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-348"}, .name = "testNP-348", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["834ae5e9-8c30-5d93-a80f-5024f4caec94"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4e93bc66-c667-59b8-83c7-4c2f0db92b11"]}, .span = ["testNode-34"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-349"}, .name = "testNP-349", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2037a85c-4419-539f-9062-53066da2367e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["834ae5e9-8c30-5d93-a80f-5024f4caec94"]}, .span = ["testNode-34"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-350"}, .name = "testNP-350", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6ae95ac3-9478-5ddb-b790-65b9bb698a98"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2037a85c-4419-539f-9062-53066da2367e"]}, .span = ["testNode-35"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-351"}, .name = "testNP-351", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ddc3ff50-3578-5622-b267-07f75659916d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6ae95ac3-9478-5ddb-b790-65b9bb698a98"]}, .span = ["testNode-35"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "04ca1faa-65a0-5ba2-b304-d8187b0ec45f"}, .name = "04ca1faa-65a0-5ba2-b304-d8187b0ec45f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-379]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-379")], .matchExpressions = []}}}}, .addresses = ["10.10.37.9"], .span = ["testNode-37"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "135b0d1b-5b5f-5d43-9c35-7664a89200a8"}, .name = "135b0d1b-5b5f-5d43-9c35-7664a89200a8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-382]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-382")], .matchExpressions = []}}}}, .addresses = ["10.10.38.2"], .span = ["testNode-38"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1dc3ab11-44b6-562d-8368-ec8960367505"}, .name = "1dc3ab11-44b6-562d-8368-ec8960367505", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-364]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-364")], .matchExpressions = []}}}}, .addresses = ["10.10.36.4"], .span = ["testNode-36"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "20f4eecf-d187-51b3-b3b5-acfa9207e219"}, .name = "20f4eecf-d187-51b3-b3b5-acfa9207e219", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-372]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-372")], .matchExpressions = []}}}}, .addresses = ["10.10.37.2"], .span = ["testNode-37"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "34d7c4ee-d19c-55b7-a7e8-a201cce65c58"}, .name = "34d7c4ee-d19c-55b7-a7e8-a201cce65c58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-381]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-381")], .matchExpressions = []}}}}, .addresses = ["10.10.38.1"], .span = ["testNode-38"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3d1509d8-a285-5518-be92-86414c6998b7"}, .name = "3d1509d8-a285-5518-be92-86414c6998b7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-376]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-376")], .matchExpressions = []}}}}, .addresses = ["10.10.37.6"], .span = ["testNode-37"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "42ed0545-3f16-5e73-8b34-6ae0b61ab2f8"}, .name = "42ed0545-3f16-5e73-8b34-6ae0b61ab2f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-377]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-377")], .matchExpressions = []}}}}, .addresses = ["10.10.37.7"], .span = ["testNode-37"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4fe2f7e4-1901-5cc4-b05f-0073bec70070"}, .name = "4fe2f7e4-1901-5cc4-b05f-0073bec70070", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-375]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-375")], .matchExpressions = []}}}}, .addresses = ["10.10.37.5"], .span = ["testNode-37"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "52483149-a2c5-5e14-8ce0-87292d78e9f7"}, .name = "52483149-a2c5-5e14-8ce0-87292d78e9f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-353]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-353")], .matchExpressions = []}}}}, .addresses = ["10.10.35.3"], .span = ["testNode-35"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5ff36918-de7e-50f8-b674-89b7896c335f"}, .name = "5ff36918-de7e-50f8-b674-89b7896c335f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-361]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-361")], .matchExpressions = []}}}}, .addresses = ["10.10.36.1"], .span = ["testNode-36"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "71747a3c-0210-5ca6-b9d9-06d219e1015c"}, .name = "71747a3c-0210-5ca6-b9d9-06d219e1015c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-360]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-360")], .matchExpressions = []}}}}, .addresses = ["10.10.36.0"], .span = ["testNode-35"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "740cff36-5dbb-576d-a05e-1a43aa5bf510"}, .name = "740cff36-5dbb-576d-a05e-1a43aa5bf510", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-374]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-374")], .matchExpressions = []}}}}, .addresses = ["10.10.37.4"], .span = ["testNode-37"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "798052dd-47af-5971-9527-c1b7902bd7d4"}, .name = "798052dd-47af-5971-9527-c1b7902bd7d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-358]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-358")], .matchExpressions = []}}}}, .addresses = ["10.10.35.8"], .span = ["testNode-35"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "861b069b-33ab-550d-b698-2d04d0a731c0"}, .name = "861b069b-33ab-550d-b698-2d04d0a731c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-354]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-354")], .matchExpressions = []}}}}, .addresses = ["10.10.35.4"], .span = ["testNode-35"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9613ebd5-a001-5394-99d1-785aa7b15b55"}, .name = "9613ebd5-a001-5394-99d1-785aa7b15b55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-357]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-357")], .matchExpressions = []}}}}, .addresses = ["10.10.35.7"], .span = ["testNode-35"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a33fbe46-e55c-55c1-b5da-11027d592ee0"}, .name = "a33fbe46-e55c-55c1-b5da-11027d592ee0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-366]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-366")], .matchExpressions = []}}}}, .addresses = ["10.10.36.6"], .span = ["testNode-36"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a7b34bc4-b9ce-5d27-a937-262e38daae22"}, .name = "a7b34bc4-b9ce-5d27-a937-262e38daae22", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-355]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-355")], .matchExpressions = []}}}}, .addresses = ["10.10.35.5"], .span = ["testNode-35"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a9bbca51-a207-5d2c-8caf-1ba1264e7231"}, .name = "a9bbca51-a207-5d2c-8caf-1ba1264e7231", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-380]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-380")], .matchExpressions = []}}}}, .addresses = ["10.10.38.0"], .span = ["testNode-37"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b188f5e1-fde5-5a4e-a352-41509f988802"}, .name = "b188f5e1-fde5-5a4e-a352-41509f988802", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-356]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-356")], .matchExpressions = []}}}}, .addresses = ["10.10.35.6"], .span = ["testNode-35"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b5d1094f-2cb6-510d-9805-da70ee098622"}, .name = "b5d1094f-2cb6-510d-9805-da70ee098622", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-363]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-363")], .matchExpressions = []}}}}, .addresses = ["10.10.36.3"], .span = ["testNode-36"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bb63d5fb-9781-514f-ab4f-cff5d4b269fe"}, .name = "bb63d5fb-9781-514f-ab4f-cff5d4b269fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-378]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-378")], .matchExpressions = []}}}}, .addresses = ["10.10.37.8"], .span = ["testNode-37"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d2371954-b622-588e-81e9-5434d4935a1a"}, .name = "d2371954-b622-588e-81e9-5434d4935a1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-383]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-383")], .matchExpressions = []}}}}, .addresses = ["10.10.38.3"], .span = ["testNode-38"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d277a699-72f4-5235-b75b-d30225b5af68"}, .name = "d277a699-72f4-5235-b75b-d30225b5af68", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-368]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-368")], .matchExpressions = []}}}}, .addresses = ["10.10.36.8"], .span = ["testNode-36"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d2f69a2e-1a7f-5e6c-a0f0-86875d71ab16"}, .name = "d2f69a2e-1a7f-5e6c-a0f0-86875d71ab16", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-384]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-384")], .matchExpressions = []}}}}, .addresses = ["10.10.38.4"], .span = ["testNode-38"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d9dfcf74-1179-5764-9b7f-de3f7de2548d"}, .name = "d9dfcf74-1179-5764-9b7f-de3f7de2548d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-362]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-362")], .matchExpressions = []}}}}, .addresses = ["10.10.36.2"], .span = ["testNode-36"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "db82c707-005a-5d3e-9ca4-37b2dc33ca66"}, .name = "db82c707-005a-5d3e-9ca4-37b2dc33ca66", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-369]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-369")], .matchExpressions = []}}}}, .addresses = ["10.10.36.9"], .span = ["testNode-36"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f00fe199-b9f7-513a-ba79-1777f31ebc6f"}, .name = "f00fe199-b9f7-513a-ba79-1777f31ebc6f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-370]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-370")], .matchExpressions = []}}}}, .addresses = ["10.10.37.0"], .span = ["testNode-36"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f3759ccf-89e1-5a87-9b66-2d1e42057971"}, .name = "f3759ccf-89e1-5a87-9b66-2d1e42057971", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-373]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-373")], .matchExpressions = []}}}}, .addresses = ["10.10.37.3"], .span = ["testNode-37"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f3d5fdd6-dd2c-5432-a528-b3a0c78cf6f7"}, .name = "f3d5fdd6-dd2c-5432-a528-b3a0c78cf6f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-359]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-359")], .matchExpressions = []}}}}, .addresses = ["10.10.35.9"], .span = ["testNode-35"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f5d02a30-a188-5059-a878-fd0f73fb4558"}, .name = "f5d02a30-a188-5059-a878-fd0f73fb4558", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-367]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-367")], .matchExpressions = []}}}}, .addresses = ["10.10.36.7"], .span = ["testNode-36"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fb41fb3a-8b6f-5569-971d-88811ca3b8a2"}, .name = "fb41fb3a-8b6f-5569-971d-88811ca3b8a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-365]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-365")], .matchExpressions = []}}}}, .addresses = ["10.10.36.5"], .span = ["testNode-36"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fd0d8c9b-07fe-5743-babc-94fd14fb0217"}, .name = "fd0d8c9b-07fe-5743-babc-94fd14fb0217", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-371]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-371")], .matchExpressions = []}}}}, .addresses = ["10.10.37.1"], .span = ["testNode-37"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "04ca1faa-65a0-5ba2-b304-d8187b0ec45f"}, .name = "04ca1faa-65a0-5ba2-b304-d8187b0ec45f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-379]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-379")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-379", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "135b0d1b-5b5f-5d43-9c35-7664a89200a8"}, .name = "135b0d1b-5b5f-5d43-9c35-7664a89200a8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-382]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-382")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-382", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1dc3ab11-44b6-562d-8368-ec8960367505"}, .name = "1dc3ab11-44b6-562d-8368-ec8960367505", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-364]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-364")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-364", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "20f4eecf-d187-51b3-b3b5-acfa9207e219"}, .name = "20f4eecf-d187-51b3-b3b5-acfa9207e219", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-372]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-372")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-372", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "34d7c4ee-d19c-55b7-a7e8-a201cce65c58"}, .name = "34d7c4ee-d19c-55b7-a7e8-a201cce65c58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-381]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-381")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-381", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3d1509d8-a285-5518-be92-86414c6998b7"}, .name = "3d1509d8-a285-5518-be92-86414c6998b7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-376]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-376")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-376", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "42ed0545-3f16-5e73-8b34-6ae0b61ab2f8"}, .name = "42ed0545-3f16-5e73-8b34-6ae0b61ab2f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-377]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-377")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-377", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4fe2f7e4-1901-5cc4-b05f-0073bec70070"}, .name = "4fe2f7e4-1901-5cc4-b05f-0073bec70070", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-375]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-375")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-375", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "52483149-a2c5-5e14-8ce0-87292d78e9f7"}, .name = "52483149-a2c5-5e14-8ce0-87292d78e9f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-353]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-353")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-353", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5ff36918-de7e-50f8-b674-89b7896c335f"}, .name = "5ff36918-de7e-50f8-b674-89b7896c335f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-361]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-361")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-361", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "71747a3c-0210-5ca6-b9d9-06d219e1015c"}, .name = "71747a3c-0210-5ca6-b9d9-06d219e1015c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-360]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-360")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-360", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "740cff36-5dbb-576d-a05e-1a43aa5bf510"}, .name = "740cff36-5dbb-576d-a05e-1a43aa5bf510", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-374]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-374")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-374", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "798052dd-47af-5971-9527-c1b7902bd7d4"}, .name = "798052dd-47af-5971-9527-c1b7902bd7d4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-358]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-358")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-358", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "861b069b-33ab-550d-b698-2d04d0a731c0"}, .name = "861b069b-33ab-550d-b698-2d04d0a731c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-354]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-354")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-354", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9613ebd5-a001-5394-99d1-785aa7b15b55"}, .name = "9613ebd5-a001-5394-99d1-785aa7b15b55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-357]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-357")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-357", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a33fbe46-e55c-55c1-b5da-11027d592ee0"}, .name = "a33fbe46-e55c-55c1-b5da-11027d592ee0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-366]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-366")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-366", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a7b34bc4-b9ce-5d27-a937-262e38daae22"}, .name = "a7b34bc4-b9ce-5d27-a937-262e38daae22", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-355]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-355")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-355", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a9bbca51-a207-5d2c-8caf-1ba1264e7231"}, .name = "a9bbca51-a207-5d2c-8caf-1ba1264e7231", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-380]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-380")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-380", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b188f5e1-fde5-5a4e-a352-41509f988802"}, .name = "b188f5e1-fde5-5a4e-a352-41509f988802", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-356]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-356")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-356", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b5d1094f-2cb6-510d-9805-da70ee098622"}, .name = "b5d1094f-2cb6-510d-9805-da70ee098622", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-363]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-363")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-363", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bb63d5fb-9781-514f-ab4f-cff5d4b269fe"}, .name = "bb63d5fb-9781-514f-ab4f-cff5d4b269fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-378]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-378")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-378", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d2371954-b622-588e-81e9-5434d4935a1a"}, .name = "d2371954-b622-588e-81e9-5434d4935a1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-383]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-383")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-383", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d277a699-72f4-5235-b75b-d30225b5af68"}, .name = "d277a699-72f4-5235-b75b-d30225b5af68", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-368]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-368")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-368", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d9dfcf74-1179-5764-9b7f-de3f7de2548d"}, .name = "d9dfcf74-1179-5764-9b7f-de3f7de2548d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-362]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-362")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-362", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "db82c707-005a-5d3e-9ca4-37b2dc33ca66"}, .name = "db82c707-005a-5d3e-9ca4-37b2dc33ca66", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-369]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-369")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-369", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ddc3ff50-3578-5622-b267-07f75659916d"}, .name = "ddc3ff50-3578-5622-b267-07f75659916d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-352]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-352")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-352", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f00fe199-b9f7-513a-ba79-1777f31ebc6f"}, .name = "f00fe199-b9f7-513a-ba79-1777f31ebc6f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-370]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-370")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-370", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f3759ccf-89e1-5a87-9b66-2d1e42057971"}, .name = "f3759ccf-89e1-5a87-9b66-2d1e42057971", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-373]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-373")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-373", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f3d5fdd6-dd2c-5432-a528-b3a0c78cf6f7"}, .name = "f3d5fdd6-dd2c-5432-a528-b3a0c78cf6f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-359]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-359")], .matchExpressions = []}}}}, .podsByNode = [("testNode-35", [k8spolicy.PodReference{.name = "testPod-359", .namespace = "testNamespace"}])], .span = ["testNode-35"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f5d02a30-a188-5059-a878-fd0f73fb4558"}, .name = "f5d02a30-a188-5059-a878-fd0f73fb4558", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-367]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-367")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-367", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fb41fb3a-8b6f-5569-971d-88811ca3b8a2"}, .name = "fb41fb3a-8b6f-5569-971d-88811ca3b8a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-365]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-365")], .matchExpressions = []}}}}, .podsByNode = [("testNode-36", [k8spolicy.PodReference{.name = "testPod-365", .namespace = "testNamespace"}])], .span = ["testNode-36"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fd0d8c9b-07fe-5743-babc-94fd14fb0217"}, .name = "fd0d8c9b-07fe-5743-babc-94fd14fb0217", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-371]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-371")], .matchExpressions = []}}}}, .podsByNode = [("testNode-37", [k8spolicy.PodReference{.name = "testPod-371", .namespace = "testNamespace"}])], .span = ["testNode-37"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-352"}, .name = "testNP-352", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["52483149-a2c5-5e14-8ce0-87292d78e9f7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ddc3ff50-3578-5622-b267-07f75659916d"]}, .span = ["testNode-35"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-353"}, .name = "testNP-353", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["861b069b-33ab-550d-b698-2d04d0a731c0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["52483149-a2c5-5e14-8ce0-87292d78e9f7"]}, .span = ["testNode-35"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-354"}, .name = "testNP-354", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a7b34bc4-b9ce-5d27-a937-262e38daae22"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["861b069b-33ab-550d-b698-2d04d0a731c0"]}, .span = ["testNode-35"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-355"}, .name = "testNP-355", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b188f5e1-fde5-5a4e-a352-41509f988802"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a7b34bc4-b9ce-5d27-a937-262e38daae22"]}, .span = ["testNode-35"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-356"}, .name = "testNP-356", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9613ebd5-a001-5394-99d1-785aa7b15b55"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b188f5e1-fde5-5a4e-a352-41509f988802"]}, .span = ["testNode-35"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-357"}, .name = "testNP-357", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["798052dd-47af-5971-9527-c1b7902bd7d4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9613ebd5-a001-5394-99d1-785aa7b15b55"]}, .span = ["testNode-35"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-358"}, .name = "testNP-358", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f3d5fdd6-dd2c-5432-a528-b3a0c78cf6f7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["798052dd-47af-5971-9527-c1b7902bd7d4"]}, .span = ["testNode-35"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-359"}, .name = "testNP-359", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["71747a3c-0210-5ca6-b9d9-06d219e1015c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f3d5fdd6-dd2c-5432-a528-b3a0c78cf6f7"]}, .span = ["testNode-35"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-360"}, .name = "testNP-360", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5ff36918-de7e-50f8-b674-89b7896c335f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["71747a3c-0210-5ca6-b9d9-06d219e1015c"]}, .span = ["testNode-36"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-361"}, .name = "testNP-361", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d9dfcf74-1179-5764-9b7f-de3f7de2548d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5ff36918-de7e-50f8-b674-89b7896c335f"]}, .span = ["testNode-36"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-362"}, .name = "testNP-362", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b5d1094f-2cb6-510d-9805-da70ee098622"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d9dfcf74-1179-5764-9b7f-de3f7de2548d"]}, .span = ["testNode-36"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-363"}, .name = "testNP-363", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1dc3ab11-44b6-562d-8368-ec8960367505"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b5d1094f-2cb6-510d-9805-da70ee098622"]}, .span = ["testNode-36"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-364"}, .name = "testNP-364", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fb41fb3a-8b6f-5569-971d-88811ca3b8a2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1dc3ab11-44b6-562d-8368-ec8960367505"]}, .span = ["testNode-36"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-365"}, .name = "testNP-365", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a33fbe46-e55c-55c1-b5da-11027d592ee0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fb41fb3a-8b6f-5569-971d-88811ca3b8a2"]}, .span = ["testNode-36"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-366"}, .name = "testNP-366", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f5d02a30-a188-5059-a878-fd0f73fb4558"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a33fbe46-e55c-55c1-b5da-11027d592ee0"]}, .span = ["testNode-36"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-367"}, .name = "testNP-367", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d277a699-72f4-5235-b75b-d30225b5af68"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f5d02a30-a188-5059-a878-fd0f73fb4558"]}, .span = ["testNode-36"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-368"}, .name = "testNP-368", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["db82c707-005a-5d3e-9ca4-37b2dc33ca66"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d277a699-72f4-5235-b75b-d30225b5af68"]}, .span = ["testNode-36"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-369"}, .name = "testNP-369", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f00fe199-b9f7-513a-ba79-1777f31ebc6f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["db82c707-005a-5d3e-9ca4-37b2dc33ca66"]}, .span = ["testNode-36"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-370"}, .name = "testNP-370", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fd0d8c9b-07fe-5743-babc-94fd14fb0217"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f00fe199-b9f7-513a-ba79-1777f31ebc6f"]}, .span = ["testNode-37"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-371"}, .name = "testNP-371", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["20f4eecf-d187-51b3-b3b5-acfa9207e219"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fd0d8c9b-07fe-5743-babc-94fd14fb0217"]}, .span = ["testNode-37"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-372"}, .name = "testNP-372", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f3759ccf-89e1-5a87-9b66-2d1e42057971"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["20f4eecf-d187-51b3-b3b5-acfa9207e219"]}, .span = ["testNode-37"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-373"}, .name = "testNP-373", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["740cff36-5dbb-576d-a05e-1a43aa5bf510"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f3759ccf-89e1-5a87-9b66-2d1e42057971"]}, .span = ["testNode-37"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-374"}, .name = "testNP-374", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4fe2f7e4-1901-5cc4-b05f-0073bec70070"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["740cff36-5dbb-576d-a05e-1a43aa5bf510"]}, .span = ["testNode-37"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-375"}, .name = "testNP-375", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3d1509d8-a285-5518-be92-86414c6998b7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4fe2f7e4-1901-5cc4-b05f-0073bec70070"]}, .span = ["testNode-37"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-376"}, .name = "testNP-376", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["42ed0545-3f16-5e73-8b34-6ae0b61ab2f8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3d1509d8-a285-5518-be92-86414c6998b7"]}, .span = ["testNode-37"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-377"}, .name = "testNP-377", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bb63d5fb-9781-514f-ab4f-cff5d4b269fe"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["42ed0545-3f16-5e73-8b34-6ae0b61ab2f8"]}, .span = ["testNode-37"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-378"}, .name = "testNP-378", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["04ca1faa-65a0-5ba2-b304-d8187b0ec45f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bb63d5fb-9781-514f-ab4f-cff5d4b269fe"]}, .span = ["testNode-37"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-379"}, .name = "testNP-379", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a9bbca51-a207-5d2c-8caf-1ba1264e7231"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["04ca1faa-65a0-5ba2-b304-d8187b0ec45f"]}, .span = ["testNode-37"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-380"}, .name = "testNP-380", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["34d7c4ee-d19c-55b7-a7e8-a201cce65c58"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a9bbca51-a207-5d2c-8caf-1ba1264e7231"]}, .span = ["testNode-38"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-381"}, .name = "testNP-381", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["135b0d1b-5b5f-5d43-9c35-7664a89200a8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["34d7c4ee-d19c-55b7-a7e8-a201cce65c58"]}, .span = ["testNode-38"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-382"}, .name = "testNP-382", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d2371954-b622-588e-81e9-5434d4935a1a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["135b0d1b-5b5f-5d43-9c35-7664a89200a8"]}, .span = ["testNode-38"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-383"}, .name = "testNP-383", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d2f69a2e-1a7f-5e6c-a0f0-86875d71ab16"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d2371954-b622-588e-81e9-5434d4935a1a"]}, .span = ["testNode-38"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "13128de5-d4fd-50ef-a6fa-e02470f75bdd"}, .name = "13128de5-d4fd-50ef-a6fa-e02470f75bdd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-410]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-410")], .matchExpressions = []}}}}, .addresses = ["10.10.41.0"], .span = ["testNode-40"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1a7755d5-7e34-5ff0-a562-8906a55d9a69"}, .name = "1a7755d5-7e34-5ff0-a562-8906a55d9a69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-415]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-415")], .matchExpressions = []}}}}, .addresses = ["10.10.41.5"], .span = ["testNode-41"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "47614eb2-bc50-546e-8fa5-9c92ad3d0080"}, .name = "47614eb2-bc50-546e-8fa5-9c92ad3d0080", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-413]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-413")], .matchExpressions = []}}}}, .addresses = ["10.10.41.3"], .span = ["testNode-41"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4890bcb7-78c1-5b3c-96fb-47f0be2dcbc2"}, .name = "4890bcb7-78c1-5b3c-96fb-47f0be2dcbc2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-399]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-399")], .matchExpressions = []}}}}, .addresses = ["10.10.39.9"], .span = ["testNode-39"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4d17717e-f78b-57c9-b591-db530602f7ed"}, .name = "4d17717e-f78b-57c9-b591-db530602f7ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-386]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-386")], .matchExpressions = []}}}}, .addresses = ["10.10.38.6"], .span = ["testNode-38"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "55203360-b26b-52d5-a9ab-627fd76129a0"}, .name = "55203360-b26b-52d5-a9ab-627fd76129a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-398]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-398")], .matchExpressions = []}}}}, .addresses = ["10.10.39.8"], .span = ["testNode-39"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5609f60a-fa26-59a3-8e17-03ce36bc329e"}, .name = "5609f60a-fa26-59a3-8e17-03ce36bc329e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-408]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-408")], .matchExpressions = []}}}}, .addresses = ["10.10.40.8"], .span = ["testNode-40"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "59e40b97-a875-5501-8367-2dc471a75d54"}, .name = "59e40b97-a875-5501-8367-2dc471a75d54", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-416]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-416")], .matchExpressions = []}}}}, .addresses = ["10.10.41.6"], .span = ["testNode-41"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "66221c2b-b200-541f-aa2b-c0908d5c2f69"}, .name = "66221c2b-b200-541f-aa2b-c0908d5c2f69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-407]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-407")], .matchExpressions = []}}}}, .addresses = ["10.10.40.7"], .span = ["testNode-40"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7173f1b8-4f9d-5a94-bc8b-d772a28d488e"}, .name = "7173f1b8-4f9d-5a94-bc8b-d772a28d488e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-392]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-392")], .matchExpressions = []}}}}, .addresses = ["10.10.39.2"], .span = ["testNode-39"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "777ca61b-322d-5bba-a70b-b7e1623f3af8"}, .name = "777ca61b-322d-5bba-a70b-b7e1623f3af8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-385]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-385")], .matchExpressions = []}}}}, .addresses = ["10.10.38.5"], .span = ["testNode-38"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7909e946-8a01-5551-a3d0-54852e359918"}, .name = "7909e946-8a01-5551-a3d0-54852e359918", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-389]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-389")], .matchExpressions = []}}}}, .addresses = ["10.10.38.9"], .span = ["testNode-38"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7db41759-a1f5-5138-9e53-f36553ac9a94"}, .name = "7db41759-a1f5-5138-9e53-f36553ac9a94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-388]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-388")], .matchExpressions = []}}}}, .addresses = ["10.10.38.8"], .span = ["testNode-38"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7e2849cb-ee50-53eb-b072-4e0f8330ae0d"}, .name = "7e2849cb-ee50-53eb-b072-4e0f8330ae0d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-406]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-406")], .matchExpressions = []}}}}, .addresses = ["10.10.40.6"], .span = ["testNode-40"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8d1b26c5-6d78-5c28-a228-d46a11bf5ab4"}, .name = "8d1b26c5-6d78-5c28-a228-d46a11bf5ab4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-409]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-409")], .matchExpressions = []}}}}, .addresses = ["10.10.40.9"], .span = ["testNode-40"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8d3e9ee6-9489-5667-bb55-4c45886f5760"}, .name = "8d3e9ee6-9489-5667-bb55-4c45886f5760", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-393]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-393")], .matchExpressions = []}}}}, .addresses = ["10.10.39.3"], .span = ["testNode-39"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "93fddede-665f-54fa-b60f-1b2172a46ee6"}, .name = "93fddede-665f-54fa-b60f-1b2172a46ee6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-401]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-401")], .matchExpressions = []}}}}, .addresses = ["10.10.40.1"], .span = ["testNode-40"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "969bbeb2-7831-5c43-87b1-2434370d9431"}, .name = "969bbeb2-7831-5c43-87b1-2434370d9431", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-414]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-414")], .matchExpressions = []}}}}, .addresses = ["10.10.41.4"], .span = ["testNode-41"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9c906fbd-123d-501a-80d1-7bfd6a0f13ef"}, .name = "9c906fbd-123d-501a-80d1-7bfd6a0f13ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-400]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-400")], .matchExpressions = []}}}}, .addresses = ["10.10.40.0"], .span = ["testNode-39"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a46499d7-8e51-52f2-8e00-7670cfe88b35"}, .name = "a46499d7-8e51-52f2-8e00-7670cfe88b35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-395]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-395")], .matchExpressions = []}}}}, .addresses = ["10.10.39.5"], .span = ["testNode-39"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a8c0f886-7ea0-510f-9c2b-f5140e1ab374"}, .name = "a8c0f886-7ea0-510f-9c2b-f5140e1ab374", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-403]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-403")], .matchExpressions = []}}}}, .addresses = ["10.10.40.3"], .span = ["testNode-40"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c4701c1d-34bb-5757-bf28-dc70456f291a"}, .name = "c4701c1d-34bb-5757-bf28-dc70456f291a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-387]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-387")], .matchExpressions = []}}}}, .addresses = ["10.10.38.7"], .span = ["testNode-38"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c4d77be9-7f17-5a12-ac01-ed5650600fc6"}, .name = "c4d77be9-7f17-5a12-ac01-ed5650600fc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-405]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-405")], .matchExpressions = []}}}}, .addresses = ["10.10.40.5"], .span = ["testNode-40"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cf5e71e1-5bbf-5fb5-8363-120ee0eb7cfb"}, .name = "cf5e71e1-5bbf-5fb5-8363-120ee0eb7cfb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-390]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-390")], .matchExpressions = []}}}}, .addresses = ["10.10.39.0"], .span = ["testNode-38"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d0b20cf7-ab9e-5aac-a853-9153f16165fa"}, .name = "d0b20cf7-ab9e-5aac-a853-9153f16165fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-402]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-402")], .matchExpressions = []}}}}, .addresses = ["10.10.40.2"], .span = ["testNode-40"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d7a17941-c2ea-575a-8d95-0a951dfb4ae4"}, .name = "d7a17941-c2ea-575a-8d95-0a951dfb4ae4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-394]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-394")], .matchExpressions = []}}}}, .addresses = ["10.10.39.4"], .span = ["testNode-39"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "daf26d8b-7aa9-5e29-9827-f97fd4af01b1"}, .name = "daf26d8b-7aa9-5e29-9827-f97fd4af01b1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-412]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-412")], .matchExpressions = []}}}}, .addresses = ["10.10.41.2"], .span = ["testNode-41"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dbe3ea42-3c0d-5b74-91c2-14501cdea12b"}, .name = "dbe3ea42-3c0d-5b74-91c2-14501cdea12b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-391]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-391")], .matchExpressions = []}}}}, .addresses = ["10.10.39.1"], .span = ["testNode-39"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e868c34f-55bb-5f69-9952-a0c438f47316"}, .name = "e868c34f-55bb-5f69-9952-a0c438f47316", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-404]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-404")], .matchExpressions = []}}}}, .addresses = ["10.10.40.4"], .span = ["testNode-40"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ef5b7bce-c886-57d5-aaee-fff719dcb562"}, .name = "ef5b7bce-c886-57d5-aaee-fff719dcb562", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-411]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-411")], .matchExpressions = []}}}}, .addresses = ["10.10.41.1"], .span = ["testNode-41"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "efc46206-46a5-5a11-895f-6d443d347d24"}, .name = "efc46206-46a5-5a11-895f-6d443d347d24", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-397]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-397")], .matchExpressions = []}}}}, .addresses = ["10.10.39.7"], .span = ["testNode-39"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f97f5251-3bc6-5335-b68e-ba0aaf265ce2"}, .name = "f97f5251-3bc6-5335-b68e-ba0aaf265ce2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-396]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-396")], .matchExpressions = []}}}}, .addresses = ["10.10.39.6"], .span = ["testNode-39"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "13128de5-d4fd-50ef-a6fa-e02470f75bdd"}, .name = "13128de5-d4fd-50ef-a6fa-e02470f75bdd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-410]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-410")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-410", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1a7755d5-7e34-5ff0-a562-8906a55d9a69"}, .name = "1a7755d5-7e34-5ff0-a562-8906a55d9a69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-415]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-415")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-415", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "47614eb2-bc50-546e-8fa5-9c92ad3d0080"}, .name = "47614eb2-bc50-546e-8fa5-9c92ad3d0080", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-413]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-413")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-413", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4890bcb7-78c1-5b3c-96fb-47f0be2dcbc2"}, .name = "4890bcb7-78c1-5b3c-96fb-47f0be2dcbc2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-399]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-399")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-399", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4d17717e-f78b-57c9-b591-db530602f7ed"}, .name = "4d17717e-f78b-57c9-b591-db530602f7ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-386]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-386")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-386", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "55203360-b26b-52d5-a9ab-627fd76129a0"}, .name = "55203360-b26b-52d5-a9ab-627fd76129a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-398]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-398")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-398", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5609f60a-fa26-59a3-8e17-03ce36bc329e"}, .name = "5609f60a-fa26-59a3-8e17-03ce36bc329e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-408]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-408")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-408", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "66221c2b-b200-541f-aa2b-c0908d5c2f69"}, .name = "66221c2b-b200-541f-aa2b-c0908d5c2f69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-407]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-407")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-407", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7173f1b8-4f9d-5a94-bc8b-d772a28d488e"}, .name = "7173f1b8-4f9d-5a94-bc8b-d772a28d488e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-392]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-392")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-392", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "777ca61b-322d-5bba-a70b-b7e1623f3af8"}, .name = "777ca61b-322d-5bba-a70b-b7e1623f3af8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-385]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-385")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-385", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7909e946-8a01-5551-a3d0-54852e359918"}, .name = "7909e946-8a01-5551-a3d0-54852e359918", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-389]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-389")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-389", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7db41759-a1f5-5138-9e53-f36553ac9a94"}, .name = "7db41759-a1f5-5138-9e53-f36553ac9a94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-388]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-388")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-388", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7e2849cb-ee50-53eb-b072-4e0f8330ae0d"}, .name = "7e2849cb-ee50-53eb-b072-4e0f8330ae0d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-406]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-406")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-406", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8d1b26c5-6d78-5c28-a228-d46a11bf5ab4"}, .name = "8d1b26c5-6d78-5c28-a228-d46a11bf5ab4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-409]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-409")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-409", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8d3e9ee6-9489-5667-bb55-4c45886f5760"}, .name = "8d3e9ee6-9489-5667-bb55-4c45886f5760", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-393]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-393")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-393", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "93fddede-665f-54fa-b60f-1b2172a46ee6"}, .name = "93fddede-665f-54fa-b60f-1b2172a46ee6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-401]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-401")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-401", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "969bbeb2-7831-5c43-87b1-2434370d9431"}, .name = "969bbeb2-7831-5c43-87b1-2434370d9431", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-414]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-414")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-414", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9c906fbd-123d-501a-80d1-7bfd6a0f13ef"}, .name = "9c906fbd-123d-501a-80d1-7bfd6a0f13ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-400]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-400")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-400", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a46499d7-8e51-52f2-8e00-7670cfe88b35"}, .name = "a46499d7-8e51-52f2-8e00-7670cfe88b35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-395]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-395")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-395", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a8c0f886-7ea0-510f-9c2b-f5140e1ab374"}, .name = "a8c0f886-7ea0-510f-9c2b-f5140e1ab374", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-403]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-403")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-403", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c4701c1d-34bb-5757-bf28-dc70456f291a"}, .name = "c4701c1d-34bb-5757-bf28-dc70456f291a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-387]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-387")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-387", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c4d77be9-7f17-5a12-ac01-ed5650600fc6"}, .name = "c4d77be9-7f17-5a12-ac01-ed5650600fc6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-405]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-405")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-405", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cf5e71e1-5bbf-5fb5-8363-120ee0eb7cfb"}, .name = "cf5e71e1-5bbf-5fb5-8363-120ee0eb7cfb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-390]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-390")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-390", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d0b20cf7-ab9e-5aac-a853-9153f16165fa"}, .name = "d0b20cf7-ab9e-5aac-a853-9153f16165fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-402]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-402")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-402", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d2f69a2e-1a7f-5e6c-a0f0-86875d71ab16"}, .name = "d2f69a2e-1a7f-5e6c-a0f0-86875d71ab16", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-384]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-384")], .matchExpressions = []}}}}, .podsByNode = [("testNode-38", [k8spolicy.PodReference{.name = "testPod-384", .namespace = "testNamespace"}])], .span = ["testNode-38"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d7a17941-c2ea-575a-8d95-0a951dfb4ae4"}, .name = "d7a17941-c2ea-575a-8d95-0a951dfb4ae4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-394]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-394")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-394", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "daf26d8b-7aa9-5e29-9827-f97fd4af01b1"}, .name = "daf26d8b-7aa9-5e29-9827-f97fd4af01b1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-412]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-412")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-412", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dbe3ea42-3c0d-5b74-91c2-14501cdea12b"}, .name = "dbe3ea42-3c0d-5b74-91c2-14501cdea12b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-391]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-391")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-391", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e868c34f-55bb-5f69-9952-a0c438f47316"}, .name = "e868c34f-55bb-5f69-9952-a0c438f47316", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-404]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-404")], .matchExpressions = []}}}}, .podsByNode = [("testNode-40", [k8spolicy.PodReference{.name = "testPod-404", .namespace = "testNamespace"}])], .span = ["testNode-40"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ef5b7bce-c886-57d5-aaee-fff719dcb562"}, .name = "ef5b7bce-c886-57d5-aaee-fff719dcb562", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-411]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-411")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-411", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "efc46206-46a5-5a11-895f-6d443d347d24"}, .name = "efc46206-46a5-5a11-895f-6d443d347d24", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-397]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-397")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-397", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f97f5251-3bc6-5335-b68e-ba0aaf265ce2"}, .name = "f97f5251-3bc6-5335-b68e-ba0aaf265ce2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-396]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-396")], .matchExpressions = []}}}}, .podsByNode = [("testNode-39", [k8spolicy.PodReference{.name = "testPod-396", .namespace = "testNamespace"}])], .span = ["testNode-39"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-384"}, .name = "testNP-384", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["777ca61b-322d-5bba-a70b-b7e1623f3af8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d2f69a2e-1a7f-5e6c-a0f0-86875d71ab16"]}, .span = ["testNode-38"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-385"}, .name = "testNP-385", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4d17717e-f78b-57c9-b591-db530602f7ed"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["777ca61b-322d-5bba-a70b-b7e1623f3af8"]}, .span = ["testNode-38"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-386"}, .name = "testNP-386", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c4701c1d-34bb-5757-bf28-dc70456f291a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4d17717e-f78b-57c9-b591-db530602f7ed"]}, .span = ["testNode-38"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-387"}, .name = "testNP-387", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7db41759-a1f5-5138-9e53-f36553ac9a94"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c4701c1d-34bb-5757-bf28-dc70456f291a"]}, .span = ["testNode-38"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-388"}, .name = "testNP-388", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7909e946-8a01-5551-a3d0-54852e359918"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7db41759-a1f5-5138-9e53-f36553ac9a94"]}, .span = ["testNode-38"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-389"}, .name = "testNP-389", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cf5e71e1-5bbf-5fb5-8363-120ee0eb7cfb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7909e946-8a01-5551-a3d0-54852e359918"]}, .span = ["testNode-38"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-390"}, .name = "testNP-390", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dbe3ea42-3c0d-5b74-91c2-14501cdea12b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cf5e71e1-5bbf-5fb5-8363-120ee0eb7cfb"]}, .span = ["testNode-39"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-391"}, .name = "testNP-391", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7173f1b8-4f9d-5a94-bc8b-d772a28d488e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dbe3ea42-3c0d-5b74-91c2-14501cdea12b"]}, .span = ["testNode-39"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-392"}, .name = "testNP-392", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8d3e9ee6-9489-5667-bb55-4c45886f5760"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7173f1b8-4f9d-5a94-bc8b-d772a28d488e"]}, .span = ["testNode-39"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-393"}, .name = "testNP-393", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d7a17941-c2ea-575a-8d95-0a951dfb4ae4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8d3e9ee6-9489-5667-bb55-4c45886f5760"]}, .span = ["testNode-39"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-394"}, .name = "testNP-394", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a46499d7-8e51-52f2-8e00-7670cfe88b35"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d7a17941-c2ea-575a-8d95-0a951dfb4ae4"]}, .span = ["testNode-39"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-395"}, .name = "testNP-395", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f97f5251-3bc6-5335-b68e-ba0aaf265ce2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a46499d7-8e51-52f2-8e00-7670cfe88b35"]}, .span = ["testNode-39"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-396"}, .name = "testNP-396", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["efc46206-46a5-5a11-895f-6d443d347d24"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f97f5251-3bc6-5335-b68e-ba0aaf265ce2"]}, .span = ["testNode-39"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-397"}, .name = "testNP-397", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["55203360-b26b-52d5-a9ab-627fd76129a0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["efc46206-46a5-5a11-895f-6d443d347d24"]}, .span = ["testNode-39"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-398"}, .name = "testNP-398", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4890bcb7-78c1-5b3c-96fb-47f0be2dcbc2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["55203360-b26b-52d5-a9ab-627fd76129a0"]}, .span = ["testNode-39"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-399"}, .name = "testNP-399", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9c906fbd-123d-501a-80d1-7bfd6a0f13ef"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4890bcb7-78c1-5b3c-96fb-47f0be2dcbc2"]}, .span = ["testNode-39"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-400"}, .name = "testNP-400", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["93fddede-665f-54fa-b60f-1b2172a46ee6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9c906fbd-123d-501a-80d1-7bfd6a0f13ef"]}, .span = ["testNode-40"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-401"}, .name = "testNP-401", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d0b20cf7-ab9e-5aac-a853-9153f16165fa"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["93fddede-665f-54fa-b60f-1b2172a46ee6"]}, .span = ["testNode-40"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-402"}, .name = "testNP-402", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a8c0f886-7ea0-510f-9c2b-f5140e1ab374"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d0b20cf7-ab9e-5aac-a853-9153f16165fa"]}, .span = ["testNode-40"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-403"}, .name = "testNP-403", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e868c34f-55bb-5f69-9952-a0c438f47316"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a8c0f886-7ea0-510f-9c2b-f5140e1ab374"]}, .span = ["testNode-40"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-404"}, .name = "testNP-404", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c4d77be9-7f17-5a12-ac01-ed5650600fc6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e868c34f-55bb-5f69-9952-a0c438f47316"]}, .span = ["testNode-40"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-405"}, .name = "testNP-405", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7e2849cb-ee50-53eb-b072-4e0f8330ae0d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c4d77be9-7f17-5a12-ac01-ed5650600fc6"]}, .span = ["testNode-40"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-406"}, .name = "testNP-406", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["66221c2b-b200-541f-aa2b-c0908d5c2f69"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7e2849cb-ee50-53eb-b072-4e0f8330ae0d"]}, .span = ["testNode-40"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-407"}, .name = "testNP-407", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5609f60a-fa26-59a3-8e17-03ce36bc329e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["66221c2b-b200-541f-aa2b-c0908d5c2f69"]}, .span = ["testNode-40"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-408"}, .name = "testNP-408", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8d1b26c5-6d78-5c28-a228-d46a11bf5ab4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5609f60a-fa26-59a3-8e17-03ce36bc329e"]}, .span = ["testNode-40"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-409"}, .name = "testNP-409", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["13128de5-d4fd-50ef-a6fa-e02470f75bdd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8d1b26c5-6d78-5c28-a228-d46a11bf5ab4"]}, .span = ["testNode-40"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-410"}, .name = "testNP-410", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ef5b7bce-c886-57d5-aaee-fff719dcb562"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["13128de5-d4fd-50ef-a6fa-e02470f75bdd"]}, .span = ["testNode-41"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-411"}, .name = "testNP-411", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["daf26d8b-7aa9-5e29-9827-f97fd4af01b1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ef5b7bce-c886-57d5-aaee-fff719dcb562"]}, .span = ["testNode-41"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-412"}, .name = "testNP-412", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["47614eb2-bc50-546e-8fa5-9c92ad3d0080"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["daf26d8b-7aa9-5e29-9827-f97fd4af01b1"]}, .span = ["testNode-41"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-413"}, .name = "testNP-413", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["969bbeb2-7831-5c43-87b1-2434370d9431"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["47614eb2-bc50-546e-8fa5-9c92ad3d0080"]}, .span = ["testNode-41"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-414"}, .name = "testNP-414", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1a7755d5-7e34-5ff0-a562-8906a55d9a69"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["969bbeb2-7831-5c43-87b1-2434370d9431"]}, .span = ["testNode-41"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-415"}, .name = "testNP-415", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["59e40b97-a875-5501-8367-2dc471a75d54"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1a7755d5-7e34-5ff0-a562-8906a55d9a69"]}, .span = ["testNode-41"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "065069e0-18a7-5e1c-bb52-4c47bb1e0224"}, .name = "065069e0-18a7-5e1c-bb52-4c47bb1e0224", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-418]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-418")], .matchExpressions = []}}}}, .addresses = ["10.10.41.8"], .span = ["testNode-41"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "17ef5192-63e1-5f5b-8637-2d9b9bf7776d"}, .name = "17ef5192-63e1-5f5b-8637-2d9b9bf7776d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-425]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-425")], .matchExpressions = []}}}}, .addresses = ["10.10.42.5"], .span = ["testNode-42"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1e7c1f44-296c-5267-b707-c44fb5683a0c"}, .name = "1e7c1f44-296c-5267-b707-c44fb5683a0c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-429]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-429")], .matchExpressions = []}}}}, .addresses = ["10.10.42.9"], .span = ["testNode-42"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "213b7da2-b9b8-5cde-b512-061be115ab57"}, .name = "213b7da2-b9b8-5cde-b512-061be115ab57", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-430]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-430")], .matchExpressions = []}}}}, .addresses = ["10.10.43.0"], .span = ["testNode-42"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "221df0dd-6ea1-5be9-89af-2e070cf98a99"}, .name = "221df0dd-6ea1-5be9-89af-2e070cf98a99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-444]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-444")], .matchExpressions = []}}}}, .addresses = ["10.10.44.4"], .span = ["testNode-44"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "26797822-5d38-58a4-a2b6-555eb800ada0"}, .name = "26797822-5d38-58a4-a2b6-555eb800ada0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-422]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-422")], .matchExpressions = []}}}}, .addresses = ["10.10.42.2"], .span = ["testNode-42"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2e707461-922b-5a63-82d0-f4f9b42e3021"}, .name = "2e707461-922b-5a63-82d0-f4f9b42e3021", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-443]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-443")], .matchExpressions = []}}}}, .addresses = ["10.10.44.3"], .span = ["testNode-44"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "33a67ebe-734b-5fbb-a5b1-5be41be77846"}, .name = "33a67ebe-734b-5fbb-a5b1-5be41be77846", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-431]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-431")], .matchExpressions = []}}}}, .addresses = ["10.10.43.1"], .span = ["testNode-43"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "43aeefd2-d0c2-5e46-bb9c-d9c1b5fd1826"}, .name = "43aeefd2-d0c2-5e46-bb9c-d9c1b5fd1826", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-419]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-419")], .matchExpressions = []}}}}, .addresses = ["10.10.41.9"], .span = ["testNode-41"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4662b9f8-93d5-52ec-8a19-721399689827"}, .name = "4662b9f8-93d5-52ec-8a19-721399689827", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-434]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-434")], .matchExpressions = []}}}}, .addresses = ["10.10.43.4"], .span = ["testNode-43"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "49e711d9-b62c-55fb-8332-a9273c323bed"}, .name = "49e711d9-b62c-55fb-8332-a9273c323bed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-438]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-438")], .matchExpressions = []}}}}, .addresses = ["10.10.43.8"], .span = ["testNode-43"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4bbd7c29-ac1e-561a-9b1c-46e0c5369ea8"}, .name = "4bbd7c29-ac1e-561a-9b1c-46e0c5369ea8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-439]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-439")], .matchExpressions = []}}}}, .addresses = ["10.10.43.9"], .span = ["testNode-43"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4e985fe9-87b7-57db-80c6-bc7b25d7f4ce"}, .name = "4e985fe9-87b7-57db-80c6-bc7b25d7f4ce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-424]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-424")], .matchExpressions = []}}}}, .addresses = ["10.10.42.4"], .span = ["testNode-42"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "52944f71-c52e-580d-8a02-b7f52543a710"}, .name = "52944f71-c52e-580d-8a02-b7f52543a710", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-437]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-437")], .matchExpressions = []}}}}, .addresses = ["10.10.43.7"], .span = ["testNode-43"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "53649ad0-6e1f-52f9-b9b7-7ba93ce7aac2"}, .name = "53649ad0-6e1f-52f9-b9b7-7ba93ce7aac2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-417]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-417")], .matchExpressions = []}}}}, .addresses = ["10.10.41.7"], .span = ["testNode-41"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "58a4bda1-6394-500a-8801-381bb59057ec"}, .name = "58a4bda1-6394-500a-8801-381bb59057ec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-448]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-448")], .matchExpressions = []}}}}, .addresses = ["10.10.44.8"], .span = ["testNode-44"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "591e426e-f1d1-5dba-83b2-e15f33e08c63"}, .name = "591e426e-f1d1-5dba-83b2-e15f33e08c63", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-435]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-435")], .matchExpressions = []}}}}, .addresses = ["10.10.43.5"], .span = ["testNode-43"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5bd35221-0c26-5317-a9f1-018cfcd10eef"}, .name = "5bd35221-0c26-5317-a9f1-018cfcd10eef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-427]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-427")], .matchExpressions = []}}}}, .addresses = ["10.10.42.7"], .span = ["testNode-42"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6440c036-3101-53a7-9611-be6ab29c2352"}, .name = "6440c036-3101-53a7-9611-be6ab29c2352", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-445]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-445")], .matchExpressions = []}}}}, .addresses = ["10.10.44.5"], .span = ["testNode-44"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6a810058-4116-5795-b850-070e8e3120b9"}, .name = "6a810058-4116-5795-b850-070e8e3120b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-421]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-421")], .matchExpressions = []}}}}, .addresses = ["10.10.42.1"], .span = ["testNode-42"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "734707c6-ad64-54f1-8e05-a8ca7ec42383"}, .name = "734707c6-ad64-54f1-8e05-a8ca7ec42383", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-447]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-447")], .matchExpressions = []}}}}, .addresses = ["10.10.44.7"], .span = ["testNode-44"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9b313ac8-6069-5bfd-9b92-9827587ffc5b"}, .name = "9b313ac8-6069-5bfd-9b92-9827587ffc5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-442]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-442")], .matchExpressions = []}}}}, .addresses = ["10.10.44.2"], .span = ["testNode-44"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9ca20ce9-8c2f-5a2f-9b15-03f4615ad5e6"}, .name = "9ca20ce9-8c2f-5a2f-9b15-03f4615ad5e6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-441]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-441")], .matchExpressions = []}}}}, .addresses = ["10.10.44.1"], .span = ["testNode-44"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9f348bf3-e9d4-546b-9f59-d69f3a63254d"}, .name = "9f348bf3-e9d4-546b-9f59-d69f3a63254d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-432]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-432")], .matchExpressions = []}}}}, .addresses = ["10.10.43.2"], .span = ["testNode-43"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a3721311-dfe4-5333-bfc6-946712f039f6"}, .name = "a3721311-dfe4-5333-bfc6-946712f039f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-420]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-420")], .matchExpressions = []}}}}, .addresses = ["10.10.42.0"], .span = ["testNode-41"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "acf85820-253c-5368-97bd-d6486cf47a76"}, .name = "acf85820-253c-5368-97bd-d6486cf47a76", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-426]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-426")], .matchExpressions = []}}}}, .addresses = ["10.10.42.6"], .span = ["testNode-42"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b9c800ef-c4c5-5a63-ae54-0959c9712728"}, .name = "b9c800ef-c4c5-5a63-ae54-0959c9712728", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-446]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-446")], .matchExpressions = []}}}}, .addresses = ["10.10.44.6"], .span = ["testNode-44"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bc2e673a-be2f-5194-8a42-939931f6023a"}, .name = "bc2e673a-be2f-5194-8a42-939931f6023a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-423]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-423")], .matchExpressions = []}}}}, .addresses = ["10.10.42.3"], .span = ["testNode-42"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c5f35edd-9402-5282-86f6-1e9ed9e8c7f3"}, .name = "c5f35edd-9402-5282-86f6-1e9ed9e8c7f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-433]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-433")], .matchExpressions = []}}}}, .addresses = ["10.10.43.3"], .span = ["testNode-43"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "caa2cff0-f280-5241-a247-831efc8c4e99"}, .name = "caa2cff0-f280-5241-a247-831efc8c4e99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-428]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-428")], .matchExpressions = []}}}}, .addresses = ["10.10.42.8"], .span = ["testNode-42"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e0d644f7-6156-5c67-9981-08d21e1fe628"}, .name = "e0d644f7-6156-5c67-9981-08d21e1fe628", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-440]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-440")], .matchExpressions = []}}}}, .addresses = ["10.10.44.0"], .span = ["testNode-43"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f86700c5-474e-5703-93e6-179d25b25060"}, .name = "f86700c5-474e-5703-93e6-179d25b25060", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-436]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-436")], .matchExpressions = []}}}}, .addresses = ["10.10.43.6"], .span = ["testNode-43"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "065069e0-18a7-5e1c-bb52-4c47bb1e0224"}, .name = "065069e0-18a7-5e1c-bb52-4c47bb1e0224", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-418]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-418")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-418", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "17ef5192-63e1-5f5b-8637-2d9b9bf7776d"}, .name = "17ef5192-63e1-5f5b-8637-2d9b9bf7776d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-425]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-425")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-425", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1e7c1f44-296c-5267-b707-c44fb5683a0c"}, .name = "1e7c1f44-296c-5267-b707-c44fb5683a0c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-429]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-429")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-429", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "213b7da2-b9b8-5cde-b512-061be115ab57"}, .name = "213b7da2-b9b8-5cde-b512-061be115ab57", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-430]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-430")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-430", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "221df0dd-6ea1-5be9-89af-2e070cf98a99"}, .name = "221df0dd-6ea1-5be9-89af-2e070cf98a99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-444]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-444")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-444", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "26797822-5d38-58a4-a2b6-555eb800ada0"}, .name = "26797822-5d38-58a4-a2b6-555eb800ada0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-422]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-422")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-422", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2e707461-922b-5a63-82d0-f4f9b42e3021"}, .name = "2e707461-922b-5a63-82d0-f4f9b42e3021", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-443]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-443")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-443", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "33a67ebe-734b-5fbb-a5b1-5be41be77846"}, .name = "33a67ebe-734b-5fbb-a5b1-5be41be77846", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-431]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-431")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-431", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "43aeefd2-d0c2-5e46-bb9c-d9c1b5fd1826"}, .name = "43aeefd2-d0c2-5e46-bb9c-d9c1b5fd1826", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-419]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-419")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-419", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4662b9f8-93d5-52ec-8a19-721399689827"}, .name = "4662b9f8-93d5-52ec-8a19-721399689827", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-434]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-434")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-434", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "49e711d9-b62c-55fb-8332-a9273c323bed"}, .name = "49e711d9-b62c-55fb-8332-a9273c323bed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-438]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-438")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-438", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4bbd7c29-ac1e-561a-9b1c-46e0c5369ea8"}, .name = "4bbd7c29-ac1e-561a-9b1c-46e0c5369ea8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-439]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-439")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-439", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4e985fe9-87b7-57db-80c6-bc7b25d7f4ce"}, .name = "4e985fe9-87b7-57db-80c6-bc7b25d7f4ce", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-424]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-424")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-424", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "52944f71-c52e-580d-8a02-b7f52543a710"}, .name = "52944f71-c52e-580d-8a02-b7f52543a710", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-437]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-437")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-437", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "53649ad0-6e1f-52f9-b9b7-7ba93ce7aac2"}, .name = "53649ad0-6e1f-52f9-b9b7-7ba93ce7aac2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-417]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-417")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-417", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "591e426e-f1d1-5dba-83b2-e15f33e08c63"}, .name = "591e426e-f1d1-5dba-83b2-e15f33e08c63", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-435]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-435")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-435", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "59e40b97-a875-5501-8367-2dc471a75d54"}, .name = "59e40b97-a875-5501-8367-2dc471a75d54", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-416]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-416")], .matchExpressions = []}}}}, .podsByNode = [("testNode-41", [k8spolicy.PodReference{.name = "testPod-416", .namespace = "testNamespace"}])], .span = ["testNode-41"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5bd35221-0c26-5317-a9f1-018cfcd10eef"}, .name = "5bd35221-0c26-5317-a9f1-018cfcd10eef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-427]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-427")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-427", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6440c036-3101-53a7-9611-be6ab29c2352"}, .name = "6440c036-3101-53a7-9611-be6ab29c2352", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-445]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-445")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-445", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6a810058-4116-5795-b850-070e8e3120b9"}, .name = "6a810058-4116-5795-b850-070e8e3120b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-421]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-421")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-421", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "734707c6-ad64-54f1-8e05-a8ca7ec42383"}, .name = "734707c6-ad64-54f1-8e05-a8ca7ec42383", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-447]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-447")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-447", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9b313ac8-6069-5bfd-9b92-9827587ffc5b"}, .name = "9b313ac8-6069-5bfd-9b92-9827587ffc5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-442]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-442")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-442", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9ca20ce9-8c2f-5a2f-9b15-03f4615ad5e6"}, .name = "9ca20ce9-8c2f-5a2f-9b15-03f4615ad5e6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-441]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-441")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-441", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9f348bf3-e9d4-546b-9f59-d69f3a63254d"}, .name = "9f348bf3-e9d4-546b-9f59-d69f3a63254d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-432]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-432")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-432", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a3721311-dfe4-5333-bfc6-946712f039f6"}, .name = "a3721311-dfe4-5333-bfc6-946712f039f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-420]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-420")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-420", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "acf85820-253c-5368-97bd-d6486cf47a76"}, .name = "acf85820-253c-5368-97bd-d6486cf47a76", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-426]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-426")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-426", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b9c800ef-c4c5-5a63-ae54-0959c9712728"}, .name = "b9c800ef-c4c5-5a63-ae54-0959c9712728", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-446]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-446")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-446", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bc2e673a-be2f-5194-8a42-939931f6023a"}, .name = "bc2e673a-be2f-5194-8a42-939931f6023a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-423]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-423")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-423", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c5f35edd-9402-5282-86f6-1e9ed9e8c7f3"}, .name = "c5f35edd-9402-5282-86f6-1e9ed9e8c7f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-433]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-433")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-433", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "caa2cff0-f280-5241-a247-831efc8c4e99"}, .name = "caa2cff0-f280-5241-a247-831efc8c4e99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-428]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-428")], .matchExpressions = []}}}}, .podsByNode = [("testNode-42", [k8spolicy.PodReference{.name = "testPod-428", .namespace = "testNamespace"}])], .span = ["testNode-42"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e0d644f7-6156-5c67-9981-08d21e1fe628"}, .name = "e0d644f7-6156-5c67-9981-08d21e1fe628", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-440]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-440")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-440", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f86700c5-474e-5703-93e6-179d25b25060"}, .name = "f86700c5-474e-5703-93e6-179d25b25060", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-436]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-436")], .matchExpressions = []}}}}, .podsByNode = [("testNode-43", [k8spolicy.PodReference{.name = "testPod-436", .namespace = "testNamespace"}])], .span = ["testNode-43"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-416"}, .name = "testNP-416", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["53649ad0-6e1f-52f9-b9b7-7ba93ce7aac2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["59e40b97-a875-5501-8367-2dc471a75d54"]}, .span = ["testNode-41"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-417"}, .name = "testNP-417", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["065069e0-18a7-5e1c-bb52-4c47bb1e0224"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["53649ad0-6e1f-52f9-b9b7-7ba93ce7aac2"]}, .span = ["testNode-41"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-418"}, .name = "testNP-418", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["43aeefd2-d0c2-5e46-bb9c-d9c1b5fd1826"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["065069e0-18a7-5e1c-bb52-4c47bb1e0224"]}, .span = ["testNode-41"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-419"}, .name = "testNP-419", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a3721311-dfe4-5333-bfc6-946712f039f6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["43aeefd2-d0c2-5e46-bb9c-d9c1b5fd1826"]}, .span = ["testNode-41"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-420"}, .name = "testNP-420", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6a810058-4116-5795-b850-070e8e3120b9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a3721311-dfe4-5333-bfc6-946712f039f6"]}, .span = ["testNode-42"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-421"}, .name = "testNP-421", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["26797822-5d38-58a4-a2b6-555eb800ada0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6a810058-4116-5795-b850-070e8e3120b9"]}, .span = ["testNode-42"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-422"}, .name = "testNP-422", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bc2e673a-be2f-5194-8a42-939931f6023a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["26797822-5d38-58a4-a2b6-555eb800ada0"]}, .span = ["testNode-42"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-423"}, .name = "testNP-423", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4e985fe9-87b7-57db-80c6-bc7b25d7f4ce"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bc2e673a-be2f-5194-8a42-939931f6023a"]}, .span = ["testNode-42"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-424"}, .name = "testNP-424", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["17ef5192-63e1-5f5b-8637-2d9b9bf7776d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4e985fe9-87b7-57db-80c6-bc7b25d7f4ce"]}, .span = ["testNode-42"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-425"}, .name = "testNP-425", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["acf85820-253c-5368-97bd-d6486cf47a76"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["17ef5192-63e1-5f5b-8637-2d9b9bf7776d"]}, .span = ["testNode-42"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-426"}, .name = "testNP-426", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5bd35221-0c26-5317-a9f1-018cfcd10eef"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["acf85820-253c-5368-97bd-d6486cf47a76"]}, .span = ["testNode-42"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-427"}, .name = "testNP-427", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["caa2cff0-f280-5241-a247-831efc8c4e99"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5bd35221-0c26-5317-a9f1-018cfcd10eef"]}, .span = ["testNode-42"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-428"}, .name = "testNP-428", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1e7c1f44-296c-5267-b707-c44fb5683a0c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["caa2cff0-f280-5241-a247-831efc8c4e99"]}, .span = ["testNode-42"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-429"}, .name = "testNP-429", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["213b7da2-b9b8-5cde-b512-061be115ab57"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1e7c1f44-296c-5267-b707-c44fb5683a0c"]}, .span = ["testNode-42"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-430"}, .name = "testNP-430", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["33a67ebe-734b-5fbb-a5b1-5be41be77846"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["213b7da2-b9b8-5cde-b512-061be115ab57"]}, .span = ["testNode-43"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-431"}, .name = "testNP-431", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9f348bf3-e9d4-546b-9f59-d69f3a63254d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["33a67ebe-734b-5fbb-a5b1-5be41be77846"]}, .span = ["testNode-43"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-432"}, .name = "testNP-432", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c5f35edd-9402-5282-86f6-1e9ed9e8c7f3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9f348bf3-e9d4-546b-9f59-d69f3a63254d"]}, .span = ["testNode-43"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-433"}, .name = "testNP-433", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4662b9f8-93d5-52ec-8a19-721399689827"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c5f35edd-9402-5282-86f6-1e9ed9e8c7f3"]}, .span = ["testNode-43"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-434"}, .name = "testNP-434", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["591e426e-f1d1-5dba-83b2-e15f33e08c63"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4662b9f8-93d5-52ec-8a19-721399689827"]}, .span = ["testNode-43"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-435"}, .name = "testNP-435", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f86700c5-474e-5703-93e6-179d25b25060"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["591e426e-f1d1-5dba-83b2-e15f33e08c63"]}, .span = ["testNode-43"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-436"}, .name = "testNP-436", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["52944f71-c52e-580d-8a02-b7f52543a710"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f86700c5-474e-5703-93e6-179d25b25060"]}, .span = ["testNode-43"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-437"}, .name = "testNP-437", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["49e711d9-b62c-55fb-8332-a9273c323bed"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["52944f71-c52e-580d-8a02-b7f52543a710"]}, .span = ["testNode-43"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-438"}, .name = "testNP-438", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4bbd7c29-ac1e-561a-9b1c-46e0c5369ea8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["49e711d9-b62c-55fb-8332-a9273c323bed"]}, .span = ["testNode-43"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-439"}, .name = "testNP-439", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e0d644f7-6156-5c67-9981-08d21e1fe628"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4bbd7c29-ac1e-561a-9b1c-46e0c5369ea8"]}, .span = ["testNode-43"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-440"}, .name = "testNP-440", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9ca20ce9-8c2f-5a2f-9b15-03f4615ad5e6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e0d644f7-6156-5c67-9981-08d21e1fe628"]}, .span = ["testNode-44"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-441"}, .name = "testNP-441", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9b313ac8-6069-5bfd-9b92-9827587ffc5b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9ca20ce9-8c2f-5a2f-9b15-03f4615ad5e6"]}, .span = ["testNode-44"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-442"}, .name = "testNP-442", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2e707461-922b-5a63-82d0-f4f9b42e3021"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9b313ac8-6069-5bfd-9b92-9827587ffc5b"]}, .span = ["testNode-44"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-443"}, .name = "testNP-443", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["221df0dd-6ea1-5be9-89af-2e070cf98a99"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2e707461-922b-5a63-82d0-f4f9b42e3021"]}, .span = ["testNode-44"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-444"}, .name = "testNP-444", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6440c036-3101-53a7-9611-be6ab29c2352"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["221df0dd-6ea1-5be9-89af-2e070cf98a99"]}, .span = ["testNode-44"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-445"}, .name = "testNP-445", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b9c800ef-c4c5-5a63-ae54-0959c9712728"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6440c036-3101-53a7-9611-be6ab29c2352"]}, .span = ["testNode-44"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-446"}, .name = "testNP-446", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["734707c6-ad64-54f1-8e05-a8ca7ec42383"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b9c800ef-c4c5-5a63-ae54-0959c9712728"]}, .span = ["testNode-44"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-447"}, .name = "testNP-447", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["58a4bda1-6394-500a-8801-381bb59057ec"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["734707c6-ad64-54f1-8e05-a8ca7ec42383"]}, .span = ["testNode-44"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "07d2b997-3b78-5866-a575-8f9f9421fb9b"}, .name = "07d2b997-3b78-5866-a575-8f9f9421fb9b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-479]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-479")], .matchExpressions = []}}}}, .addresses = ["10.10.47.9"], .span = ["testNode-47"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0d2feb4b-7671-5457-997d-b90deb86f058"}, .name = "0d2feb4b-7671-5457-997d-b90deb86f058", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-478]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-478")], .matchExpressions = []}}}}, .addresses = ["10.10.47.8"], .span = ["testNode-47"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "145b375b-bd02-576a-a29c-a996c2ada25a"}, .name = "145b375b-bd02-576a-a29c-a996c2ada25a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-477]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-477")], .matchExpressions = []}}}}, .addresses = ["10.10.47.7"], .span = ["testNode-47"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1cdef137-d356-5102-bdef-c72a414486c8"}, .name = "1cdef137-d356-5102-bdef-c72a414486c8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-455]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-455")], .matchExpressions = []}}}}, .addresses = ["10.10.45.5"], .span = ["testNode-45"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2a6209f8-8f87-5acb-aa49-9a8ba2b59702"}, .name = "2a6209f8-8f87-5acb-aa49-9a8ba2b59702", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-462]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-462")], .matchExpressions = []}}}}, .addresses = ["10.10.46.2"], .span = ["testNode-46"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2bfcdf8f-3513-5db1-be65-c75108cd2275"}, .name = "2bfcdf8f-3513-5db1-be65-c75108cd2275", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-466]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-466")], .matchExpressions = []}}}}, .addresses = ["10.10.46.6"], .span = ["testNode-46"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2f187e07-ea40-5f31-954c-ba475ddb493e"}, .name = "2f187e07-ea40-5f31-954c-ba475ddb493e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-473]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-473")], .matchExpressions = []}}}}, .addresses = ["10.10.47.3"], .span = ["testNode-47"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "39786938-2f43-5c70-95f5-564461bee86f"}, .name = "39786938-2f43-5c70-95f5-564461bee86f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-463]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-463")], .matchExpressions = []}}}}, .addresses = ["10.10.46.3"], .span = ["testNode-46"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "441e2917-7cb3-5111-8ca9-2e9a93e1423a"}, .name = "441e2917-7cb3-5111-8ca9-2e9a93e1423a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-475]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-475")], .matchExpressions = []}}}}, .addresses = ["10.10.47.5"], .span = ["testNode-47"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "44fb2959-6bad-5a6b-82e5-0b9d202ee700"}, .name = "44fb2959-6bad-5a6b-82e5-0b9d202ee700", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-457]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-457")], .matchExpressions = []}}}}, .addresses = ["10.10.45.7"], .span = ["testNode-45"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "45339f12-f908-5cf0-9541-e69efa589196"}, .name = "45339f12-f908-5cf0-9541-e69efa589196", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-467]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-467")], .matchExpressions = []}}}}, .addresses = ["10.10.46.7"], .span = ["testNode-46"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4c0e556b-5c80-5021-af27-40565ee58082"}, .name = "4c0e556b-5c80-5021-af27-40565ee58082", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-476]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-476")], .matchExpressions = []}}}}, .addresses = ["10.10.47.6"], .span = ["testNode-47"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5a6a577e-e00d-5003-bd84-a74d6fd1d41a"}, .name = "5a6a577e-e00d-5003-bd84-a74d6fd1d41a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-449]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-449")], .matchExpressions = []}}}}, .addresses = ["10.10.44.9"], .span = ["testNode-44"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5e11eed0-b04e-501c-bf44-abb6d5c218a7"}, .name = "5e11eed0-b04e-501c-bf44-abb6d5c218a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-469]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-469")], .matchExpressions = []}}}}, .addresses = ["10.10.46.9"], .span = ["testNode-46"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7504a2fc-2033-59bc-bb01-f7b4eeed2164"}, .name = "7504a2fc-2033-59bc-bb01-f7b4eeed2164", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-454]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-454")], .matchExpressions = []}}}}, .addresses = ["10.10.45.4"], .span = ["testNode-45"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "75954e86-dbf7-5dc3-a211-e5c0205fe192"}, .name = "75954e86-dbf7-5dc3-a211-e5c0205fe192", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-465]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-465")], .matchExpressions = []}}}}, .addresses = ["10.10.46.5"], .span = ["testNode-46"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9a5f5049-76a1-5a2d-8912-d168a845c3ca"}, .name = "9a5f5049-76a1-5a2d-8912-d168a845c3ca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-461]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-461")], .matchExpressions = []}}}}, .addresses = ["10.10.46.1"], .span = ["testNode-46"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a3a6f83d-02a6-5430-8dc6-4f8f1946a32d"}, .name = "a3a6f83d-02a6-5430-8dc6-4f8f1946a32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-464]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-464")], .matchExpressions = []}}}}, .addresses = ["10.10.46.4"], .span = ["testNode-46"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a7ed93c4-ba2e-5748-b2ae-88a30d10f7a2"}, .name = "a7ed93c4-ba2e-5748-b2ae-88a30d10f7a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-480]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-480")], .matchExpressions = []}}}}, .addresses = ["10.10.48.0"], .span = ["testNode-47"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ab210dec-f1b8-583a-940e-90ddc7641fdc"}, .name = "ab210dec-f1b8-583a-940e-90ddc7641fdc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-470]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-470")], .matchExpressions = []}}}}, .addresses = ["10.10.47.0"], .span = ["testNode-46"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ab6d6a1e-1f75-5eec-ac9e-7fefb232aee2"}, .name = "ab6d6a1e-1f75-5eec-ac9e-7fefb232aee2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-460]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-460")], .matchExpressions = []}}}}, .addresses = ["10.10.46.0"], .span = ["testNode-45"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ad7f819a-fc9d-559a-960e-15c148812e92"}, .name = "ad7f819a-fc9d-559a-960e-15c148812e92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-472]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-472")], .matchExpressions = []}}}}, .addresses = ["10.10.47.2"], .span = ["testNode-47"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c44e8b65-9e4c-5a80-a0d7-fb788cb25708"}, .name = "c44e8b65-9e4c-5a80-a0d7-fb788cb25708", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-474]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-474")], .matchExpressions = []}}}}, .addresses = ["10.10.47.4"], .span = ["testNode-47"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cb1f9138-bf78-5be1-8e95-bb9ba1c330b3"}, .name = "cb1f9138-bf78-5be1-8e95-bb9ba1c330b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-471]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-471")], .matchExpressions = []}}}}, .addresses = ["10.10.47.1"], .span = ["testNode-47"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ce2b3848-6f5c-5362-83d5-360c6d6b137d"}, .name = "ce2b3848-6f5c-5362-83d5-360c6d6b137d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-456]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-456")], .matchExpressions = []}}}}, .addresses = ["10.10.45.6"], .span = ["testNode-45"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d28893ed-1867-59ba-8b0a-145f907b372c"}, .name = "d28893ed-1867-59ba-8b0a-145f907b372c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-452]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-452")], .matchExpressions = []}}}}, .addresses = ["10.10.45.2"], .span = ["testNode-45"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d2eb6494-a3ba-5e2b-8aa3-f1a269f19116"}, .name = "d2eb6494-a3ba-5e2b-8aa3-f1a269f19116", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-453]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-453")], .matchExpressions = []}}}}, .addresses = ["10.10.45.3"], .span = ["testNode-45"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d8782751-9d64-5389-b796-a396ab3ca053"}, .name = "d8782751-9d64-5389-b796-a396ab3ca053", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-450]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-450")], .matchExpressions = []}}}}, .addresses = ["10.10.45.0"], .span = ["testNode-44"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d8f088fe-22d6-5d40-8080-254495710bf9"}, .name = "d8f088fe-22d6-5d40-8080-254495710bf9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-459]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-459")], .matchExpressions = []}}}}, .addresses = ["10.10.45.9"], .span = ["testNode-45"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e4c0de03-f599-52c9-b982-80f5b20a746b"}, .name = "e4c0de03-f599-52c9-b982-80f5b20a746b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-458]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-458")], .matchExpressions = []}}}}, .addresses = ["10.10.45.8"], .span = ["testNode-45"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e6f59d9f-4f6c-58d5-9d32-09b02c7af23a"}, .name = "e6f59d9f-4f6c-58d5-9d32-09b02c7af23a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-451]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-451")], .matchExpressions = []}}}}, .addresses = ["10.10.45.1"], .span = ["testNode-45"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fc01d1e4-2053-5e76-bd5b-f20127c59a09"}, .name = "fc01d1e4-2053-5e76-bd5b-f20127c59a09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-468]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-468")], .matchExpressions = []}}}}, .addresses = ["10.10.46.8"], .span = ["testNode-46"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "07d2b997-3b78-5866-a575-8f9f9421fb9b"}, .name = "07d2b997-3b78-5866-a575-8f9f9421fb9b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-479]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-479")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-479", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0d2feb4b-7671-5457-997d-b90deb86f058"}, .name = "0d2feb4b-7671-5457-997d-b90deb86f058", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-478]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-478")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-478", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "145b375b-bd02-576a-a29c-a996c2ada25a"}, .name = "145b375b-bd02-576a-a29c-a996c2ada25a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-477]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-477")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-477", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1cdef137-d356-5102-bdef-c72a414486c8"}, .name = "1cdef137-d356-5102-bdef-c72a414486c8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-455]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-455")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-455", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2a6209f8-8f87-5acb-aa49-9a8ba2b59702"}, .name = "2a6209f8-8f87-5acb-aa49-9a8ba2b59702", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-462]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-462")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-462", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2bfcdf8f-3513-5db1-be65-c75108cd2275"}, .name = "2bfcdf8f-3513-5db1-be65-c75108cd2275", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-466]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-466")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-466", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2f187e07-ea40-5f31-954c-ba475ddb493e"}, .name = "2f187e07-ea40-5f31-954c-ba475ddb493e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-473]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-473")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-473", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "39786938-2f43-5c70-95f5-564461bee86f"}, .name = "39786938-2f43-5c70-95f5-564461bee86f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-463]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-463")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-463", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "441e2917-7cb3-5111-8ca9-2e9a93e1423a"}, .name = "441e2917-7cb3-5111-8ca9-2e9a93e1423a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-475]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-475")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-475", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "44fb2959-6bad-5a6b-82e5-0b9d202ee700"}, .name = "44fb2959-6bad-5a6b-82e5-0b9d202ee700", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-457]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-457")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-457", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "45339f12-f908-5cf0-9541-e69efa589196"}, .name = "45339f12-f908-5cf0-9541-e69efa589196", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-467]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-467")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-467", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4c0e556b-5c80-5021-af27-40565ee58082"}, .name = "4c0e556b-5c80-5021-af27-40565ee58082", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-476]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-476")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-476", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "58a4bda1-6394-500a-8801-381bb59057ec"}, .name = "58a4bda1-6394-500a-8801-381bb59057ec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-448]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-448")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-448", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5a6a577e-e00d-5003-bd84-a74d6fd1d41a"}, .name = "5a6a577e-e00d-5003-bd84-a74d6fd1d41a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-449]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-449")], .matchExpressions = []}}}}, .podsByNode = [("testNode-44", [k8spolicy.PodReference{.name = "testPod-449", .namespace = "testNamespace"}])], .span = ["testNode-44"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5e11eed0-b04e-501c-bf44-abb6d5c218a7"}, .name = "5e11eed0-b04e-501c-bf44-abb6d5c218a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-469]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-469")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-469", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7504a2fc-2033-59bc-bb01-f7b4eeed2164"}, .name = "7504a2fc-2033-59bc-bb01-f7b4eeed2164", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-454]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-454")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-454", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "75954e86-dbf7-5dc3-a211-e5c0205fe192"}, .name = "75954e86-dbf7-5dc3-a211-e5c0205fe192", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-465]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-465")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-465", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9a5f5049-76a1-5a2d-8912-d168a845c3ca"}, .name = "9a5f5049-76a1-5a2d-8912-d168a845c3ca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-461]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-461")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-461", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a3a6f83d-02a6-5430-8dc6-4f8f1946a32d"}, .name = "a3a6f83d-02a6-5430-8dc6-4f8f1946a32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-464]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-464")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-464", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ab210dec-f1b8-583a-940e-90ddc7641fdc"}, .name = "ab210dec-f1b8-583a-940e-90ddc7641fdc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-470]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-470")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-470", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ab6d6a1e-1f75-5eec-ac9e-7fefb232aee2"}, .name = "ab6d6a1e-1f75-5eec-ac9e-7fefb232aee2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-460]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-460")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-460", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ad7f819a-fc9d-559a-960e-15c148812e92"}, .name = "ad7f819a-fc9d-559a-960e-15c148812e92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-472]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-472")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-472", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c44e8b65-9e4c-5a80-a0d7-fb788cb25708"}, .name = "c44e8b65-9e4c-5a80-a0d7-fb788cb25708", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-474]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-474")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-474", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cb1f9138-bf78-5be1-8e95-bb9ba1c330b3"}, .name = "cb1f9138-bf78-5be1-8e95-bb9ba1c330b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-471]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-471")], .matchExpressions = []}}}}, .podsByNode = [("testNode-47", [k8spolicy.PodReference{.name = "testPod-471", .namespace = "testNamespace"}])], .span = ["testNode-47"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ce2b3848-6f5c-5362-83d5-360c6d6b137d"}, .name = "ce2b3848-6f5c-5362-83d5-360c6d6b137d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-456]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-456")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-456", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d28893ed-1867-59ba-8b0a-145f907b372c"}, .name = "d28893ed-1867-59ba-8b0a-145f907b372c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-452]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-452")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-452", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d2eb6494-a3ba-5e2b-8aa3-f1a269f19116"}, .name = "d2eb6494-a3ba-5e2b-8aa3-f1a269f19116", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-453]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-453")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-453", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d8782751-9d64-5389-b796-a396ab3ca053"}, .name = "d8782751-9d64-5389-b796-a396ab3ca053", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-450]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-450")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-450", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d8f088fe-22d6-5d40-8080-254495710bf9"}, .name = "d8f088fe-22d6-5d40-8080-254495710bf9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-459]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-459")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-459", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e4c0de03-f599-52c9-b982-80f5b20a746b"}, .name = "e4c0de03-f599-52c9-b982-80f5b20a746b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-458]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-458")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-458", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e6f59d9f-4f6c-58d5-9d32-09b02c7af23a"}, .name = "e6f59d9f-4f6c-58d5-9d32-09b02c7af23a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-451]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-451")], .matchExpressions = []}}}}, .podsByNode = [("testNode-45", [k8spolicy.PodReference{.name = "testPod-451", .namespace = "testNamespace"}])], .span = ["testNode-45"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fc01d1e4-2053-5e76-bd5b-f20127c59a09"}, .name = "fc01d1e4-2053-5e76-bd5b-f20127c59a09", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-468]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-468")], .matchExpressions = []}}}}, .podsByNode = [("testNode-46", [k8spolicy.PodReference{.name = "testPod-468", .namespace = "testNamespace"}])], .span = ["testNode-46"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-448"}, .name = "testNP-448", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5a6a577e-e00d-5003-bd84-a74d6fd1d41a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["58a4bda1-6394-500a-8801-381bb59057ec"]}, .span = ["testNode-44"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-449"}, .name = "testNP-449", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d8782751-9d64-5389-b796-a396ab3ca053"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5a6a577e-e00d-5003-bd84-a74d6fd1d41a"]}, .span = ["testNode-44"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-450"}, .name = "testNP-450", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e6f59d9f-4f6c-58d5-9d32-09b02c7af23a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d8782751-9d64-5389-b796-a396ab3ca053"]}, .span = ["testNode-45"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-451"}, .name = "testNP-451", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d28893ed-1867-59ba-8b0a-145f907b372c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e6f59d9f-4f6c-58d5-9d32-09b02c7af23a"]}, .span = ["testNode-45"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-452"}, .name = "testNP-452", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d2eb6494-a3ba-5e2b-8aa3-f1a269f19116"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d28893ed-1867-59ba-8b0a-145f907b372c"]}, .span = ["testNode-45"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-453"}, .name = "testNP-453", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7504a2fc-2033-59bc-bb01-f7b4eeed2164"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d2eb6494-a3ba-5e2b-8aa3-f1a269f19116"]}, .span = ["testNode-45"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-454"}, .name = "testNP-454", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1cdef137-d356-5102-bdef-c72a414486c8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7504a2fc-2033-59bc-bb01-f7b4eeed2164"]}, .span = ["testNode-45"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-455"}, .name = "testNP-455", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ce2b3848-6f5c-5362-83d5-360c6d6b137d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1cdef137-d356-5102-bdef-c72a414486c8"]}, .span = ["testNode-45"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-456"}, .name = "testNP-456", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["44fb2959-6bad-5a6b-82e5-0b9d202ee700"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ce2b3848-6f5c-5362-83d5-360c6d6b137d"]}, .span = ["testNode-45"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-457"}, .name = "testNP-457", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e4c0de03-f599-52c9-b982-80f5b20a746b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["44fb2959-6bad-5a6b-82e5-0b9d202ee700"]}, .span = ["testNode-45"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-458"}, .name = "testNP-458", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d8f088fe-22d6-5d40-8080-254495710bf9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e4c0de03-f599-52c9-b982-80f5b20a746b"]}, .span = ["testNode-45"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-459"}, .name = "testNP-459", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ab6d6a1e-1f75-5eec-ac9e-7fefb232aee2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d8f088fe-22d6-5d40-8080-254495710bf9"]}, .span = ["testNode-45"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-460"}, .name = "testNP-460", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9a5f5049-76a1-5a2d-8912-d168a845c3ca"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ab6d6a1e-1f75-5eec-ac9e-7fefb232aee2"]}, .span = ["testNode-46"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-461"}, .name = "testNP-461", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2a6209f8-8f87-5acb-aa49-9a8ba2b59702"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9a5f5049-76a1-5a2d-8912-d168a845c3ca"]}, .span = ["testNode-46"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-462"}, .name = "testNP-462", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["39786938-2f43-5c70-95f5-564461bee86f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2a6209f8-8f87-5acb-aa49-9a8ba2b59702"]}, .span = ["testNode-46"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-463"}, .name = "testNP-463", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a3a6f83d-02a6-5430-8dc6-4f8f1946a32d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["39786938-2f43-5c70-95f5-564461bee86f"]}, .span = ["testNode-46"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-464"}, .name = "testNP-464", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["75954e86-dbf7-5dc3-a211-e5c0205fe192"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a3a6f83d-02a6-5430-8dc6-4f8f1946a32d"]}, .span = ["testNode-46"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-465"}, .name = "testNP-465", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2bfcdf8f-3513-5db1-be65-c75108cd2275"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["75954e86-dbf7-5dc3-a211-e5c0205fe192"]}, .span = ["testNode-46"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-466"}, .name = "testNP-466", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["45339f12-f908-5cf0-9541-e69efa589196"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2bfcdf8f-3513-5db1-be65-c75108cd2275"]}, .span = ["testNode-46"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-467"}, .name = "testNP-467", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fc01d1e4-2053-5e76-bd5b-f20127c59a09"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["45339f12-f908-5cf0-9541-e69efa589196"]}, .span = ["testNode-46"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-468"}, .name = "testNP-468", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5e11eed0-b04e-501c-bf44-abb6d5c218a7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fc01d1e4-2053-5e76-bd5b-f20127c59a09"]}, .span = ["testNode-46"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-469"}, .name = "testNP-469", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ab210dec-f1b8-583a-940e-90ddc7641fdc"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5e11eed0-b04e-501c-bf44-abb6d5c218a7"]}, .span = ["testNode-46"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-470"}, .name = "testNP-470", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cb1f9138-bf78-5be1-8e95-bb9ba1c330b3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ab210dec-f1b8-583a-940e-90ddc7641fdc"]}, .span = ["testNode-47"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-471"}, .name = "testNP-471", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ad7f819a-fc9d-559a-960e-15c148812e92"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cb1f9138-bf78-5be1-8e95-bb9ba1c330b3"]}, .span = ["testNode-47"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-472"}, .name = "testNP-472", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2f187e07-ea40-5f31-954c-ba475ddb493e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ad7f819a-fc9d-559a-960e-15c148812e92"]}, .span = ["testNode-47"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-473"}, .name = "testNP-473", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c44e8b65-9e4c-5a80-a0d7-fb788cb25708"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2f187e07-ea40-5f31-954c-ba475ddb493e"]}, .span = ["testNode-47"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-474"}, .name = "testNP-474", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["441e2917-7cb3-5111-8ca9-2e9a93e1423a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c44e8b65-9e4c-5a80-a0d7-fb788cb25708"]}, .span = ["testNode-47"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-475"}, .name = "testNP-475", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4c0e556b-5c80-5021-af27-40565ee58082"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["441e2917-7cb3-5111-8ca9-2e9a93e1423a"]}, .span = ["testNode-47"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-476"}, .name = "testNP-476", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["145b375b-bd02-576a-a29c-a996c2ada25a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4c0e556b-5c80-5021-af27-40565ee58082"]}, .span = ["testNode-47"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-477"}, .name = "testNP-477", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0d2feb4b-7671-5457-997d-b90deb86f058"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["145b375b-bd02-576a-a29c-a996c2ada25a"]}, .span = ["testNode-47"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-478"}, .name = "testNP-478", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["07d2b997-3b78-5866-a575-8f9f9421fb9b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0d2feb4b-7671-5457-997d-b90deb86f058"]}, .span = ["testNode-47"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-479"}, .name = "testNP-479", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a7ed93c4-ba2e-5748-b2ae-88a30d10f7a2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["07d2b997-3b78-5866-a575-8f9f9421fb9b"]}, .span = ["testNode-47"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0b7ff700-b184-5c64-b61e-9f5e0e4f695c"}, .name = "0b7ff700-b184-5c64-b61e-9f5e0e4f695c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-489]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-489")], .matchExpressions = []}}}}, .addresses = ["10.10.48.9"], .span = ["testNode-48"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0f9f3cbb-223d-566a-8017-99102e738a53"}, .name = "0f9f3cbb-223d-566a-8017-99102e738a53", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-495]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-495")], .matchExpressions = []}}}}, .addresses = ["10.10.49.5"], .span = ["testNode-49"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "186ceca6-cfe6-5b24-b464-51fc996b731a"}, .name = "186ceca6-cfe6-5b24-b464-51fc996b731a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-492]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-492")], .matchExpressions = []}}}}, .addresses = ["10.10.49.2"], .span = ["testNode-49"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1bb1441b-f958-5365-b979-a3d1c0327651"}, .name = "1bb1441b-f958-5365-b979-a3d1c0327651", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-506]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-506")], .matchExpressions = []}}}}, .addresses = ["10.10.50.6"], .span = ["testNode-50"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "20cc0feb-897a-5b53-bf0b-20fbba3e7c33"}, .name = "20cc0feb-897a-5b53-bf0b-20fbba3e7c33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-500]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-500")], .matchExpressions = []}}}}, .addresses = ["10.10.50.0"], .span = ["testNode-49"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2ee6722d-49b3-5ed1-b72b-c5d7e14eee62"}, .name = "2ee6722d-49b3-5ed1-b72b-c5d7e14eee62", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-512]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-512")], .matchExpressions = []}}}}, .addresses = ["10.10.51.2"], .span = ["testNode-51"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3259be10-4eeb-5e63-882d-6c1fdc3935e7"}, .name = "3259be10-4eeb-5e63-882d-6c1fdc3935e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-507]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-507")], .matchExpressions = []}}}}, .addresses = ["10.10.50.7"], .span = ["testNode-50"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "335c9086-858a-5057-b7a5-ccbef3c6f0c3"}, .name = "335c9086-858a-5057-b7a5-ccbef3c6f0c3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-509]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-509")], .matchExpressions = []}}}}, .addresses = ["10.10.50.9"], .span = ["testNode-50"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "54c401e2-aea9-5b14-9090-d42883ae2106"}, .name = "54c401e2-aea9-5b14-9090-d42883ae2106", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-497]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-497")], .matchExpressions = []}}}}, .addresses = ["10.10.49.7"], .span = ["testNode-49"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "574ad907-66bf-52c1-aa00-f896f38bb8f5"}, .name = "574ad907-66bf-52c1-aa00-f896f38bb8f5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-499]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-499")], .matchExpressions = []}}}}, .addresses = ["10.10.49.9"], .span = ["testNode-49"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "57a3a70c-faf6-5dc2-b2b2-ae3619af8b96"}, .name = "57a3a70c-faf6-5dc2-b2b2-ae3619af8b96", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-511]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-511")], .matchExpressions = []}}}}, .addresses = ["10.10.51.1"], .span = ["testNode-51"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5d7c915f-be3d-5412-945b-db1343c0f53f"}, .name = "5d7c915f-be3d-5412-945b-db1343c0f53f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-493]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-493")], .matchExpressions = []}}}}, .addresses = ["10.10.49.3"], .span = ["testNode-49"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "62da29f8-0e21-533a-a892-7487a537a3ac"}, .name = "62da29f8-0e21-533a-a892-7487a537a3ac", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-481]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-481")], .matchExpressions = []}}}}, .addresses = ["10.10.48.1"], .span = ["testNode-48"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "68e05d5d-5880-58b3-9750-b1a5778fbfd8"}, .name = "68e05d5d-5880-58b3-9750-b1a5778fbfd8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-486]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-486")], .matchExpressions = []}}}}, .addresses = ["10.10.48.6"], .span = ["testNode-48"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6d1f9632-c71e-599b-b0ec-adcaf91077e9"}, .name = "6d1f9632-c71e-599b-b0ec-adcaf91077e9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-484]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-484")], .matchExpressions = []}}}}, .addresses = ["10.10.48.4"], .span = ["testNode-48"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "77e761e1-e7bb-5871-8def-353def0cd43f"}, .name = "77e761e1-e7bb-5871-8def-353def0cd43f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-505]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-505")], .matchExpressions = []}}}}, .addresses = ["10.10.50.5"], .span = ["testNode-50"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8081ab0a-8040-5336-933e-1bcfc92ff856"}, .name = "8081ab0a-8040-5336-933e-1bcfc92ff856", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-501]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-501")], .matchExpressions = []}}}}, .addresses = ["10.10.50.1"], .span = ["testNode-50"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "84933a89-3630-51b2-bfcb-fd7ea143e381"}, .name = "84933a89-3630-51b2-bfcb-fd7ea143e381", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-504]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-504")], .matchExpressions = []}}}}, .addresses = ["10.10.50.4"], .span = ["testNode-50"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8fdf1677-dcc4-5416-93e7-b90771ef01fa"}, .name = "8fdf1677-dcc4-5416-93e7-b90771ef01fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-491]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-491")], .matchExpressions = []}}}}, .addresses = ["10.10.49.1"], .span = ["testNode-49"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9031b885-51d3-5614-97ac-172b40cc9095"}, .name = "9031b885-51d3-5614-97ac-172b40cc9095", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-510]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-510")], .matchExpressions = []}}}}, .addresses = ["10.10.51.0"], .span = ["testNode-50"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9131e664-70d3-5abf-94cb-98daedc563ed"}, .name = "9131e664-70d3-5abf-94cb-98daedc563ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-485]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-485")], .matchExpressions = []}}}}, .addresses = ["10.10.48.5"], .span = ["testNode-48"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "91951d2b-3de3-5257-b6f0-31b371a54821"}, .name = "91951d2b-3de3-5257-b6f0-31b371a54821", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-496]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-496")], .matchExpressions = []}}}}, .addresses = ["10.10.49.6"], .span = ["testNode-49"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "93c356d0-6c6d-5097-bb7d-bb85c09b5a92"}, .name = "93c356d0-6c6d-5097-bb7d-bb85c09b5a92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-487]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-487")], .matchExpressions = []}}}}, .addresses = ["10.10.48.7"], .span = ["testNode-48"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "96650dbe-ea2a-56ce-a24d-89a33aab9e53"}, .name = "96650dbe-ea2a-56ce-a24d-89a33aab9e53", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-503]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-503")], .matchExpressions = []}}}}, .addresses = ["10.10.50.3"], .span = ["testNode-50"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9a038913-f2a8-5e80-b5fa-9de255b27318"}, .name = "9a038913-f2a8-5e80-b5fa-9de255b27318", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-498]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-498")], .matchExpressions = []}}}}, .addresses = ["10.10.49.8"], .span = ["testNode-49"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c4c94f0b-1a71-5a01-b4f3-bd4e12ce5697"}, .name = "c4c94f0b-1a71-5a01-b4f3-bd4e12ce5697", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-488]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-488")], .matchExpressions = []}}}}, .addresses = ["10.10.48.8"], .span = ["testNode-48"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d59eb162-99df-5d04-b8c1-e86f9cd0af8c"}, .name = "d59eb162-99df-5d04-b8c1-e86f9cd0af8c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-502]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-502")], .matchExpressions = []}}}}, .addresses = ["10.10.50.2"], .span = ["testNode-50"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d997db1c-c2f0-5d09-b50c-8ebc67d1c2fd"}, .name = "d997db1c-c2f0-5d09-b50c-8ebc67d1c2fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-483]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-483")], .matchExpressions = []}}}}, .addresses = ["10.10.48.3"], .span = ["testNode-48"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dd237788-61ef-5c72-820a-fe6a4fbf8622"}, .name = "dd237788-61ef-5c72-820a-fe6a4fbf8622", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-482]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-482")], .matchExpressions = []}}}}, .addresses = ["10.10.48.2"], .span = ["testNode-48"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e5a2c6b8-18d5-5bad-ba1b-b514a461652e"}, .name = "e5a2c6b8-18d5-5bad-ba1b-b514a461652e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-494]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-494")], .matchExpressions = []}}}}, .addresses = ["10.10.49.4"], .span = ["testNode-49"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e82932e7-38ac-56a0-aa33-7870f6b2b64c"}, .name = "e82932e7-38ac-56a0-aa33-7870f6b2b64c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-490]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-490")], .matchExpressions = []}}}}, .addresses = ["10.10.49.0"], .span = ["testNode-48"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f3d2fbe0-bc42-55de-8f18-ac99d710c16a"}, .name = "f3d2fbe0-bc42-55de-8f18-ac99d710c16a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-508]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-508")], .matchExpressions = []}}}}, .addresses = ["10.10.50.8"], .span = ["testNode-50"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0b7ff700-b184-5c64-b61e-9f5e0e4f695c"}, .name = "0b7ff700-b184-5c64-b61e-9f5e0e4f695c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-489]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-489")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-489", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0f9f3cbb-223d-566a-8017-99102e738a53"}, .name = "0f9f3cbb-223d-566a-8017-99102e738a53", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-495]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-495")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-495", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "186ceca6-cfe6-5b24-b464-51fc996b731a"}, .name = "186ceca6-cfe6-5b24-b464-51fc996b731a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-492]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-492")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-492", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1bb1441b-f958-5365-b979-a3d1c0327651"}, .name = "1bb1441b-f958-5365-b979-a3d1c0327651", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-506]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-506")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-506", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "20cc0feb-897a-5b53-bf0b-20fbba3e7c33"}, .name = "20cc0feb-897a-5b53-bf0b-20fbba3e7c33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-500]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-500")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-500", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3259be10-4eeb-5e63-882d-6c1fdc3935e7"}, .name = "3259be10-4eeb-5e63-882d-6c1fdc3935e7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-507]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-507")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-507", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "335c9086-858a-5057-b7a5-ccbef3c6f0c3"}, .name = "335c9086-858a-5057-b7a5-ccbef3c6f0c3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-509]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-509")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-509", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "54c401e2-aea9-5b14-9090-d42883ae2106"}, .name = "54c401e2-aea9-5b14-9090-d42883ae2106", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-497]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-497")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-497", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "574ad907-66bf-52c1-aa00-f896f38bb8f5"}, .name = "574ad907-66bf-52c1-aa00-f896f38bb8f5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-499]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-499")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-499", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "57a3a70c-faf6-5dc2-b2b2-ae3619af8b96"}, .name = "57a3a70c-faf6-5dc2-b2b2-ae3619af8b96", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-511]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-511")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-511", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5d7c915f-be3d-5412-945b-db1343c0f53f"}, .name = "5d7c915f-be3d-5412-945b-db1343c0f53f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-493]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-493")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-493", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "62da29f8-0e21-533a-a892-7487a537a3ac"}, .name = "62da29f8-0e21-533a-a892-7487a537a3ac", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-481]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-481")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-481", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "68e05d5d-5880-58b3-9750-b1a5778fbfd8"}, .name = "68e05d5d-5880-58b3-9750-b1a5778fbfd8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-486]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-486")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-486", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6d1f9632-c71e-599b-b0ec-adcaf91077e9"}, .name = "6d1f9632-c71e-599b-b0ec-adcaf91077e9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-484]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-484")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-484", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "77e761e1-e7bb-5871-8def-353def0cd43f"}, .name = "77e761e1-e7bb-5871-8def-353def0cd43f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-505]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-505")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-505", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8081ab0a-8040-5336-933e-1bcfc92ff856"}, .name = "8081ab0a-8040-5336-933e-1bcfc92ff856", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-501]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-501")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-501", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "84933a89-3630-51b2-bfcb-fd7ea143e381"}, .name = "84933a89-3630-51b2-bfcb-fd7ea143e381", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-504]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-504")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-504", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8fdf1677-dcc4-5416-93e7-b90771ef01fa"}, .name = "8fdf1677-dcc4-5416-93e7-b90771ef01fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-491]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-491")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-491", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9031b885-51d3-5614-97ac-172b40cc9095"}, .name = "9031b885-51d3-5614-97ac-172b40cc9095", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-510]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-510")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-510", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9131e664-70d3-5abf-94cb-98daedc563ed"}, .name = "9131e664-70d3-5abf-94cb-98daedc563ed", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-485]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-485")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-485", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "91951d2b-3de3-5257-b6f0-31b371a54821"}, .name = "91951d2b-3de3-5257-b6f0-31b371a54821", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-496]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-496")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-496", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "93c356d0-6c6d-5097-bb7d-bb85c09b5a92"}, .name = "93c356d0-6c6d-5097-bb7d-bb85c09b5a92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-487]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-487")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-487", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "96650dbe-ea2a-56ce-a24d-89a33aab9e53"}, .name = "96650dbe-ea2a-56ce-a24d-89a33aab9e53", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-503]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-503")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-503", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9a038913-f2a8-5e80-b5fa-9de255b27318"}, .name = "9a038913-f2a8-5e80-b5fa-9de255b27318", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-498]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-498")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-498", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a7ed93c4-ba2e-5748-b2ae-88a30d10f7a2"}, .name = "a7ed93c4-ba2e-5748-b2ae-88a30d10f7a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-480]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-480")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-480", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c4c94f0b-1a71-5a01-b4f3-bd4e12ce5697"}, .name = "c4c94f0b-1a71-5a01-b4f3-bd4e12ce5697", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-488]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-488")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-488", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d59eb162-99df-5d04-b8c1-e86f9cd0af8c"}, .name = "d59eb162-99df-5d04-b8c1-e86f9cd0af8c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-502]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-502")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-502", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d997db1c-c2f0-5d09-b50c-8ebc67d1c2fd"}, .name = "d997db1c-c2f0-5d09-b50c-8ebc67d1c2fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-483]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-483")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-483", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dd237788-61ef-5c72-820a-fe6a4fbf8622"}, .name = "dd237788-61ef-5c72-820a-fe6a4fbf8622", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-482]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-482")], .matchExpressions = []}}}}, .podsByNode = [("testNode-48", [k8spolicy.PodReference{.name = "testPod-482", .namespace = "testNamespace"}])], .span = ["testNode-48"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e5a2c6b8-18d5-5bad-ba1b-b514a461652e"}, .name = "e5a2c6b8-18d5-5bad-ba1b-b514a461652e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-494]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-494")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-494", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e82932e7-38ac-56a0-aa33-7870f6b2b64c"}, .name = "e82932e7-38ac-56a0-aa33-7870f6b2b64c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-490]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-490")], .matchExpressions = []}}}}, .podsByNode = [("testNode-49", [k8spolicy.PodReference{.name = "testPod-490", .namespace = "testNamespace"}])], .span = ["testNode-49"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f3d2fbe0-bc42-55de-8f18-ac99d710c16a"}, .name = "f3d2fbe0-bc42-55de-8f18-ac99d710c16a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-508]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-508")], .matchExpressions = []}}}}, .podsByNode = [("testNode-50", [k8spolicy.PodReference{.name = "testPod-508", .namespace = "testNamespace"}])], .span = ["testNode-50"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-480"}, .name = "testNP-480", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["62da29f8-0e21-533a-a892-7487a537a3ac"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a7ed93c4-ba2e-5748-b2ae-88a30d10f7a2"]}, .span = ["testNode-48"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-481"}, .name = "testNP-481", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dd237788-61ef-5c72-820a-fe6a4fbf8622"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["62da29f8-0e21-533a-a892-7487a537a3ac"]}, .span = ["testNode-48"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-482"}, .name = "testNP-482", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d997db1c-c2f0-5d09-b50c-8ebc67d1c2fd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dd237788-61ef-5c72-820a-fe6a4fbf8622"]}, .span = ["testNode-48"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-483"}, .name = "testNP-483", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6d1f9632-c71e-599b-b0ec-adcaf91077e9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d997db1c-c2f0-5d09-b50c-8ebc67d1c2fd"]}, .span = ["testNode-48"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-484"}, .name = "testNP-484", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9131e664-70d3-5abf-94cb-98daedc563ed"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6d1f9632-c71e-599b-b0ec-adcaf91077e9"]}, .span = ["testNode-48"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-485"}, .name = "testNP-485", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["68e05d5d-5880-58b3-9750-b1a5778fbfd8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9131e664-70d3-5abf-94cb-98daedc563ed"]}, .span = ["testNode-48"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-486"}, .name = "testNP-486", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["93c356d0-6c6d-5097-bb7d-bb85c09b5a92"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["68e05d5d-5880-58b3-9750-b1a5778fbfd8"]}, .span = ["testNode-48"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-487"}, .name = "testNP-487", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c4c94f0b-1a71-5a01-b4f3-bd4e12ce5697"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["93c356d0-6c6d-5097-bb7d-bb85c09b5a92"]}, .span = ["testNode-48"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-488"}, .name = "testNP-488", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0b7ff700-b184-5c64-b61e-9f5e0e4f695c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c4c94f0b-1a71-5a01-b4f3-bd4e12ce5697"]}, .span = ["testNode-48"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-489"}, .name = "testNP-489", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e82932e7-38ac-56a0-aa33-7870f6b2b64c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0b7ff700-b184-5c64-b61e-9f5e0e4f695c"]}, .span = ["testNode-48"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-490"}, .name = "testNP-490", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8fdf1677-dcc4-5416-93e7-b90771ef01fa"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e82932e7-38ac-56a0-aa33-7870f6b2b64c"]}, .span = ["testNode-49"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-491"}, .name = "testNP-491", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["186ceca6-cfe6-5b24-b464-51fc996b731a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8fdf1677-dcc4-5416-93e7-b90771ef01fa"]}, .span = ["testNode-49"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-492"}, .name = "testNP-492", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5d7c915f-be3d-5412-945b-db1343c0f53f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["186ceca6-cfe6-5b24-b464-51fc996b731a"]}, .span = ["testNode-49"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-493"}, .name = "testNP-493", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e5a2c6b8-18d5-5bad-ba1b-b514a461652e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5d7c915f-be3d-5412-945b-db1343c0f53f"]}, .span = ["testNode-49"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-494"}, .name = "testNP-494", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0f9f3cbb-223d-566a-8017-99102e738a53"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e5a2c6b8-18d5-5bad-ba1b-b514a461652e"]}, .span = ["testNode-49"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-495"}, .name = "testNP-495", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["91951d2b-3de3-5257-b6f0-31b371a54821"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0f9f3cbb-223d-566a-8017-99102e738a53"]}, .span = ["testNode-49"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-496"}, .name = "testNP-496", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["54c401e2-aea9-5b14-9090-d42883ae2106"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["91951d2b-3de3-5257-b6f0-31b371a54821"]}, .span = ["testNode-49"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-497"}, .name = "testNP-497", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9a038913-f2a8-5e80-b5fa-9de255b27318"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["54c401e2-aea9-5b14-9090-d42883ae2106"]}, .span = ["testNode-49"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-498"}, .name = "testNP-498", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["574ad907-66bf-52c1-aa00-f896f38bb8f5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9a038913-f2a8-5e80-b5fa-9de255b27318"]}, .span = ["testNode-49"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-499"}, .name = "testNP-499", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["20cc0feb-897a-5b53-bf0b-20fbba3e7c33"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["574ad907-66bf-52c1-aa00-f896f38bb8f5"]}, .span = ["testNode-49"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-500"}, .name = "testNP-500", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8081ab0a-8040-5336-933e-1bcfc92ff856"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["20cc0feb-897a-5b53-bf0b-20fbba3e7c33"]}, .span = ["testNode-50"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-501"}, .name = "testNP-501", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d59eb162-99df-5d04-b8c1-e86f9cd0af8c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8081ab0a-8040-5336-933e-1bcfc92ff856"]}, .span = ["testNode-50"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-502"}, .name = "testNP-502", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["96650dbe-ea2a-56ce-a24d-89a33aab9e53"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d59eb162-99df-5d04-b8c1-e86f9cd0af8c"]}, .span = ["testNode-50"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-503"}, .name = "testNP-503", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["84933a89-3630-51b2-bfcb-fd7ea143e381"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["96650dbe-ea2a-56ce-a24d-89a33aab9e53"]}, .span = ["testNode-50"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-504"}, .name = "testNP-504", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["77e761e1-e7bb-5871-8def-353def0cd43f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["84933a89-3630-51b2-bfcb-fd7ea143e381"]}, .span = ["testNode-50"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-505"}, .name = "testNP-505", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1bb1441b-f958-5365-b979-a3d1c0327651"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["77e761e1-e7bb-5871-8def-353def0cd43f"]}, .span = ["testNode-50"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-506"}, .name = "testNP-506", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3259be10-4eeb-5e63-882d-6c1fdc3935e7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1bb1441b-f958-5365-b979-a3d1c0327651"]}, .span = ["testNode-50"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-507"}, .name = "testNP-507", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f3d2fbe0-bc42-55de-8f18-ac99d710c16a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3259be10-4eeb-5e63-882d-6c1fdc3935e7"]}, .span = ["testNode-50"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-508"}, .name = "testNP-508", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["335c9086-858a-5057-b7a5-ccbef3c6f0c3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f3d2fbe0-bc42-55de-8f18-ac99d710c16a"]}, .span = ["testNode-50"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-509"}, .name = "testNP-509", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9031b885-51d3-5614-97ac-172b40cc9095"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["335c9086-858a-5057-b7a5-ccbef3c6f0c3"]}, .span = ["testNode-50"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-510"}, .name = "testNP-510", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["57a3a70c-faf6-5dc2-b2b2-ae3619af8b96"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9031b885-51d3-5614-97ac-172b40cc9095"]}, .span = ["testNode-51"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-511"}, .name = "testNP-511", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2ee6722d-49b3-5ed1-b72b-c5d7e14eee62"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["57a3a70c-faf6-5dc2-b2b2-ae3619af8b96"]}, .span = ["testNode-51"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0630f84f-81d1-5ee2-b98a-611177d87fb2"}, .name = "0630f84f-81d1-5ee2-b98a-611177d87fb2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-513]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-513")], .matchExpressions = []}}}}, .addresses = ["10.10.51.3"], .span = ["testNode-51"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0ab512da-56cf-54a2-8275-36b7bde5d0fd"}, .name = "0ab512da-56cf-54a2-8275-36b7bde5d0fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-543]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-543")], .matchExpressions = []}}}}, .addresses = ["10.10.54.3"], .span = ["testNode-54"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "162513fa-bbef-51f4-af13-87b325aeb42c"}, .name = "162513fa-bbef-51f4-af13-87b325aeb42c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-515]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-515")], .matchExpressions = []}}}}, .addresses = ["10.10.51.5"], .span = ["testNode-51"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "164d5376-d8e2-55b0-bc31-79ce70eb932c"}, .name = "164d5376-d8e2-55b0-bc31-79ce70eb932c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-516]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-516")], .matchExpressions = []}}}}, .addresses = ["10.10.51.6"], .span = ["testNode-51"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "16e5c652-c9e8-5840-aed9-3048c557a20d"}, .name = "16e5c652-c9e8-5840-aed9-3048c557a20d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-517]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-517")], .matchExpressions = []}}}}, .addresses = ["10.10.51.7"], .span = ["testNode-51"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "316ad574-20a6-5c63-a8c8-5129a4276436"}, .name = "316ad574-20a6-5c63-a8c8-5129a4276436", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-535]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-535")], .matchExpressions = []}}}}, .addresses = ["10.10.53.5"], .span = ["testNode-53"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "39abce59-27dc-542a-bff0-cdf854ea6f39"}, .name = "39abce59-27dc-542a-bff0-cdf854ea6f39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-529]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-529")], .matchExpressions = []}}}}, .addresses = ["10.10.52.9"], .span = ["testNode-52"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4f1a1b17-e151-5f3d-81e2-42c643e1d50f"}, .name = "4f1a1b17-e151-5f3d-81e2-42c643e1d50f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-530]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-530")], .matchExpressions = []}}}}, .addresses = ["10.10.53.0"], .span = ["testNode-52"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4f7cb4d0-d914-57f3-9718-0792de483bfe"}, .name = "4f7cb4d0-d914-57f3-9718-0792de483bfe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-528]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-528")], .matchExpressions = []}}}}, .addresses = ["10.10.52.8"], .span = ["testNode-52"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "51895ad2-3676-5db7-82b8-f6fdc1074715"}, .name = "51895ad2-3676-5db7-82b8-f6fdc1074715", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-521]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-521")], .matchExpressions = []}}}}, .addresses = ["10.10.52.1"], .span = ["testNode-52"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5887aa90-0cc3-59bb-ab3c-6d2a8ccf720a"}, .name = "5887aa90-0cc3-59bb-ab3c-6d2a8ccf720a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-539]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-539")], .matchExpressions = []}}}}, .addresses = ["10.10.53.9"], .span = ["testNode-53"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "62950c52-ab11-56fa-a3c5-a2d0750f9a31"}, .name = "62950c52-ab11-56fa-a3c5-a2d0750f9a31", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-532]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-532")], .matchExpressions = []}}}}, .addresses = ["10.10.53.2"], .span = ["testNode-53"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "662c35da-e73c-5b83-8481-5885bccbdab4"}, .name = "662c35da-e73c-5b83-8481-5885bccbdab4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-524]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-524")], .matchExpressions = []}}}}, .addresses = ["10.10.52.4"], .span = ["testNode-52"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "76f773ca-c0dd-5080-a26f-50cc5b3918dc"}, .name = "76f773ca-c0dd-5080-a26f-50cc5b3918dc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-519]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-519")], .matchExpressions = []}}}}, .addresses = ["10.10.51.9"], .span = ["testNode-51"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8811b1f3-cbf6-5535-bb08-341f311c7f98"}, .name = "8811b1f3-cbf6-5535-bb08-341f311c7f98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-534]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-534")], .matchExpressions = []}}}}, .addresses = ["10.10.53.4"], .span = ["testNode-53"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8b224324-cd65-5c1f-adce-34db0042f1f4"}, .name = "8b224324-cd65-5c1f-adce-34db0042f1f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-527]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-527")], .matchExpressions = []}}}}, .addresses = ["10.10.52.7"], .span = ["testNode-52"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "98b668bd-3598-55af-ab42-f60f22d1f711"}, .name = "98b668bd-3598-55af-ab42-f60f22d1f711", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-523]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-523")], .matchExpressions = []}}}}, .addresses = ["10.10.52.3"], .span = ["testNode-52"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "99285bff-06f9-5c5b-87a5-eb084e92b9de"}, .name = "99285bff-06f9-5c5b-87a5-eb084e92b9de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-514]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-514")], .matchExpressions = []}}}}, .addresses = ["10.10.51.4"], .span = ["testNode-51"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9b481c1f-75ae-5a8f-a340-8a8d48694c71"}, .name = "9b481c1f-75ae-5a8f-a340-8a8d48694c71", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-538]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-538")], .matchExpressions = []}}}}, .addresses = ["10.10.53.8"], .span = ["testNode-53"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a470f1e5-9041-5f5e-b479-f8ba6a4b0484"}, .name = "a470f1e5-9041-5f5e-b479-f8ba6a4b0484", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-544]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-544")], .matchExpressions = []}}}}, .addresses = ["10.10.54.4"], .span = ["testNode-54"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c7cc4758-0683-5510-a151-4927dba0eea0"}, .name = "c7cc4758-0683-5510-a151-4927dba0eea0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-541]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-541")], .matchExpressions = []}}}}, .addresses = ["10.10.54.1"], .span = ["testNode-54"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c9e1d53a-be59-5b99-84d2-b4e181bd7329"}, .name = "c9e1d53a-be59-5b99-84d2-b4e181bd7329", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-520]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-520")], .matchExpressions = []}}}}, .addresses = ["10.10.52.0"], .span = ["testNode-51"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ce728d86-0919-52c1-aff3-0596a43a5ea8"}, .name = "ce728d86-0919-52c1-aff3-0596a43a5ea8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-540]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-540")], .matchExpressions = []}}}}, .addresses = ["10.10.54.0"], .span = ["testNode-53"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cf731d97-846e-5fb2-8618-a320790d6d7a"}, .name = "cf731d97-846e-5fb2-8618-a320790d6d7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-522]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-522")], .matchExpressions = []}}}}, .addresses = ["10.10.52.2"], .span = ["testNode-52"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d6125509-8f88-551f-a8ba-b129aebca503"}, .name = "d6125509-8f88-551f-a8ba-b129aebca503", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-525]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-525")], .matchExpressions = []}}}}, .addresses = ["10.10.52.5"], .span = ["testNode-52"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e05c896a-0105-56e7-b8b4-8d9a6228a1c4"}, .name = "e05c896a-0105-56e7-b8b4-8d9a6228a1c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-537]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-537")], .matchExpressions = []}}}}, .addresses = ["10.10.53.7"], .span = ["testNode-53"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e553a718-aaa9-5335-9db0-3031f9c891e3"}, .name = "e553a718-aaa9-5335-9db0-3031f9c891e3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-531]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-531")], .matchExpressions = []}}}}, .addresses = ["10.10.53.1"], .span = ["testNode-53"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ea0fd9fb-2cc4-5cbc-ad89-06eda65d0e63"}, .name = "ea0fd9fb-2cc4-5cbc-ad89-06eda65d0e63", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-533]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-533")], .matchExpressions = []}}}}, .addresses = ["10.10.53.3"], .span = ["testNode-53"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ecf47676-066f-5d50-b4c2-dfaedfa02587"}, .name = "ecf47676-066f-5d50-b4c2-dfaedfa02587", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-536]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-536")], .matchExpressions = []}}}}, .addresses = ["10.10.53.6"], .span = ["testNode-53"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f4b3466f-1dc8-5c98-b96b-07802eec780c"}, .name = "f4b3466f-1dc8-5c98-b96b-07802eec780c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-526]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-526")], .matchExpressions = []}}}}, .addresses = ["10.10.52.6"], .span = ["testNode-52"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f52ee491-f23f-5dad-b0f9-01c46c122194"}, .name = "f52ee491-f23f-5dad-b0f9-01c46c122194", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-518]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-518")], .matchExpressions = []}}}}, .addresses = ["10.10.51.8"], .span = ["testNode-51"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f777dd5d-64c1-5510-afc9-350654fda35e"}, .name = "f777dd5d-64c1-5510-afc9-350654fda35e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-542]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-542")], .matchExpressions = []}}}}, .addresses = ["10.10.54.2"], .span = ["testNode-54"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0630f84f-81d1-5ee2-b98a-611177d87fb2"}, .name = "0630f84f-81d1-5ee2-b98a-611177d87fb2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-513]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-513")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-513", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0ab512da-56cf-54a2-8275-36b7bde5d0fd"}, .name = "0ab512da-56cf-54a2-8275-36b7bde5d0fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-543]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-543")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-543", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "162513fa-bbef-51f4-af13-87b325aeb42c"}, .name = "162513fa-bbef-51f4-af13-87b325aeb42c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-515]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-515")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-515", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "164d5376-d8e2-55b0-bc31-79ce70eb932c"}, .name = "164d5376-d8e2-55b0-bc31-79ce70eb932c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-516]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-516")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-516", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "16e5c652-c9e8-5840-aed9-3048c557a20d"}, .name = "16e5c652-c9e8-5840-aed9-3048c557a20d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-517]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-517")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-517", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2ee6722d-49b3-5ed1-b72b-c5d7e14eee62"}, .name = "2ee6722d-49b3-5ed1-b72b-c5d7e14eee62", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-512]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-512")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-512", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "316ad574-20a6-5c63-a8c8-5129a4276436"}, .name = "316ad574-20a6-5c63-a8c8-5129a4276436", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-535]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-535")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-535", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "39abce59-27dc-542a-bff0-cdf854ea6f39"}, .name = "39abce59-27dc-542a-bff0-cdf854ea6f39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-529]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-529")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-529", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4f1a1b17-e151-5f3d-81e2-42c643e1d50f"}, .name = "4f1a1b17-e151-5f3d-81e2-42c643e1d50f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-530]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-530")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-530", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4f7cb4d0-d914-57f3-9718-0792de483bfe"}, .name = "4f7cb4d0-d914-57f3-9718-0792de483bfe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-528]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-528")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-528", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "51895ad2-3676-5db7-82b8-f6fdc1074715"}, .name = "51895ad2-3676-5db7-82b8-f6fdc1074715", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-521]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-521")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-521", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5887aa90-0cc3-59bb-ab3c-6d2a8ccf720a"}, .name = "5887aa90-0cc3-59bb-ab3c-6d2a8ccf720a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-539]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-539")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-539", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "62950c52-ab11-56fa-a3c5-a2d0750f9a31"}, .name = "62950c52-ab11-56fa-a3c5-a2d0750f9a31", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-532]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-532")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-532", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "662c35da-e73c-5b83-8481-5885bccbdab4"}, .name = "662c35da-e73c-5b83-8481-5885bccbdab4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-524]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-524")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-524", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "76f773ca-c0dd-5080-a26f-50cc5b3918dc"}, .name = "76f773ca-c0dd-5080-a26f-50cc5b3918dc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-519]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-519")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-519", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8811b1f3-cbf6-5535-bb08-341f311c7f98"}, .name = "8811b1f3-cbf6-5535-bb08-341f311c7f98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-534]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-534")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-534", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8b224324-cd65-5c1f-adce-34db0042f1f4"}, .name = "8b224324-cd65-5c1f-adce-34db0042f1f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-527]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-527")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-527", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "98b668bd-3598-55af-ab42-f60f22d1f711"}, .name = "98b668bd-3598-55af-ab42-f60f22d1f711", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-523]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-523")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-523", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "99285bff-06f9-5c5b-87a5-eb084e92b9de"}, .name = "99285bff-06f9-5c5b-87a5-eb084e92b9de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-514]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-514")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-514", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9b481c1f-75ae-5a8f-a340-8a8d48694c71"}, .name = "9b481c1f-75ae-5a8f-a340-8a8d48694c71", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-538]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-538")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-538", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c7cc4758-0683-5510-a151-4927dba0eea0"}, .name = "c7cc4758-0683-5510-a151-4927dba0eea0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-541]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-541")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-541", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c9e1d53a-be59-5b99-84d2-b4e181bd7329"}, .name = "c9e1d53a-be59-5b99-84d2-b4e181bd7329", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-520]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-520")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-520", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ce728d86-0919-52c1-aff3-0596a43a5ea8"}, .name = "ce728d86-0919-52c1-aff3-0596a43a5ea8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-540]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-540")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-540", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cf731d97-846e-5fb2-8618-a320790d6d7a"}, .name = "cf731d97-846e-5fb2-8618-a320790d6d7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-522]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-522")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-522", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d6125509-8f88-551f-a8ba-b129aebca503"}, .name = "d6125509-8f88-551f-a8ba-b129aebca503", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-525]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-525")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-525", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e05c896a-0105-56e7-b8b4-8d9a6228a1c4"}, .name = "e05c896a-0105-56e7-b8b4-8d9a6228a1c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-537]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-537")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-537", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e553a718-aaa9-5335-9db0-3031f9c891e3"}, .name = "e553a718-aaa9-5335-9db0-3031f9c891e3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-531]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-531")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-531", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ea0fd9fb-2cc4-5cbc-ad89-06eda65d0e63"}, .name = "ea0fd9fb-2cc4-5cbc-ad89-06eda65d0e63", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-533]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-533")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-533", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ecf47676-066f-5d50-b4c2-dfaedfa02587"}, .name = "ecf47676-066f-5d50-b4c2-dfaedfa02587", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-536]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-536")], .matchExpressions = []}}}}, .podsByNode = [("testNode-53", [k8spolicy.PodReference{.name = "testPod-536", .namespace = "testNamespace"}])], .span = ["testNode-53"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f4b3466f-1dc8-5c98-b96b-07802eec780c"}, .name = "f4b3466f-1dc8-5c98-b96b-07802eec780c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-526]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-526")], .matchExpressions = []}}}}, .podsByNode = [("testNode-52", [k8spolicy.PodReference{.name = "testPod-526", .namespace = "testNamespace"}])], .span = ["testNode-52"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f52ee491-f23f-5dad-b0f9-01c46c122194"}, .name = "f52ee491-f23f-5dad-b0f9-01c46c122194", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-518]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-518")], .matchExpressions = []}}}}, .podsByNode = [("testNode-51", [k8spolicy.PodReference{.name = "testPod-518", .namespace = "testNamespace"}])], .span = ["testNode-51"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f777dd5d-64c1-5510-afc9-350654fda35e"}, .name = "f777dd5d-64c1-5510-afc9-350654fda35e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-542]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-542")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-542", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-512"}, .name = "testNP-512", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0630f84f-81d1-5ee2-b98a-611177d87fb2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2ee6722d-49b3-5ed1-b72b-c5d7e14eee62"]}, .span = ["testNode-51"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-513"}, .name = "testNP-513", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["99285bff-06f9-5c5b-87a5-eb084e92b9de"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0630f84f-81d1-5ee2-b98a-611177d87fb2"]}, .span = ["testNode-51"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-514"}, .name = "testNP-514", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["162513fa-bbef-51f4-af13-87b325aeb42c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["99285bff-06f9-5c5b-87a5-eb084e92b9de"]}, .span = ["testNode-51"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-515"}, .name = "testNP-515", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["164d5376-d8e2-55b0-bc31-79ce70eb932c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["162513fa-bbef-51f4-af13-87b325aeb42c"]}, .span = ["testNode-51"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-516"}, .name = "testNP-516", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["16e5c652-c9e8-5840-aed9-3048c557a20d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["164d5376-d8e2-55b0-bc31-79ce70eb932c"]}, .span = ["testNode-51"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-517"}, .name = "testNP-517", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f52ee491-f23f-5dad-b0f9-01c46c122194"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["16e5c652-c9e8-5840-aed9-3048c557a20d"]}, .span = ["testNode-51"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-518"}, .name = "testNP-518", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["76f773ca-c0dd-5080-a26f-50cc5b3918dc"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f52ee491-f23f-5dad-b0f9-01c46c122194"]}, .span = ["testNode-51"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-519"}, .name = "testNP-519", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c9e1d53a-be59-5b99-84d2-b4e181bd7329"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["76f773ca-c0dd-5080-a26f-50cc5b3918dc"]}, .span = ["testNode-51"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-520"}, .name = "testNP-520", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["51895ad2-3676-5db7-82b8-f6fdc1074715"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c9e1d53a-be59-5b99-84d2-b4e181bd7329"]}, .span = ["testNode-52"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-521"}, .name = "testNP-521", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cf731d97-846e-5fb2-8618-a320790d6d7a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["51895ad2-3676-5db7-82b8-f6fdc1074715"]}, .span = ["testNode-52"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-522"}, .name = "testNP-522", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["98b668bd-3598-55af-ab42-f60f22d1f711"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cf731d97-846e-5fb2-8618-a320790d6d7a"]}, .span = ["testNode-52"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-523"}, .name = "testNP-523", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["662c35da-e73c-5b83-8481-5885bccbdab4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["98b668bd-3598-55af-ab42-f60f22d1f711"]}, .span = ["testNode-52"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-524"}, .name = "testNP-524", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d6125509-8f88-551f-a8ba-b129aebca503"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["662c35da-e73c-5b83-8481-5885bccbdab4"]}, .span = ["testNode-52"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-525"}, .name = "testNP-525", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f4b3466f-1dc8-5c98-b96b-07802eec780c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d6125509-8f88-551f-a8ba-b129aebca503"]}, .span = ["testNode-52"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-526"}, .name = "testNP-526", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8b224324-cd65-5c1f-adce-34db0042f1f4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f4b3466f-1dc8-5c98-b96b-07802eec780c"]}, .span = ["testNode-52"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-527"}, .name = "testNP-527", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4f7cb4d0-d914-57f3-9718-0792de483bfe"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8b224324-cd65-5c1f-adce-34db0042f1f4"]}, .span = ["testNode-52"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-528"}, .name = "testNP-528", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["39abce59-27dc-542a-bff0-cdf854ea6f39"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4f7cb4d0-d914-57f3-9718-0792de483bfe"]}, .span = ["testNode-52"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-529"}, .name = "testNP-529", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4f1a1b17-e151-5f3d-81e2-42c643e1d50f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["39abce59-27dc-542a-bff0-cdf854ea6f39"]}, .span = ["testNode-52"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-530"}, .name = "testNP-530", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e553a718-aaa9-5335-9db0-3031f9c891e3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4f1a1b17-e151-5f3d-81e2-42c643e1d50f"]}, .span = ["testNode-53"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-531"}, .name = "testNP-531", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["62950c52-ab11-56fa-a3c5-a2d0750f9a31"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e553a718-aaa9-5335-9db0-3031f9c891e3"]}, .span = ["testNode-53"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-532"}, .name = "testNP-532", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ea0fd9fb-2cc4-5cbc-ad89-06eda65d0e63"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["62950c52-ab11-56fa-a3c5-a2d0750f9a31"]}, .span = ["testNode-53"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-533"}, .name = "testNP-533", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8811b1f3-cbf6-5535-bb08-341f311c7f98"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ea0fd9fb-2cc4-5cbc-ad89-06eda65d0e63"]}, .span = ["testNode-53"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-534"}, .name = "testNP-534", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["316ad574-20a6-5c63-a8c8-5129a4276436"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8811b1f3-cbf6-5535-bb08-341f311c7f98"]}, .span = ["testNode-53"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-535"}, .name = "testNP-535", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ecf47676-066f-5d50-b4c2-dfaedfa02587"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["316ad574-20a6-5c63-a8c8-5129a4276436"]}, .span = ["testNode-53"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-536"}, .name = "testNP-536", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e05c896a-0105-56e7-b8b4-8d9a6228a1c4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ecf47676-066f-5d50-b4c2-dfaedfa02587"]}, .span = ["testNode-53"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-537"}, .name = "testNP-537", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9b481c1f-75ae-5a8f-a340-8a8d48694c71"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e05c896a-0105-56e7-b8b4-8d9a6228a1c4"]}, .span = ["testNode-53"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-538"}, .name = "testNP-538", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5887aa90-0cc3-59bb-ab3c-6d2a8ccf720a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9b481c1f-75ae-5a8f-a340-8a8d48694c71"]}, .span = ["testNode-53"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-539"}, .name = "testNP-539", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ce728d86-0919-52c1-aff3-0596a43a5ea8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5887aa90-0cc3-59bb-ab3c-6d2a8ccf720a"]}, .span = ["testNode-53"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-540"}, .name = "testNP-540", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c7cc4758-0683-5510-a151-4927dba0eea0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ce728d86-0919-52c1-aff3-0596a43a5ea8"]}, .span = ["testNode-54"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-541"}, .name = "testNP-541", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f777dd5d-64c1-5510-afc9-350654fda35e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c7cc4758-0683-5510-a151-4927dba0eea0"]}, .span = ["testNode-54"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-542"}, .name = "testNP-542", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0ab512da-56cf-54a2-8275-36b7bde5d0fd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f777dd5d-64c1-5510-afc9-350654fda35e"]}, .span = ["testNode-54"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-543"}, .name = "testNP-543", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a470f1e5-9041-5f5e-b479-f8ba6a4b0484"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0ab512da-56cf-54a2-8275-36b7bde5d0fd"]}, .span = ["testNode-54"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "02c8515c-8244-50ed-9651-03b5154714f4"}, .name = "02c8515c-8244-50ed-9651-03b5154714f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-550]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-550")], .matchExpressions = []}}}}, .addresses = ["10.10.55.0"], .span = ["testNode-54"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1cf0dc5a-4a8a-5d80-94a3-7fb7c7cc6253"}, .name = "1cf0dc5a-4a8a-5d80-94a3-7fb7c7cc6253", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-573]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-573")], .matchExpressions = []}}}}, .addresses = ["10.10.57.3"], .span = ["testNode-57"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "245404c7-f061-5121-a887-abc232e6f16f"}, .name = "245404c7-f061-5121-a887-abc232e6f16f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-572]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-572")], .matchExpressions = []}}}}, .addresses = ["10.10.57.2"], .span = ["testNode-57"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2dedb007-922f-5045-9aaa-d7e8a1a4d0c9"}, .name = "2dedb007-922f-5045-9aaa-d7e8a1a4d0c9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-560]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-560")], .matchExpressions = []}}}}, .addresses = ["10.10.56.0"], .span = ["testNode-55"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "400b9c51-1e3a-5f72-a91c-28ccab7ed259"}, .name = "400b9c51-1e3a-5f72-a91c-28ccab7ed259", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-545]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-545")], .matchExpressions = []}}}}, .addresses = ["10.10.54.5"], .span = ["testNode-54"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4342488b-24e4-5281-ac4e-9a826ff695ac"}, .name = "4342488b-24e4-5281-ac4e-9a826ff695ac", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-570]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-570")], .matchExpressions = []}}}}, .addresses = ["10.10.57.0"], .span = ["testNode-56"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "490a4d66-a915-596d-a7ae-7ed38cffc090"}, .name = "490a4d66-a915-596d-a7ae-7ed38cffc090", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-558]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-558")], .matchExpressions = []}}}}, .addresses = ["10.10.55.8"], .span = ["testNode-55"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5705f71f-5a00-541c-a258-a72e7d37519f"}, .name = "5705f71f-5a00-541c-a258-a72e7d37519f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-554]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-554")], .matchExpressions = []}}}}, .addresses = ["10.10.55.4"], .span = ["testNode-55"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "58eaddc2-81dd-5ebd-8992-1649ef90b1a7"}, .name = "58eaddc2-81dd-5ebd-8992-1649ef90b1a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-557]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-557")], .matchExpressions = []}}}}, .addresses = ["10.10.55.7"], .span = ["testNode-55"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "646df3b3-aff0-525e-a824-9731c2582cfd"}, .name = "646df3b3-aff0-525e-a824-9731c2582cfd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-565]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-565")], .matchExpressions = []}}}}, .addresses = ["10.10.56.5"], .span = ["testNode-56"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6ca5a44c-4e85-5f8f-b3c5-fc822a51e62b"}, .name = "6ca5a44c-4e85-5f8f-b3c5-fc822a51e62b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-564]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-564")], .matchExpressions = []}}}}, .addresses = ["10.10.56.4"], .span = ["testNode-56"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6e844261-161e-5648-8581-1a99a89baea2"}, .name = "6e844261-161e-5648-8581-1a99a89baea2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-546]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-546")], .matchExpressions = []}}}}, .addresses = ["10.10.54.6"], .span = ["testNode-54"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6eae2776-d76e-5a67-812e-d867d79c9439"}, .name = "6eae2776-d76e-5a67-812e-d867d79c9439", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-556]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-556")], .matchExpressions = []}}}}, .addresses = ["10.10.55.6"], .span = ["testNode-55"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6f26868b-e151-53fe-8363-f0173a7a6fe3"}, .name = "6f26868b-e151-53fe-8363-f0173a7a6fe3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-568]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-568")], .matchExpressions = []}}}}, .addresses = ["10.10.56.8"], .span = ["testNode-56"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "82971d91-1775-5306-9f41-a64faadf86da"}, .name = "82971d91-1775-5306-9f41-a64faadf86da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-555]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-555")], .matchExpressions = []}}}}, .addresses = ["10.10.55.5"], .span = ["testNode-55"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "99efebbe-7346-5db8-a34f-cc605cfbb01b"}, .name = "99efebbe-7346-5db8-a34f-cc605cfbb01b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-562]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-562")], .matchExpressions = []}}}}, .addresses = ["10.10.56.2"], .span = ["testNode-56"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9c4807fe-166e-50bd-9d74-a161e6cf88c1"}, .name = "9c4807fe-166e-50bd-9d74-a161e6cf88c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-552]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-552")], .matchExpressions = []}}}}, .addresses = ["10.10.55.2"], .span = ["testNode-55"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a0e230b2-de64-59a0-bd7b-24d543574784"}, .name = "a0e230b2-de64-59a0-bd7b-24d543574784", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-548]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-548")], .matchExpressions = []}}}}, .addresses = ["10.10.54.8"], .span = ["testNode-54"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a30b0366-56be-5cfe-b533-66bb0e45dbbb"}, .name = "a30b0366-56be-5cfe-b533-66bb0e45dbbb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-563]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-563")], .matchExpressions = []}}}}, .addresses = ["10.10.56.3"], .span = ["testNode-56"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "aa3c3321-b8e0-50df-b33d-d8f884352427"}, .name = "aa3c3321-b8e0-50df-b33d-d8f884352427", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-569]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-569")], .matchExpressions = []}}}}, .addresses = ["10.10.56.9"], .span = ["testNode-56"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "adf1be1e-d6e3-5749-bb20-4c2ef2f99534"}, .name = "adf1be1e-d6e3-5749-bb20-4c2ef2f99534", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-553]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-553")], .matchExpressions = []}}}}, .addresses = ["10.10.55.3"], .span = ["testNode-55"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b770e235-f827-5ea6-a3b2-26c46824612f"}, .name = "b770e235-f827-5ea6-a3b2-26c46824612f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-575]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-575")], .matchExpressions = []}}}}, .addresses = ["10.10.57.5"], .span = ["testNode-57"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c31afc60-cc5f-544f-9901-094ce7345a02"}, .name = "c31afc60-cc5f-544f-9901-094ce7345a02", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-561]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-561")], .matchExpressions = []}}}}, .addresses = ["10.10.56.1"], .span = ["testNode-56"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c347e7e7-7c4c-5356-a46a-409517823dec"}, .name = "c347e7e7-7c4c-5356-a46a-409517823dec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-559]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-559")], .matchExpressions = []}}}}, .addresses = ["10.10.55.9"], .span = ["testNode-55"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d2dba445-8178-52d9-b2ea-643e9ad3a292"}, .name = "d2dba445-8178-52d9-b2ea-643e9ad3a292", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-571]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-571")], .matchExpressions = []}}}}, .addresses = ["10.10.57.1"], .span = ["testNode-57"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d5f192df-b467-5316-987b-776fc448052a"}, .name = "d5f192df-b467-5316-987b-776fc448052a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-549]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-549")], .matchExpressions = []}}}}, .addresses = ["10.10.54.9"], .span = ["testNode-54"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "db7789cc-3aa6-5c59-8197-c988f73c30ae"}, .name = "db7789cc-3aa6-5c59-8197-c988f73c30ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-547]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-547")], .matchExpressions = []}}}}, .addresses = ["10.10.54.7"], .span = ["testNode-54"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e05c8b78-2c02-507f-9968-65798f9470aa"}, .name = "e05c8b78-2c02-507f-9968-65798f9470aa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-551]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-551")], .matchExpressions = []}}}}, .addresses = ["10.10.55.1"], .span = ["testNode-55"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e8ac4162-f9a2-5e4d-8f31-6a4959bbf2ad"}, .name = "e8ac4162-f9a2-5e4d-8f31-6a4959bbf2ad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-567]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-567")], .matchExpressions = []}}}}, .addresses = ["10.10.56.7"], .span = ["testNode-56"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f10c7a1d-217d-585a-bbac-662be29e6b3f"}, .name = "f10c7a1d-217d-585a-bbac-662be29e6b3f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-576]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-576")], .matchExpressions = []}}}}, .addresses = ["10.10.57.6"], .span = ["testNode-57"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f701013b-1ea7-5f11-9a3b-bc648357f16c"}, .name = "f701013b-1ea7-5f11-9a3b-bc648357f16c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-574]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-574")], .matchExpressions = []}}}}, .addresses = ["10.10.57.4"], .span = ["testNode-57"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fa5d70a6-9fe1-5bc3-ab15-43cc208473c1"}, .name = "fa5d70a6-9fe1-5bc3-ab15-43cc208473c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-566]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-566")], .matchExpressions = []}}}}, .addresses = ["10.10.56.6"], .span = ["testNode-56"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "02c8515c-8244-50ed-9651-03b5154714f4"}, .name = "02c8515c-8244-50ed-9651-03b5154714f4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-550]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-550")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-550", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1cf0dc5a-4a8a-5d80-94a3-7fb7c7cc6253"}, .name = "1cf0dc5a-4a8a-5d80-94a3-7fb7c7cc6253", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-573]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-573")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-573", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "245404c7-f061-5121-a887-abc232e6f16f"}, .name = "245404c7-f061-5121-a887-abc232e6f16f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-572]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-572")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-572", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2dedb007-922f-5045-9aaa-d7e8a1a4d0c9"}, .name = "2dedb007-922f-5045-9aaa-d7e8a1a4d0c9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-560]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-560")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-560", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "400b9c51-1e3a-5f72-a91c-28ccab7ed259"}, .name = "400b9c51-1e3a-5f72-a91c-28ccab7ed259", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-545]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-545")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-545", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4342488b-24e4-5281-ac4e-9a826ff695ac"}, .name = "4342488b-24e4-5281-ac4e-9a826ff695ac", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-570]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-570")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-570", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "490a4d66-a915-596d-a7ae-7ed38cffc090"}, .name = "490a4d66-a915-596d-a7ae-7ed38cffc090", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-558]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-558")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-558", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5705f71f-5a00-541c-a258-a72e7d37519f"}, .name = "5705f71f-5a00-541c-a258-a72e7d37519f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-554]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-554")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-554", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "58eaddc2-81dd-5ebd-8992-1649ef90b1a7"}, .name = "58eaddc2-81dd-5ebd-8992-1649ef90b1a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-557]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-557")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-557", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "646df3b3-aff0-525e-a824-9731c2582cfd"}, .name = "646df3b3-aff0-525e-a824-9731c2582cfd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-565]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-565")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-565", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6ca5a44c-4e85-5f8f-b3c5-fc822a51e62b"}, .name = "6ca5a44c-4e85-5f8f-b3c5-fc822a51e62b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-564]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-564")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-564", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6e844261-161e-5648-8581-1a99a89baea2"}, .name = "6e844261-161e-5648-8581-1a99a89baea2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-546]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-546")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-546", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6eae2776-d76e-5a67-812e-d867d79c9439"}, .name = "6eae2776-d76e-5a67-812e-d867d79c9439", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-556]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-556")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-556", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6f26868b-e151-53fe-8363-f0173a7a6fe3"}, .name = "6f26868b-e151-53fe-8363-f0173a7a6fe3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-568]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-568")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-568", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "82971d91-1775-5306-9f41-a64faadf86da"}, .name = "82971d91-1775-5306-9f41-a64faadf86da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-555]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-555")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-555", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "99efebbe-7346-5db8-a34f-cc605cfbb01b"}, .name = "99efebbe-7346-5db8-a34f-cc605cfbb01b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-562]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-562")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-562", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9c4807fe-166e-50bd-9d74-a161e6cf88c1"}, .name = "9c4807fe-166e-50bd-9d74-a161e6cf88c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-552]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-552")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-552", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a0e230b2-de64-59a0-bd7b-24d543574784"}, .name = "a0e230b2-de64-59a0-bd7b-24d543574784", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-548]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-548")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-548", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a30b0366-56be-5cfe-b533-66bb0e45dbbb"}, .name = "a30b0366-56be-5cfe-b533-66bb0e45dbbb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-563]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-563")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-563", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a470f1e5-9041-5f5e-b479-f8ba6a4b0484"}, .name = "a470f1e5-9041-5f5e-b479-f8ba6a4b0484", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-544]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-544")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-544", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "aa3c3321-b8e0-50df-b33d-d8f884352427"}, .name = "aa3c3321-b8e0-50df-b33d-d8f884352427", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-569]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-569")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-569", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "adf1be1e-d6e3-5749-bb20-4c2ef2f99534"}, .name = "adf1be1e-d6e3-5749-bb20-4c2ef2f99534", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-553]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-553")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-553", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b770e235-f827-5ea6-a3b2-26c46824612f"}, .name = "b770e235-f827-5ea6-a3b2-26c46824612f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-575]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-575")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-575", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c31afc60-cc5f-544f-9901-094ce7345a02"}, .name = "c31afc60-cc5f-544f-9901-094ce7345a02", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-561]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-561")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-561", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c347e7e7-7c4c-5356-a46a-409517823dec"}, .name = "c347e7e7-7c4c-5356-a46a-409517823dec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-559]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-559")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-559", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d2dba445-8178-52d9-b2ea-643e9ad3a292"}, .name = "d2dba445-8178-52d9-b2ea-643e9ad3a292", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-571]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-571")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-571", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d5f192df-b467-5316-987b-776fc448052a"}, .name = "d5f192df-b467-5316-987b-776fc448052a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-549]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-549")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-549", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "db7789cc-3aa6-5c59-8197-c988f73c30ae"}, .name = "db7789cc-3aa6-5c59-8197-c988f73c30ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-547]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-547")], .matchExpressions = []}}}}, .podsByNode = [("testNode-54", [k8spolicy.PodReference{.name = "testPod-547", .namespace = "testNamespace"}])], .span = ["testNode-54"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e05c8b78-2c02-507f-9968-65798f9470aa"}, .name = "e05c8b78-2c02-507f-9968-65798f9470aa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-551]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-551")], .matchExpressions = []}}}}, .podsByNode = [("testNode-55", [k8spolicy.PodReference{.name = "testPod-551", .namespace = "testNamespace"}])], .span = ["testNode-55"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e8ac4162-f9a2-5e4d-8f31-6a4959bbf2ad"}, .name = "e8ac4162-f9a2-5e4d-8f31-6a4959bbf2ad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-567]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-567")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-567", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f701013b-1ea7-5f11-9a3b-bc648357f16c"}, .name = "f701013b-1ea7-5f11-9a3b-bc648357f16c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-574]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-574")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-574", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fa5d70a6-9fe1-5bc3-ab15-43cc208473c1"}, .name = "fa5d70a6-9fe1-5bc3-ab15-43cc208473c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-566]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-566")], .matchExpressions = []}}}}, .podsByNode = [("testNode-56", [k8spolicy.PodReference{.name = "testPod-566", .namespace = "testNamespace"}])], .span = ["testNode-56"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-544"}, .name = "testNP-544", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["400b9c51-1e3a-5f72-a91c-28ccab7ed259"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a470f1e5-9041-5f5e-b479-f8ba6a4b0484"]}, .span = ["testNode-54"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-545"}, .name = "testNP-545", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6e844261-161e-5648-8581-1a99a89baea2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["400b9c51-1e3a-5f72-a91c-28ccab7ed259"]}, .span = ["testNode-54"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-546"}, .name = "testNP-546", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["db7789cc-3aa6-5c59-8197-c988f73c30ae"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6e844261-161e-5648-8581-1a99a89baea2"]}, .span = ["testNode-54"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-547"}, .name = "testNP-547", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a0e230b2-de64-59a0-bd7b-24d543574784"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["db7789cc-3aa6-5c59-8197-c988f73c30ae"]}, .span = ["testNode-54"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-548"}, .name = "testNP-548", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d5f192df-b467-5316-987b-776fc448052a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a0e230b2-de64-59a0-bd7b-24d543574784"]}, .span = ["testNode-54"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-549"}, .name = "testNP-549", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["02c8515c-8244-50ed-9651-03b5154714f4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d5f192df-b467-5316-987b-776fc448052a"]}, .span = ["testNode-54"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-550"}, .name = "testNP-550", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e05c8b78-2c02-507f-9968-65798f9470aa"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["02c8515c-8244-50ed-9651-03b5154714f4"]}, .span = ["testNode-55"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-551"}, .name = "testNP-551", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9c4807fe-166e-50bd-9d74-a161e6cf88c1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e05c8b78-2c02-507f-9968-65798f9470aa"]}, .span = ["testNode-55"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-552"}, .name = "testNP-552", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["adf1be1e-d6e3-5749-bb20-4c2ef2f99534"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9c4807fe-166e-50bd-9d74-a161e6cf88c1"]}, .span = ["testNode-55"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-553"}, .name = "testNP-553", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5705f71f-5a00-541c-a258-a72e7d37519f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["adf1be1e-d6e3-5749-bb20-4c2ef2f99534"]}, .span = ["testNode-55"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-554"}, .name = "testNP-554", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["82971d91-1775-5306-9f41-a64faadf86da"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5705f71f-5a00-541c-a258-a72e7d37519f"]}, .span = ["testNode-55"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-555"}, .name = "testNP-555", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6eae2776-d76e-5a67-812e-d867d79c9439"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["82971d91-1775-5306-9f41-a64faadf86da"]}, .span = ["testNode-55"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-556"}, .name = "testNP-556", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["58eaddc2-81dd-5ebd-8992-1649ef90b1a7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6eae2776-d76e-5a67-812e-d867d79c9439"]}, .span = ["testNode-55"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-557"}, .name = "testNP-557", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["490a4d66-a915-596d-a7ae-7ed38cffc090"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["58eaddc2-81dd-5ebd-8992-1649ef90b1a7"]}, .span = ["testNode-55"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-558"}, .name = "testNP-558", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c347e7e7-7c4c-5356-a46a-409517823dec"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["490a4d66-a915-596d-a7ae-7ed38cffc090"]}, .span = ["testNode-55"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-559"}, .name = "testNP-559", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2dedb007-922f-5045-9aaa-d7e8a1a4d0c9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c347e7e7-7c4c-5356-a46a-409517823dec"]}, .span = ["testNode-55"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-560"}, .name = "testNP-560", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c31afc60-cc5f-544f-9901-094ce7345a02"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2dedb007-922f-5045-9aaa-d7e8a1a4d0c9"]}, .span = ["testNode-56"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-561"}, .name = "testNP-561", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["99efebbe-7346-5db8-a34f-cc605cfbb01b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c31afc60-cc5f-544f-9901-094ce7345a02"]}, .span = ["testNode-56"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-562"}, .name = "testNP-562", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a30b0366-56be-5cfe-b533-66bb0e45dbbb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["99efebbe-7346-5db8-a34f-cc605cfbb01b"]}, .span = ["testNode-56"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-563"}, .name = "testNP-563", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6ca5a44c-4e85-5f8f-b3c5-fc822a51e62b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a30b0366-56be-5cfe-b533-66bb0e45dbbb"]}, .span = ["testNode-56"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-564"}, .name = "testNP-564", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["646df3b3-aff0-525e-a824-9731c2582cfd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6ca5a44c-4e85-5f8f-b3c5-fc822a51e62b"]}, .span = ["testNode-56"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-565"}, .name = "testNP-565", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fa5d70a6-9fe1-5bc3-ab15-43cc208473c1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["646df3b3-aff0-525e-a824-9731c2582cfd"]}, .span = ["testNode-56"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-566"}, .name = "testNP-566", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e8ac4162-f9a2-5e4d-8f31-6a4959bbf2ad"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fa5d70a6-9fe1-5bc3-ab15-43cc208473c1"]}, .span = ["testNode-56"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-567"}, .name = "testNP-567", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6f26868b-e151-53fe-8363-f0173a7a6fe3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e8ac4162-f9a2-5e4d-8f31-6a4959bbf2ad"]}, .span = ["testNode-56"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-568"}, .name = "testNP-568", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["aa3c3321-b8e0-50df-b33d-d8f884352427"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6f26868b-e151-53fe-8363-f0173a7a6fe3"]}, .span = ["testNode-56"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-569"}, .name = "testNP-569", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4342488b-24e4-5281-ac4e-9a826ff695ac"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["aa3c3321-b8e0-50df-b33d-d8f884352427"]}, .span = ["testNode-56"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-570"}, .name = "testNP-570", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d2dba445-8178-52d9-b2ea-643e9ad3a292"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4342488b-24e4-5281-ac4e-9a826ff695ac"]}, .span = ["testNode-57"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-571"}, .name = "testNP-571", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["245404c7-f061-5121-a887-abc232e6f16f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d2dba445-8178-52d9-b2ea-643e9ad3a292"]}, .span = ["testNode-57"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-572"}, .name = "testNP-572", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1cf0dc5a-4a8a-5d80-94a3-7fb7c7cc6253"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["245404c7-f061-5121-a887-abc232e6f16f"]}, .span = ["testNode-57"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-573"}, .name = "testNP-573", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f701013b-1ea7-5f11-9a3b-bc648357f16c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1cf0dc5a-4a8a-5d80-94a3-7fb7c7cc6253"]}, .span = ["testNode-57"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-574"}, .name = "testNP-574", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b770e235-f827-5ea6-a3b2-26c46824612f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f701013b-1ea7-5f11-9a3b-bc648357f16c"]}, .span = ["testNode-57"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-575"}, .name = "testNP-575", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f10c7a1d-217d-585a-bbac-662be29e6b3f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b770e235-f827-5ea6-a3b2-26c46824612f"]}, .span = ["testNode-57"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "099f8ddf-8553-5ff2-85e0-aa9338224153"}, .name = "099f8ddf-8553-5ff2-85e0-aa9338224153", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-585]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-585")], .matchExpressions = []}}}}, .addresses = ["10.10.58.5"], .span = ["testNode-58"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "24580ad1-fce8-5f37-85ad-a3aa634df817"}, .name = "24580ad1-fce8-5f37-85ad-a3aa634df817", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-606]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-606")], .matchExpressions = []}}}}, .addresses = ["10.10.60.6"], .span = ["testNode-60"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2b8a71ae-ff36-5b18-b966-f75583911850"}, .name = "2b8a71ae-ff36-5b18-b966-f75583911850", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-599]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-599")], .matchExpressions = []}}}}, .addresses = ["10.10.59.9"], .span = ["testNode-59"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "33de27a1-45a9-599d-b44f-2541f2123572"}, .name = "33de27a1-45a9-599d-b44f-2541f2123572", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-590]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-590")], .matchExpressions = []}}}}, .addresses = ["10.10.59.0"], .span = ["testNode-58"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3479fe87-45fc-5a1f-a6ed-48e3b2b85ebb"}, .name = "3479fe87-45fc-5a1f-a6ed-48e3b2b85ebb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-596]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-596")], .matchExpressions = []}}}}, .addresses = ["10.10.59.6"], .span = ["testNode-59"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3c4c8a22-677f-588f-91ea-aec207969bcf"}, .name = "3c4c8a22-677f-588f-91ea-aec207969bcf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-601]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-601")], .matchExpressions = []}}}}, .addresses = ["10.10.60.1"], .span = ["testNode-60"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3d153d2a-8236-57fe-9f55-0a6981fbc71d"}, .name = "3d153d2a-8236-57fe-9f55-0a6981fbc71d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-583]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-583")], .matchExpressions = []}}}}, .addresses = ["10.10.58.3"], .span = ["testNode-58"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4df50081-ec02-51c2-89bc-4b2d09f3b12a"}, .name = "4df50081-ec02-51c2-89bc-4b2d09f3b12a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-587]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-587")], .matchExpressions = []}}}}, .addresses = ["10.10.58.7"], .span = ["testNode-58"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "53124661-5afa-515e-bee1-2294801f9f1d"}, .name = "53124661-5afa-515e-bee1-2294801f9f1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-589]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-589")], .matchExpressions = []}}}}, .addresses = ["10.10.58.9"], .span = ["testNode-58"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "56dadaa1-66ab-5788-a69d-5635c68167cb"}, .name = "56dadaa1-66ab-5788-a69d-5635c68167cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-586]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-586")], .matchExpressions = []}}}}, .addresses = ["10.10.58.6"], .span = ["testNode-58"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5864a261-4f19-513e-85e0-5dfcdeef0a47"}, .name = "5864a261-4f19-513e-85e0-5dfcdeef0a47", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-591]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-591")], .matchExpressions = []}}}}, .addresses = ["10.10.59.1"], .span = ["testNode-59"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "676fd7ca-e7ab-532b-9dce-aca7ca3c1ca9"}, .name = "676fd7ca-e7ab-532b-9dce-aca7ca3c1ca9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-603]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-603")], .matchExpressions = []}}}}, .addresses = ["10.10.60.3"], .span = ["testNode-60"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6c8f0a2d-1aed-56d3-96a8-d20710d18944"}, .name = "6c8f0a2d-1aed-56d3-96a8-d20710d18944", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-579]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-579")], .matchExpressions = []}}}}, .addresses = ["10.10.57.9"], .span = ["testNode-57"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "73354c54-6761-5461-8e99-840b88a53d74"}, .name = "73354c54-6761-5461-8e99-840b88a53d74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-592]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-592")], .matchExpressions = []}}}}, .addresses = ["10.10.59.2"], .span = ["testNode-59"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "73e427bb-7be2-5306-8c53-e9cb77c038b0"}, .name = "73e427bb-7be2-5306-8c53-e9cb77c038b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-605]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-605")], .matchExpressions = []}}}}, .addresses = ["10.10.60.5"], .span = ["testNode-60"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7ac04e43-a1d5-50bd-a460-6454114278dd"}, .name = "7ac04e43-a1d5-50bd-a460-6454114278dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-584]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-584")], .matchExpressions = []}}}}, .addresses = ["10.10.58.4"], .span = ["testNode-58"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7c2f47ab-3589-59a1-a0a3-1220e53edcd6"}, .name = "7c2f47ab-3589-59a1-a0a3-1220e53edcd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-604]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-604")], .matchExpressions = []}}}}, .addresses = ["10.10.60.4"], .span = ["testNode-60"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "83f98633-5003-5d41-b0bd-b1ca66d90a35"}, .name = "83f98633-5003-5d41-b0bd-b1ca66d90a35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-597]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-597")], .matchExpressions = []}}}}, .addresses = ["10.10.59.7"], .span = ["testNode-59"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8e74abbb-4837-55f7-8e55-32942e0143da"}, .name = "8e74abbb-4837-55f7-8e55-32942e0143da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-582]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-582")], .matchExpressions = []}}}}, .addresses = ["10.10.58.2"], .span = ["testNode-58"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b09bc033-ef80-594c-8175-4c917d70d92b"}, .name = "b09bc033-ef80-594c-8175-4c917d70d92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-607]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-607")], .matchExpressions = []}}}}, .addresses = ["10.10.60.7"], .span = ["testNode-60"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b269eb41-fa9a-5b36-88af-8f4ded5be7f3"}, .name = "b269eb41-fa9a-5b36-88af-8f4ded5be7f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-580]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-580")], .matchExpressions = []}}}}, .addresses = ["10.10.58.0"], .span = ["testNode-57"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b4a35daa-fa37-533a-a8d4-8fcaabaec2a0"}, .name = "b4a35daa-fa37-533a-a8d4-8fcaabaec2a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-595]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-595")], .matchExpressions = []}}}}, .addresses = ["10.10.59.5"], .span = ["testNode-59"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "beea0e10-9b77-5ebb-8954-df1fb77851b2"}, .name = "beea0e10-9b77-5ebb-8954-df1fb77851b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-608]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-608")], .matchExpressions = []}}}}, .addresses = ["10.10.60.8"], .span = ["testNode-60"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dbee061b-60f2-5706-af2c-133453c9d22f"}, .name = "dbee061b-60f2-5706-af2c-133453c9d22f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-588]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-588")], .matchExpressions = []}}}}, .addresses = ["10.10.58.8"], .span = ["testNode-58"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dd8dacc7-22b1-581c-b1e3-acc3d938a986"}, .name = "dd8dacc7-22b1-581c-b1e3-acc3d938a986", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-600]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-600")], .matchExpressions = []}}}}, .addresses = ["10.10.60.0"], .span = ["testNode-59"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e2eb2f56-1e75-552f-84a8-c95307b832db"}, .name = "e2eb2f56-1e75-552f-84a8-c95307b832db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-594]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-594")], .matchExpressions = []}}}}, .addresses = ["10.10.59.4"], .span = ["testNode-59"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e510c09b-7e12-53f1-92ab-2d6841c874b2"}, .name = "e510c09b-7e12-53f1-92ab-2d6841c874b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-581]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-581")], .matchExpressions = []}}}}, .addresses = ["10.10.58.1"], .span = ["testNode-58"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e6a0f570-813b-5d34-8059-ffa14e03f0b9"}, .name = "e6a0f570-813b-5d34-8059-ffa14e03f0b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-602]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-602")], .matchExpressions = []}}}}, .addresses = ["10.10.60.2"], .span = ["testNode-60"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e9e9b9fa-1e3e-5e36-9ca6-70e6d29706a2"}, .name = "e9e9b9fa-1e3e-5e36-9ca6-70e6d29706a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-577]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-577")], .matchExpressions = []}}}}, .addresses = ["10.10.57.7"], .span = ["testNode-57"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ebe1d5e9-8bc1-5833-94a0-afa68aa19eaa"}, .name = "ebe1d5e9-8bc1-5833-94a0-afa68aa19eaa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-598]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-598")], .matchExpressions = []}}}}, .addresses = ["10.10.59.8"], .span = ["testNode-59"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f06fa2c0-2851-5e5f-bb4f-bdaf807988b5"}, .name = "f06fa2c0-2851-5e5f-bb4f-bdaf807988b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-593]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-593")], .matchExpressions = []}}}}, .addresses = ["10.10.59.3"], .span = ["testNode-59"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fea72ce8-ba96-560b-bf06-c2f6abcbe40f"}, .name = "fea72ce8-ba96-560b-bf06-c2f6abcbe40f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-578]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-578")], .matchExpressions = []}}}}, .addresses = ["10.10.57.8"], .span = ["testNode-57"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "099f8ddf-8553-5ff2-85e0-aa9338224153"}, .name = "099f8ddf-8553-5ff2-85e0-aa9338224153", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-585]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-585")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-585", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "24580ad1-fce8-5f37-85ad-a3aa634df817"}, .name = "24580ad1-fce8-5f37-85ad-a3aa634df817", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-606]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-606")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-606", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2b8a71ae-ff36-5b18-b966-f75583911850"}, .name = "2b8a71ae-ff36-5b18-b966-f75583911850", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-599]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-599")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-599", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "33de27a1-45a9-599d-b44f-2541f2123572"}, .name = "33de27a1-45a9-599d-b44f-2541f2123572", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-590]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-590")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-590", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3479fe87-45fc-5a1f-a6ed-48e3b2b85ebb"}, .name = "3479fe87-45fc-5a1f-a6ed-48e3b2b85ebb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-596]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-596")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-596", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3c4c8a22-677f-588f-91ea-aec207969bcf"}, .name = "3c4c8a22-677f-588f-91ea-aec207969bcf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-601]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-601")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-601", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3d153d2a-8236-57fe-9f55-0a6981fbc71d"}, .name = "3d153d2a-8236-57fe-9f55-0a6981fbc71d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-583]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-583")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-583", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4df50081-ec02-51c2-89bc-4b2d09f3b12a"}, .name = "4df50081-ec02-51c2-89bc-4b2d09f3b12a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-587]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-587")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-587", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "53124661-5afa-515e-bee1-2294801f9f1d"}, .name = "53124661-5afa-515e-bee1-2294801f9f1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-589]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-589")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-589", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "56dadaa1-66ab-5788-a69d-5635c68167cb"}, .name = "56dadaa1-66ab-5788-a69d-5635c68167cb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-586]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-586")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-586", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5864a261-4f19-513e-85e0-5dfcdeef0a47"}, .name = "5864a261-4f19-513e-85e0-5dfcdeef0a47", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-591]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-591")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-591", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "676fd7ca-e7ab-532b-9dce-aca7ca3c1ca9"}, .name = "676fd7ca-e7ab-532b-9dce-aca7ca3c1ca9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-603]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-603")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-603", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6c8f0a2d-1aed-56d3-96a8-d20710d18944"}, .name = "6c8f0a2d-1aed-56d3-96a8-d20710d18944", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-579]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-579")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-579", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "73354c54-6761-5461-8e99-840b88a53d74"}, .name = "73354c54-6761-5461-8e99-840b88a53d74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-592]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-592")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-592", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "73e427bb-7be2-5306-8c53-e9cb77c038b0"}, .name = "73e427bb-7be2-5306-8c53-e9cb77c038b0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-605]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-605")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-605", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7ac04e43-a1d5-50bd-a460-6454114278dd"}, .name = "7ac04e43-a1d5-50bd-a460-6454114278dd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-584]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-584")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-584", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7c2f47ab-3589-59a1-a0a3-1220e53edcd6"}, .name = "7c2f47ab-3589-59a1-a0a3-1220e53edcd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-604]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-604")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-604", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "83f98633-5003-5d41-b0bd-b1ca66d90a35"}, .name = "83f98633-5003-5d41-b0bd-b1ca66d90a35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-597]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-597")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-597", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8e74abbb-4837-55f7-8e55-32942e0143da"}, .name = "8e74abbb-4837-55f7-8e55-32942e0143da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-582]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-582")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-582", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b09bc033-ef80-594c-8175-4c917d70d92b"}, .name = "b09bc033-ef80-594c-8175-4c917d70d92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-607]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-607")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-607", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b269eb41-fa9a-5b36-88af-8f4ded5be7f3"}, .name = "b269eb41-fa9a-5b36-88af-8f4ded5be7f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-580]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-580")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-580", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b4a35daa-fa37-533a-a8d4-8fcaabaec2a0"}, .name = "b4a35daa-fa37-533a-a8d4-8fcaabaec2a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-595]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-595")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-595", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dbee061b-60f2-5706-af2c-133453c9d22f"}, .name = "dbee061b-60f2-5706-af2c-133453c9d22f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-588]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-588")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-588", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dd8dacc7-22b1-581c-b1e3-acc3d938a986"}, .name = "dd8dacc7-22b1-581c-b1e3-acc3d938a986", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-600]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-600")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-600", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e2eb2f56-1e75-552f-84a8-c95307b832db"}, .name = "e2eb2f56-1e75-552f-84a8-c95307b832db", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-594]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-594")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-594", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e510c09b-7e12-53f1-92ab-2d6841c874b2"}, .name = "e510c09b-7e12-53f1-92ab-2d6841c874b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-581]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-581")], .matchExpressions = []}}}}, .podsByNode = [("testNode-58", [k8spolicy.PodReference{.name = "testPod-581", .namespace = "testNamespace"}])], .span = ["testNode-58"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e6a0f570-813b-5d34-8059-ffa14e03f0b9"}, .name = "e6a0f570-813b-5d34-8059-ffa14e03f0b9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-602]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-602")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-602", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e9e9b9fa-1e3e-5e36-9ca6-70e6d29706a2"}, .name = "e9e9b9fa-1e3e-5e36-9ca6-70e6d29706a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-577]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-577")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-577", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ebe1d5e9-8bc1-5833-94a0-afa68aa19eaa"}, .name = "ebe1d5e9-8bc1-5833-94a0-afa68aa19eaa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-598]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-598")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-598", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f06fa2c0-2851-5e5f-bb4f-bdaf807988b5"}, .name = "f06fa2c0-2851-5e5f-bb4f-bdaf807988b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-593]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-593")], .matchExpressions = []}}}}, .podsByNode = [("testNode-59", [k8spolicy.PodReference{.name = "testPod-593", .namespace = "testNamespace"}])], .span = ["testNode-59"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f10c7a1d-217d-585a-bbac-662be29e6b3f"}, .name = "f10c7a1d-217d-585a-bbac-662be29e6b3f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-576]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-576")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-576", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fea72ce8-ba96-560b-bf06-c2f6abcbe40f"}, .name = "fea72ce8-ba96-560b-bf06-c2f6abcbe40f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-578]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-578")], .matchExpressions = []}}}}, .podsByNode = [("testNode-57", [k8spolicy.PodReference{.name = "testPod-578", .namespace = "testNamespace"}])], .span = ["testNode-57"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-576"}, .name = "testNP-576", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e9e9b9fa-1e3e-5e36-9ca6-70e6d29706a2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f10c7a1d-217d-585a-bbac-662be29e6b3f"]}, .span = ["testNode-57"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-577"}, .name = "testNP-577", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fea72ce8-ba96-560b-bf06-c2f6abcbe40f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e9e9b9fa-1e3e-5e36-9ca6-70e6d29706a2"]}, .span = ["testNode-57"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-578"}, .name = "testNP-578", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6c8f0a2d-1aed-56d3-96a8-d20710d18944"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fea72ce8-ba96-560b-bf06-c2f6abcbe40f"]}, .span = ["testNode-57"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-579"}, .name = "testNP-579", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b269eb41-fa9a-5b36-88af-8f4ded5be7f3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6c8f0a2d-1aed-56d3-96a8-d20710d18944"]}, .span = ["testNode-57"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-580"}, .name = "testNP-580", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e510c09b-7e12-53f1-92ab-2d6841c874b2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b269eb41-fa9a-5b36-88af-8f4ded5be7f3"]}, .span = ["testNode-58"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-581"}, .name = "testNP-581", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8e74abbb-4837-55f7-8e55-32942e0143da"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e510c09b-7e12-53f1-92ab-2d6841c874b2"]}, .span = ["testNode-58"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-582"}, .name = "testNP-582", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3d153d2a-8236-57fe-9f55-0a6981fbc71d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8e74abbb-4837-55f7-8e55-32942e0143da"]}, .span = ["testNode-58"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-583"}, .name = "testNP-583", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7ac04e43-a1d5-50bd-a460-6454114278dd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3d153d2a-8236-57fe-9f55-0a6981fbc71d"]}, .span = ["testNode-58"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-584"}, .name = "testNP-584", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["099f8ddf-8553-5ff2-85e0-aa9338224153"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7ac04e43-a1d5-50bd-a460-6454114278dd"]}, .span = ["testNode-58"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-585"}, .name = "testNP-585", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["56dadaa1-66ab-5788-a69d-5635c68167cb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["099f8ddf-8553-5ff2-85e0-aa9338224153"]}, .span = ["testNode-58"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-586"}, .name = "testNP-586", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4df50081-ec02-51c2-89bc-4b2d09f3b12a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["56dadaa1-66ab-5788-a69d-5635c68167cb"]}, .span = ["testNode-58"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-587"}, .name = "testNP-587", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dbee061b-60f2-5706-af2c-133453c9d22f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4df50081-ec02-51c2-89bc-4b2d09f3b12a"]}, .span = ["testNode-58"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-588"}, .name = "testNP-588", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["53124661-5afa-515e-bee1-2294801f9f1d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dbee061b-60f2-5706-af2c-133453c9d22f"]}, .span = ["testNode-58"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-589"}, .name = "testNP-589", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["33de27a1-45a9-599d-b44f-2541f2123572"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["53124661-5afa-515e-bee1-2294801f9f1d"]}, .span = ["testNode-58"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-590"}, .name = "testNP-590", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5864a261-4f19-513e-85e0-5dfcdeef0a47"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["33de27a1-45a9-599d-b44f-2541f2123572"]}, .span = ["testNode-59"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-591"}, .name = "testNP-591", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["73354c54-6761-5461-8e99-840b88a53d74"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5864a261-4f19-513e-85e0-5dfcdeef0a47"]}, .span = ["testNode-59"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-592"}, .name = "testNP-592", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f06fa2c0-2851-5e5f-bb4f-bdaf807988b5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["73354c54-6761-5461-8e99-840b88a53d74"]}, .span = ["testNode-59"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-593"}, .name = "testNP-593", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e2eb2f56-1e75-552f-84a8-c95307b832db"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f06fa2c0-2851-5e5f-bb4f-bdaf807988b5"]}, .span = ["testNode-59"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-594"}, .name = "testNP-594", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b4a35daa-fa37-533a-a8d4-8fcaabaec2a0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e2eb2f56-1e75-552f-84a8-c95307b832db"]}, .span = ["testNode-59"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-595"}, .name = "testNP-595", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3479fe87-45fc-5a1f-a6ed-48e3b2b85ebb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b4a35daa-fa37-533a-a8d4-8fcaabaec2a0"]}, .span = ["testNode-59"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-596"}, .name = "testNP-596", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["83f98633-5003-5d41-b0bd-b1ca66d90a35"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3479fe87-45fc-5a1f-a6ed-48e3b2b85ebb"]}, .span = ["testNode-59"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-597"}, .name = "testNP-597", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ebe1d5e9-8bc1-5833-94a0-afa68aa19eaa"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["83f98633-5003-5d41-b0bd-b1ca66d90a35"]}, .span = ["testNode-59"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-598"}, .name = "testNP-598", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2b8a71ae-ff36-5b18-b966-f75583911850"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ebe1d5e9-8bc1-5833-94a0-afa68aa19eaa"]}, .span = ["testNode-59"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-599"}, .name = "testNP-599", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dd8dacc7-22b1-581c-b1e3-acc3d938a986"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2b8a71ae-ff36-5b18-b966-f75583911850"]}, .span = ["testNode-59"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-600"}, .name = "testNP-600", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3c4c8a22-677f-588f-91ea-aec207969bcf"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dd8dacc7-22b1-581c-b1e3-acc3d938a986"]}, .span = ["testNode-60"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-601"}, .name = "testNP-601", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e6a0f570-813b-5d34-8059-ffa14e03f0b9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3c4c8a22-677f-588f-91ea-aec207969bcf"]}, .span = ["testNode-60"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-602"}, .name = "testNP-602", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["676fd7ca-e7ab-532b-9dce-aca7ca3c1ca9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e6a0f570-813b-5d34-8059-ffa14e03f0b9"]}, .span = ["testNode-60"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-603"}, .name = "testNP-603", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7c2f47ab-3589-59a1-a0a3-1220e53edcd6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["676fd7ca-e7ab-532b-9dce-aca7ca3c1ca9"]}, .span = ["testNode-60"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-604"}, .name = "testNP-604", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["73e427bb-7be2-5306-8c53-e9cb77c038b0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7c2f47ab-3589-59a1-a0a3-1220e53edcd6"]}, .span = ["testNode-60"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-605"}, .name = "testNP-605", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["24580ad1-fce8-5f37-85ad-a3aa634df817"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["73e427bb-7be2-5306-8c53-e9cb77c038b0"]}, .span = ["testNode-60"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-606"}, .name = "testNP-606", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b09bc033-ef80-594c-8175-4c917d70d92b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["24580ad1-fce8-5f37-85ad-a3aa634df817"]}, .span = ["testNode-60"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-607"}, .name = "testNP-607", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["beea0e10-9b77-5ebb-8954-df1fb77851b2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b09bc033-ef80-594c-8175-4c917d70d92b"]}, .span = ["testNode-60"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "02cbc3d5-ce89-5797-8edb-f1e0124b4213"}, .name = "02cbc3d5-ce89-5797-8edb-f1e0124b4213", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-609]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-609")], .matchExpressions = []}}}}, .addresses = ["10.10.60.9"], .span = ["testNode-60"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "07450dd8-62a4-58bd-ab58-3bf1afcd7544"}, .name = "07450dd8-62a4-58bd-ab58-3bf1afcd7544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-624]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-624")], .matchExpressions = []}}}}, .addresses = ["10.10.62.4"], .span = ["testNode-62"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "09d28f85-06b5-5b1f-8a89-7e2056b42464"}, .name = "09d28f85-06b5-5b1f-8a89-7e2056b42464", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-621]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-621")], .matchExpressions = []}}}}, .addresses = ["10.10.62.1"], .span = ["testNode-62"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0f5b033d-1747-557a-8590-8844a46d9fc5"}, .name = "0f5b033d-1747-557a-8590-8844a46d9fc5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-623]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-623")], .matchExpressions = []}}}}, .addresses = ["10.10.62.3"], .span = ["testNode-62"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "14e5ebca-584d-5f9d-b43a-fb5698a03564"}, .name = "14e5ebca-584d-5f9d-b43a-fb5698a03564", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-632]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-632")], .matchExpressions = []}}}}, .addresses = ["10.10.63.2"], .span = ["testNode-63"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1628c233-3279-572b-8b79-88538c9b8733"}, .name = "1628c233-3279-572b-8b79-88538c9b8733", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-631]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-631")], .matchExpressions = []}}}}, .addresses = ["10.10.63.1"], .span = ["testNode-63"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2176e069-ef1c-535e-b476-05c5ab15178b"}, .name = "2176e069-ef1c-535e-b476-05c5ab15178b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-613]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-613")], .matchExpressions = []}}}}, .addresses = ["10.10.61.3"], .span = ["testNode-61"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2eac5404-367f-50fd-8119-f3e6794df0d3"}, .name = "2eac5404-367f-50fd-8119-f3e6794df0d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-622]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-622")], .matchExpressions = []}}}}, .addresses = ["10.10.62.2"], .span = ["testNode-62"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "371b46b9-c4c2-5a44-9103-298077dc6cb7"}, .name = "371b46b9-c4c2-5a44-9103-298077dc6cb7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-620]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-620")], .matchExpressions = []}}}}, .addresses = ["10.10.62.0"], .span = ["testNode-61"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4dfd8d05-ce2e-513f-8b18-0cf487f9b42a"}, .name = "4dfd8d05-ce2e-513f-8b18-0cf487f9b42a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-610]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-610")], .matchExpressions = []}}}}, .addresses = ["10.10.61.0"], .span = ["testNode-60"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "527369a9-819d-5f1d-8780-887f94383b74"}, .name = "527369a9-819d-5f1d-8780-887f94383b74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-612]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-612")], .matchExpressions = []}}}}, .addresses = ["10.10.61.2"], .span = ["testNode-61"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "55728c3c-de70-52b8-bd4c-2c37db6c7f19"}, .name = "55728c3c-de70-52b8-bd4c-2c37db6c7f19", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-616]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-616")], .matchExpressions = []}}}}, .addresses = ["10.10.61.6"], .span = ["testNode-61"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5aadee18-3a80-5312-a3f5-7e05f657e175"}, .name = "5aadee18-3a80-5312-a3f5-7e05f657e175", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-629]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-629")], .matchExpressions = []}}}}, .addresses = ["10.10.62.9"], .span = ["testNode-62"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5d310546-d5d4-523d-b785-2c7675ec7e04"}, .name = "5d310546-d5d4-523d-b785-2c7675ec7e04", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-639]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-639")], .matchExpressions = []}}}}, .addresses = ["10.10.63.9"], .span = ["testNode-63"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "66d31e3c-ede9-5e40-919c-87749b4ad22d"}, .name = "66d31e3c-ede9-5e40-919c-87749b4ad22d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-614]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-614")], .matchExpressions = []}}}}, .addresses = ["10.10.61.4"], .span = ["testNode-61"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6c0d188b-4b43-5eff-b36a-93f7101f318c"}, .name = "6c0d188b-4b43-5eff-b36a-93f7101f318c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-640]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-640")], .matchExpressions = []}}}}, .addresses = ["10.10.64.0"], .span = ["testNode-63"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7913f2ad-5d73-58a3-a65f-17c6f6faa67f"}, .name = "7913f2ad-5d73-58a3-a65f-17c6f6faa67f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-628]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-628")], .matchExpressions = []}}}}, .addresses = ["10.10.62.8"], .span = ["testNode-62"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "79f2dd81-7108-5ce6-9871-ae200bc6a08d"}, .name = "79f2dd81-7108-5ce6-9871-ae200bc6a08d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-633]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-633")], .matchExpressions = []}}}}, .addresses = ["10.10.63.3"], .span = ["testNode-63"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "89e3298f-f80d-5f37-884b-68c35c794ba2"}, .name = "89e3298f-f80d-5f37-884b-68c35c794ba2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-611]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-611")], .matchExpressions = []}}}}, .addresses = ["10.10.61.1"], .span = ["testNode-61"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9bee88c5-bdeb-5162-b0b0-7bbc3a96e8fd"}, .name = "9bee88c5-bdeb-5162-b0b0-7bbc3a96e8fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-637]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-637")], .matchExpressions = []}}}}, .addresses = ["10.10.63.7"], .span = ["testNode-63"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9df7ba66-5d37-55de-aa62-ae5ff2ff9636"}, .name = "9df7ba66-5d37-55de-aa62-ae5ff2ff9636", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-635]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-635")], .matchExpressions = []}}}}, .addresses = ["10.10.63.5"], .span = ["testNode-63"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a14fcf1e-0c5c-58c5-bce6-5ebad9eeddda"}, .name = "a14fcf1e-0c5c-58c5-bce6-5ebad9eeddda", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-636]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-636")], .matchExpressions = []}}}}, .addresses = ["10.10.63.6"], .span = ["testNode-63"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a77028cf-ea44-563d-8793-17f78af5073f"}, .name = "a77028cf-ea44-563d-8793-17f78af5073f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-618]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-618")], .matchExpressions = []}}}}, .addresses = ["10.10.61.8"], .span = ["testNode-61"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ac4c787b-6104-55af-82f2-f7b7e56d6444"}, .name = "ac4c787b-6104-55af-82f2-f7b7e56d6444", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-617]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-617")], .matchExpressions = []}}}}, .addresses = ["10.10.61.7"], .span = ["testNode-61"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "af669eee-58ab-51a2-8075-568d0180d198"}, .name = "af669eee-58ab-51a2-8075-568d0180d198", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-625]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-625")], .matchExpressions = []}}}}, .addresses = ["10.10.62.5"], .span = ["testNode-62"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c1952cb5-d1ea-5ad0-90fd-21c2d2621ced"}, .name = "c1952cb5-d1ea-5ad0-90fd-21c2d2621ced", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-630]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-630")], .matchExpressions = []}}}}, .addresses = ["10.10.63.0"], .span = ["testNode-62"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ca0b5527-67c7-523c-902e-935206a43e98"}, .name = "ca0b5527-67c7-523c-902e-935206a43e98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-619]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-619")], .matchExpressions = []}}}}, .addresses = ["10.10.61.9"], .span = ["testNode-61"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cb667a38-f94c-5e63-ac54-ae40a40f3903"}, .name = "cb667a38-f94c-5e63-ac54-ae40a40f3903", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-634]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-634")], .matchExpressions = []}}}}, .addresses = ["10.10.63.4"], .span = ["testNode-63"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ce49c890-098e-535e-b32f-0fbae2740cbc"}, .name = "ce49c890-098e-535e-b32f-0fbae2740cbc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-638]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-638")], .matchExpressions = []}}}}, .addresses = ["10.10.63.8"], .span = ["testNode-63"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "efdac60d-6b62-52c9-a31f-92e341373be1"}, .name = "efdac60d-6b62-52c9-a31f-92e341373be1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-627]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-627")], .matchExpressions = []}}}}, .addresses = ["10.10.62.7"], .span = ["testNode-62"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f85cc566-a332-589f-86ec-73271417d818"}, .name = "f85cc566-a332-589f-86ec-73271417d818", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-626]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-626")], .matchExpressions = []}}}}, .addresses = ["10.10.62.6"], .span = ["testNode-62"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fddf927d-e3be-5758-8f3c-b55e8bd5477c"}, .name = "fddf927d-e3be-5758-8f3c-b55e8bd5477c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-615]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-615")], .matchExpressions = []}}}}, .addresses = ["10.10.61.5"], .span = ["testNode-61"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "02cbc3d5-ce89-5797-8edb-f1e0124b4213"}, .name = "02cbc3d5-ce89-5797-8edb-f1e0124b4213", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-609]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-609")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-609", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "07450dd8-62a4-58bd-ab58-3bf1afcd7544"}, .name = "07450dd8-62a4-58bd-ab58-3bf1afcd7544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-624]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-624")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-624", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "09d28f85-06b5-5b1f-8a89-7e2056b42464"}, .name = "09d28f85-06b5-5b1f-8a89-7e2056b42464", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-621]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-621")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-621", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0f5b033d-1747-557a-8590-8844a46d9fc5"}, .name = "0f5b033d-1747-557a-8590-8844a46d9fc5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-623]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-623")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-623", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "14e5ebca-584d-5f9d-b43a-fb5698a03564"}, .name = "14e5ebca-584d-5f9d-b43a-fb5698a03564", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-632]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-632")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-632", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1628c233-3279-572b-8b79-88538c9b8733"}, .name = "1628c233-3279-572b-8b79-88538c9b8733", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-631]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-631")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-631", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2176e069-ef1c-535e-b476-05c5ab15178b"}, .name = "2176e069-ef1c-535e-b476-05c5ab15178b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-613]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-613")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-613", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2eac5404-367f-50fd-8119-f3e6794df0d3"}, .name = "2eac5404-367f-50fd-8119-f3e6794df0d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-622]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-622")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-622", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "371b46b9-c4c2-5a44-9103-298077dc6cb7"}, .name = "371b46b9-c4c2-5a44-9103-298077dc6cb7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-620]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-620")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-620", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4dfd8d05-ce2e-513f-8b18-0cf487f9b42a"}, .name = "4dfd8d05-ce2e-513f-8b18-0cf487f9b42a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-610]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-610")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-610", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "527369a9-819d-5f1d-8780-887f94383b74"}, .name = "527369a9-819d-5f1d-8780-887f94383b74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-612]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-612")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-612", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "55728c3c-de70-52b8-bd4c-2c37db6c7f19"}, .name = "55728c3c-de70-52b8-bd4c-2c37db6c7f19", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-616]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-616")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-616", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5aadee18-3a80-5312-a3f5-7e05f657e175"}, .name = "5aadee18-3a80-5312-a3f5-7e05f657e175", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-629]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-629")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-629", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5d310546-d5d4-523d-b785-2c7675ec7e04"}, .name = "5d310546-d5d4-523d-b785-2c7675ec7e04", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-639]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-639")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-639", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "66d31e3c-ede9-5e40-919c-87749b4ad22d"}, .name = "66d31e3c-ede9-5e40-919c-87749b4ad22d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-614]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-614")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-614", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7913f2ad-5d73-58a3-a65f-17c6f6faa67f"}, .name = "7913f2ad-5d73-58a3-a65f-17c6f6faa67f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-628]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-628")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-628", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "79f2dd81-7108-5ce6-9871-ae200bc6a08d"}, .name = "79f2dd81-7108-5ce6-9871-ae200bc6a08d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-633]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-633")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-633", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "89e3298f-f80d-5f37-884b-68c35c794ba2"}, .name = "89e3298f-f80d-5f37-884b-68c35c794ba2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-611]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-611")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-611", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9bee88c5-bdeb-5162-b0b0-7bbc3a96e8fd"}, .name = "9bee88c5-bdeb-5162-b0b0-7bbc3a96e8fd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-637]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-637")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-637", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9df7ba66-5d37-55de-aa62-ae5ff2ff9636"}, .name = "9df7ba66-5d37-55de-aa62-ae5ff2ff9636", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-635]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-635")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-635", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a14fcf1e-0c5c-58c5-bce6-5ebad9eeddda"}, .name = "a14fcf1e-0c5c-58c5-bce6-5ebad9eeddda", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-636]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-636")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-636", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a77028cf-ea44-563d-8793-17f78af5073f"}, .name = "a77028cf-ea44-563d-8793-17f78af5073f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-618]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-618")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-618", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ac4c787b-6104-55af-82f2-f7b7e56d6444"}, .name = "ac4c787b-6104-55af-82f2-f7b7e56d6444", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-617]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-617")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-617", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "af669eee-58ab-51a2-8075-568d0180d198"}, .name = "af669eee-58ab-51a2-8075-568d0180d198", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-625]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-625")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-625", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "beea0e10-9b77-5ebb-8954-df1fb77851b2"}, .name = "beea0e10-9b77-5ebb-8954-df1fb77851b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-608]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-608")], .matchExpressions = []}}}}, .podsByNode = [("testNode-60", [k8spolicy.PodReference{.name = "testPod-608", .namespace = "testNamespace"}])], .span = ["testNode-60"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c1952cb5-d1ea-5ad0-90fd-21c2d2621ced"}, .name = "c1952cb5-d1ea-5ad0-90fd-21c2d2621ced", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-630]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-630")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-630", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ca0b5527-67c7-523c-902e-935206a43e98"}, .name = "ca0b5527-67c7-523c-902e-935206a43e98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-619]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-619")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-619", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cb667a38-f94c-5e63-ac54-ae40a40f3903"}, .name = "cb667a38-f94c-5e63-ac54-ae40a40f3903", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-634]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-634")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-634", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ce49c890-098e-535e-b32f-0fbae2740cbc"}, .name = "ce49c890-098e-535e-b32f-0fbae2740cbc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-638]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-638")], .matchExpressions = []}}}}, .podsByNode = [("testNode-63", [k8spolicy.PodReference{.name = "testPod-638", .namespace = "testNamespace"}])], .span = ["testNode-63"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "efdac60d-6b62-52c9-a31f-92e341373be1"}, .name = "efdac60d-6b62-52c9-a31f-92e341373be1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-627]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-627")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-627", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f85cc566-a332-589f-86ec-73271417d818"}, .name = "f85cc566-a332-589f-86ec-73271417d818", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-626]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-626")], .matchExpressions = []}}}}, .podsByNode = [("testNode-62", [k8spolicy.PodReference{.name = "testPod-626", .namespace = "testNamespace"}])], .span = ["testNode-62"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fddf927d-e3be-5758-8f3c-b55e8bd5477c"}, .name = "fddf927d-e3be-5758-8f3c-b55e8bd5477c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-615]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-615")], .matchExpressions = []}}}}, .podsByNode = [("testNode-61", [k8spolicy.PodReference{.name = "testPod-615", .namespace = "testNamespace"}])], .span = ["testNode-61"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-608"}, .name = "testNP-608", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["02cbc3d5-ce89-5797-8edb-f1e0124b4213"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["beea0e10-9b77-5ebb-8954-df1fb77851b2"]}, .span = ["testNode-60"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-609"}, .name = "testNP-609", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4dfd8d05-ce2e-513f-8b18-0cf487f9b42a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["02cbc3d5-ce89-5797-8edb-f1e0124b4213"]}, .span = ["testNode-60"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-610"}, .name = "testNP-610", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["89e3298f-f80d-5f37-884b-68c35c794ba2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4dfd8d05-ce2e-513f-8b18-0cf487f9b42a"]}, .span = ["testNode-61"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-611"}, .name = "testNP-611", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["527369a9-819d-5f1d-8780-887f94383b74"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["89e3298f-f80d-5f37-884b-68c35c794ba2"]}, .span = ["testNode-61"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-612"}, .name = "testNP-612", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2176e069-ef1c-535e-b476-05c5ab15178b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["527369a9-819d-5f1d-8780-887f94383b74"]}, .span = ["testNode-61"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-613"}, .name = "testNP-613", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["66d31e3c-ede9-5e40-919c-87749b4ad22d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2176e069-ef1c-535e-b476-05c5ab15178b"]}, .span = ["testNode-61"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-614"}, .name = "testNP-614", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fddf927d-e3be-5758-8f3c-b55e8bd5477c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["66d31e3c-ede9-5e40-919c-87749b4ad22d"]}, .span = ["testNode-61"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-615"}, .name = "testNP-615", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["55728c3c-de70-52b8-bd4c-2c37db6c7f19"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fddf927d-e3be-5758-8f3c-b55e8bd5477c"]}, .span = ["testNode-61"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-616"}, .name = "testNP-616", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ac4c787b-6104-55af-82f2-f7b7e56d6444"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["55728c3c-de70-52b8-bd4c-2c37db6c7f19"]}, .span = ["testNode-61"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-617"}, .name = "testNP-617", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a77028cf-ea44-563d-8793-17f78af5073f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ac4c787b-6104-55af-82f2-f7b7e56d6444"]}, .span = ["testNode-61"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-618"}, .name = "testNP-618", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ca0b5527-67c7-523c-902e-935206a43e98"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a77028cf-ea44-563d-8793-17f78af5073f"]}, .span = ["testNode-61"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-619"}, .name = "testNP-619", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["371b46b9-c4c2-5a44-9103-298077dc6cb7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ca0b5527-67c7-523c-902e-935206a43e98"]}, .span = ["testNode-61"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-620"}, .name = "testNP-620", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["09d28f85-06b5-5b1f-8a89-7e2056b42464"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["371b46b9-c4c2-5a44-9103-298077dc6cb7"]}, .span = ["testNode-62"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-621"}, .name = "testNP-621", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2eac5404-367f-50fd-8119-f3e6794df0d3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["09d28f85-06b5-5b1f-8a89-7e2056b42464"]}, .span = ["testNode-62"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-622"}, .name = "testNP-622", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0f5b033d-1747-557a-8590-8844a46d9fc5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2eac5404-367f-50fd-8119-f3e6794df0d3"]}, .span = ["testNode-62"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-623"}, .name = "testNP-623", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["07450dd8-62a4-58bd-ab58-3bf1afcd7544"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0f5b033d-1747-557a-8590-8844a46d9fc5"]}, .span = ["testNode-62"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-624"}, .name = "testNP-624", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["af669eee-58ab-51a2-8075-568d0180d198"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["07450dd8-62a4-58bd-ab58-3bf1afcd7544"]}, .span = ["testNode-62"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-625"}, .name = "testNP-625", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f85cc566-a332-589f-86ec-73271417d818"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["af669eee-58ab-51a2-8075-568d0180d198"]}, .span = ["testNode-62"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-626"}, .name = "testNP-626", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["efdac60d-6b62-52c9-a31f-92e341373be1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f85cc566-a332-589f-86ec-73271417d818"]}, .span = ["testNode-62"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-627"}, .name = "testNP-627", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7913f2ad-5d73-58a3-a65f-17c6f6faa67f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["efdac60d-6b62-52c9-a31f-92e341373be1"]}, .span = ["testNode-62"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-628"}, .name = "testNP-628", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5aadee18-3a80-5312-a3f5-7e05f657e175"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7913f2ad-5d73-58a3-a65f-17c6f6faa67f"]}, .span = ["testNode-62"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-629"}, .name = "testNP-629", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c1952cb5-d1ea-5ad0-90fd-21c2d2621ced"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5aadee18-3a80-5312-a3f5-7e05f657e175"]}, .span = ["testNode-62"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-630"}, .name = "testNP-630", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1628c233-3279-572b-8b79-88538c9b8733"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c1952cb5-d1ea-5ad0-90fd-21c2d2621ced"]}, .span = ["testNode-63"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-631"}, .name = "testNP-631", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["14e5ebca-584d-5f9d-b43a-fb5698a03564"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1628c233-3279-572b-8b79-88538c9b8733"]}, .span = ["testNode-63"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-632"}, .name = "testNP-632", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["79f2dd81-7108-5ce6-9871-ae200bc6a08d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["14e5ebca-584d-5f9d-b43a-fb5698a03564"]}, .span = ["testNode-63"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-633"}, .name = "testNP-633", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cb667a38-f94c-5e63-ac54-ae40a40f3903"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["79f2dd81-7108-5ce6-9871-ae200bc6a08d"]}, .span = ["testNode-63"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-634"}, .name = "testNP-634", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9df7ba66-5d37-55de-aa62-ae5ff2ff9636"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cb667a38-f94c-5e63-ac54-ae40a40f3903"]}, .span = ["testNode-63"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-635"}, .name = "testNP-635", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a14fcf1e-0c5c-58c5-bce6-5ebad9eeddda"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9df7ba66-5d37-55de-aa62-ae5ff2ff9636"]}, .span = ["testNode-63"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-636"}, .name = "testNP-636", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9bee88c5-bdeb-5162-b0b0-7bbc3a96e8fd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a14fcf1e-0c5c-58c5-bce6-5ebad9eeddda"]}, .span = ["testNode-63"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-637"}, .name = "testNP-637", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ce49c890-098e-535e-b32f-0fbae2740cbc"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9bee88c5-bdeb-5162-b0b0-7bbc3a96e8fd"]}, .span = ["testNode-63"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-638"}, .name = "testNP-638", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5d310546-d5d4-523d-b785-2c7675ec7e04"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ce49c890-098e-535e-b32f-0fbae2740cbc"]}, .span = ["testNode-63"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-639"}, .name = "testNP-639", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6c0d188b-4b43-5eff-b36a-93f7101f318c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5d310546-d5d4-523d-b785-2c7675ec7e04"]}, .span = ["testNode-63"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "050f2757-1b25-5aff-a957-444f7bebc1f9"}, .name = "050f2757-1b25-5aff-a957-444f7bebc1f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-672]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-672")], .matchExpressions = []}}}}, .addresses = ["10.10.67.2"], .span = ["testNode-67"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "061e03d2-f13c-5711-b7a3-d1060b17661d"}, .name = "061e03d2-f13c-5711-b7a3-d1060b17661d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-658]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-658")], .matchExpressions = []}}}}, .addresses = ["10.10.65.8"], .span = ["testNode-65"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "133dd49c-b9a7-5155-a4c6-78463bc346c0"}, .name = "133dd49c-b9a7-5155-a4c6-78463bc346c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-642]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-642")], .matchExpressions = []}}}}, .addresses = ["10.10.64.2"], .span = ["testNode-64"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "23e00ac4-afe9-5653-9987-e0911990d970"}, .name = "23e00ac4-afe9-5653-9987-e0911990d970", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-641]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-641")], .matchExpressions = []}}}}, .addresses = ["10.10.64.1"], .span = ["testNode-64"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3dc90716-2978-505c-a87d-4705a347d9a2"}, .name = "3dc90716-2978-505c-a87d-4705a347d9a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-650]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-650")], .matchExpressions = []}}}}, .addresses = ["10.10.65.0"], .span = ["testNode-64"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "446aae9c-7499-52b2-a130-c3fc7ae57d88"}, .name = "446aae9c-7499-52b2-a130-c3fc7ae57d88", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-651]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-651")], .matchExpressions = []}}}}, .addresses = ["10.10.65.1"], .span = ["testNode-65"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5427d3a3-130a-582b-ad9f-4492317ce444"}, .name = "5427d3a3-130a-582b-ad9f-4492317ce444", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-659]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-659")], .matchExpressions = []}}}}, .addresses = ["10.10.65.9"], .span = ["testNode-65"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "567616db-fb7e-551f-b856-aaea40d788a7"}, .name = "567616db-fb7e-551f-b856-aaea40d788a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-646]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-646")], .matchExpressions = []}}}}, .addresses = ["10.10.64.6"], .span = ["testNode-64"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "59f73e1a-64ed-5a2d-8db0-9f53511f3f37"}, .name = "59f73e1a-64ed-5a2d-8db0-9f53511f3f37", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-647]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-647")], .matchExpressions = []}}}}, .addresses = ["10.10.64.7"], .span = ["testNode-64"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "703e8df6-bf86-5ce8-9c85-00582b861420"}, .name = "703e8df6-bf86-5ce8-9c85-00582b861420", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-657]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-657")], .matchExpressions = []}}}}, .addresses = ["10.10.65.7"], .span = ["testNode-65"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "76bb4764-b16a-5a0d-a34c-d6f6c2f661d7"}, .name = "76bb4764-b16a-5a0d-a34c-d6f6c2f661d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-660]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-660")], .matchExpressions = []}}}}, .addresses = ["10.10.66.0"], .span = ["testNode-65"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "79e5741c-ff45-5b60-8e3e-2d00a33379cd"}, .name = "79e5741c-ff45-5b60-8e3e-2d00a33379cd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-643]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-643")], .matchExpressions = []}}}}, .addresses = ["10.10.64.3"], .span = ["testNode-64"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "87b4294f-947e-522d-93a2-3b02b1135b6a"}, .name = "87b4294f-947e-522d-93a2-3b02b1135b6a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-652]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-652")], .matchExpressions = []}}}}, .addresses = ["10.10.65.2"], .span = ["testNode-65"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8cd5613e-d223-57fa-b0f6-4dd21683084c"}, .name = "8cd5613e-d223-57fa-b0f6-4dd21683084c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-661]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-661")], .matchExpressions = []}}}}, .addresses = ["10.10.66.1"], .span = ["testNode-66"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8f6d2251-6922-5dd6-9429-2dbc50c20a5b"}, .name = "8f6d2251-6922-5dd6-9429-2dbc50c20a5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-656]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-656")], .matchExpressions = []}}}}, .addresses = ["10.10.65.6"], .span = ["testNode-65"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8fdae1d8-0cb8-56b8-8e46-71e7edf05816"}, .name = "8fdae1d8-0cb8-56b8-8e46-71e7edf05816", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-671]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-671")], .matchExpressions = []}}}}, .addresses = ["10.10.67.1"], .span = ["testNode-67"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "91df0331-887f-559e-ab54-cadbac98214a"}, .name = "91df0331-887f-559e-ab54-cadbac98214a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-653]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-653")], .matchExpressions = []}}}}, .addresses = ["10.10.65.3"], .span = ["testNode-65"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "96168ce7-96b8-5aa5-80f7-98ddff9eb38b"}, .name = "96168ce7-96b8-5aa5-80f7-98ddff9eb38b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-663]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-663")], .matchExpressions = []}}}}, .addresses = ["10.10.66.3"], .span = ["testNode-66"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "97ae4606-8f4a-5dc9-9c36-0e418df99d41"}, .name = "97ae4606-8f4a-5dc9-9c36-0e418df99d41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-655]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-655")], .matchExpressions = []}}}}, .addresses = ["10.10.65.5"], .span = ["testNode-65"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a0404885-6d68-557e-81c1-2668ac799ded"}, .name = "a0404885-6d68-557e-81c1-2668ac799ded", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-654]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-654")], .matchExpressions = []}}}}, .addresses = ["10.10.65.4"], .span = ["testNode-65"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a0c8376b-3ab4-5237-bcb2-007f5d8b2a0f"}, .name = "a0c8376b-3ab4-5237-bcb2-007f5d8b2a0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-667]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-667")], .matchExpressions = []}}}}, .addresses = ["10.10.66.7"], .span = ["testNode-66"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "adef852b-fbd7-55b0-b47a-7e6a4d5cfee5"}, .name = "adef852b-fbd7-55b0-b47a-7e6a4d5cfee5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-662]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-662")], .matchExpressions = []}}}}, .addresses = ["10.10.66.2"], .span = ["testNode-66"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b9a7f6e5-7c28-5e8c-94c1-d100d192a44e"}, .name = "b9a7f6e5-7c28-5e8c-94c1-d100d192a44e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-670]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-670")], .matchExpressions = []}}}}, .addresses = ["10.10.67.0"], .span = ["testNode-66"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c1443787-4262-5765-8833-c6f05f3c60b6"}, .name = "c1443787-4262-5765-8833-c6f05f3c60b6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-648]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-648")], .matchExpressions = []}}}}, .addresses = ["10.10.64.8"], .span = ["testNode-64"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c9dba8df-93ad-5733-8092-d3baad3de5a5"}, .name = "c9dba8df-93ad-5733-8092-d3baad3de5a5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-644]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-644")], .matchExpressions = []}}}}, .addresses = ["10.10.64.4"], .span = ["testNode-64"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d2c3a787-e8a7-5f9b-9373-ef269e279a1d"}, .name = "d2c3a787-e8a7-5f9b-9373-ef269e279a1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-666]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-666")], .matchExpressions = []}}}}, .addresses = ["10.10.66.6"], .span = ["testNode-66"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d49d4acd-d197-53aa-b0bb-18f6f9945a52"}, .name = "d49d4acd-d197-53aa-b0bb-18f6f9945a52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-669]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-669")], .matchExpressions = []}}}}, .addresses = ["10.10.66.9"], .span = ["testNode-66"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d5acf07b-bfd0-5e0b-a497-27011f959e85"}, .name = "d5acf07b-bfd0-5e0b-a497-27011f959e85", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-665]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-665")], .matchExpressions = []}}}}, .addresses = ["10.10.66.5"], .span = ["testNode-66"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "db2042cc-ccf7-5bf1-8eda-a2dd5c084b95"}, .name = "db2042cc-ccf7-5bf1-8eda-a2dd5c084b95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-645]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-645")], .matchExpressions = []}}}}, .addresses = ["10.10.64.5"], .span = ["testNode-64"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e226b888-48c2-5b83-b3a8-f3da99566b92"}, .name = "e226b888-48c2-5b83-b3a8-f3da99566b92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-668]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-668")], .matchExpressions = []}}}}, .addresses = ["10.10.66.8"], .span = ["testNode-66"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f4f2035b-0d45-5dbd-90a2-06d4488fceb9"}, .name = "f4f2035b-0d45-5dbd-90a2-06d4488fceb9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-664]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-664")], .matchExpressions = []}}}}, .addresses = ["10.10.66.4"], .span = ["testNode-66"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fafd6e05-55f0-52eb-8f3c-97519d7de360"}, .name = "fafd6e05-55f0-52eb-8f3c-97519d7de360", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-649]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-649")], .matchExpressions = []}}}}, .addresses = ["10.10.64.9"], .span = ["testNode-64"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "061e03d2-f13c-5711-b7a3-d1060b17661d"}, .name = "061e03d2-f13c-5711-b7a3-d1060b17661d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-658]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-658")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-658", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "133dd49c-b9a7-5155-a4c6-78463bc346c0"}, .name = "133dd49c-b9a7-5155-a4c6-78463bc346c0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-642]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-642")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-642", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "23e00ac4-afe9-5653-9987-e0911990d970"}, .name = "23e00ac4-afe9-5653-9987-e0911990d970", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-641]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-641")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-641", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3dc90716-2978-505c-a87d-4705a347d9a2"}, .name = "3dc90716-2978-505c-a87d-4705a347d9a2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-650]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-650")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-650", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "446aae9c-7499-52b2-a130-c3fc7ae57d88"}, .name = "446aae9c-7499-52b2-a130-c3fc7ae57d88", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-651]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-651")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-651", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5427d3a3-130a-582b-ad9f-4492317ce444"}, .name = "5427d3a3-130a-582b-ad9f-4492317ce444", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-659]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-659")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-659", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "567616db-fb7e-551f-b856-aaea40d788a7"}, .name = "567616db-fb7e-551f-b856-aaea40d788a7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-646]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-646")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-646", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "59f73e1a-64ed-5a2d-8db0-9f53511f3f37"}, .name = "59f73e1a-64ed-5a2d-8db0-9f53511f3f37", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-647]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-647")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-647", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6c0d188b-4b43-5eff-b36a-93f7101f318c"}, .name = "6c0d188b-4b43-5eff-b36a-93f7101f318c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-640]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-640")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-640", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "703e8df6-bf86-5ce8-9c85-00582b861420"}, .name = "703e8df6-bf86-5ce8-9c85-00582b861420", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-657]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-657")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-657", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "76bb4764-b16a-5a0d-a34c-d6f6c2f661d7"}, .name = "76bb4764-b16a-5a0d-a34c-d6f6c2f661d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-660]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-660")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-660", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "79e5741c-ff45-5b60-8e3e-2d00a33379cd"}, .name = "79e5741c-ff45-5b60-8e3e-2d00a33379cd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-643]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-643")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-643", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "87b4294f-947e-522d-93a2-3b02b1135b6a"}, .name = "87b4294f-947e-522d-93a2-3b02b1135b6a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-652]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-652")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-652", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8cd5613e-d223-57fa-b0f6-4dd21683084c"}, .name = "8cd5613e-d223-57fa-b0f6-4dd21683084c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-661]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-661")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-661", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8f6d2251-6922-5dd6-9429-2dbc50c20a5b"}, .name = "8f6d2251-6922-5dd6-9429-2dbc50c20a5b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-656]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-656")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-656", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8fdae1d8-0cb8-56b8-8e46-71e7edf05816"}, .name = "8fdae1d8-0cb8-56b8-8e46-71e7edf05816", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-671]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-671")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-671", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "91df0331-887f-559e-ab54-cadbac98214a"}, .name = "91df0331-887f-559e-ab54-cadbac98214a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-653]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-653")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-653", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "96168ce7-96b8-5aa5-80f7-98ddff9eb38b"}, .name = "96168ce7-96b8-5aa5-80f7-98ddff9eb38b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-663]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-663")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-663", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "97ae4606-8f4a-5dc9-9c36-0e418df99d41"}, .name = "97ae4606-8f4a-5dc9-9c36-0e418df99d41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-655]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-655")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-655", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a0404885-6d68-557e-81c1-2668ac799ded"}, .name = "a0404885-6d68-557e-81c1-2668ac799ded", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-654]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-654")], .matchExpressions = []}}}}, .podsByNode = [("testNode-65", [k8spolicy.PodReference{.name = "testPod-654", .namespace = "testNamespace"}])], .span = ["testNode-65"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a0c8376b-3ab4-5237-bcb2-007f5d8b2a0f"}, .name = "a0c8376b-3ab4-5237-bcb2-007f5d8b2a0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-667]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-667")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-667", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "adef852b-fbd7-55b0-b47a-7e6a4d5cfee5"}, .name = "adef852b-fbd7-55b0-b47a-7e6a4d5cfee5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-662]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-662")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-662", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b9a7f6e5-7c28-5e8c-94c1-d100d192a44e"}, .name = "b9a7f6e5-7c28-5e8c-94c1-d100d192a44e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-670]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-670")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-670", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c1443787-4262-5765-8833-c6f05f3c60b6"}, .name = "c1443787-4262-5765-8833-c6f05f3c60b6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-648]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-648")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-648", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c9dba8df-93ad-5733-8092-d3baad3de5a5"}, .name = "c9dba8df-93ad-5733-8092-d3baad3de5a5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-644]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-644")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-644", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d2c3a787-e8a7-5f9b-9373-ef269e279a1d"}, .name = "d2c3a787-e8a7-5f9b-9373-ef269e279a1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-666]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-666")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-666", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d49d4acd-d197-53aa-b0bb-18f6f9945a52"}, .name = "d49d4acd-d197-53aa-b0bb-18f6f9945a52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-669]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-669")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-669", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d5acf07b-bfd0-5e0b-a497-27011f959e85"}, .name = "d5acf07b-bfd0-5e0b-a497-27011f959e85", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-665]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-665")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-665", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "db2042cc-ccf7-5bf1-8eda-a2dd5c084b95"}, .name = "db2042cc-ccf7-5bf1-8eda-a2dd5c084b95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-645]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-645")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-645", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e226b888-48c2-5b83-b3a8-f3da99566b92"}, .name = "e226b888-48c2-5b83-b3a8-f3da99566b92", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-668]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-668")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-668", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f4f2035b-0d45-5dbd-90a2-06d4488fceb9"}, .name = "f4f2035b-0d45-5dbd-90a2-06d4488fceb9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-664]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-664")], .matchExpressions = []}}}}, .podsByNode = [("testNode-66", [k8spolicy.PodReference{.name = "testPod-664", .namespace = "testNamespace"}])], .span = ["testNode-66"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fafd6e05-55f0-52eb-8f3c-97519d7de360"}, .name = "fafd6e05-55f0-52eb-8f3c-97519d7de360", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-649]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-649")], .matchExpressions = []}}}}, .podsByNode = [("testNode-64", [k8spolicy.PodReference{.name = "testPod-649", .namespace = "testNamespace"}])], .span = ["testNode-64"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-640"}, .name = "testNP-640", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["23e00ac4-afe9-5653-9987-e0911990d970"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6c0d188b-4b43-5eff-b36a-93f7101f318c"]}, .span = ["testNode-64"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-641"}, .name = "testNP-641", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["133dd49c-b9a7-5155-a4c6-78463bc346c0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["23e00ac4-afe9-5653-9987-e0911990d970"]}, .span = ["testNode-64"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-642"}, .name = "testNP-642", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["79e5741c-ff45-5b60-8e3e-2d00a33379cd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["133dd49c-b9a7-5155-a4c6-78463bc346c0"]}, .span = ["testNode-64"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-643"}, .name = "testNP-643", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c9dba8df-93ad-5733-8092-d3baad3de5a5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["79e5741c-ff45-5b60-8e3e-2d00a33379cd"]}, .span = ["testNode-64"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-644"}, .name = "testNP-644", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["db2042cc-ccf7-5bf1-8eda-a2dd5c084b95"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c9dba8df-93ad-5733-8092-d3baad3de5a5"]}, .span = ["testNode-64"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-645"}, .name = "testNP-645", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["567616db-fb7e-551f-b856-aaea40d788a7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["db2042cc-ccf7-5bf1-8eda-a2dd5c084b95"]}, .span = ["testNode-64"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-646"}, .name = "testNP-646", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["59f73e1a-64ed-5a2d-8db0-9f53511f3f37"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["567616db-fb7e-551f-b856-aaea40d788a7"]}, .span = ["testNode-64"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-647"}, .name = "testNP-647", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c1443787-4262-5765-8833-c6f05f3c60b6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["59f73e1a-64ed-5a2d-8db0-9f53511f3f37"]}, .span = ["testNode-64"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-648"}, .name = "testNP-648", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fafd6e05-55f0-52eb-8f3c-97519d7de360"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c1443787-4262-5765-8833-c6f05f3c60b6"]}, .span = ["testNode-64"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-649"}, .name = "testNP-649", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3dc90716-2978-505c-a87d-4705a347d9a2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fafd6e05-55f0-52eb-8f3c-97519d7de360"]}, .span = ["testNode-64"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-650"}, .name = "testNP-650", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["446aae9c-7499-52b2-a130-c3fc7ae57d88"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3dc90716-2978-505c-a87d-4705a347d9a2"]}, .span = ["testNode-65"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-651"}, .name = "testNP-651", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["87b4294f-947e-522d-93a2-3b02b1135b6a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["446aae9c-7499-52b2-a130-c3fc7ae57d88"]}, .span = ["testNode-65"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-652"}, .name = "testNP-652", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["91df0331-887f-559e-ab54-cadbac98214a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["87b4294f-947e-522d-93a2-3b02b1135b6a"]}, .span = ["testNode-65"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-653"}, .name = "testNP-653", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a0404885-6d68-557e-81c1-2668ac799ded"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["91df0331-887f-559e-ab54-cadbac98214a"]}, .span = ["testNode-65"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-654"}, .name = "testNP-654", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["97ae4606-8f4a-5dc9-9c36-0e418df99d41"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a0404885-6d68-557e-81c1-2668ac799ded"]}, .span = ["testNode-65"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-655"}, .name = "testNP-655", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8f6d2251-6922-5dd6-9429-2dbc50c20a5b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["97ae4606-8f4a-5dc9-9c36-0e418df99d41"]}, .span = ["testNode-65"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-656"}, .name = "testNP-656", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["703e8df6-bf86-5ce8-9c85-00582b861420"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8f6d2251-6922-5dd6-9429-2dbc50c20a5b"]}, .span = ["testNode-65"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-657"}, .name = "testNP-657", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["061e03d2-f13c-5711-b7a3-d1060b17661d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["703e8df6-bf86-5ce8-9c85-00582b861420"]}, .span = ["testNode-65"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-658"}, .name = "testNP-658", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5427d3a3-130a-582b-ad9f-4492317ce444"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["061e03d2-f13c-5711-b7a3-d1060b17661d"]}, .span = ["testNode-65"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-659"}, .name = "testNP-659", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["76bb4764-b16a-5a0d-a34c-d6f6c2f661d7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5427d3a3-130a-582b-ad9f-4492317ce444"]}, .span = ["testNode-65"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-660"}, .name = "testNP-660", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8cd5613e-d223-57fa-b0f6-4dd21683084c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["76bb4764-b16a-5a0d-a34c-d6f6c2f661d7"]}, .span = ["testNode-66"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-661"}, .name = "testNP-661", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["adef852b-fbd7-55b0-b47a-7e6a4d5cfee5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8cd5613e-d223-57fa-b0f6-4dd21683084c"]}, .span = ["testNode-66"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-662"}, .name = "testNP-662", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["96168ce7-96b8-5aa5-80f7-98ddff9eb38b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["adef852b-fbd7-55b0-b47a-7e6a4d5cfee5"]}, .span = ["testNode-66"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-663"}, .name = "testNP-663", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f4f2035b-0d45-5dbd-90a2-06d4488fceb9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["96168ce7-96b8-5aa5-80f7-98ddff9eb38b"]}, .span = ["testNode-66"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-664"}, .name = "testNP-664", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d5acf07b-bfd0-5e0b-a497-27011f959e85"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f4f2035b-0d45-5dbd-90a2-06d4488fceb9"]}, .span = ["testNode-66"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-665"}, .name = "testNP-665", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d2c3a787-e8a7-5f9b-9373-ef269e279a1d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d5acf07b-bfd0-5e0b-a497-27011f959e85"]}, .span = ["testNode-66"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-666"}, .name = "testNP-666", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a0c8376b-3ab4-5237-bcb2-007f5d8b2a0f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d2c3a787-e8a7-5f9b-9373-ef269e279a1d"]}, .span = ["testNode-66"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-667"}, .name = "testNP-667", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e226b888-48c2-5b83-b3a8-f3da99566b92"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a0c8376b-3ab4-5237-bcb2-007f5d8b2a0f"]}, .span = ["testNode-66"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-668"}, .name = "testNP-668", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d49d4acd-d197-53aa-b0bb-18f6f9945a52"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e226b888-48c2-5b83-b3a8-f3da99566b92"]}, .span = ["testNode-66"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-669"}, .name = "testNP-669", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b9a7f6e5-7c28-5e8c-94c1-d100d192a44e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d49d4acd-d197-53aa-b0bb-18f6f9945a52"]}, .span = ["testNode-66"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-670"}, .name = "testNP-670", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8fdae1d8-0cb8-56b8-8e46-71e7edf05816"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b9a7f6e5-7c28-5e8c-94c1-d100d192a44e"]}, .span = ["testNode-67"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-671"}, .name = "testNP-671", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["050f2757-1b25-5aff-a957-444f7bebc1f9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8fdae1d8-0cb8-56b8-8e46-71e7edf05816"]}, .span = ["testNode-67"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0587f11a-2393-513a-bf8b-24fb834eb829"}, .name = "0587f11a-2393-513a-bf8b-24fb834eb829", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-673]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-673")], .matchExpressions = []}}}}, .addresses = ["10.10.67.3"], .span = ["testNode-67"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1267286c-5a57-550b-90b6-a915509ec859"}, .name = "1267286c-5a57-550b-90b6-a915509ec859", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-685]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-685")], .matchExpressions = []}}}}, .addresses = ["10.10.68.5"], .span = ["testNode-68"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1916ca21-9d10-5123-bf26-c68c1b9da2d8"}, .name = "1916ca21-9d10-5123-bf26-c68c1b9da2d8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-691]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-691")], .matchExpressions = []}}}}, .addresses = ["10.10.69.1"], .span = ["testNode-69"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1a06066c-3d56-5505-8887-5ae3e9e6650c"}, .name = "1a06066c-3d56-5505-8887-5ae3e9e6650c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-697]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-697")], .matchExpressions = []}}}}, .addresses = ["10.10.69.7"], .span = ["testNode-69"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2478778f-c17f-5acb-aaa0-27cc573a22f1"}, .name = "2478778f-c17f-5acb-aaa0-27cc573a22f1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-704]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-704")], .matchExpressions = []}}}}, .addresses = ["10.10.70.4"], .span = ["testNode-70"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "256e2541-78f2-5f46-8039-020a998c918e"}, .name = "256e2541-78f2-5f46-8039-020a998c918e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-702]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-702")], .matchExpressions = []}}}}, .addresses = ["10.10.70.2"], .span = ["testNode-70"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2e08c000-fe0a-5fe4-96d2-eb7c8b731890"}, .name = "2e08c000-fe0a-5fe4-96d2-eb7c8b731890", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-700]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-700")], .matchExpressions = []}}}}, .addresses = ["10.10.70.0"], .span = ["testNode-69"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2ec07f23-522e-57ec-a82c-b8979e5599c2"}, .name = "2ec07f23-522e-57ec-a82c-b8979e5599c2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-694]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-694")], .matchExpressions = []}}}}, .addresses = ["10.10.69.4"], .span = ["testNode-69"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3095addf-6897-5833-b3bf-56ad9a0b8948"}, .name = "3095addf-6897-5833-b3bf-56ad9a0b8948", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-675]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-675")], .matchExpressions = []}}}}, .addresses = ["10.10.67.5"], .span = ["testNode-67"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "40213211-38c3-5538-a529-fe9357015024"}, .name = "40213211-38c3-5538-a529-fe9357015024", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-687]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-687")], .matchExpressions = []}}}}, .addresses = ["10.10.68.7"], .span = ["testNode-68"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4110bf43-a75b-5d54-8a29-3755499ac75c"}, .name = "4110bf43-a75b-5d54-8a29-3755499ac75c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-680]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-680")], .matchExpressions = []}}}}, .addresses = ["10.10.68.0"], .span = ["testNode-67"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4171f9c6-e03b-5c81-9d2a-ee8a5462797d"}, .name = "4171f9c6-e03b-5c81-9d2a-ee8a5462797d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-692]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-692")], .matchExpressions = []}}}}, .addresses = ["10.10.69.2"], .span = ["testNode-69"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "42b7bcd4-7888-57a1-b09f-1d677a586100"}, .name = "42b7bcd4-7888-57a1-b09f-1d677a586100", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-679]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-679")], .matchExpressions = []}}}}, .addresses = ["10.10.67.9"], .span = ["testNode-67"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "585abe35-8eab-5fc4-92ba-2485002947ea"}, .name = "585abe35-8eab-5fc4-92ba-2485002947ea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-701]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-701")], .matchExpressions = []}}}}, .addresses = ["10.10.70.1"], .span = ["testNode-70"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5a8febaa-5cf2-5e35-9f04-a3e18c24fe17"}, .name = "5a8febaa-5cf2-5e35-9f04-a3e18c24fe17", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-681]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-681")], .matchExpressions = []}}}}, .addresses = ["10.10.68.1"], .span = ["testNode-68"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5b1caa08-bca2-57d8-b738-245eef91ffa1"}, .name = "5b1caa08-bca2-57d8-b738-245eef91ffa1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-676]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-676")], .matchExpressions = []}}}}, .addresses = ["10.10.67.6"], .span = ["testNode-67"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "64eba0e2-8330-5991-a9e5-bf7ba04147d7"}, .name = "64eba0e2-8330-5991-a9e5-bf7ba04147d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-689]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-689")], .matchExpressions = []}}}}, .addresses = ["10.10.68.9"], .span = ["testNode-68"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "67e2966b-8704-554b-80df-c194746b81ab"}, .name = "67e2966b-8704-554b-80df-c194746b81ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-695]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-695")], .matchExpressions = []}}}}, .addresses = ["10.10.69.5"], .span = ["testNode-69"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7e6c1d67-d7b5-5638-9b27-db894814bb94"}, .name = "7e6c1d67-d7b5-5638-9b27-db894814bb94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-690]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-690")], .matchExpressions = []}}}}, .addresses = ["10.10.69.0"], .span = ["testNode-68"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7ee420bb-ffa7-5c26-b619-0cde7455cc44"}, .name = "7ee420bb-ffa7-5c26-b619-0cde7455cc44", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-686]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-686")], .matchExpressions = []}}}}, .addresses = ["10.10.68.6"], .span = ["testNode-68"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "87b683fc-a4ab-5d6e-8d63-1400fbb01797"}, .name = "87b683fc-a4ab-5d6e-8d63-1400fbb01797", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-688]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-688")], .matchExpressions = []}}}}, .addresses = ["10.10.68.8"], .span = ["testNode-68"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "89e4541b-ed09-5593-8aa7-cb4a518797d3"}, .name = "89e4541b-ed09-5593-8aa7-cb4a518797d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-703]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-703")], .matchExpressions = []}}}}, .addresses = ["10.10.70.3"], .span = ["testNode-70"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "976e39c9-299c-5500-935f-242503b119ca"}, .name = "976e39c9-299c-5500-935f-242503b119ca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-674]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-674")], .matchExpressions = []}}}}, .addresses = ["10.10.67.4"], .span = ["testNode-67"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9be26549-d762-50cc-adab-a75c8d48879d"}, .name = "9be26549-d762-50cc-adab-a75c8d48879d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-696]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-696")], .matchExpressions = []}}}}, .addresses = ["10.10.69.6"], .span = ["testNode-69"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9c50a8d6-7e4d-57d1-9930-5dc1514ca058"}, .name = "9c50a8d6-7e4d-57d1-9930-5dc1514ca058", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-682]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-682")], .matchExpressions = []}}}}, .addresses = ["10.10.68.2"], .span = ["testNode-68"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a02754d4-746d-590e-98a9-e961e159ebc1"}, .name = "a02754d4-746d-590e-98a9-e961e159ebc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-684]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-684")], .matchExpressions = []}}}}, .addresses = ["10.10.68.4"], .span = ["testNode-68"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a15be41e-4713-51a6-9abd-77acd185f0ec"}, .name = "a15be41e-4713-51a6-9abd-77acd185f0ec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-677]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-677")], .matchExpressions = []}}}}, .addresses = ["10.10.67.7"], .span = ["testNode-67"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a926c6ec-68db-5f32-8c49-74a3e2b1edad"}, .name = "a926c6ec-68db-5f32-8c49-74a3e2b1edad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-698]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-698")], .matchExpressions = []}}}}, .addresses = ["10.10.69.8"], .span = ["testNode-69"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c2ce6ce0-6dc2-5dc4-9ff1-78e26c624641"}, .name = "c2ce6ce0-6dc2-5dc4-9ff1-78e26c624641", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-693]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-693")], .matchExpressions = []}}}}, .addresses = ["10.10.69.3"], .span = ["testNode-69"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dcf261c5-e278-57a9-af37-e38ee62be218"}, .name = "dcf261c5-e278-57a9-af37-e38ee62be218", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-683]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-683")], .matchExpressions = []}}}}, .addresses = ["10.10.68.3"], .span = ["testNode-68"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f24044c6-1ce2-5ebe-8698-7425b9a60efc"}, .name = "f24044c6-1ce2-5ebe-8698-7425b9a60efc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-678]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-678")], .matchExpressions = []}}}}, .addresses = ["10.10.67.8"], .span = ["testNode-67"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f67bb081-3fa0-51b9-9010-62a042e56c03"}, .name = "f67bb081-3fa0-51b9-9010-62a042e56c03", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-699]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-699")], .matchExpressions = []}}}}, .addresses = ["10.10.69.9"], .span = ["testNode-69"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "050f2757-1b25-5aff-a957-444f7bebc1f9"}, .name = "050f2757-1b25-5aff-a957-444f7bebc1f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-672]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-672")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-672", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0587f11a-2393-513a-bf8b-24fb834eb829"}, .name = "0587f11a-2393-513a-bf8b-24fb834eb829", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-673]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-673")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-673", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1267286c-5a57-550b-90b6-a915509ec859"}, .name = "1267286c-5a57-550b-90b6-a915509ec859", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-685]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-685")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-685", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1916ca21-9d10-5123-bf26-c68c1b9da2d8"}, .name = "1916ca21-9d10-5123-bf26-c68c1b9da2d8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-691]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-691")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-691", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1a06066c-3d56-5505-8887-5ae3e9e6650c"}, .name = "1a06066c-3d56-5505-8887-5ae3e9e6650c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-697]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-697")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-697", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "256e2541-78f2-5f46-8039-020a998c918e"}, .name = "256e2541-78f2-5f46-8039-020a998c918e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-702]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-702")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-702", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2e08c000-fe0a-5fe4-96d2-eb7c8b731890"}, .name = "2e08c000-fe0a-5fe4-96d2-eb7c8b731890", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-700]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-700")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-700", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2ec07f23-522e-57ec-a82c-b8979e5599c2"}, .name = "2ec07f23-522e-57ec-a82c-b8979e5599c2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-694]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-694")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-694", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3095addf-6897-5833-b3bf-56ad9a0b8948"}, .name = "3095addf-6897-5833-b3bf-56ad9a0b8948", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-675]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-675")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-675", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "40213211-38c3-5538-a529-fe9357015024"}, .name = "40213211-38c3-5538-a529-fe9357015024", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-687]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-687")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-687", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4110bf43-a75b-5d54-8a29-3755499ac75c"}, .name = "4110bf43-a75b-5d54-8a29-3755499ac75c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-680]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-680")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-680", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4171f9c6-e03b-5c81-9d2a-ee8a5462797d"}, .name = "4171f9c6-e03b-5c81-9d2a-ee8a5462797d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-692]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-692")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-692", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "42b7bcd4-7888-57a1-b09f-1d677a586100"}, .name = "42b7bcd4-7888-57a1-b09f-1d677a586100", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-679]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-679")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-679", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "585abe35-8eab-5fc4-92ba-2485002947ea"}, .name = "585abe35-8eab-5fc4-92ba-2485002947ea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-701]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-701")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-701", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5a8febaa-5cf2-5e35-9f04-a3e18c24fe17"}, .name = "5a8febaa-5cf2-5e35-9f04-a3e18c24fe17", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-681]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-681")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-681", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5b1caa08-bca2-57d8-b738-245eef91ffa1"}, .name = "5b1caa08-bca2-57d8-b738-245eef91ffa1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-676]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-676")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-676", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "64eba0e2-8330-5991-a9e5-bf7ba04147d7"}, .name = "64eba0e2-8330-5991-a9e5-bf7ba04147d7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-689]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-689")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-689", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "67e2966b-8704-554b-80df-c194746b81ab"}, .name = "67e2966b-8704-554b-80df-c194746b81ab", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-695]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-695")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-695", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7e6c1d67-d7b5-5638-9b27-db894814bb94"}, .name = "7e6c1d67-d7b5-5638-9b27-db894814bb94", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-690]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-690")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-690", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7ee420bb-ffa7-5c26-b619-0cde7455cc44"}, .name = "7ee420bb-ffa7-5c26-b619-0cde7455cc44", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-686]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-686")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-686", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "87b683fc-a4ab-5d6e-8d63-1400fbb01797"}, .name = "87b683fc-a4ab-5d6e-8d63-1400fbb01797", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-688]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-688")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-688", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "89e4541b-ed09-5593-8aa7-cb4a518797d3"}, .name = "89e4541b-ed09-5593-8aa7-cb4a518797d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-703]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-703")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-703", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "976e39c9-299c-5500-935f-242503b119ca"}, .name = "976e39c9-299c-5500-935f-242503b119ca", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-674]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-674")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-674", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9be26549-d762-50cc-adab-a75c8d48879d"}, .name = "9be26549-d762-50cc-adab-a75c8d48879d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-696]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-696")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-696", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9c50a8d6-7e4d-57d1-9930-5dc1514ca058"}, .name = "9c50a8d6-7e4d-57d1-9930-5dc1514ca058", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-682]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-682")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-682", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a02754d4-746d-590e-98a9-e961e159ebc1"}, .name = "a02754d4-746d-590e-98a9-e961e159ebc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-684]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-684")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-684", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a15be41e-4713-51a6-9abd-77acd185f0ec"}, .name = "a15be41e-4713-51a6-9abd-77acd185f0ec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-677]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-677")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-677", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a926c6ec-68db-5f32-8c49-74a3e2b1edad"}, .name = "a926c6ec-68db-5f32-8c49-74a3e2b1edad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-698]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-698")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-698", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c2ce6ce0-6dc2-5dc4-9ff1-78e26c624641"}, .name = "c2ce6ce0-6dc2-5dc4-9ff1-78e26c624641", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-693]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-693")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-693", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dcf261c5-e278-57a9-af37-e38ee62be218"}, .name = "dcf261c5-e278-57a9-af37-e38ee62be218", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-683]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-683")], .matchExpressions = []}}}}, .podsByNode = [("testNode-68", [k8spolicy.PodReference{.name = "testPod-683", .namespace = "testNamespace"}])], .span = ["testNode-68"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f24044c6-1ce2-5ebe-8698-7425b9a60efc"}, .name = "f24044c6-1ce2-5ebe-8698-7425b9a60efc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-678]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-678")], .matchExpressions = []}}}}, .podsByNode = [("testNode-67", [k8spolicy.PodReference{.name = "testPod-678", .namespace = "testNamespace"}])], .span = ["testNode-67"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f67bb081-3fa0-51b9-9010-62a042e56c03"}, .name = "f67bb081-3fa0-51b9-9010-62a042e56c03", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-699]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-699")], .matchExpressions = []}}}}, .podsByNode = [("testNode-69", [k8spolicy.PodReference{.name = "testPod-699", .namespace = "testNamespace"}])], .span = ["testNode-69"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-672"}, .name = "testNP-672", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0587f11a-2393-513a-bf8b-24fb834eb829"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["050f2757-1b25-5aff-a957-444f7bebc1f9"]}, .span = ["testNode-67"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-673"}, .name = "testNP-673", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["976e39c9-299c-5500-935f-242503b119ca"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0587f11a-2393-513a-bf8b-24fb834eb829"]}, .span = ["testNode-67"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-674"}, .name = "testNP-674", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3095addf-6897-5833-b3bf-56ad9a0b8948"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["976e39c9-299c-5500-935f-242503b119ca"]}, .span = ["testNode-67"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-675"}, .name = "testNP-675", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5b1caa08-bca2-57d8-b738-245eef91ffa1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3095addf-6897-5833-b3bf-56ad9a0b8948"]}, .span = ["testNode-67"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-676"}, .name = "testNP-676", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a15be41e-4713-51a6-9abd-77acd185f0ec"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5b1caa08-bca2-57d8-b738-245eef91ffa1"]}, .span = ["testNode-67"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-677"}, .name = "testNP-677", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f24044c6-1ce2-5ebe-8698-7425b9a60efc"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a15be41e-4713-51a6-9abd-77acd185f0ec"]}, .span = ["testNode-67"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-678"}, .name = "testNP-678", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["42b7bcd4-7888-57a1-b09f-1d677a586100"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f24044c6-1ce2-5ebe-8698-7425b9a60efc"]}, .span = ["testNode-67"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-679"}, .name = "testNP-679", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4110bf43-a75b-5d54-8a29-3755499ac75c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["42b7bcd4-7888-57a1-b09f-1d677a586100"]}, .span = ["testNode-67"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-680"}, .name = "testNP-680", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5a8febaa-5cf2-5e35-9f04-a3e18c24fe17"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4110bf43-a75b-5d54-8a29-3755499ac75c"]}, .span = ["testNode-68"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-681"}, .name = "testNP-681", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9c50a8d6-7e4d-57d1-9930-5dc1514ca058"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5a8febaa-5cf2-5e35-9f04-a3e18c24fe17"]}, .span = ["testNode-68"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-682"}, .name = "testNP-682", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dcf261c5-e278-57a9-af37-e38ee62be218"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9c50a8d6-7e4d-57d1-9930-5dc1514ca058"]}, .span = ["testNode-68"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-683"}, .name = "testNP-683", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a02754d4-746d-590e-98a9-e961e159ebc1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dcf261c5-e278-57a9-af37-e38ee62be218"]}, .span = ["testNode-68"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-684"}, .name = "testNP-684", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1267286c-5a57-550b-90b6-a915509ec859"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a02754d4-746d-590e-98a9-e961e159ebc1"]}, .span = ["testNode-68"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-685"}, .name = "testNP-685", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7ee420bb-ffa7-5c26-b619-0cde7455cc44"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1267286c-5a57-550b-90b6-a915509ec859"]}, .span = ["testNode-68"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-686"}, .name = "testNP-686", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["40213211-38c3-5538-a529-fe9357015024"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7ee420bb-ffa7-5c26-b619-0cde7455cc44"]}, .span = ["testNode-68"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-687"}, .name = "testNP-687", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["87b683fc-a4ab-5d6e-8d63-1400fbb01797"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["40213211-38c3-5538-a529-fe9357015024"]}, .span = ["testNode-68"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-688"}, .name = "testNP-688", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["64eba0e2-8330-5991-a9e5-bf7ba04147d7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["87b683fc-a4ab-5d6e-8d63-1400fbb01797"]}, .span = ["testNode-68"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-689"}, .name = "testNP-689", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7e6c1d67-d7b5-5638-9b27-db894814bb94"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["64eba0e2-8330-5991-a9e5-bf7ba04147d7"]}, .span = ["testNode-68"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-690"}, .name = "testNP-690", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1916ca21-9d10-5123-bf26-c68c1b9da2d8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7e6c1d67-d7b5-5638-9b27-db894814bb94"]}, .span = ["testNode-69"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-691"}, .name = "testNP-691", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4171f9c6-e03b-5c81-9d2a-ee8a5462797d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1916ca21-9d10-5123-bf26-c68c1b9da2d8"]}, .span = ["testNode-69"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-692"}, .name = "testNP-692", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c2ce6ce0-6dc2-5dc4-9ff1-78e26c624641"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4171f9c6-e03b-5c81-9d2a-ee8a5462797d"]}, .span = ["testNode-69"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-693"}, .name = "testNP-693", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2ec07f23-522e-57ec-a82c-b8979e5599c2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c2ce6ce0-6dc2-5dc4-9ff1-78e26c624641"]}, .span = ["testNode-69"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-694"}, .name = "testNP-694", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["67e2966b-8704-554b-80df-c194746b81ab"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2ec07f23-522e-57ec-a82c-b8979e5599c2"]}, .span = ["testNode-69"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-695"}, .name = "testNP-695", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9be26549-d762-50cc-adab-a75c8d48879d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["67e2966b-8704-554b-80df-c194746b81ab"]}, .span = ["testNode-69"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-696"}, .name = "testNP-696", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1a06066c-3d56-5505-8887-5ae3e9e6650c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9be26549-d762-50cc-adab-a75c8d48879d"]}, .span = ["testNode-69"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-697"}, .name = "testNP-697", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a926c6ec-68db-5f32-8c49-74a3e2b1edad"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1a06066c-3d56-5505-8887-5ae3e9e6650c"]}, .span = ["testNode-69"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-698"}, .name = "testNP-698", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f67bb081-3fa0-51b9-9010-62a042e56c03"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a926c6ec-68db-5f32-8c49-74a3e2b1edad"]}, .span = ["testNode-69"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-699"}, .name = "testNP-699", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2e08c000-fe0a-5fe4-96d2-eb7c8b731890"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f67bb081-3fa0-51b9-9010-62a042e56c03"]}, .span = ["testNode-69"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-700"}, .name = "testNP-700", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["585abe35-8eab-5fc4-92ba-2485002947ea"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2e08c000-fe0a-5fe4-96d2-eb7c8b731890"]}, .span = ["testNode-70"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-701"}, .name = "testNP-701", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["256e2541-78f2-5f46-8039-020a998c918e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["585abe35-8eab-5fc4-92ba-2485002947ea"]}, .span = ["testNode-70"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-702"}, .name = "testNP-702", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["89e4541b-ed09-5593-8aa7-cb4a518797d3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["256e2541-78f2-5f46-8039-020a998c918e"]}, .span = ["testNode-70"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-703"}, .name = "testNP-703", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2478778f-c17f-5acb-aaa0-27cc573a22f1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["89e4541b-ed09-5593-8aa7-cb4a518797d3"]}, .span = ["testNode-70"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0f4b6159-9507-5367-b061-c88c5b1b9a83"}, .name = "0f4b6159-9507-5367-b061-c88c5b1b9a83", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-717]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-717")], .matchExpressions = []}}}}, .addresses = ["10.10.71.7"], .span = ["testNode-71"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "170ab9dd-5115-5aa1-a7fa-3799723c1988"}, .name = "170ab9dd-5115-5aa1-a7fa-3799723c1988", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-723]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-723")], .matchExpressions = []}}}}, .addresses = ["10.10.72.3"], .span = ["testNode-72"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "185a71fd-ef8b-56d1-a4c5-52f3a93e5c9d"}, .name = "185a71fd-ef8b-56d1-a4c5-52f3a93e5c9d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-727]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-727")], .matchExpressions = []}}}}, .addresses = ["10.10.72.7"], .span = ["testNode-72"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "199f4778-09d6-5cfa-abb3-e9bb7691145d"}, .name = "199f4778-09d6-5cfa-abb3-e9bb7691145d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-731]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-731")], .matchExpressions = []}}}}, .addresses = ["10.10.73.1"], .span = ["testNode-73"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1bf41345-ee85-569b-a022-c36ff6a5c558"}, .name = "1bf41345-ee85-569b-a022-c36ff6a5c558", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-734]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-734")], .matchExpressions = []}}}}, .addresses = ["10.10.73.4"], .span = ["testNode-73"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1e30a90c-1375-56c6-b159-840e1201a88e"}, .name = "1e30a90c-1375-56c6-b159-840e1201a88e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-719]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-719")], .matchExpressions = []}}}}, .addresses = ["10.10.71.9"], .span = ["testNode-71"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3358e076-66f4-5d42-a1d5-707cecb8f70b"}, .name = "3358e076-66f4-5d42-a1d5-707cecb8f70b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-732]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-732")], .matchExpressions = []}}}}, .addresses = ["10.10.73.2"], .span = ["testNode-73"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "483f1a9c-687d-5d54-bf85-977ad4a36bdb"}, .name = "483f1a9c-687d-5d54-bf85-977ad4a36bdb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-728]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-728")], .matchExpressions = []}}}}, .addresses = ["10.10.72.8"], .span = ["testNode-72"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4d0cb5bb-61ee-5334-a57e-5c0530b9e2d6"}, .name = "4d0cb5bb-61ee-5334-a57e-5c0530b9e2d6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-718]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-718")], .matchExpressions = []}}}}, .addresses = ["10.10.71.8"], .span = ["testNode-71"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4dbef641-dacc-58d4-9172-bd6054abe5a3"}, .name = "4dbef641-dacc-58d4-9172-bd6054abe5a3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-708]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-708")], .matchExpressions = []}}}}, .addresses = ["10.10.70.8"], .span = ["testNode-70"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4fad2040-84c6-5627-ace8-8205d5eccf4d"}, .name = "4fad2040-84c6-5627-ace8-8205d5eccf4d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-721]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-721")], .matchExpressions = []}}}}, .addresses = ["10.10.72.1"], .span = ["testNode-72"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5a010afb-8f24-509a-a8dd-eb64221776bc"}, .name = "5a010afb-8f24-509a-a8dd-eb64221776bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-706]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-706")], .matchExpressions = []}}}}, .addresses = ["10.10.70.6"], .span = ["testNode-70"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6a6112dc-5170-5d89-aea8-b2a865f79ce3"}, .name = "6a6112dc-5170-5d89-aea8-b2a865f79ce3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-720]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-720")], .matchExpressions = []}}}}, .addresses = ["10.10.72.0"], .span = ["testNode-71"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7b925c47-a6a4-5aaa-a1d7-a2c0585943ee"}, .name = "7b925c47-a6a4-5aaa-a1d7-a2c0585943ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-722]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-722")], .matchExpressions = []}}}}, .addresses = ["10.10.72.2"], .span = ["testNode-72"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "807ad77e-b523-579e-b82d-fd698020868c"}, .name = "807ad77e-b523-579e-b82d-fd698020868c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-715]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-715")], .matchExpressions = []}}}}, .addresses = ["10.10.71.5"], .span = ["testNode-71"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8877a11e-49e0-5059-a164-9df96f000095"}, .name = "8877a11e-49e0-5059-a164-9df96f000095", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-712]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-712")], .matchExpressions = []}}}}, .addresses = ["10.10.71.2"], .span = ["testNode-71"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8c2ff3d1-8c3b-5bff-8f8b-cb2cc35b6baa"}, .name = "8c2ff3d1-8c3b-5bff-8f8b-cb2cc35b6baa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-716]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-716")], .matchExpressions = []}}}}, .addresses = ["10.10.71.6"], .span = ["testNode-71"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8c4bfbfa-c294-5004-a798-9334ef296552"}, .name = "8c4bfbfa-c294-5004-a798-9334ef296552", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-725]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-725")], .matchExpressions = []}}}}, .addresses = ["10.10.72.5"], .span = ["testNode-72"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "97437d24-52f4-5ecf-869e-e917ba312c69"}, .name = "97437d24-52f4-5ecf-869e-e917ba312c69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-711]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-711")], .matchExpressions = []}}}}, .addresses = ["10.10.71.1"], .span = ["testNode-71"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9af4e040-689a-54a9-ba22-862a631596bd"}, .name = "9af4e040-689a-54a9-ba22-862a631596bd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-735]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-735")], .matchExpressions = []}}}}, .addresses = ["10.10.73.5"], .span = ["testNode-73"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9f1f9d0c-129c-5a6a-a162-653adf02f281"}, .name = "9f1f9d0c-129c-5a6a-a162-653adf02f281", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-733]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-733")], .matchExpressions = []}}}}, .addresses = ["10.10.73.3"], .span = ["testNode-73"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a9dd3184-c1f1-57c6-93b0-b25e0641173d"}, .name = "a9dd3184-c1f1-57c6-93b0-b25e0641173d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-710]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-710")], .matchExpressions = []}}}}, .addresses = ["10.10.71.0"], .span = ["testNode-70"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "af251d3c-c378-5e78-a972-aeff6e7c9a8a"}, .name = "af251d3c-c378-5e78-a972-aeff6e7c9a8a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-709]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-709")], .matchExpressions = []}}}}, .addresses = ["10.10.70.9"], .span = ["testNode-70"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b22c4819-b614-5ac5-b1ac-95043bf74c79"}, .name = "b22c4819-b614-5ac5-b1ac-95043bf74c79", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-729]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-729")], .matchExpressions = []}}}}, .addresses = ["10.10.72.9"], .span = ["testNode-72"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b95cfcba-dd98-56ce-85e1-398a0acdad1b"}, .name = "b95cfcba-dd98-56ce-85e1-398a0acdad1b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-736]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-736")], .matchExpressions = []}}}}, .addresses = ["10.10.73.6"], .span = ["testNode-73"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bdd84bd1-3356-548b-8d43-8a862a43f544"}, .name = "bdd84bd1-3356-548b-8d43-8a862a43f544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-730]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-730")], .matchExpressions = []}}}}, .addresses = ["10.10.73.0"], .span = ["testNode-72"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d621cfe2-2494-56ae-89e0-1e94e9537683"}, .name = "d621cfe2-2494-56ae-89e0-1e94e9537683", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-705]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-705")], .matchExpressions = []}}}}, .addresses = ["10.10.70.5"], .span = ["testNode-70"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "de993881-b512-5447-a715-9ec08b6b1ae2"}, .name = "de993881-b512-5447-a715-9ec08b6b1ae2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-724]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-724")], .matchExpressions = []}}}}, .addresses = ["10.10.72.4"], .span = ["testNode-72"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dee060a6-a5f7-5412-9d48-5a167da9ecc1"}, .name = "dee060a6-a5f7-5412-9d48-5a167da9ecc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-726]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-726")], .matchExpressions = []}}}}, .addresses = ["10.10.72.6"], .span = ["testNode-72"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e0804028-9a18-5a77-a65b-93a446960ed3"}, .name = "e0804028-9a18-5a77-a65b-93a446960ed3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-713]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-713")], .matchExpressions = []}}}}, .addresses = ["10.10.71.3"], .span = ["testNode-71"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e1c097f5-25d7-5482-a7fb-163de245bee0"}, .name = "e1c097f5-25d7-5482-a7fb-163de245bee0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-714]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-714")], .matchExpressions = []}}}}, .addresses = ["10.10.71.4"], .span = ["testNode-71"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f75db8db-9892-5caf-9ad1-b3e2cae8b955"}, .name = "f75db8db-9892-5caf-9ad1-b3e2cae8b955", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-707]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-707")], .matchExpressions = []}}}}, .addresses = ["10.10.70.7"], .span = ["testNode-70"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0f4b6159-9507-5367-b061-c88c5b1b9a83"}, .name = "0f4b6159-9507-5367-b061-c88c5b1b9a83", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-717]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-717")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-717", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "170ab9dd-5115-5aa1-a7fa-3799723c1988"}, .name = "170ab9dd-5115-5aa1-a7fa-3799723c1988", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-723]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-723")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-723", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "185a71fd-ef8b-56d1-a4c5-52f3a93e5c9d"}, .name = "185a71fd-ef8b-56d1-a4c5-52f3a93e5c9d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-727]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-727")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-727", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "199f4778-09d6-5cfa-abb3-e9bb7691145d"}, .name = "199f4778-09d6-5cfa-abb3-e9bb7691145d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-731]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-731")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-731", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1bf41345-ee85-569b-a022-c36ff6a5c558"}, .name = "1bf41345-ee85-569b-a022-c36ff6a5c558", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-734]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-734")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-734", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1e30a90c-1375-56c6-b159-840e1201a88e"}, .name = "1e30a90c-1375-56c6-b159-840e1201a88e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-719]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-719")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-719", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2478778f-c17f-5acb-aaa0-27cc573a22f1"}, .name = "2478778f-c17f-5acb-aaa0-27cc573a22f1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-704]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-704")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-704", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3358e076-66f4-5d42-a1d5-707cecb8f70b"}, .name = "3358e076-66f4-5d42-a1d5-707cecb8f70b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-732]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-732")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-732", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "483f1a9c-687d-5d54-bf85-977ad4a36bdb"}, .name = "483f1a9c-687d-5d54-bf85-977ad4a36bdb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-728]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-728")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-728", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4d0cb5bb-61ee-5334-a57e-5c0530b9e2d6"}, .name = "4d0cb5bb-61ee-5334-a57e-5c0530b9e2d6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-718]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-718")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-718", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4dbef641-dacc-58d4-9172-bd6054abe5a3"}, .name = "4dbef641-dacc-58d4-9172-bd6054abe5a3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-708]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-708")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-708", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4fad2040-84c6-5627-ace8-8205d5eccf4d"}, .name = "4fad2040-84c6-5627-ace8-8205d5eccf4d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-721]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-721")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-721", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5a010afb-8f24-509a-a8dd-eb64221776bc"}, .name = "5a010afb-8f24-509a-a8dd-eb64221776bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-706]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-706")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-706", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6a6112dc-5170-5d89-aea8-b2a865f79ce3"}, .name = "6a6112dc-5170-5d89-aea8-b2a865f79ce3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-720]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-720")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-720", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7b925c47-a6a4-5aaa-a1d7-a2c0585943ee"}, .name = "7b925c47-a6a4-5aaa-a1d7-a2c0585943ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-722]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-722")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-722", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "807ad77e-b523-579e-b82d-fd698020868c"}, .name = "807ad77e-b523-579e-b82d-fd698020868c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-715]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-715")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-715", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8877a11e-49e0-5059-a164-9df96f000095"}, .name = "8877a11e-49e0-5059-a164-9df96f000095", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-712]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-712")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-712", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8c2ff3d1-8c3b-5bff-8f8b-cb2cc35b6baa"}, .name = "8c2ff3d1-8c3b-5bff-8f8b-cb2cc35b6baa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-716]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-716")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-716", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8c4bfbfa-c294-5004-a798-9334ef296552"}, .name = "8c4bfbfa-c294-5004-a798-9334ef296552", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-725]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-725")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-725", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "97437d24-52f4-5ecf-869e-e917ba312c69"}, .name = "97437d24-52f4-5ecf-869e-e917ba312c69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-711]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-711")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-711", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9af4e040-689a-54a9-ba22-862a631596bd"}, .name = "9af4e040-689a-54a9-ba22-862a631596bd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-735]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-735")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-735", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9f1f9d0c-129c-5a6a-a162-653adf02f281"}, .name = "9f1f9d0c-129c-5a6a-a162-653adf02f281", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-733]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-733")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-733", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a9dd3184-c1f1-57c6-93b0-b25e0641173d"}, .name = "a9dd3184-c1f1-57c6-93b0-b25e0641173d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-710]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-710")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-710", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "af251d3c-c378-5e78-a972-aeff6e7c9a8a"}, .name = "af251d3c-c378-5e78-a972-aeff6e7c9a8a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-709]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-709")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-709", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b22c4819-b614-5ac5-b1ac-95043bf74c79"}, .name = "b22c4819-b614-5ac5-b1ac-95043bf74c79", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-729]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-729")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-729", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bdd84bd1-3356-548b-8d43-8a862a43f544"}, .name = "bdd84bd1-3356-548b-8d43-8a862a43f544", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-730]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-730")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-730", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d621cfe2-2494-56ae-89e0-1e94e9537683"}, .name = "d621cfe2-2494-56ae-89e0-1e94e9537683", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-705]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-705")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-705", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "de993881-b512-5447-a715-9ec08b6b1ae2"}, .name = "de993881-b512-5447-a715-9ec08b6b1ae2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-724]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-724")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-724", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dee060a6-a5f7-5412-9d48-5a167da9ecc1"}, .name = "dee060a6-a5f7-5412-9d48-5a167da9ecc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-726]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-726")], .matchExpressions = []}}}}, .podsByNode = [("testNode-72", [k8spolicy.PodReference{.name = "testPod-726", .namespace = "testNamespace"}])], .span = ["testNode-72"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e0804028-9a18-5a77-a65b-93a446960ed3"}, .name = "e0804028-9a18-5a77-a65b-93a446960ed3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-713]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-713")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-713", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e1c097f5-25d7-5482-a7fb-163de245bee0"}, .name = "e1c097f5-25d7-5482-a7fb-163de245bee0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-714]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-714")], .matchExpressions = []}}}}, .podsByNode = [("testNode-71", [k8spolicy.PodReference{.name = "testPod-714", .namespace = "testNamespace"}])], .span = ["testNode-71"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f75db8db-9892-5caf-9ad1-b3e2cae8b955"}, .name = "f75db8db-9892-5caf-9ad1-b3e2cae8b955", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-707]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-707")], .matchExpressions = []}}}}, .podsByNode = [("testNode-70", [k8spolicy.PodReference{.name = "testPod-707", .namespace = "testNamespace"}])], .span = ["testNode-70"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-704"}, .name = "testNP-704", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d621cfe2-2494-56ae-89e0-1e94e9537683"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2478778f-c17f-5acb-aaa0-27cc573a22f1"]}, .span = ["testNode-70"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-705"}, .name = "testNP-705", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5a010afb-8f24-509a-a8dd-eb64221776bc"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d621cfe2-2494-56ae-89e0-1e94e9537683"]}, .span = ["testNode-70"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-706"}, .name = "testNP-706", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f75db8db-9892-5caf-9ad1-b3e2cae8b955"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5a010afb-8f24-509a-a8dd-eb64221776bc"]}, .span = ["testNode-70"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-707"}, .name = "testNP-707", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4dbef641-dacc-58d4-9172-bd6054abe5a3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f75db8db-9892-5caf-9ad1-b3e2cae8b955"]}, .span = ["testNode-70"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-708"}, .name = "testNP-708", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["af251d3c-c378-5e78-a972-aeff6e7c9a8a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4dbef641-dacc-58d4-9172-bd6054abe5a3"]}, .span = ["testNode-70"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-709"}, .name = "testNP-709", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a9dd3184-c1f1-57c6-93b0-b25e0641173d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["af251d3c-c378-5e78-a972-aeff6e7c9a8a"]}, .span = ["testNode-70"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-710"}, .name = "testNP-710", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["97437d24-52f4-5ecf-869e-e917ba312c69"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a9dd3184-c1f1-57c6-93b0-b25e0641173d"]}, .span = ["testNode-71"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-711"}, .name = "testNP-711", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8877a11e-49e0-5059-a164-9df96f000095"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["97437d24-52f4-5ecf-869e-e917ba312c69"]}, .span = ["testNode-71"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-712"}, .name = "testNP-712", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e0804028-9a18-5a77-a65b-93a446960ed3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8877a11e-49e0-5059-a164-9df96f000095"]}, .span = ["testNode-71"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-713"}, .name = "testNP-713", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e1c097f5-25d7-5482-a7fb-163de245bee0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e0804028-9a18-5a77-a65b-93a446960ed3"]}, .span = ["testNode-71"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-714"}, .name = "testNP-714", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["807ad77e-b523-579e-b82d-fd698020868c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e1c097f5-25d7-5482-a7fb-163de245bee0"]}, .span = ["testNode-71"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-715"}, .name = "testNP-715", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8c2ff3d1-8c3b-5bff-8f8b-cb2cc35b6baa"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["807ad77e-b523-579e-b82d-fd698020868c"]}, .span = ["testNode-71"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-716"}, .name = "testNP-716", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0f4b6159-9507-5367-b061-c88c5b1b9a83"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8c2ff3d1-8c3b-5bff-8f8b-cb2cc35b6baa"]}, .span = ["testNode-71"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-717"}, .name = "testNP-717", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4d0cb5bb-61ee-5334-a57e-5c0530b9e2d6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0f4b6159-9507-5367-b061-c88c5b1b9a83"]}, .span = ["testNode-71"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-718"}, .name = "testNP-718", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1e30a90c-1375-56c6-b159-840e1201a88e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4d0cb5bb-61ee-5334-a57e-5c0530b9e2d6"]}, .span = ["testNode-71"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-719"}, .name = "testNP-719", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6a6112dc-5170-5d89-aea8-b2a865f79ce3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1e30a90c-1375-56c6-b159-840e1201a88e"]}, .span = ["testNode-71"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-720"}, .name = "testNP-720", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4fad2040-84c6-5627-ace8-8205d5eccf4d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6a6112dc-5170-5d89-aea8-b2a865f79ce3"]}, .span = ["testNode-72"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-721"}, .name = "testNP-721", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7b925c47-a6a4-5aaa-a1d7-a2c0585943ee"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4fad2040-84c6-5627-ace8-8205d5eccf4d"]}, .span = ["testNode-72"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-722"}, .name = "testNP-722", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["170ab9dd-5115-5aa1-a7fa-3799723c1988"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7b925c47-a6a4-5aaa-a1d7-a2c0585943ee"]}, .span = ["testNode-72"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-723"}, .name = "testNP-723", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["de993881-b512-5447-a715-9ec08b6b1ae2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["170ab9dd-5115-5aa1-a7fa-3799723c1988"]}, .span = ["testNode-72"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-724"}, .name = "testNP-724", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8c4bfbfa-c294-5004-a798-9334ef296552"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["de993881-b512-5447-a715-9ec08b6b1ae2"]}, .span = ["testNode-72"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-725"}, .name = "testNP-725", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dee060a6-a5f7-5412-9d48-5a167da9ecc1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8c4bfbfa-c294-5004-a798-9334ef296552"]}, .span = ["testNode-72"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-726"}, .name = "testNP-726", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["185a71fd-ef8b-56d1-a4c5-52f3a93e5c9d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dee060a6-a5f7-5412-9d48-5a167da9ecc1"]}, .span = ["testNode-72"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-727"}, .name = "testNP-727", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["483f1a9c-687d-5d54-bf85-977ad4a36bdb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["185a71fd-ef8b-56d1-a4c5-52f3a93e5c9d"]}, .span = ["testNode-72"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-728"}, .name = "testNP-728", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b22c4819-b614-5ac5-b1ac-95043bf74c79"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["483f1a9c-687d-5d54-bf85-977ad4a36bdb"]}, .span = ["testNode-72"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-729"}, .name = "testNP-729", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bdd84bd1-3356-548b-8d43-8a862a43f544"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b22c4819-b614-5ac5-b1ac-95043bf74c79"]}, .span = ["testNode-72"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-730"}, .name = "testNP-730", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["199f4778-09d6-5cfa-abb3-e9bb7691145d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bdd84bd1-3356-548b-8d43-8a862a43f544"]}, .span = ["testNode-73"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-731"}, .name = "testNP-731", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3358e076-66f4-5d42-a1d5-707cecb8f70b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["199f4778-09d6-5cfa-abb3-e9bb7691145d"]}, .span = ["testNode-73"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-732"}, .name = "testNP-732", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9f1f9d0c-129c-5a6a-a162-653adf02f281"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3358e076-66f4-5d42-a1d5-707cecb8f70b"]}, .span = ["testNode-73"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-733"}, .name = "testNP-733", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1bf41345-ee85-569b-a022-c36ff6a5c558"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9f1f9d0c-129c-5a6a-a162-653adf02f281"]}, .span = ["testNode-73"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-734"}, .name = "testNP-734", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9af4e040-689a-54a9-ba22-862a631596bd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1bf41345-ee85-569b-a022-c36ff6a5c558"]}, .span = ["testNode-73"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-735"}, .name = "testNP-735", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b95cfcba-dd98-56ce-85e1-398a0acdad1b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9af4e040-689a-54a9-ba22-862a631596bd"]}, .span = ["testNode-73"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "034f0803-0c7b-5be1-a6cd-fa18721f7aad"}, .name = "034f0803-0c7b-5be1-a6cd-fa18721f7aad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-759]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-759")], .matchExpressions = []}}}}, .addresses = ["10.10.75.9"], .span = ["testNode-75"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0d48f67b-4f7e-5de0-84cd-517bbdc76002"}, .name = "0d48f67b-4f7e-5de0-84cd-517bbdc76002", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-760]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-760")], .matchExpressions = []}}}}, .addresses = ["10.10.76.0"], .span = ["testNode-75"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0f1db36c-7be5-5373-a007-56b0f06a994d"}, .name = "0f1db36c-7be5-5373-a007-56b0f06a994d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-750]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-750")], .matchExpressions = []}}}}, .addresses = ["10.10.75.0"], .span = ["testNode-74"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "126f73b3-5254-59a2-82e2-852ddea6a25f"}, .name = "126f73b3-5254-59a2-82e2-852ddea6a25f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-756]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-756")], .matchExpressions = []}}}}, .addresses = ["10.10.75.6"], .span = ["testNode-75"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "19e662b0-6edf-5f6f-8e72-979d948c6e1a"}, .name = "19e662b0-6edf-5f6f-8e72-979d948c6e1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-742]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-742")], .matchExpressions = []}}}}, .addresses = ["10.10.74.2"], .span = ["testNode-74"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1a5ff1dd-09d2-57b9-bfa3-9b02a9373b0f"}, .name = "1a5ff1dd-09d2-57b9-bfa3-9b02a9373b0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-753]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-753")], .matchExpressions = []}}}}, .addresses = ["10.10.75.3"], .span = ["testNode-75"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2151c186-1824-5ed9-8bea-9c68a5330753"}, .name = "2151c186-1824-5ed9-8bea-9c68a5330753", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-738]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-738")], .matchExpressions = []}}}}, .addresses = ["10.10.73.8"], .span = ["testNode-73"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "364253f0-a667-50f8-9667-0b11e261bcee"}, .name = "364253f0-a667-50f8-9667-0b11e261bcee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-766]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-766")], .matchExpressions = []}}}}, .addresses = ["10.10.76.6"], .span = ["testNode-76"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3b0ad515-9a94-53ce-be8c-6f3761b97a7a"}, .name = "3b0ad515-9a94-53ce-be8c-6f3761b97a7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-749]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-749")], .matchExpressions = []}}}}, .addresses = ["10.10.74.9"], .span = ["testNode-74"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4be28b13-70ae-536b-a586-e35cc4668122"}, .name = "4be28b13-70ae-536b-a586-e35cc4668122", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-764]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-764")], .matchExpressions = []}}}}, .addresses = ["10.10.76.4"], .span = ["testNode-76"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5b32c7d3-ede1-5586-a7ca-da8686051b14"}, .name = "5b32c7d3-ede1-5586-a7ca-da8686051b14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-755]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-755")], .matchExpressions = []}}}}, .addresses = ["10.10.75.5"], .span = ["testNode-75"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5d059696-d667-5b5c-8d20-23b19ef421d9"}, .name = "5d059696-d667-5b5c-8d20-23b19ef421d9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-743]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-743")], .matchExpressions = []}}}}, .addresses = ["10.10.74.3"], .span = ["testNode-74"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5f738ef9-dedf-5309-a62d-53845b5a1a4e"}, .name = "5f738ef9-dedf-5309-a62d-53845b5a1a4e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-758]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-758")], .matchExpressions = []}}}}, .addresses = ["10.10.75.8"], .span = ["testNode-75"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "766b86a4-0dcc-521d-8bb6-d27d78acb693"}, .name = "766b86a4-0dcc-521d-8bb6-d27d78acb693", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-740]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-740")], .matchExpressions = []}}}}, .addresses = ["10.10.74.0"], .span = ["testNode-73"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "79a91e52-4b0b-53a7-9959-20ebf048e319"}, .name = "79a91e52-4b0b-53a7-9959-20ebf048e319", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-751]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-751")], .matchExpressions = []}}}}, .addresses = ["10.10.75.1"], .span = ["testNode-75"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7e3e48b3-e4b2-5bef-875e-51f352e44d6c"}, .name = "7e3e48b3-e4b2-5bef-875e-51f352e44d6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-761]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-761")], .matchExpressions = []}}}}, .addresses = ["10.10.76.1"], .span = ["testNode-76"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "808cc2b4-23d9-591f-b752-0ab0b7006486"}, .name = "808cc2b4-23d9-591f-b752-0ab0b7006486", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-763]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-763")], .matchExpressions = []}}}}, .addresses = ["10.10.76.3"], .span = ["testNode-76"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "879ec2e7-3b11-5170-98b0-b4a91d2bb3c7"}, .name = "879ec2e7-3b11-5170-98b0-b4a91d2bb3c7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-739]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-739")], .matchExpressions = []}}}}, .addresses = ["10.10.73.9"], .span = ["testNode-73"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9397b218-249a-57dd-be98-520d9cba2474"}, .name = "9397b218-249a-57dd-be98-520d9cba2474", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-747]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-747")], .matchExpressions = []}}}}, .addresses = ["10.10.74.7"], .span = ["testNode-74"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "96c4a092-9489-50c5-bf37-005a45fa0e26"}, .name = "96c4a092-9489-50c5-bf37-005a45fa0e26", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-767]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-767")], .matchExpressions = []}}}}, .addresses = ["10.10.76.7"], .span = ["testNode-76"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9c2bd9ff-ca37-5764-95cb-39133fbb2aa2"}, .name = "9c2bd9ff-ca37-5764-95cb-39133fbb2aa2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-752]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-752")], .matchExpressions = []}}}}, .addresses = ["10.10.75.2"], .span = ["testNode-75"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a6a5b817-35a6-5f9a-be9a-bf5262fe4fd6"}, .name = "a6a5b817-35a6-5f9a-be9a-bf5262fe4fd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-744]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-744")], .matchExpressions = []}}}}, .addresses = ["10.10.74.4"], .span = ["testNode-74"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ab82c49b-2783-5c78-9931-7d6b0fbb5912"}, .name = "ab82c49b-2783-5c78-9931-7d6b0fbb5912", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-754]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-754")], .matchExpressions = []}}}}, .addresses = ["10.10.75.4"], .span = ["testNode-75"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cec4244a-7b81-5c2d-a20c-783046f610c8"}, .name = "cec4244a-7b81-5c2d-a20c-783046f610c8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-741]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-741")], .matchExpressions = []}}}}, .addresses = ["10.10.74.1"], .span = ["testNode-74"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d4e0097b-2530-50a1-a9e9-0292d2e35dd6"}, .name = "d4e0097b-2530-50a1-a9e9-0292d2e35dd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-748]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-748")], .matchExpressions = []}}}}, .addresses = ["10.10.74.8"], .span = ["testNode-74"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d6156ed5-4bc9-53fb-92f6-705c2c15f639"}, .name = "d6156ed5-4bc9-53fb-92f6-705c2c15f639", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-765]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-765")], .matchExpressions = []}}}}, .addresses = ["10.10.76.5"], .span = ["testNode-76"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d7252600-a390-56b7-97bd-cf4a413f0c84"}, .name = "d7252600-a390-56b7-97bd-cf4a413f0c84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-757]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-757")], .matchExpressions = []}}}}, .addresses = ["10.10.75.7"], .span = ["testNode-75"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dd9e1fc6-07e9-5cbb-8414-7bf3d9b85b6c"}, .name = "dd9e1fc6-07e9-5cbb-8414-7bf3d9b85b6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-737]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-737")], .matchExpressions = []}}}}, .addresses = ["10.10.73.7"], .span = ["testNode-73"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ed1aa1d6-ccb0-569f-bea3-0e902d681d0d"}, .name = "ed1aa1d6-ccb0-569f-bea3-0e902d681d0d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-762]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-762")], .matchExpressions = []}}}}, .addresses = ["10.10.76.2"], .span = ["testNode-76"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ef9add9a-b595-5210-9cf1-0f731acd2823"}, .name = "ef9add9a-b595-5210-9cf1-0f731acd2823", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-746]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-746")], .matchExpressions = []}}}}, .addresses = ["10.10.74.6"], .span = ["testNode-74"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f94a2600-3b56-59eb-960b-bf7c66c1eaf0"}, .name = "f94a2600-3b56-59eb-960b-bf7c66c1eaf0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-745]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-745")], .matchExpressions = []}}}}, .addresses = ["10.10.74.5"], .span = ["testNode-74"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fa9629ba-66b5-578b-b753-884370a7fa75"}, .name = "fa9629ba-66b5-578b-b753-884370a7fa75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-768]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-768")], .matchExpressions = []}}}}, .addresses = ["10.10.76.8"], .span = ["testNode-76"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "034f0803-0c7b-5be1-a6cd-fa18721f7aad"}, .name = "034f0803-0c7b-5be1-a6cd-fa18721f7aad", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-759]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-759")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-759", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0d48f67b-4f7e-5de0-84cd-517bbdc76002"}, .name = "0d48f67b-4f7e-5de0-84cd-517bbdc76002", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-760]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-760")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-760", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0f1db36c-7be5-5373-a007-56b0f06a994d"}, .name = "0f1db36c-7be5-5373-a007-56b0f06a994d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-750]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-750")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-750", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "126f73b3-5254-59a2-82e2-852ddea6a25f"}, .name = "126f73b3-5254-59a2-82e2-852ddea6a25f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-756]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-756")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-756", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "19e662b0-6edf-5f6f-8e72-979d948c6e1a"}, .name = "19e662b0-6edf-5f6f-8e72-979d948c6e1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-742]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-742")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-742", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1a5ff1dd-09d2-57b9-bfa3-9b02a9373b0f"}, .name = "1a5ff1dd-09d2-57b9-bfa3-9b02a9373b0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-753]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-753")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-753", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2151c186-1824-5ed9-8bea-9c68a5330753"}, .name = "2151c186-1824-5ed9-8bea-9c68a5330753", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-738]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-738")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-738", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "364253f0-a667-50f8-9667-0b11e261bcee"}, .name = "364253f0-a667-50f8-9667-0b11e261bcee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-766]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-766")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-766", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3b0ad515-9a94-53ce-be8c-6f3761b97a7a"}, .name = "3b0ad515-9a94-53ce-be8c-6f3761b97a7a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-749]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-749")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-749", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4be28b13-70ae-536b-a586-e35cc4668122"}, .name = "4be28b13-70ae-536b-a586-e35cc4668122", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-764]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-764")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-764", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5b32c7d3-ede1-5586-a7ca-da8686051b14"}, .name = "5b32c7d3-ede1-5586-a7ca-da8686051b14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-755]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-755")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-755", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5d059696-d667-5b5c-8d20-23b19ef421d9"}, .name = "5d059696-d667-5b5c-8d20-23b19ef421d9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-743]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-743")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-743", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5f738ef9-dedf-5309-a62d-53845b5a1a4e"}, .name = "5f738ef9-dedf-5309-a62d-53845b5a1a4e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-758]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-758")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-758", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "766b86a4-0dcc-521d-8bb6-d27d78acb693"}, .name = "766b86a4-0dcc-521d-8bb6-d27d78acb693", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-740]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-740")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-740", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "79a91e52-4b0b-53a7-9959-20ebf048e319"}, .name = "79a91e52-4b0b-53a7-9959-20ebf048e319", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-751]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-751")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-751", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7e3e48b3-e4b2-5bef-875e-51f352e44d6c"}, .name = "7e3e48b3-e4b2-5bef-875e-51f352e44d6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-761]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-761")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-761", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "808cc2b4-23d9-591f-b752-0ab0b7006486"}, .name = "808cc2b4-23d9-591f-b752-0ab0b7006486", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-763]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-763")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-763", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "879ec2e7-3b11-5170-98b0-b4a91d2bb3c7"}, .name = "879ec2e7-3b11-5170-98b0-b4a91d2bb3c7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-739]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-739")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-739", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9397b218-249a-57dd-be98-520d9cba2474"}, .name = "9397b218-249a-57dd-be98-520d9cba2474", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-747]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-747")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-747", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "96c4a092-9489-50c5-bf37-005a45fa0e26"}, .name = "96c4a092-9489-50c5-bf37-005a45fa0e26", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-767]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-767")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-767", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9c2bd9ff-ca37-5764-95cb-39133fbb2aa2"}, .name = "9c2bd9ff-ca37-5764-95cb-39133fbb2aa2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-752]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-752")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-752", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a6a5b817-35a6-5f9a-be9a-bf5262fe4fd6"}, .name = "a6a5b817-35a6-5f9a-be9a-bf5262fe4fd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-744]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-744")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-744", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ab82c49b-2783-5c78-9931-7d6b0fbb5912"}, .name = "ab82c49b-2783-5c78-9931-7d6b0fbb5912", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-754]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-754")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-754", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b95cfcba-dd98-56ce-85e1-398a0acdad1b"}, .name = "b95cfcba-dd98-56ce-85e1-398a0acdad1b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-736]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-736")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-736", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cec4244a-7b81-5c2d-a20c-783046f610c8"}, .name = "cec4244a-7b81-5c2d-a20c-783046f610c8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-741]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-741")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-741", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d4e0097b-2530-50a1-a9e9-0292d2e35dd6"}, .name = "d4e0097b-2530-50a1-a9e9-0292d2e35dd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-748]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-748")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-748", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d6156ed5-4bc9-53fb-92f6-705c2c15f639"}, .name = "d6156ed5-4bc9-53fb-92f6-705c2c15f639", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-765]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-765")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-765", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d7252600-a390-56b7-97bd-cf4a413f0c84"}, .name = "d7252600-a390-56b7-97bd-cf4a413f0c84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-757]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-757")], .matchExpressions = []}}}}, .podsByNode = [("testNode-75", [k8spolicy.PodReference{.name = "testPod-757", .namespace = "testNamespace"}])], .span = ["testNode-75"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dd9e1fc6-07e9-5cbb-8414-7bf3d9b85b6c"}, .name = "dd9e1fc6-07e9-5cbb-8414-7bf3d9b85b6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-737]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-737")], .matchExpressions = []}}}}, .podsByNode = [("testNode-73", [k8spolicy.PodReference{.name = "testPod-737", .namespace = "testNamespace"}])], .span = ["testNode-73"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ed1aa1d6-ccb0-569f-bea3-0e902d681d0d"}, .name = "ed1aa1d6-ccb0-569f-bea3-0e902d681d0d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-762]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-762")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-762", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ef9add9a-b595-5210-9cf1-0f731acd2823"}, .name = "ef9add9a-b595-5210-9cf1-0f731acd2823", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-746]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-746")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-746", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f94a2600-3b56-59eb-960b-bf7c66c1eaf0"}, .name = "f94a2600-3b56-59eb-960b-bf7c66c1eaf0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-745]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-745")], .matchExpressions = []}}}}, .podsByNode = [("testNode-74", [k8spolicy.PodReference{.name = "testPod-745", .namespace = "testNamespace"}])], .span = ["testNode-74"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-736"}, .name = "testNP-736", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dd9e1fc6-07e9-5cbb-8414-7bf3d9b85b6c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b95cfcba-dd98-56ce-85e1-398a0acdad1b"]}, .span = ["testNode-73"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-737"}, .name = "testNP-737", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2151c186-1824-5ed9-8bea-9c68a5330753"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dd9e1fc6-07e9-5cbb-8414-7bf3d9b85b6c"]}, .span = ["testNode-73"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-738"}, .name = "testNP-738", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["879ec2e7-3b11-5170-98b0-b4a91d2bb3c7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2151c186-1824-5ed9-8bea-9c68a5330753"]}, .span = ["testNode-73"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-739"}, .name = "testNP-739", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["766b86a4-0dcc-521d-8bb6-d27d78acb693"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["879ec2e7-3b11-5170-98b0-b4a91d2bb3c7"]}, .span = ["testNode-73"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-740"}, .name = "testNP-740", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cec4244a-7b81-5c2d-a20c-783046f610c8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["766b86a4-0dcc-521d-8bb6-d27d78acb693"]}, .span = ["testNode-74"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-741"}, .name = "testNP-741", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["19e662b0-6edf-5f6f-8e72-979d948c6e1a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cec4244a-7b81-5c2d-a20c-783046f610c8"]}, .span = ["testNode-74"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-742"}, .name = "testNP-742", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5d059696-d667-5b5c-8d20-23b19ef421d9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["19e662b0-6edf-5f6f-8e72-979d948c6e1a"]}, .span = ["testNode-74"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-743"}, .name = "testNP-743", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a6a5b817-35a6-5f9a-be9a-bf5262fe4fd6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5d059696-d667-5b5c-8d20-23b19ef421d9"]}, .span = ["testNode-74"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-744"}, .name = "testNP-744", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f94a2600-3b56-59eb-960b-bf7c66c1eaf0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a6a5b817-35a6-5f9a-be9a-bf5262fe4fd6"]}, .span = ["testNode-74"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-745"}, .name = "testNP-745", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ef9add9a-b595-5210-9cf1-0f731acd2823"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f94a2600-3b56-59eb-960b-bf7c66c1eaf0"]}, .span = ["testNode-74"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-746"}, .name = "testNP-746", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9397b218-249a-57dd-be98-520d9cba2474"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ef9add9a-b595-5210-9cf1-0f731acd2823"]}, .span = ["testNode-74"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-747"}, .name = "testNP-747", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d4e0097b-2530-50a1-a9e9-0292d2e35dd6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9397b218-249a-57dd-be98-520d9cba2474"]}, .span = ["testNode-74"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-748"}, .name = "testNP-748", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3b0ad515-9a94-53ce-be8c-6f3761b97a7a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d4e0097b-2530-50a1-a9e9-0292d2e35dd6"]}, .span = ["testNode-74"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-749"}, .name = "testNP-749", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0f1db36c-7be5-5373-a007-56b0f06a994d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3b0ad515-9a94-53ce-be8c-6f3761b97a7a"]}, .span = ["testNode-74"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-750"}, .name = "testNP-750", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["79a91e52-4b0b-53a7-9959-20ebf048e319"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0f1db36c-7be5-5373-a007-56b0f06a994d"]}, .span = ["testNode-75"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-751"}, .name = "testNP-751", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9c2bd9ff-ca37-5764-95cb-39133fbb2aa2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["79a91e52-4b0b-53a7-9959-20ebf048e319"]}, .span = ["testNode-75"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-752"}, .name = "testNP-752", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1a5ff1dd-09d2-57b9-bfa3-9b02a9373b0f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9c2bd9ff-ca37-5764-95cb-39133fbb2aa2"]}, .span = ["testNode-75"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-753"}, .name = "testNP-753", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ab82c49b-2783-5c78-9931-7d6b0fbb5912"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1a5ff1dd-09d2-57b9-bfa3-9b02a9373b0f"]}, .span = ["testNode-75"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-754"}, .name = "testNP-754", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5b32c7d3-ede1-5586-a7ca-da8686051b14"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ab82c49b-2783-5c78-9931-7d6b0fbb5912"]}, .span = ["testNode-75"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-755"}, .name = "testNP-755", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["126f73b3-5254-59a2-82e2-852ddea6a25f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5b32c7d3-ede1-5586-a7ca-da8686051b14"]}, .span = ["testNode-75"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-756"}, .name = "testNP-756", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d7252600-a390-56b7-97bd-cf4a413f0c84"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["126f73b3-5254-59a2-82e2-852ddea6a25f"]}, .span = ["testNode-75"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-757"}, .name = "testNP-757", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5f738ef9-dedf-5309-a62d-53845b5a1a4e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d7252600-a390-56b7-97bd-cf4a413f0c84"]}, .span = ["testNode-75"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-758"}, .name = "testNP-758", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["034f0803-0c7b-5be1-a6cd-fa18721f7aad"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5f738ef9-dedf-5309-a62d-53845b5a1a4e"]}, .span = ["testNode-75"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-759"}, .name = "testNP-759", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0d48f67b-4f7e-5de0-84cd-517bbdc76002"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["034f0803-0c7b-5be1-a6cd-fa18721f7aad"]}, .span = ["testNode-75"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-760"}, .name = "testNP-760", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7e3e48b3-e4b2-5bef-875e-51f352e44d6c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0d48f67b-4f7e-5de0-84cd-517bbdc76002"]}, .span = ["testNode-76"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-761"}, .name = "testNP-761", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ed1aa1d6-ccb0-569f-bea3-0e902d681d0d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7e3e48b3-e4b2-5bef-875e-51f352e44d6c"]}, .span = ["testNode-76"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-762"}, .name = "testNP-762", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["808cc2b4-23d9-591f-b752-0ab0b7006486"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ed1aa1d6-ccb0-569f-bea3-0e902d681d0d"]}, .span = ["testNode-76"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-763"}, .name = "testNP-763", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4be28b13-70ae-536b-a586-e35cc4668122"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["808cc2b4-23d9-591f-b752-0ab0b7006486"]}, .span = ["testNode-76"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-764"}, .name = "testNP-764", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d6156ed5-4bc9-53fb-92f6-705c2c15f639"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4be28b13-70ae-536b-a586-e35cc4668122"]}, .span = ["testNode-76"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-765"}, .name = "testNP-765", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["364253f0-a667-50f8-9667-0b11e261bcee"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d6156ed5-4bc9-53fb-92f6-705c2c15f639"]}, .span = ["testNode-76"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-766"}, .name = "testNP-766", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["96c4a092-9489-50c5-bf37-005a45fa0e26"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["364253f0-a667-50f8-9667-0b11e261bcee"]}, .span = ["testNode-76"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-767"}, .name = "testNP-767", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fa9629ba-66b5-578b-b753-884370a7fa75"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["96c4a092-9489-50c5-bf37-005a45fa0e26"]}, .span = ["testNode-76"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0b6935e0-4256-5914-bfb1-bb3186d23ffd"}, .name = "0b6935e0-4256-5914-bfb1-bb3186d23ffd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-777]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-777")], .matchExpressions = []}}}}, .addresses = ["10.10.77.7"], .span = ["testNode-77"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "103d4a84-040b-5d32-b625-c81009333db4"}, .name = "103d4a84-040b-5d32-b625-c81009333db4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-782]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-782")], .matchExpressions = []}}}}, .addresses = ["10.10.78.2"], .span = ["testNode-78"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "18a453b9-e840-55b2-a4fe-4770390c8b5e"}, .name = "18a453b9-e840-55b2-a4fe-4770390c8b5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-797]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-797")], .matchExpressions = []}}}}, .addresses = ["10.10.79.7"], .span = ["testNode-79"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2929af49-e43a-5690-8369-9becfaed1e88"}, .name = "2929af49-e43a-5690-8369-9becfaed1e88", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-793]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-793")], .matchExpressions = []}}}}, .addresses = ["10.10.79.3"], .span = ["testNode-79"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2c7db17e-58e7-55e0-9f24-671a97b1ff69"}, .name = "2c7db17e-58e7-55e0-9f24-671a97b1ff69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-785]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-785")], .matchExpressions = []}}}}, .addresses = ["10.10.78.5"], .span = ["testNode-78"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3cb7d641-1154-598f-8375-57a27086ee89"}, .name = "3cb7d641-1154-598f-8375-57a27086ee89", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-789]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-789")], .matchExpressions = []}}}}, .addresses = ["10.10.78.9"], .span = ["testNode-78"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4b22ef70-1527-55d5-ab1d-eddbd30bc34c"}, .name = "4b22ef70-1527-55d5-ab1d-eddbd30bc34c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-787]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-787")], .matchExpressions = []}}}}, .addresses = ["10.10.78.7"], .span = ["testNode-78"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "59f83071-820d-5756-9459-0f463713e892"}, .name = "59f83071-820d-5756-9459-0f463713e892", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-769]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-769")], .matchExpressions = []}}}}, .addresses = ["10.10.76.9"], .span = ["testNode-76"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "61d77ff5-8035-5e87-8cd3-d82d6f9e52c4"}, .name = "61d77ff5-8035-5e87-8cd3-d82d6f9e52c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-772]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-772")], .matchExpressions = []}}}}, .addresses = ["10.10.77.2"], .span = ["testNode-77"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "64208996-7094-5d71-9837-c652c1aa3026"}, .name = "64208996-7094-5d71-9837-c652c1aa3026", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-795]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-795")], .matchExpressions = []}}}}, .addresses = ["10.10.79.5"], .span = ["testNode-79"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6df8f8d9-6581-5038-bee3-4ec6d252207f"}, .name = "6df8f8d9-6581-5038-bee3-4ec6d252207f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-780]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-780")], .matchExpressions = []}}}}, .addresses = ["10.10.78.0"], .span = ["testNode-77"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6dfa4f82-8ce7-52be-83c9-cf80986f3ee5"}, .name = "6dfa4f82-8ce7-52be-83c9-cf80986f3ee5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-770]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-770")], .matchExpressions = []}}}}, .addresses = ["10.10.77.0"], .span = ["testNode-76"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7565db7f-b84e-54ca-af30-88d9b589985f"}, .name = "7565db7f-b84e-54ca-af30-88d9b589985f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-783]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-783")], .matchExpressions = []}}}}, .addresses = ["10.10.78.3"], .span = ["testNode-78"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7f937db4-bdb5-528c-ace8-cbe018ccee0f"}, .name = "7f937db4-bdb5-528c-ace8-cbe018ccee0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-798]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-798")], .matchExpressions = []}}}}, .addresses = ["10.10.79.8"], .span = ["testNode-79"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8942f3f2-772e-5aa4-b8a1-20023b26019d"}, .name = "8942f3f2-772e-5aa4-b8a1-20023b26019d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-775]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-775")], .matchExpressions = []}}}}, .addresses = ["10.10.77.5"], .span = ["testNode-77"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "900a8077-9f63-58eb-a46c-7c99a55e9faf"}, .name = "900a8077-9f63-58eb-a46c-7c99a55e9faf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-796]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-796")], .matchExpressions = []}}}}, .addresses = ["10.10.79.6"], .span = ["testNode-79"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "91445e91-446d-5ae2-92a0-8ba2d8116f1f"}, .name = "91445e91-446d-5ae2-92a0-8ba2d8116f1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-776]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-776")], .matchExpressions = []}}}}, .addresses = ["10.10.77.6"], .span = ["testNode-77"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "93a7bcdf-8535-5422-94ba-87ce7acfbfa7"}, .name = "93a7bcdf-8535-5422-94ba-87ce7acfbfa7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-788]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-788")], .matchExpressions = []}}}}, .addresses = ["10.10.78.8"], .span = ["testNode-78"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "94c613bf-5e11-5c20-b0b1-1ab014bd410a"}, .name = "94c613bf-5e11-5c20-b0b1-1ab014bd410a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-784]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-784")], .matchExpressions = []}}}}, .addresses = ["10.10.78.4"], .span = ["testNode-78"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a0e89b76-615a-5c59-a0c6-027039619f35"}, .name = "a0e89b76-615a-5c59-a0c6-027039619f35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-778]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-778")], .matchExpressions = []}}}}, .addresses = ["10.10.77.8"], .span = ["testNode-77"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "abf65f51-f2db-55f3-bfcd-94ef814b0972"}, .name = "abf65f51-f2db-55f3-bfcd-94ef814b0972", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-786]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-786")], .matchExpressions = []}}}}, .addresses = ["10.10.78.6"], .span = ["testNode-78"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b6fa082a-45da-5cd2-97d1-e1d11cc63b91"}, .name = "b6fa082a-45da-5cd2-97d1-e1d11cc63b91", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-781]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-781")], .matchExpressions = []}}}}, .addresses = ["10.10.78.1"], .span = ["testNode-78"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ba97e699-7b2e-551a-a089-2d4fc5e17ea0"}, .name = "ba97e699-7b2e-551a-a089-2d4fc5e17ea0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-779]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-779")], .matchExpressions = []}}}}, .addresses = ["10.10.77.9"], .span = ["testNode-77"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bc3d9e38-bbaa-524d-84ee-9f90f77aaada"}, .name = "bc3d9e38-bbaa-524d-84ee-9f90f77aaada", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-794]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-794")], .matchExpressions = []}}}}, .addresses = ["10.10.79.4"], .span = ["testNode-79"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c2352142-f3df-5c0a-a70c-3265e0e16c14"}, .name = "c2352142-f3df-5c0a-a70c-3265e0e16c14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-771]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-771")], .matchExpressions = []}}}}, .addresses = ["10.10.77.1"], .span = ["testNode-77"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c36f2f89-0d57-59d7-9b3f-e9d844200e27"}, .name = "c36f2f89-0d57-59d7-9b3f-e9d844200e27", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-774]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-774")], .matchExpressions = []}}}}, .addresses = ["10.10.77.4"], .span = ["testNode-77"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "cb0eec6f-b6a8-5a4f-b75a-985e6c5d70b2"}, .name = "cb0eec6f-b6a8-5a4f-b75a-985e6c5d70b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-791]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-791")], .matchExpressions = []}}}}, .addresses = ["10.10.79.1"], .span = ["testNode-79"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d275520c-7813-5be9-b9e6-4d4ea2de7dcd"}, .name = "d275520c-7813-5be9-b9e6-4d4ea2de7dcd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-799]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-799")], .matchExpressions = []}}}}, .addresses = ["10.10.79.9"], .span = ["testNode-79"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dfa24557-3517-5812-af70-4b7273b9ced2"}, .name = "dfa24557-3517-5812-af70-4b7273b9ced2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-792]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-792")], .matchExpressions = []}}}}, .addresses = ["10.10.79.2"], .span = ["testNode-79"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e65456ab-3523-5706-ac30-fc8f7e431803"}, .name = "e65456ab-3523-5706-ac30-fc8f7e431803", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-790]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-790")], .matchExpressions = []}}}}, .addresses = ["10.10.79.0"], .span = ["testNode-78"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f7b414c0-2062-5caa-95d5-1312767089d5"}, .name = "f7b414c0-2062-5caa-95d5-1312767089d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-800]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-800")], .matchExpressions = []}}}}, .addresses = ["10.10.80.0"], .span = ["testNode-79"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fc334cc6-87c1-5f4c-963a-8583abaee781"}, .name = "fc334cc6-87c1-5f4c-963a-8583abaee781", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-773]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-773")], .matchExpressions = []}}}}, .addresses = ["10.10.77.3"], .span = ["testNode-77"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0b6935e0-4256-5914-bfb1-bb3186d23ffd"}, .name = "0b6935e0-4256-5914-bfb1-bb3186d23ffd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-777]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-777")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-777", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "103d4a84-040b-5d32-b625-c81009333db4"}, .name = "103d4a84-040b-5d32-b625-c81009333db4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-782]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-782")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-782", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "18a453b9-e840-55b2-a4fe-4770390c8b5e"}, .name = "18a453b9-e840-55b2-a4fe-4770390c8b5e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-797]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-797")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-797", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2929af49-e43a-5690-8369-9becfaed1e88"}, .name = "2929af49-e43a-5690-8369-9becfaed1e88", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-793]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-793")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-793", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2c7db17e-58e7-55e0-9f24-671a97b1ff69"}, .name = "2c7db17e-58e7-55e0-9f24-671a97b1ff69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-785]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-785")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-785", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3cb7d641-1154-598f-8375-57a27086ee89"}, .name = "3cb7d641-1154-598f-8375-57a27086ee89", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-789]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-789")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-789", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4b22ef70-1527-55d5-ab1d-eddbd30bc34c"}, .name = "4b22ef70-1527-55d5-ab1d-eddbd30bc34c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-787]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-787")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-787", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "59f83071-820d-5756-9459-0f463713e892"}, .name = "59f83071-820d-5756-9459-0f463713e892", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-769]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-769")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-769", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "61d77ff5-8035-5e87-8cd3-d82d6f9e52c4"}, .name = "61d77ff5-8035-5e87-8cd3-d82d6f9e52c4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-772]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-772")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-772", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "64208996-7094-5d71-9837-c652c1aa3026"}, .name = "64208996-7094-5d71-9837-c652c1aa3026", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-795]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-795")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-795", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6df8f8d9-6581-5038-bee3-4ec6d252207f"}, .name = "6df8f8d9-6581-5038-bee3-4ec6d252207f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-780]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-780")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-780", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6dfa4f82-8ce7-52be-83c9-cf80986f3ee5"}, .name = "6dfa4f82-8ce7-52be-83c9-cf80986f3ee5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-770]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-770")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-770", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7565db7f-b84e-54ca-af30-88d9b589985f"}, .name = "7565db7f-b84e-54ca-af30-88d9b589985f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-783]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-783")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-783", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7f937db4-bdb5-528c-ace8-cbe018ccee0f"}, .name = "7f937db4-bdb5-528c-ace8-cbe018ccee0f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-798]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-798")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-798", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8942f3f2-772e-5aa4-b8a1-20023b26019d"}, .name = "8942f3f2-772e-5aa4-b8a1-20023b26019d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-775]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-775")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-775", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "900a8077-9f63-58eb-a46c-7c99a55e9faf"}, .name = "900a8077-9f63-58eb-a46c-7c99a55e9faf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-796]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-796")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-796", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "91445e91-446d-5ae2-92a0-8ba2d8116f1f"}, .name = "91445e91-446d-5ae2-92a0-8ba2d8116f1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-776]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-776")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-776", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "93a7bcdf-8535-5422-94ba-87ce7acfbfa7"}, .name = "93a7bcdf-8535-5422-94ba-87ce7acfbfa7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-788]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-788")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-788", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "94c613bf-5e11-5c20-b0b1-1ab014bd410a"}, .name = "94c613bf-5e11-5c20-b0b1-1ab014bd410a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-784]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-784")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-784", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a0e89b76-615a-5c59-a0c6-027039619f35"}, .name = "a0e89b76-615a-5c59-a0c6-027039619f35", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-778]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-778")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-778", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "abf65f51-f2db-55f3-bfcd-94ef814b0972"}, .name = "abf65f51-f2db-55f3-bfcd-94ef814b0972", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-786]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-786")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-786", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b6fa082a-45da-5cd2-97d1-e1d11cc63b91"}, .name = "b6fa082a-45da-5cd2-97d1-e1d11cc63b91", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-781]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-781")], .matchExpressions = []}}}}, .podsByNode = [("testNode-78", [k8spolicy.PodReference{.name = "testPod-781", .namespace = "testNamespace"}])], .span = ["testNode-78"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ba97e699-7b2e-551a-a089-2d4fc5e17ea0"}, .name = "ba97e699-7b2e-551a-a089-2d4fc5e17ea0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-779]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-779")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-779", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bc3d9e38-bbaa-524d-84ee-9f90f77aaada"}, .name = "bc3d9e38-bbaa-524d-84ee-9f90f77aaada", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-794]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-794")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-794", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c2352142-f3df-5c0a-a70c-3265e0e16c14"}, .name = "c2352142-f3df-5c0a-a70c-3265e0e16c14", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-771]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-771")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-771", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c36f2f89-0d57-59d7-9b3f-e9d844200e27"}, .name = "c36f2f89-0d57-59d7-9b3f-e9d844200e27", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-774]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-774")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-774", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "cb0eec6f-b6a8-5a4f-b75a-985e6c5d70b2"}, .name = "cb0eec6f-b6a8-5a4f-b75a-985e6c5d70b2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-791]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-791")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-791", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d275520c-7813-5be9-b9e6-4d4ea2de7dcd"}, .name = "d275520c-7813-5be9-b9e6-4d4ea2de7dcd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-799]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-799")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-799", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dfa24557-3517-5812-af70-4b7273b9ced2"}, .name = "dfa24557-3517-5812-af70-4b7273b9ced2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-792]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-792")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-792", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e65456ab-3523-5706-ac30-fc8f7e431803"}, .name = "e65456ab-3523-5706-ac30-fc8f7e431803", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-790]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-790")], .matchExpressions = []}}}}, .podsByNode = [("testNode-79", [k8spolicy.PodReference{.name = "testPod-790", .namespace = "testNamespace"}])], .span = ["testNode-79"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fa9629ba-66b5-578b-b753-884370a7fa75"}, .name = "fa9629ba-66b5-578b-b753-884370a7fa75", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-768]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-768")], .matchExpressions = []}}}}, .podsByNode = [("testNode-76", [k8spolicy.PodReference{.name = "testPod-768", .namespace = "testNamespace"}])], .span = ["testNode-76"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fc334cc6-87c1-5f4c-963a-8583abaee781"}, .name = "fc334cc6-87c1-5f4c-963a-8583abaee781", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-773]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-773")], .matchExpressions = []}}}}, .podsByNode = [("testNode-77", [k8spolicy.PodReference{.name = "testPod-773", .namespace = "testNamespace"}])], .span = ["testNode-77"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-768"}, .name = "testNP-768", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["59f83071-820d-5756-9459-0f463713e892"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fa9629ba-66b5-578b-b753-884370a7fa75"]}, .span = ["testNode-76"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-769"}, .name = "testNP-769", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6dfa4f82-8ce7-52be-83c9-cf80986f3ee5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["59f83071-820d-5756-9459-0f463713e892"]}, .span = ["testNode-76"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-770"}, .name = "testNP-770", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c2352142-f3df-5c0a-a70c-3265e0e16c14"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6dfa4f82-8ce7-52be-83c9-cf80986f3ee5"]}, .span = ["testNode-77"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-771"}, .name = "testNP-771", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["61d77ff5-8035-5e87-8cd3-d82d6f9e52c4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c2352142-f3df-5c0a-a70c-3265e0e16c14"]}, .span = ["testNode-77"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-772"}, .name = "testNP-772", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fc334cc6-87c1-5f4c-963a-8583abaee781"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["61d77ff5-8035-5e87-8cd3-d82d6f9e52c4"]}, .span = ["testNode-77"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-773"}, .name = "testNP-773", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c36f2f89-0d57-59d7-9b3f-e9d844200e27"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fc334cc6-87c1-5f4c-963a-8583abaee781"]}, .span = ["testNode-77"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-774"}, .name = "testNP-774", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8942f3f2-772e-5aa4-b8a1-20023b26019d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c36f2f89-0d57-59d7-9b3f-e9d844200e27"]}, .span = ["testNode-77"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-775"}, .name = "testNP-775", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["91445e91-446d-5ae2-92a0-8ba2d8116f1f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8942f3f2-772e-5aa4-b8a1-20023b26019d"]}, .span = ["testNode-77"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-776"}, .name = "testNP-776", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0b6935e0-4256-5914-bfb1-bb3186d23ffd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["91445e91-446d-5ae2-92a0-8ba2d8116f1f"]}, .span = ["testNode-77"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-777"}, .name = "testNP-777", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a0e89b76-615a-5c59-a0c6-027039619f35"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0b6935e0-4256-5914-bfb1-bb3186d23ffd"]}, .span = ["testNode-77"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-778"}, .name = "testNP-778", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ba97e699-7b2e-551a-a089-2d4fc5e17ea0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a0e89b76-615a-5c59-a0c6-027039619f35"]}, .span = ["testNode-77"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-779"}, .name = "testNP-779", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6df8f8d9-6581-5038-bee3-4ec6d252207f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ba97e699-7b2e-551a-a089-2d4fc5e17ea0"]}, .span = ["testNode-77"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-780"}, .name = "testNP-780", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b6fa082a-45da-5cd2-97d1-e1d11cc63b91"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6df8f8d9-6581-5038-bee3-4ec6d252207f"]}, .span = ["testNode-78"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-781"}, .name = "testNP-781", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["103d4a84-040b-5d32-b625-c81009333db4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b6fa082a-45da-5cd2-97d1-e1d11cc63b91"]}, .span = ["testNode-78"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-782"}, .name = "testNP-782", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7565db7f-b84e-54ca-af30-88d9b589985f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["103d4a84-040b-5d32-b625-c81009333db4"]}, .span = ["testNode-78"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-783"}, .name = "testNP-783", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["94c613bf-5e11-5c20-b0b1-1ab014bd410a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7565db7f-b84e-54ca-af30-88d9b589985f"]}, .span = ["testNode-78"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-784"}, .name = "testNP-784", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2c7db17e-58e7-55e0-9f24-671a97b1ff69"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["94c613bf-5e11-5c20-b0b1-1ab014bd410a"]}, .span = ["testNode-78"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-785"}, .name = "testNP-785", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["abf65f51-f2db-55f3-bfcd-94ef814b0972"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2c7db17e-58e7-55e0-9f24-671a97b1ff69"]}, .span = ["testNode-78"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-786"}, .name = "testNP-786", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4b22ef70-1527-55d5-ab1d-eddbd30bc34c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["abf65f51-f2db-55f3-bfcd-94ef814b0972"]}, .span = ["testNode-78"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-787"}, .name = "testNP-787", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["93a7bcdf-8535-5422-94ba-87ce7acfbfa7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4b22ef70-1527-55d5-ab1d-eddbd30bc34c"]}, .span = ["testNode-78"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-788"}, .name = "testNP-788", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3cb7d641-1154-598f-8375-57a27086ee89"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["93a7bcdf-8535-5422-94ba-87ce7acfbfa7"]}, .span = ["testNode-78"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-789"}, .name = "testNP-789", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e65456ab-3523-5706-ac30-fc8f7e431803"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3cb7d641-1154-598f-8375-57a27086ee89"]}, .span = ["testNode-78"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-790"}, .name = "testNP-790", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["cb0eec6f-b6a8-5a4f-b75a-985e6c5d70b2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e65456ab-3523-5706-ac30-fc8f7e431803"]}, .span = ["testNode-79"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-791"}, .name = "testNP-791", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dfa24557-3517-5812-af70-4b7273b9ced2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["cb0eec6f-b6a8-5a4f-b75a-985e6c5d70b2"]}, .span = ["testNode-79"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-792"}, .name = "testNP-792", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2929af49-e43a-5690-8369-9becfaed1e88"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dfa24557-3517-5812-af70-4b7273b9ced2"]}, .span = ["testNode-79"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-793"}, .name = "testNP-793", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bc3d9e38-bbaa-524d-84ee-9f90f77aaada"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2929af49-e43a-5690-8369-9becfaed1e88"]}, .span = ["testNode-79"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-794"}, .name = "testNP-794", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["64208996-7094-5d71-9837-c652c1aa3026"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bc3d9e38-bbaa-524d-84ee-9f90f77aaada"]}, .span = ["testNode-79"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-795"}, .name = "testNP-795", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["900a8077-9f63-58eb-a46c-7c99a55e9faf"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["64208996-7094-5d71-9837-c652c1aa3026"]}, .span = ["testNode-79"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-796"}, .name = "testNP-796", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["18a453b9-e840-55b2-a4fe-4770390c8b5e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["900a8077-9f63-58eb-a46c-7c99a55e9faf"]}, .span = ["testNode-79"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-797"}, .name = "testNP-797", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7f937db4-bdb5-528c-ace8-cbe018ccee0f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["18a453b9-e840-55b2-a4fe-4770390c8b5e"]}, .span = ["testNode-79"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-798"}, .name = "testNP-798", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d275520c-7813-5be9-b9e6-4d4ea2de7dcd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7f937db4-bdb5-528c-ace8-cbe018ccee0f"]}, .span = ["testNode-79"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-799"}, .name = "testNP-799", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f7b414c0-2062-5caa-95d5-1312767089d5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d275520c-7813-5be9-b9e6-4d4ea2de7dcd"]}, .span = ["testNode-79"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0a2c8d68-500a-596d-a73e-b7ed9e52e03a"}, .name = "0a2c8d68-500a-596d-a73e-b7ed9e52e03a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-830]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-830")], .matchExpressions = []}}}}, .addresses = ["10.10.83.0"], .span = ["testNode-82"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "14911454-5064-5a49-b39f-70881e83e0a1"}, .name = "14911454-5064-5a49-b39f-70881e83e0a1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-814]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-814")], .matchExpressions = []}}}}, .addresses = ["10.10.81.4"], .span = ["testNode-81"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "21ebe334-ac4f-5291-b727-bb9360b57c4f"}, .name = "21ebe334-ac4f-5291-b727-bb9360b57c4f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-812]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-812")], .matchExpressions = []}}}}, .addresses = ["10.10.81.2"], .span = ["testNode-81"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2d902022-e1be-5977-b819-26da066f8cd5"}, .name = "2d902022-e1be-5977-b819-26da066f8cd5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-832]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-832")], .matchExpressions = []}}}}, .addresses = ["10.10.83.2"], .span = ["testNode-83"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3173868f-d1c1-5833-92a4-5f3bade4bc82"}, .name = "3173868f-d1c1-5833-92a4-5f3bade4bc82", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-818]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-818")], .matchExpressions = []}}}}, .addresses = ["10.10.81.8"], .span = ["testNode-81"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3a602d28-1cae-5539-9e3f-635334a04779"}, .name = "3a602d28-1cae-5539-9e3f-635334a04779", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-817]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-817")], .matchExpressions = []}}}}, .addresses = ["10.10.81.7"], .span = ["testNode-81"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3ff80763-4cc1-594c-ae0f-b9b8e609e572"}, .name = "3ff80763-4cc1-594c-ae0f-b9b8e609e572", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-829]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-829")], .matchExpressions = []}}}}, .addresses = ["10.10.82.9"], .span = ["testNode-82"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "40370223-169e-592c-a72e-282c37521a99"}, .name = "40370223-169e-592c-a72e-282c37521a99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-807]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-807")], .matchExpressions = []}}}}, .addresses = ["10.10.80.7"], .span = ["testNode-80"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4099a91f-9177-5076-b5cb-6502c600e24b"}, .name = "4099a91f-9177-5076-b5cb-6502c600e24b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-804]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-804")], .matchExpressions = []}}}}, .addresses = ["10.10.80.4"], .span = ["testNode-80"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4524c279-f346-56a0-9d5d-985ea12e0f40"}, .name = "4524c279-f346-56a0-9d5d-985ea12e0f40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-819]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-819")], .matchExpressions = []}}}}, .addresses = ["10.10.81.9"], .span = ["testNode-81"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4a5fa417-6c34-5816-94e5-f1734c2e68ee"}, .name = "4a5fa417-6c34-5816-94e5-f1734c2e68ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-809]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-809")], .matchExpressions = []}}}}, .addresses = ["10.10.80.9"], .span = ["testNode-80"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "526279a2-4120-5047-aa67-d3c8f8a7bb40"}, .name = "526279a2-4120-5047-aa67-d3c8f8a7bb40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-810]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-810")], .matchExpressions = []}}}}, .addresses = ["10.10.81.0"], .span = ["testNode-80"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5973ecbf-d107-5143-8ed2-5eccb4f0dcd0"}, .name = "5973ecbf-d107-5143-8ed2-5eccb4f0dcd0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-828]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-828")], .matchExpressions = []}}}}, .addresses = ["10.10.82.8"], .span = ["testNode-82"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "60038a0d-fd8e-54aa-8452-6ea5e5160761"}, .name = "60038a0d-fd8e-54aa-8452-6ea5e5160761", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-816]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-816")], .matchExpressions = []}}}}, .addresses = ["10.10.81.6"], .span = ["testNode-81"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "63c29aa8-bd5e-5c89-a4bb-070769e93722"}, .name = "63c29aa8-bd5e-5c89-a4bb-070769e93722", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-824]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-824")], .matchExpressions = []}}}}, .addresses = ["10.10.82.4"], .span = ["testNode-82"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "688e4cb3-3a95-5913-94a2-db4a010b468d"}, .name = "688e4cb3-3a95-5913-94a2-db4a010b468d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-801]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-801")], .matchExpressions = []}}}}, .addresses = ["10.10.80.1"], .span = ["testNode-80"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6c5f2c36-0b4f-5385-8053-499d815ec8a5"}, .name = "6c5f2c36-0b4f-5385-8053-499d815ec8a5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-831]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-831")], .matchExpressions = []}}}}, .addresses = ["10.10.83.1"], .span = ["testNode-83"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "76c86c73-3019-59ec-aa8a-0df8b2fbb9d0"}, .name = "76c86c73-3019-59ec-aa8a-0df8b2fbb9d0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-820]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-820")], .matchExpressions = []}}}}, .addresses = ["10.10.82.0"], .span = ["testNode-81"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7efa1aad-40aa-59ad-a822-3769cb32dd5c"}, .name = "7efa1aad-40aa-59ad-a822-3769cb32dd5c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-811]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-811")], .matchExpressions = []}}}}, .addresses = ["10.10.81.1"], .span = ["testNode-81"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "88c80b3f-32c3-5eba-85d5-8f37c4977317"}, .name = "88c80b3f-32c3-5eba-85d5-8f37c4977317", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-815]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-815")], .matchExpressions = []}}}}, .addresses = ["10.10.81.5"], .span = ["testNode-81"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a950cc16-9a35-507a-b339-860754471d00"}, .name = "a950cc16-9a35-507a-b339-860754471d00", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-808]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-808")], .matchExpressions = []}}}}, .addresses = ["10.10.80.8"], .span = ["testNode-80"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b3b95463-96f1-5b8e-a29f-6dcf4747cf49"}, .name = "b3b95463-96f1-5b8e-a29f-6dcf4747cf49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-827]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-827")], .matchExpressions = []}}}}, .addresses = ["10.10.82.7"], .span = ["testNode-82"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c2640ce5-1a94-54ad-b353-55f2bf1a5201"}, .name = "c2640ce5-1a94-54ad-b353-55f2bf1a5201", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-822]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-822")], .matchExpressions = []}}}}, .addresses = ["10.10.82.2"], .span = ["testNode-82"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d26b6dde-c06c-5668-b1a6-3ee9090b3e55"}, .name = "d26b6dde-c06c-5668-b1a6-3ee9090b3e55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-821]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-821")], .matchExpressions = []}}}}, .addresses = ["10.10.82.1"], .span = ["testNode-82"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "eb415914-03d2-565b-891b-72973b6edc59"}, .name = "eb415914-03d2-565b-891b-72973b6edc59", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-806]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-806")], .matchExpressions = []}}}}, .addresses = ["10.10.80.6"], .span = ["testNode-80"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ed93223e-f4c8-5aff-9a07-eb363deef3a9"}, .name = "ed93223e-f4c8-5aff-9a07-eb363deef3a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-826]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-826")], .matchExpressions = []}}}}, .addresses = ["10.10.82.6"], .span = ["testNode-82"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ef545a1d-2939-587e-9d62-9b24e269c32d"}, .name = "ef545a1d-2939-587e-9d62-9b24e269c32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-825]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-825")], .matchExpressions = []}}}}, .addresses = ["10.10.82.5"], .span = ["testNode-82"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "efe1c54b-4b6c-583d-9275-82362b9d2b52"}, .name = "efe1c54b-4b6c-583d-9275-82362b9d2b52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-823]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-823")], .matchExpressions = []}}}}, .addresses = ["10.10.82.3"], .span = ["testNode-82"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f7204da2-9380-5baa-9894-01ea261f4c1d"}, .name = "f7204da2-9380-5baa-9894-01ea261f4c1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-813]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-813")], .matchExpressions = []}}}}, .addresses = ["10.10.81.3"], .span = ["testNode-81"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fc7c29de-d5d8-5784-8351-f586d60dba1c"}, .name = "fc7c29de-d5d8-5784-8351-f586d60dba1c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-802]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-802")], .matchExpressions = []}}}}, .addresses = ["10.10.80.2"], .span = ["testNode-80"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fdeb2088-36ba-5ffb-802c-b494193c1fe3"}, .name = "fdeb2088-36ba-5ffb-802c-b494193c1fe3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-805]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-805")], .matchExpressions = []}}}}, .addresses = ["10.10.80.5"], .span = ["testNode-80"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ff0fa885-413c-5541-8e8e-d684c7274d33"}, .name = "ff0fa885-413c-5541-8e8e-d684c7274d33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-803]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-803")], .matchExpressions = []}}}}, .addresses = ["10.10.80.3"], .span = ["testNode-80"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0a2c8d68-500a-596d-a73e-b7ed9e52e03a"}, .name = "0a2c8d68-500a-596d-a73e-b7ed9e52e03a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-830]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-830")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-830", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "14911454-5064-5a49-b39f-70881e83e0a1"}, .name = "14911454-5064-5a49-b39f-70881e83e0a1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-814]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-814")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-814", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "21ebe334-ac4f-5291-b727-bb9360b57c4f"}, .name = "21ebe334-ac4f-5291-b727-bb9360b57c4f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-812]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-812")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-812", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3173868f-d1c1-5833-92a4-5f3bade4bc82"}, .name = "3173868f-d1c1-5833-92a4-5f3bade4bc82", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-818]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-818")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-818", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3a602d28-1cae-5539-9e3f-635334a04779"}, .name = "3a602d28-1cae-5539-9e3f-635334a04779", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-817]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-817")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-817", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3ff80763-4cc1-594c-ae0f-b9b8e609e572"}, .name = "3ff80763-4cc1-594c-ae0f-b9b8e609e572", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-829]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-829")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-829", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "40370223-169e-592c-a72e-282c37521a99"}, .name = "40370223-169e-592c-a72e-282c37521a99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-807]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-807")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-807", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4099a91f-9177-5076-b5cb-6502c600e24b"}, .name = "4099a91f-9177-5076-b5cb-6502c600e24b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-804]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-804")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-804", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4524c279-f346-56a0-9d5d-985ea12e0f40"}, .name = "4524c279-f346-56a0-9d5d-985ea12e0f40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-819]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-819")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-819", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4a5fa417-6c34-5816-94e5-f1734c2e68ee"}, .name = "4a5fa417-6c34-5816-94e5-f1734c2e68ee", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-809]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-809")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-809", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "526279a2-4120-5047-aa67-d3c8f8a7bb40"}, .name = "526279a2-4120-5047-aa67-d3c8f8a7bb40", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-810]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-810")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-810", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5973ecbf-d107-5143-8ed2-5eccb4f0dcd0"}, .name = "5973ecbf-d107-5143-8ed2-5eccb4f0dcd0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-828]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-828")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-828", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "60038a0d-fd8e-54aa-8452-6ea5e5160761"}, .name = "60038a0d-fd8e-54aa-8452-6ea5e5160761", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-816]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-816")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-816", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "63c29aa8-bd5e-5c89-a4bb-070769e93722"}, .name = "63c29aa8-bd5e-5c89-a4bb-070769e93722", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-824]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-824")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-824", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "688e4cb3-3a95-5913-94a2-db4a010b468d"}, .name = "688e4cb3-3a95-5913-94a2-db4a010b468d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-801]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-801")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-801", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6c5f2c36-0b4f-5385-8053-499d815ec8a5"}, .name = "6c5f2c36-0b4f-5385-8053-499d815ec8a5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-831]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-831")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-831", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "76c86c73-3019-59ec-aa8a-0df8b2fbb9d0"}, .name = "76c86c73-3019-59ec-aa8a-0df8b2fbb9d0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-820]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-820")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-820", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7efa1aad-40aa-59ad-a822-3769cb32dd5c"}, .name = "7efa1aad-40aa-59ad-a822-3769cb32dd5c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-811]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-811")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-811", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "88c80b3f-32c3-5eba-85d5-8f37c4977317"}, .name = "88c80b3f-32c3-5eba-85d5-8f37c4977317", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-815]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-815")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-815", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a950cc16-9a35-507a-b339-860754471d00"}, .name = "a950cc16-9a35-507a-b339-860754471d00", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-808]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-808")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-808", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b3b95463-96f1-5b8e-a29f-6dcf4747cf49"}, .name = "b3b95463-96f1-5b8e-a29f-6dcf4747cf49", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-827]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-827")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-827", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c2640ce5-1a94-54ad-b353-55f2bf1a5201"}, .name = "c2640ce5-1a94-54ad-b353-55f2bf1a5201", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-822]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-822")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-822", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d26b6dde-c06c-5668-b1a6-3ee9090b3e55"}, .name = "d26b6dde-c06c-5668-b1a6-3ee9090b3e55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-821]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-821")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-821", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "eb415914-03d2-565b-891b-72973b6edc59"}, .name = "eb415914-03d2-565b-891b-72973b6edc59", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-806]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-806")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-806", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ed93223e-f4c8-5aff-9a07-eb363deef3a9"}, .name = "ed93223e-f4c8-5aff-9a07-eb363deef3a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-826]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-826")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-826", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ef545a1d-2939-587e-9d62-9b24e269c32d"}, .name = "ef545a1d-2939-587e-9d62-9b24e269c32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-825]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-825")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-825", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "efe1c54b-4b6c-583d-9275-82362b9d2b52"}, .name = "efe1c54b-4b6c-583d-9275-82362b9d2b52", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-823]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-823")], .matchExpressions = []}}}}, .podsByNode = [("testNode-82", [k8spolicy.PodReference{.name = "testPod-823", .namespace = "testNamespace"}])], .span = ["testNode-82"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f7204da2-9380-5baa-9894-01ea261f4c1d"}, .name = "f7204da2-9380-5baa-9894-01ea261f4c1d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-813]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-813")], .matchExpressions = []}}}}, .podsByNode = [("testNode-81", [k8spolicy.PodReference{.name = "testPod-813", .namespace = "testNamespace"}])], .span = ["testNode-81"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f7b414c0-2062-5caa-95d5-1312767089d5"}, .name = "f7b414c0-2062-5caa-95d5-1312767089d5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-800]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-800")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-800", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fc7c29de-d5d8-5784-8351-f586d60dba1c"}, .name = "fc7c29de-d5d8-5784-8351-f586d60dba1c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-802]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-802")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-802", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fdeb2088-36ba-5ffb-802c-b494193c1fe3"}, .name = "fdeb2088-36ba-5ffb-802c-b494193c1fe3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-805]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-805")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-805", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ff0fa885-413c-5541-8e8e-d684c7274d33"}, .name = "ff0fa885-413c-5541-8e8e-d684c7274d33", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-803]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-803")], .matchExpressions = []}}}}, .podsByNode = [("testNode-80", [k8spolicy.PodReference{.name = "testPod-803", .namespace = "testNamespace"}])], .span = ["testNode-80"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-800"}, .name = "testNP-800", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["688e4cb3-3a95-5913-94a2-db4a010b468d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f7b414c0-2062-5caa-95d5-1312767089d5"]}, .span = ["testNode-80"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-801"}, .name = "testNP-801", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fc7c29de-d5d8-5784-8351-f586d60dba1c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["688e4cb3-3a95-5913-94a2-db4a010b468d"]}, .span = ["testNode-80"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-802"}, .name = "testNP-802", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ff0fa885-413c-5541-8e8e-d684c7274d33"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fc7c29de-d5d8-5784-8351-f586d60dba1c"]}, .span = ["testNode-80"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-803"}, .name = "testNP-803", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4099a91f-9177-5076-b5cb-6502c600e24b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ff0fa885-413c-5541-8e8e-d684c7274d33"]}, .span = ["testNode-80"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-804"}, .name = "testNP-804", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fdeb2088-36ba-5ffb-802c-b494193c1fe3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4099a91f-9177-5076-b5cb-6502c600e24b"]}, .span = ["testNode-80"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-805"}, .name = "testNP-805", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["eb415914-03d2-565b-891b-72973b6edc59"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fdeb2088-36ba-5ffb-802c-b494193c1fe3"]}, .span = ["testNode-80"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-806"}, .name = "testNP-806", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["40370223-169e-592c-a72e-282c37521a99"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["eb415914-03d2-565b-891b-72973b6edc59"]}, .span = ["testNode-80"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-807"}, .name = "testNP-807", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a950cc16-9a35-507a-b339-860754471d00"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["40370223-169e-592c-a72e-282c37521a99"]}, .span = ["testNode-80"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-808"}, .name = "testNP-808", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4a5fa417-6c34-5816-94e5-f1734c2e68ee"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a950cc16-9a35-507a-b339-860754471d00"]}, .span = ["testNode-80"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-809"}, .name = "testNP-809", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["526279a2-4120-5047-aa67-d3c8f8a7bb40"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4a5fa417-6c34-5816-94e5-f1734c2e68ee"]}, .span = ["testNode-80"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-810"}, .name = "testNP-810", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7efa1aad-40aa-59ad-a822-3769cb32dd5c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["526279a2-4120-5047-aa67-d3c8f8a7bb40"]}, .span = ["testNode-81"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-811"}, .name = "testNP-811", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["21ebe334-ac4f-5291-b727-bb9360b57c4f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7efa1aad-40aa-59ad-a822-3769cb32dd5c"]}, .span = ["testNode-81"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-812"}, .name = "testNP-812", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f7204da2-9380-5baa-9894-01ea261f4c1d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["21ebe334-ac4f-5291-b727-bb9360b57c4f"]}, .span = ["testNode-81"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-813"}, .name = "testNP-813", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["14911454-5064-5a49-b39f-70881e83e0a1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f7204da2-9380-5baa-9894-01ea261f4c1d"]}, .span = ["testNode-81"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-814"}, .name = "testNP-814", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["88c80b3f-32c3-5eba-85d5-8f37c4977317"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["14911454-5064-5a49-b39f-70881e83e0a1"]}, .span = ["testNode-81"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-815"}, .name = "testNP-815", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["60038a0d-fd8e-54aa-8452-6ea5e5160761"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["88c80b3f-32c3-5eba-85d5-8f37c4977317"]}, .span = ["testNode-81"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-816"}, .name = "testNP-816", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3a602d28-1cae-5539-9e3f-635334a04779"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["60038a0d-fd8e-54aa-8452-6ea5e5160761"]}, .span = ["testNode-81"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-817"}, .name = "testNP-817", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3173868f-d1c1-5833-92a4-5f3bade4bc82"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3a602d28-1cae-5539-9e3f-635334a04779"]}, .span = ["testNode-81"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-818"}, .name = "testNP-818", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4524c279-f346-56a0-9d5d-985ea12e0f40"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3173868f-d1c1-5833-92a4-5f3bade4bc82"]}, .span = ["testNode-81"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-819"}, .name = "testNP-819", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["76c86c73-3019-59ec-aa8a-0df8b2fbb9d0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4524c279-f346-56a0-9d5d-985ea12e0f40"]}, .span = ["testNode-81"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-820"}, .name = "testNP-820", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d26b6dde-c06c-5668-b1a6-3ee9090b3e55"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["76c86c73-3019-59ec-aa8a-0df8b2fbb9d0"]}, .span = ["testNode-82"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-821"}, .name = "testNP-821", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c2640ce5-1a94-54ad-b353-55f2bf1a5201"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d26b6dde-c06c-5668-b1a6-3ee9090b3e55"]}, .span = ["testNode-82"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-822"}, .name = "testNP-822", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["efe1c54b-4b6c-583d-9275-82362b9d2b52"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c2640ce5-1a94-54ad-b353-55f2bf1a5201"]}, .span = ["testNode-82"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-823"}, .name = "testNP-823", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["63c29aa8-bd5e-5c89-a4bb-070769e93722"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["efe1c54b-4b6c-583d-9275-82362b9d2b52"]}, .span = ["testNode-82"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-824"}, .name = "testNP-824", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ef545a1d-2939-587e-9d62-9b24e269c32d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["63c29aa8-bd5e-5c89-a4bb-070769e93722"]}, .span = ["testNode-82"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-825"}, .name = "testNP-825", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ed93223e-f4c8-5aff-9a07-eb363deef3a9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ef545a1d-2939-587e-9d62-9b24e269c32d"]}, .span = ["testNode-82"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-826"}, .name = "testNP-826", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b3b95463-96f1-5b8e-a29f-6dcf4747cf49"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ed93223e-f4c8-5aff-9a07-eb363deef3a9"]}, .span = ["testNode-82"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-827"}, .name = "testNP-827", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5973ecbf-d107-5143-8ed2-5eccb4f0dcd0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b3b95463-96f1-5b8e-a29f-6dcf4747cf49"]}, .span = ["testNode-82"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-828"}, .name = "testNP-828", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3ff80763-4cc1-594c-ae0f-b9b8e609e572"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5973ecbf-d107-5143-8ed2-5eccb4f0dcd0"]}, .span = ["testNode-82"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-829"}, .name = "testNP-829", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0a2c8d68-500a-596d-a73e-b7ed9e52e03a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3ff80763-4cc1-594c-ae0f-b9b8e609e572"]}, .span = ["testNode-82"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-830"}, .name = "testNP-830", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6c5f2c36-0b4f-5385-8053-499d815ec8a5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0a2c8d68-500a-596d-a73e-b7ed9e52e03a"]}, .span = ["testNode-83"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-831"}, .name = "testNP-831", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2d902022-e1be-5977-b819-26da066f8cd5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6c5f2c36-0b4f-5385-8053-499d815ec8a5"]}, .span = ["testNode-83"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "020a8914-9ade-5557-bfee-0dab018e1992"}, .name = "020a8914-9ade-5557-bfee-0dab018e1992", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-846]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-846")], .matchExpressions = []}}}}, .addresses = ["10.10.84.6"], .span = ["testNode-84"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "128c484b-a554-5f39-85a2-4fe9825493fe"}, .name = "128c484b-a554-5f39-85a2-4fe9825493fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-863]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-863")], .matchExpressions = []}}}}, .addresses = ["10.10.86.3"], .span = ["testNode-86"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "252cf028-25ef-50c2-83c3-cf38191e4f27"}, .name = "252cf028-25ef-50c2-83c3-cf38191e4f27", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-851]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-851")], .matchExpressions = []}}}}, .addresses = ["10.10.85.1"], .span = ["testNode-85"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "31a730ab-afb4-5b62-bcbe-194d95505c11"}, .name = "31a730ab-afb4-5b62-bcbe-194d95505c11", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-839]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-839")], .matchExpressions = []}}}}, .addresses = ["10.10.83.9"], .span = ["testNode-83"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "32d1e979-9b1f-52bb-a6d4-77656376d50f"}, .name = "32d1e979-9b1f-52bb-a6d4-77656376d50f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-854]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-854")], .matchExpressions = []}}}}, .addresses = ["10.10.85.4"], .span = ["testNode-85"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "34f71667-e281-5b11-8267-4ba34bf3be39"}, .name = "34f71667-e281-5b11-8267-4ba34bf3be39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-842]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-842")], .matchExpressions = []}}}}, .addresses = ["10.10.84.2"], .span = ["testNode-84"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "361b4270-4de5-5f83-85ab-7a3630ecdfcc"}, .name = "361b4270-4de5-5f83-85ab-7a3630ecdfcc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-834]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-834")], .matchExpressions = []}}}}, .addresses = ["10.10.83.4"], .span = ["testNode-83"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "399d56d7-f82e-5c72-bc64-900e60fc518d"}, .name = "399d56d7-f82e-5c72-bc64-900e60fc518d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-836]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-836")], .matchExpressions = []}}}}, .addresses = ["10.10.83.6"], .span = ["testNode-83"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4541da1a-6935-598a-8c37-2a82a159af24"}, .name = "4541da1a-6935-598a-8c37-2a82a159af24", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-849]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-849")], .matchExpressions = []}}}}, .addresses = ["10.10.84.9"], .span = ["testNode-84"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4c8ff6d3-18d8-537b-859d-852e96efd7a0"}, .name = "4c8ff6d3-18d8-537b-859d-852e96efd7a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-837]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-837")], .matchExpressions = []}}}}, .addresses = ["10.10.83.7"], .span = ["testNode-83"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4f5ff37a-f3dd-582a-9b41-1f71c97a8b32"}, .name = "4f5ff37a-f3dd-582a-9b41-1f71c97a8b32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-861]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-861")], .matchExpressions = []}}}}, .addresses = ["10.10.86.1"], .span = ["testNode-86"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "625458e7-15dd-52ae-a5f6-67590e461dc3"}, .name = "625458e7-15dd-52ae-a5f6-67590e461dc3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-841]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-841")], .matchExpressions = []}}}}, .addresses = ["10.10.84.1"], .span = ["testNode-84"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6a33dd1e-de7b-5491-a7c7-007326195700"}, .name = "6a33dd1e-de7b-5491-a7c7-007326195700", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-858]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-858")], .matchExpressions = []}}}}, .addresses = ["10.10.85.8"], .span = ["testNode-85"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "701fbb2f-0621-52bf-aba1-92529ed87bd9"}, .name = "701fbb2f-0621-52bf-aba1-92529ed87bd9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-859]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-859")], .matchExpressions = []}}}}, .addresses = ["10.10.85.9"], .span = ["testNode-85"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "755fc4f9-3cc8-59a0-beae-b94c3cc2965e"}, .name = "755fc4f9-3cc8-59a0-beae-b94c3cc2965e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-844]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-844")], .matchExpressions = []}}}}, .addresses = ["10.10.84.4"], .span = ["testNode-84"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "83282519-3b79-54a8-b605-484ff79b7da9"}, .name = "83282519-3b79-54a8-b605-484ff79b7da9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-862]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-862")], .matchExpressions = []}}}}, .addresses = ["10.10.86.2"], .span = ["testNode-86"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9229ce4d-42fd-554f-8d64-ab32525fa69e"}, .name = "9229ce4d-42fd-554f-8d64-ab32525fa69e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-848]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-848")], .matchExpressions = []}}}}, .addresses = ["10.10.84.8"], .span = ["testNode-84"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a791fa85-dee8-5490-a10f-917be6dcb87c"}, .name = "a791fa85-dee8-5490-a10f-917be6dcb87c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-838]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-838")], .matchExpressions = []}}}}, .addresses = ["10.10.83.8"], .span = ["testNode-83"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a8f23371-af6d-5c11-af4c-0c35b863f927"}, .name = "a8f23371-af6d-5c11-af4c-0c35b863f927", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-853]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-853")], .matchExpressions = []}}}}, .addresses = ["10.10.85.3"], .span = ["testNode-85"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "adabcf2d-fdfc-541e-8d5a-f33c8fc61855"}, .name = "adabcf2d-fdfc-541e-8d5a-f33c8fc61855", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-840]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-840")], .matchExpressions = []}}}}, .addresses = ["10.10.84.0"], .span = ["testNode-83"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b6db1e90-48fc-5096-85cd-eb3b881836d3"}, .name = "b6db1e90-48fc-5096-85cd-eb3b881836d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-833]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-833")], .matchExpressions = []}}}}, .addresses = ["10.10.83.3"], .span = ["testNode-83"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bc154c74-f996-5fb8-afdc-9b14cadcbbec"}, .name = "bc154c74-f996-5fb8-afdc-9b14cadcbbec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-864]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-864")], .matchExpressions = []}}}}, .addresses = ["10.10.86.4"], .span = ["testNode-86"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c6d5c2f7-b2f3-510f-b50c-79d25512eff0"}, .name = "c6d5c2f7-b2f3-510f-b50c-79d25512eff0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-847]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-847")], .matchExpressions = []}}}}, .addresses = ["10.10.84.7"], .span = ["testNode-84"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d298c36d-54b7-558f-958c-7925cf71754b"}, .name = "d298c36d-54b7-558f-958c-7925cf71754b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-860]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-860")], .matchExpressions = []}}}}, .addresses = ["10.10.86.0"], .span = ["testNode-85"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dfb9847a-e3ef-5fa3-8ca4-7e6b6f642b4d"}, .name = "dfb9847a-e3ef-5fa3-8ca4-7e6b6f642b4d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-856]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-856")], .matchExpressions = []}}}}, .addresses = ["10.10.85.6"], .span = ["testNode-85"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e8188043-dc49-5dd1-b705-43550e7ad811"}, .name = "e8188043-dc49-5dd1-b705-43550e7ad811", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-850]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-850")], .matchExpressions = []}}}}, .addresses = ["10.10.85.0"], .span = ["testNode-84"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f15c712f-6c6a-5de2-b8ef-0c825ac70dc1"}, .name = "f15c712f-6c6a-5de2-b8ef-0c825ac70dc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-857]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-857")], .matchExpressions = []}}}}, .addresses = ["10.10.85.7"], .span = ["testNode-85"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f2c63a21-531d-5dae-934f-c77bda48bb8d"}, .name = "f2c63a21-531d-5dae-934f-c77bda48bb8d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-852]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-852")], .matchExpressions = []}}}}, .addresses = ["10.10.85.2"], .span = ["testNode-85"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f5d12021-8c35-58ec-be62-7ae62a6da069"}, .name = "f5d12021-8c35-58ec-be62-7ae62a6da069", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-845]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-845")], .matchExpressions = []}}}}, .addresses = ["10.10.84.5"], .span = ["testNode-84"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fbb4a159-d8d9-5833-af37-657a9f128e62"}, .name = "fbb4a159-d8d9-5833-af37-657a9f128e62", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-843]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-843")], .matchExpressions = []}}}}, .addresses = ["10.10.84.3"], .span = ["testNode-84"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fbdc9f61-304b-5f28-89a1-93b9fcd4345b"}, .name = "fbdc9f61-304b-5f28-89a1-93b9fcd4345b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-835]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-835")], .matchExpressions = []}}}}, .addresses = ["10.10.83.5"], .span = ["testNode-83"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "feefeae4-caa5-5456-b306-d7b13c8e5306"}, .name = "feefeae4-caa5-5456-b306-d7b13c8e5306", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-855]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-855")], .matchExpressions = []}}}}, .addresses = ["10.10.85.5"], .span = ["testNode-85"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "020a8914-9ade-5557-bfee-0dab018e1992"}, .name = "020a8914-9ade-5557-bfee-0dab018e1992", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-846]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-846")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-846", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "128c484b-a554-5f39-85a2-4fe9825493fe"}, .name = "128c484b-a554-5f39-85a2-4fe9825493fe", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-863]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-863")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-863", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "252cf028-25ef-50c2-83c3-cf38191e4f27"}, .name = "252cf028-25ef-50c2-83c3-cf38191e4f27", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-851]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-851")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-851", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2d902022-e1be-5977-b819-26da066f8cd5"}, .name = "2d902022-e1be-5977-b819-26da066f8cd5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-832]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-832")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-832", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "31a730ab-afb4-5b62-bcbe-194d95505c11"}, .name = "31a730ab-afb4-5b62-bcbe-194d95505c11", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-839]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-839")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-839", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "32d1e979-9b1f-52bb-a6d4-77656376d50f"}, .name = "32d1e979-9b1f-52bb-a6d4-77656376d50f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-854]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-854")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-854", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "34f71667-e281-5b11-8267-4ba34bf3be39"}, .name = "34f71667-e281-5b11-8267-4ba34bf3be39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-842]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-842")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-842", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "361b4270-4de5-5f83-85ab-7a3630ecdfcc"}, .name = "361b4270-4de5-5f83-85ab-7a3630ecdfcc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-834]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-834")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-834", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "399d56d7-f82e-5c72-bc64-900e60fc518d"}, .name = "399d56d7-f82e-5c72-bc64-900e60fc518d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-836]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-836")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-836", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4541da1a-6935-598a-8c37-2a82a159af24"}, .name = "4541da1a-6935-598a-8c37-2a82a159af24", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-849]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-849")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-849", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4c8ff6d3-18d8-537b-859d-852e96efd7a0"}, .name = "4c8ff6d3-18d8-537b-859d-852e96efd7a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-837]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-837")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-837", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4f5ff37a-f3dd-582a-9b41-1f71c97a8b32"}, .name = "4f5ff37a-f3dd-582a-9b41-1f71c97a8b32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-861]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-861")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-861", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "625458e7-15dd-52ae-a5f6-67590e461dc3"}, .name = "625458e7-15dd-52ae-a5f6-67590e461dc3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-841]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-841")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-841", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6a33dd1e-de7b-5491-a7c7-007326195700"}, .name = "6a33dd1e-de7b-5491-a7c7-007326195700", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-858]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-858")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-858", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "701fbb2f-0621-52bf-aba1-92529ed87bd9"}, .name = "701fbb2f-0621-52bf-aba1-92529ed87bd9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-859]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-859")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-859", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "755fc4f9-3cc8-59a0-beae-b94c3cc2965e"}, .name = "755fc4f9-3cc8-59a0-beae-b94c3cc2965e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-844]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-844")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-844", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "83282519-3b79-54a8-b605-484ff79b7da9"}, .name = "83282519-3b79-54a8-b605-484ff79b7da9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-862]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-862")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-862", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9229ce4d-42fd-554f-8d64-ab32525fa69e"}, .name = "9229ce4d-42fd-554f-8d64-ab32525fa69e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-848]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-848")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-848", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a791fa85-dee8-5490-a10f-917be6dcb87c"}, .name = "a791fa85-dee8-5490-a10f-917be6dcb87c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-838]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-838")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-838", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a8f23371-af6d-5c11-af4c-0c35b863f927"}, .name = "a8f23371-af6d-5c11-af4c-0c35b863f927", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-853]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-853")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-853", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "adabcf2d-fdfc-541e-8d5a-f33c8fc61855"}, .name = "adabcf2d-fdfc-541e-8d5a-f33c8fc61855", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-840]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-840")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-840", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b6db1e90-48fc-5096-85cd-eb3b881836d3"}, .name = "b6db1e90-48fc-5096-85cd-eb3b881836d3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-833]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-833")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-833", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c6d5c2f7-b2f3-510f-b50c-79d25512eff0"}, .name = "c6d5c2f7-b2f3-510f-b50c-79d25512eff0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-847]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-847")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-847", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d298c36d-54b7-558f-958c-7925cf71754b"}, .name = "d298c36d-54b7-558f-958c-7925cf71754b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-860]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-860")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-860", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dfb9847a-e3ef-5fa3-8ca4-7e6b6f642b4d"}, .name = "dfb9847a-e3ef-5fa3-8ca4-7e6b6f642b4d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-856]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-856")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-856", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e8188043-dc49-5dd1-b705-43550e7ad811"}, .name = "e8188043-dc49-5dd1-b705-43550e7ad811", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-850]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-850")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-850", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f15c712f-6c6a-5de2-b8ef-0c825ac70dc1"}, .name = "f15c712f-6c6a-5de2-b8ef-0c825ac70dc1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-857]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-857")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-857", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f2c63a21-531d-5dae-934f-c77bda48bb8d"}, .name = "f2c63a21-531d-5dae-934f-c77bda48bb8d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-852]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-852")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-852", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f5d12021-8c35-58ec-be62-7ae62a6da069"}, .name = "f5d12021-8c35-58ec-be62-7ae62a6da069", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-845]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-845")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-845", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fbb4a159-d8d9-5833-af37-657a9f128e62"}, .name = "fbb4a159-d8d9-5833-af37-657a9f128e62", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-843]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-843")], .matchExpressions = []}}}}, .podsByNode = [("testNode-84", [k8spolicy.PodReference{.name = "testPod-843", .namespace = "testNamespace"}])], .span = ["testNode-84"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fbdc9f61-304b-5f28-89a1-93b9fcd4345b"}, .name = "fbdc9f61-304b-5f28-89a1-93b9fcd4345b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-835]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-835")], .matchExpressions = []}}}}, .podsByNode = [("testNode-83", [k8spolicy.PodReference{.name = "testPod-835", .namespace = "testNamespace"}])], .span = ["testNode-83"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "feefeae4-caa5-5456-b306-d7b13c8e5306"}, .name = "feefeae4-caa5-5456-b306-d7b13c8e5306", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-855]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-855")], .matchExpressions = []}}}}, .podsByNode = [("testNode-85", [k8spolicy.PodReference{.name = "testPod-855", .namespace = "testNamespace"}])], .span = ["testNode-85"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-832"}, .name = "testNP-832", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b6db1e90-48fc-5096-85cd-eb3b881836d3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2d902022-e1be-5977-b819-26da066f8cd5"]}, .span = ["testNode-83"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-833"}, .name = "testNP-833", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["361b4270-4de5-5f83-85ab-7a3630ecdfcc"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b6db1e90-48fc-5096-85cd-eb3b881836d3"]}, .span = ["testNode-83"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-834"}, .name = "testNP-834", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fbdc9f61-304b-5f28-89a1-93b9fcd4345b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["361b4270-4de5-5f83-85ab-7a3630ecdfcc"]}, .span = ["testNode-83"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-835"}, .name = "testNP-835", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["399d56d7-f82e-5c72-bc64-900e60fc518d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fbdc9f61-304b-5f28-89a1-93b9fcd4345b"]}, .span = ["testNode-83"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-836"}, .name = "testNP-836", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4c8ff6d3-18d8-537b-859d-852e96efd7a0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["399d56d7-f82e-5c72-bc64-900e60fc518d"]}, .span = ["testNode-83"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-837"}, .name = "testNP-837", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a791fa85-dee8-5490-a10f-917be6dcb87c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4c8ff6d3-18d8-537b-859d-852e96efd7a0"]}, .span = ["testNode-83"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-838"}, .name = "testNP-838", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["31a730ab-afb4-5b62-bcbe-194d95505c11"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a791fa85-dee8-5490-a10f-917be6dcb87c"]}, .span = ["testNode-83"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-839"}, .name = "testNP-839", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["adabcf2d-fdfc-541e-8d5a-f33c8fc61855"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["31a730ab-afb4-5b62-bcbe-194d95505c11"]}, .span = ["testNode-83"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-840"}, .name = "testNP-840", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["625458e7-15dd-52ae-a5f6-67590e461dc3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["adabcf2d-fdfc-541e-8d5a-f33c8fc61855"]}, .span = ["testNode-84"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-841"}, .name = "testNP-841", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["34f71667-e281-5b11-8267-4ba34bf3be39"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["625458e7-15dd-52ae-a5f6-67590e461dc3"]}, .span = ["testNode-84"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-842"}, .name = "testNP-842", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fbb4a159-d8d9-5833-af37-657a9f128e62"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["34f71667-e281-5b11-8267-4ba34bf3be39"]}, .span = ["testNode-84"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-843"}, .name = "testNP-843", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["755fc4f9-3cc8-59a0-beae-b94c3cc2965e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fbb4a159-d8d9-5833-af37-657a9f128e62"]}, .span = ["testNode-84"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-844"}, .name = "testNP-844", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f5d12021-8c35-58ec-be62-7ae62a6da069"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["755fc4f9-3cc8-59a0-beae-b94c3cc2965e"]}, .span = ["testNode-84"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-845"}, .name = "testNP-845", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["020a8914-9ade-5557-bfee-0dab018e1992"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f5d12021-8c35-58ec-be62-7ae62a6da069"]}, .span = ["testNode-84"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-846"}, .name = "testNP-846", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c6d5c2f7-b2f3-510f-b50c-79d25512eff0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["020a8914-9ade-5557-bfee-0dab018e1992"]}, .span = ["testNode-84"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-847"}, .name = "testNP-847", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9229ce4d-42fd-554f-8d64-ab32525fa69e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c6d5c2f7-b2f3-510f-b50c-79d25512eff0"]}, .span = ["testNode-84"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-848"}, .name = "testNP-848", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4541da1a-6935-598a-8c37-2a82a159af24"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9229ce4d-42fd-554f-8d64-ab32525fa69e"]}, .span = ["testNode-84"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-849"}, .name = "testNP-849", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e8188043-dc49-5dd1-b705-43550e7ad811"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4541da1a-6935-598a-8c37-2a82a159af24"]}, .span = ["testNode-84"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-850"}, .name = "testNP-850", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["252cf028-25ef-50c2-83c3-cf38191e4f27"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e8188043-dc49-5dd1-b705-43550e7ad811"]}, .span = ["testNode-85"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-851"}, .name = "testNP-851", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f2c63a21-531d-5dae-934f-c77bda48bb8d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["252cf028-25ef-50c2-83c3-cf38191e4f27"]}, .span = ["testNode-85"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-852"}, .name = "testNP-852", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a8f23371-af6d-5c11-af4c-0c35b863f927"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f2c63a21-531d-5dae-934f-c77bda48bb8d"]}, .span = ["testNode-85"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-853"}, .name = "testNP-853", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["32d1e979-9b1f-52bb-a6d4-77656376d50f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a8f23371-af6d-5c11-af4c-0c35b863f927"]}, .span = ["testNode-85"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-854"}, .name = "testNP-854", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["feefeae4-caa5-5456-b306-d7b13c8e5306"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["32d1e979-9b1f-52bb-a6d4-77656376d50f"]}, .span = ["testNode-85"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-855"}, .name = "testNP-855", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dfb9847a-e3ef-5fa3-8ca4-7e6b6f642b4d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["feefeae4-caa5-5456-b306-d7b13c8e5306"]}, .span = ["testNode-85"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-856"}, .name = "testNP-856", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f15c712f-6c6a-5de2-b8ef-0c825ac70dc1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dfb9847a-e3ef-5fa3-8ca4-7e6b6f642b4d"]}, .span = ["testNode-85"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-857"}, .name = "testNP-857", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6a33dd1e-de7b-5491-a7c7-007326195700"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f15c712f-6c6a-5de2-b8ef-0c825ac70dc1"]}, .span = ["testNode-85"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-858"}, .name = "testNP-858", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["701fbb2f-0621-52bf-aba1-92529ed87bd9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6a33dd1e-de7b-5491-a7c7-007326195700"]}, .span = ["testNode-85"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-859"}, .name = "testNP-859", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d298c36d-54b7-558f-958c-7925cf71754b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["701fbb2f-0621-52bf-aba1-92529ed87bd9"]}, .span = ["testNode-85"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-860"}, .name = "testNP-860", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4f5ff37a-f3dd-582a-9b41-1f71c97a8b32"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d298c36d-54b7-558f-958c-7925cf71754b"]}, .span = ["testNode-86"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-861"}, .name = "testNP-861", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["83282519-3b79-54a8-b605-484ff79b7da9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4f5ff37a-f3dd-582a-9b41-1f71c97a8b32"]}, .span = ["testNode-86"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-862"}, .name = "testNP-862", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["128c484b-a554-5f39-85a2-4fe9825493fe"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["83282519-3b79-54a8-b605-484ff79b7da9"]}, .span = ["testNode-86"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-863"}, .name = "testNP-863", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bc154c74-f996-5fb8-afdc-9b14cadcbbec"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["128c484b-a554-5f39-85a2-4fe9825493fe"]}, .span = ["testNode-86"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "04d6ef89-313b-5b8f-bf99-63e7e002158d"}, .name = "04d6ef89-313b-5b8f-bf99-63e7e002158d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-873]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-873")], .matchExpressions = []}}}}, .addresses = ["10.10.87.3"], .span = ["testNode-87"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0cbc69ea-8e07-55b2-83c6-92645190f77c"}, .name = "0cbc69ea-8e07-55b2-83c6-92645190f77c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-870]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-870")], .matchExpressions = []}}}}, .addresses = ["10.10.87.0"], .span = ["testNode-86"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1fa03a1a-c6ae-5008-ab16-3562c6863a41"}, .name = "1fa03a1a-c6ae-5008-ab16-3562c6863a41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-894]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-894")], .matchExpressions = []}}}}, .addresses = ["10.10.89.4"], .span = ["testNode-89"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "20b0336a-8759-5739-90ca-ad95ac7ace98"}, .name = "20b0336a-8759-5739-90ca-ad95ac7ace98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-883]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-883")], .matchExpressions = []}}}}, .addresses = ["10.10.88.3"], .span = ["testNode-88"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2ce4cfc7-dacf-5b61-ad41-753f077d6b65"}, .name = "2ce4cfc7-dacf-5b61-ad41-753f077d6b65", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-885]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-885")], .matchExpressions = []}}}}, .addresses = ["10.10.88.5"], .span = ["testNode-88"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "37ad6291-8e99-5eb8-99fa-bc15607fec3a"}, .name = "37ad6291-8e99-5eb8-99fa-bc15607fec3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-886]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-886")], .matchExpressions = []}}}}, .addresses = ["10.10.88.6"], .span = ["testNode-88"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4044a800-c149-5545-9150-bf9f6a0761f8"}, .name = "4044a800-c149-5545-9150-bf9f6a0761f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-867]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-867")], .matchExpressions = []}}}}, .addresses = ["10.10.86.7"], .span = ["testNode-86"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "448c0733-62b0-584d-b076-5f0401d7f739"}, .name = "448c0733-62b0-584d-b076-5f0401d7f739", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-893]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-893")], .matchExpressions = []}}}}, .addresses = ["10.10.89.3"], .span = ["testNode-89"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "49afe997-ec38-59cd-a0c6-c7427edbb40b"}, .name = "49afe997-ec38-59cd-a0c6-c7427edbb40b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-869]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-869")], .matchExpressions = []}}}}, .addresses = ["10.10.86.9"], .span = ["testNode-86"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6235322d-41d9-59a7-a78e-d28d043dc611"}, .name = "6235322d-41d9-59a7-a78e-d28d043dc611", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-865]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-865")], .matchExpressions = []}}}}, .addresses = ["10.10.86.5"], .span = ["testNode-86"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "649fabb7-1346-5398-8540-b02141c9100f"}, .name = "649fabb7-1346-5398-8540-b02141c9100f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-884]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-884")], .matchExpressions = []}}}}, .addresses = ["10.10.88.4"], .span = ["testNode-88"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6597f5ac-9b8c-5d1e-855b-cbbedbfcc6f6"}, .name = "6597f5ac-9b8c-5d1e-855b-cbbedbfcc6f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-895]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-895")], .matchExpressions = []}}}}, .addresses = ["10.10.89.5"], .span = ["testNode-89"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "81196bc3-feaf-50fe-a385-1142b124de58"}, .name = "81196bc3-feaf-50fe-a385-1142b124de58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-877]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-877")], .matchExpressions = []}}}}, .addresses = ["10.10.87.7"], .span = ["testNode-87"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8a482c2c-e818-5398-8913-75585c22de74"}, .name = "8a482c2c-e818-5398-8913-75585c22de74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-868]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-868")], .matchExpressions = []}}}}, .addresses = ["10.10.86.8"], .span = ["testNode-86"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "93ff7ea7-e59f-5463-82dd-534da2c2dd1b"}, .name = "93ff7ea7-e59f-5463-82dd-534da2c2dd1b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-888]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-888")], .matchExpressions = []}}}}, .addresses = ["10.10.88.8"], .span = ["testNode-88"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9dfa0006-5e86-5ff7-b9b7-0448657bccae"}, .name = "9dfa0006-5e86-5ff7-b9b7-0448657bccae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-879]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-879")], .matchExpressions = []}}}}, .addresses = ["10.10.87.9"], .span = ["testNode-87"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a278241a-7d2a-5ca5-a7a4-2dbeed5a881c"}, .name = "a278241a-7d2a-5ca5-a7a4-2dbeed5a881c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-875]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-875")], .matchExpressions = []}}}}, .addresses = ["10.10.87.5"], .span = ["testNode-87"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a7c4a33d-d205-53e7-b085-07212fa3d42e"}, .name = "a7c4a33d-d205-53e7-b085-07212fa3d42e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-874]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-874")], .matchExpressions = []}}}}, .addresses = ["10.10.87.4"], .span = ["testNode-87"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ab13ed9c-243c-5eee-ade8-cb91f15d3568"}, .name = "ab13ed9c-243c-5eee-ade8-cb91f15d3568", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-896]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-896")], .matchExpressions = []}}}}, .addresses = ["10.10.89.6"], .span = ["testNode-89"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ab9bd443-2685-5c7d-9215-4ed0341f0854"}, .name = "ab9bd443-2685-5c7d-9215-4ed0341f0854", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-876]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-876")], .matchExpressions = []}}}}, .addresses = ["10.10.87.6"], .span = ["testNode-87"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "abcd656c-d354-55a3-b087-f0e512fafa1e"}, .name = "abcd656c-d354-55a3-b087-f0e512fafa1e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-871]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-871")], .matchExpressions = []}}}}, .addresses = ["10.10.87.1"], .span = ["testNode-87"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ad60f9e4-f65e-5543-a1eb-8b3ddb92d06b"}, .name = "ad60f9e4-f65e-5543-a1eb-8b3ddb92d06b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-889]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-889")], .matchExpressions = []}}}}, .addresses = ["10.10.88.9"], .span = ["testNode-88"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d2485d57-408b-5fac-a69f-03791df49253"}, .name = "d2485d57-408b-5fac-a69f-03791df49253", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-866]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-866")], .matchExpressions = []}}}}, .addresses = ["10.10.86.6"], .span = ["testNode-86"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d2c1af28-7fdf-50d3-95a4-7334fdf456a9"}, .name = "d2c1af28-7fdf-50d3-95a4-7334fdf456a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-872]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-872")], .matchExpressions = []}}}}, .addresses = ["10.10.87.2"], .span = ["testNode-87"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "da078bb0-cbad-5a9f-ac2c-4e0a2b3968c1"}, .name = "da078bb0-cbad-5a9f-ac2c-4e0a2b3968c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-891]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-891")], .matchExpressions = []}}}}, .addresses = ["10.10.89.1"], .span = ["testNode-89"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "eaa7718a-9af3-5a5a-94db-b06185bff2ef"}, .name = "eaa7718a-9af3-5a5a-94db-b06185bff2ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-880]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-880")], .matchExpressions = []}}}}, .addresses = ["10.10.88.0"], .span = ["testNode-87"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "eda2e03c-1bab-548d-8dc0-0784ff4141fa"}, .name = "eda2e03c-1bab-548d-8dc0-0784ff4141fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-882]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-882")], .matchExpressions = []}}}}, .addresses = ["10.10.88.2"], .span = ["testNode-88"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ee01a01e-b786-58ab-b30a-6c1349da0d3e"}, .name = "ee01a01e-b786-58ab-b30a-6c1349da0d3e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-887]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-887")], .matchExpressions = []}}}}, .addresses = ["10.10.88.7"], .span = ["testNode-88"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f25a07d0-1076-5241-b6b2-adc9e86e07cf"}, .name = "f25a07d0-1076-5241-b6b2-adc9e86e07cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-878]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-878")], .matchExpressions = []}}}}, .addresses = ["10.10.87.8"], .span = ["testNode-87"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f358a9c8-e89b-5cc4-9d76-9c1e0ec3407f"}, .name = "f358a9c8-e89b-5cc4-9d76-9c1e0ec3407f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-881]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-881")], .matchExpressions = []}}}}, .addresses = ["10.10.88.1"], .span = ["testNode-88"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f37d3656-5c7b-5a86-895c-1ce6ac7d0b04"}, .name = "f37d3656-5c7b-5a86-895c-1ce6ac7d0b04", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-890]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-890")], .matchExpressions = []}}}}, .addresses = ["10.10.89.0"], .span = ["testNode-88"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f6e75d67-6165-5ae0-820f-8f317c258594"}, .name = "f6e75d67-6165-5ae0-820f-8f317c258594", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-892]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-892")], .matchExpressions = []}}}}, .addresses = ["10.10.89.2"], .span = ["testNode-89"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "04d6ef89-313b-5b8f-bf99-63e7e002158d"}, .name = "04d6ef89-313b-5b8f-bf99-63e7e002158d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-873]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-873")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-873", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0cbc69ea-8e07-55b2-83c6-92645190f77c"}, .name = "0cbc69ea-8e07-55b2-83c6-92645190f77c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-870]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-870")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-870", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1fa03a1a-c6ae-5008-ab16-3562c6863a41"}, .name = "1fa03a1a-c6ae-5008-ab16-3562c6863a41", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-894]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-894")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-894", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "20b0336a-8759-5739-90ca-ad95ac7ace98"}, .name = "20b0336a-8759-5739-90ca-ad95ac7ace98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-883]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-883")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-883", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2ce4cfc7-dacf-5b61-ad41-753f077d6b65"}, .name = "2ce4cfc7-dacf-5b61-ad41-753f077d6b65", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-885]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-885")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-885", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "37ad6291-8e99-5eb8-99fa-bc15607fec3a"}, .name = "37ad6291-8e99-5eb8-99fa-bc15607fec3a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-886]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-886")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-886", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4044a800-c149-5545-9150-bf9f6a0761f8"}, .name = "4044a800-c149-5545-9150-bf9f6a0761f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-867]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-867")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-867", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "448c0733-62b0-584d-b076-5f0401d7f739"}, .name = "448c0733-62b0-584d-b076-5f0401d7f739", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-893]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-893")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-893", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "49afe997-ec38-59cd-a0c6-c7427edbb40b"}, .name = "49afe997-ec38-59cd-a0c6-c7427edbb40b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-869]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-869")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-869", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6235322d-41d9-59a7-a78e-d28d043dc611"}, .name = "6235322d-41d9-59a7-a78e-d28d043dc611", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-865]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-865")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-865", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "649fabb7-1346-5398-8540-b02141c9100f"}, .name = "649fabb7-1346-5398-8540-b02141c9100f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-884]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-884")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-884", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6597f5ac-9b8c-5d1e-855b-cbbedbfcc6f6"}, .name = "6597f5ac-9b8c-5d1e-855b-cbbedbfcc6f6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-895]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-895")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-895", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "81196bc3-feaf-50fe-a385-1142b124de58"}, .name = "81196bc3-feaf-50fe-a385-1142b124de58", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-877]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-877")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-877", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8a482c2c-e818-5398-8913-75585c22de74"}, .name = "8a482c2c-e818-5398-8913-75585c22de74", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-868]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-868")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-868", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "93ff7ea7-e59f-5463-82dd-534da2c2dd1b"}, .name = "93ff7ea7-e59f-5463-82dd-534da2c2dd1b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-888]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-888")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-888", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9dfa0006-5e86-5ff7-b9b7-0448657bccae"}, .name = "9dfa0006-5e86-5ff7-b9b7-0448657bccae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-879]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-879")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-879", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a278241a-7d2a-5ca5-a7a4-2dbeed5a881c"}, .name = "a278241a-7d2a-5ca5-a7a4-2dbeed5a881c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-875]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-875")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-875", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a7c4a33d-d205-53e7-b085-07212fa3d42e"}, .name = "a7c4a33d-d205-53e7-b085-07212fa3d42e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-874]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-874")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-874", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ab9bd443-2685-5c7d-9215-4ed0341f0854"}, .name = "ab9bd443-2685-5c7d-9215-4ed0341f0854", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-876]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-876")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-876", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "abcd656c-d354-55a3-b087-f0e512fafa1e"}, .name = "abcd656c-d354-55a3-b087-f0e512fafa1e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-871]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-871")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-871", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ad60f9e4-f65e-5543-a1eb-8b3ddb92d06b"}, .name = "ad60f9e4-f65e-5543-a1eb-8b3ddb92d06b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-889]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-889")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-889", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bc154c74-f996-5fb8-afdc-9b14cadcbbec"}, .name = "bc154c74-f996-5fb8-afdc-9b14cadcbbec", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-864]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-864")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-864", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d2485d57-408b-5fac-a69f-03791df49253"}, .name = "d2485d57-408b-5fac-a69f-03791df49253", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-866]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-866")], .matchExpressions = []}}}}, .podsByNode = [("testNode-86", [k8spolicy.PodReference{.name = "testPod-866", .namespace = "testNamespace"}])], .span = ["testNode-86"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d2c1af28-7fdf-50d3-95a4-7334fdf456a9"}, .name = "d2c1af28-7fdf-50d3-95a4-7334fdf456a9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-872]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-872")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-872", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "da078bb0-cbad-5a9f-ac2c-4e0a2b3968c1"}, .name = "da078bb0-cbad-5a9f-ac2c-4e0a2b3968c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-891]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-891")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-891", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "eaa7718a-9af3-5a5a-94db-b06185bff2ef"}, .name = "eaa7718a-9af3-5a5a-94db-b06185bff2ef", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-880]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-880")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-880", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "eda2e03c-1bab-548d-8dc0-0784ff4141fa"}, .name = "eda2e03c-1bab-548d-8dc0-0784ff4141fa", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-882]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-882")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-882", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ee01a01e-b786-58ab-b30a-6c1349da0d3e"}, .name = "ee01a01e-b786-58ab-b30a-6c1349da0d3e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-887]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-887")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-887", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f25a07d0-1076-5241-b6b2-adc9e86e07cf"}, .name = "f25a07d0-1076-5241-b6b2-adc9e86e07cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-878]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-878")], .matchExpressions = []}}}}, .podsByNode = [("testNode-87", [k8spolicy.PodReference{.name = "testPod-878", .namespace = "testNamespace"}])], .span = ["testNode-87"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f358a9c8-e89b-5cc4-9d76-9c1e0ec3407f"}, .name = "f358a9c8-e89b-5cc4-9d76-9c1e0ec3407f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-881]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-881")], .matchExpressions = []}}}}, .podsByNode = [("testNode-88", [k8spolicy.PodReference{.name = "testPod-881", .namespace = "testNamespace"}])], .span = ["testNode-88"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f37d3656-5c7b-5a86-895c-1ce6ac7d0b04"}, .name = "f37d3656-5c7b-5a86-895c-1ce6ac7d0b04", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-890]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-890")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-890", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f6e75d67-6165-5ae0-820f-8f317c258594"}, .name = "f6e75d67-6165-5ae0-820f-8f317c258594", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-892]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-892")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-892", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-864"}, .name = "testNP-864", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6235322d-41d9-59a7-a78e-d28d043dc611"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bc154c74-f996-5fb8-afdc-9b14cadcbbec"]}, .span = ["testNode-86"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-865"}, .name = "testNP-865", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d2485d57-408b-5fac-a69f-03791df49253"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6235322d-41d9-59a7-a78e-d28d043dc611"]}, .span = ["testNode-86"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-866"}, .name = "testNP-866", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4044a800-c149-5545-9150-bf9f6a0761f8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d2485d57-408b-5fac-a69f-03791df49253"]}, .span = ["testNode-86"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-867"}, .name = "testNP-867", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8a482c2c-e818-5398-8913-75585c22de74"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4044a800-c149-5545-9150-bf9f6a0761f8"]}, .span = ["testNode-86"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-868"}, .name = "testNP-868", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["49afe997-ec38-59cd-a0c6-c7427edbb40b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8a482c2c-e818-5398-8913-75585c22de74"]}, .span = ["testNode-86"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-869"}, .name = "testNP-869", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0cbc69ea-8e07-55b2-83c6-92645190f77c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["49afe997-ec38-59cd-a0c6-c7427edbb40b"]}, .span = ["testNode-86"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-870"}, .name = "testNP-870", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["abcd656c-d354-55a3-b087-f0e512fafa1e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0cbc69ea-8e07-55b2-83c6-92645190f77c"]}, .span = ["testNode-87"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-871"}, .name = "testNP-871", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d2c1af28-7fdf-50d3-95a4-7334fdf456a9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["abcd656c-d354-55a3-b087-f0e512fafa1e"]}, .span = ["testNode-87"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-872"}, .name = "testNP-872", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["04d6ef89-313b-5b8f-bf99-63e7e002158d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d2c1af28-7fdf-50d3-95a4-7334fdf456a9"]}, .span = ["testNode-87"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-873"}, .name = "testNP-873", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a7c4a33d-d205-53e7-b085-07212fa3d42e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["04d6ef89-313b-5b8f-bf99-63e7e002158d"]}, .span = ["testNode-87"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-874"}, .name = "testNP-874", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a278241a-7d2a-5ca5-a7a4-2dbeed5a881c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a7c4a33d-d205-53e7-b085-07212fa3d42e"]}, .span = ["testNode-87"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-875"}, .name = "testNP-875", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ab9bd443-2685-5c7d-9215-4ed0341f0854"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a278241a-7d2a-5ca5-a7a4-2dbeed5a881c"]}, .span = ["testNode-87"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-876"}, .name = "testNP-876", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["81196bc3-feaf-50fe-a385-1142b124de58"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ab9bd443-2685-5c7d-9215-4ed0341f0854"]}, .span = ["testNode-87"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-877"}, .name = "testNP-877", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f25a07d0-1076-5241-b6b2-adc9e86e07cf"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["81196bc3-feaf-50fe-a385-1142b124de58"]}, .span = ["testNode-87"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-878"}, .name = "testNP-878", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9dfa0006-5e86-5ff7-b9b7-0448657bccae"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f25a07d0-1076-5241-b6b2-adc9e86e07cf"]}, .span = ["testNode-87"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-879"}, .name = "testNP-879", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["eaa7718a-9af3-5a5a-94db-b06185bff2ef"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9dfa0006-5e86-5ff7-b9b7-0448657bccae"]}, .span = ["testNode-87"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-880"}, .name = "testNP-880", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f358a9c8-e89b-5cc4-9d76-9c1e0ec3407f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["eaa7718a-9af3-5a5a-94db-b06185bff2ef"]}, .span = ["testNode-88"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-881"}, .name = "testNP-881", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["eda2e03c-1bab-548d-8dc0-0784ff4141fa"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f358a9c8-e89b-5cc4-9d76-9c1e0ec3407f"]}, .span = ["testNode-88"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-882"}, .name = "testNP-882", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["20b0336a-8759-5739-90ca-ad95ac7ace98"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["eda2e03c-1bab-548d-8dc0-0784ff4141fa"]}, .span = ["testNode-88"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-883"}, .name = "testNP-883", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["649fabb7-1346-5398-8540-b02141c9100f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["20b0336a-8759-5739-90ca-ad95ac7ace98"]}, .span = ["testNode-88"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-884"}, .name = "testNP-884", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2ce4cfc7-dacf-5b61-ad41-753f077d6b65"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["649fabb7-1346-5398-8540-b02141c9100f"]}, .span = ["testNode-88"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-885"}, .name = "testNP-885", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["37ad6291-8e99-5eb8-99fa-bc15607fec3a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2ce4cfc7-dacf-5b61-ad41-753f077d6b65"]}, .span = ["testNode-88"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-886"}, .name = "testNP-886", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ee01a01e-b786-58ab-b30a-6c1349da0d3e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["37ad6291-8e99-5eb8-99fa-bc15607fec3a"]}, .span = ["testNode-88"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-887"}, .name = "testNP-887", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["93ff7ea7-e59f-5463-82dd-534da2c2dd1b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ee01a01e-b786-58ab-b30a-6c1349da0d3e"]}, .span = ["testNode-88"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-888"}, .name = "testNP-888", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ad60f9e4-f65e-5543-a1eb-8b3ddb92d06b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["93ff7ea7-e59f-5463-82dd-534da2c2dd1b"]}, .span = ["testNode-88"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-889"}, .name = "testNP-889", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f37d3656-5c7b-5a86-895c-1ce6ac7d0b04"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ad60f9e4-f65e-5543-a1eb-8b3ddb92d06b"]}, .span = ["testNode-88"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-890"}, .name = "testNP-890", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["da078bb0-cbad-5a9f-ac2c-4e0a2b3968c1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f37d3656-5c7b-5a86-895c-1ce6ac7d0b04"]}, .span = ["testNode-89"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-891"}, .name = "testNP-891", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f6e75d67-6165-5ae0-820f-8f317c258594"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["da078bb0-cbad-5a9f-ac2c-4e0a2b3968c1"]}, .span = ["testNode-89"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-892"}, .name = "testNP-892", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["448c0733-62b0-584d-b076-5f0401d7f739"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f6e75d67-6165-5ae0-820f-8f317c258594"]}, .span = ["testNode-89"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-893"}, .name = "testNP-893", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1fa03a1a-c6ae-5008-ab16-3562c6863a41"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["448c0733-62b0-584d-b076-5f0401d7f739"]}, .span = ["testNode-89"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-894"}, .name = "testNP-894", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6597f5ac-9b8c-5d1e-855b-cbbedbfcc6f6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1fa03a1a-c6ae-5008-ab16-3562c6863a41"]}, .span = ["testNode-89"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-895"}, .name = "testNP-895", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ab13ed9c-243c-5eee-ade8-cb91f15d3568"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6597f5ac-9b8c-5d1e-855b-cbbedbfcc6f6"]}, .span = ["testNode-89"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "00e2f0e4-2164-5b09-bfe7-9adb0ce43cdd"}, .name = "00e2f0e4-2164-5b09-bfe7-9adb0ce43cdd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-897]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-897")], .matchExpressions = []}}}}, .addresses = ["10.10.89.7"], .span = ["testNode-89"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0403956a-38b3-5303-807f-15089fc71b22"}, .name = "0403956a-38b3-5303-807f-15089fc71b22", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-922]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-922")], .matchExpressions = []}}}}, .addresses = ["10.10.92.2"], .span = ["testNode-92"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "065b2a74-f9ff-50df-a81a-2c73d4b0bfd6"}, .name = "065b2a74-f9ff-50df-a81a-2c73d4b0bfd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-925]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-925")], .matchExpressions = []}}}}, .addresses = ["10.10.92.5"], .span = ["testNode-92"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0eddb568-45d7-5c98-85ed-15bb7b617b32"}, .name = "0eddb568-45d7-5c98-85ed-15bb7b617b32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-902]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-902")], .matchExpressions = []}}}}, .addresses = ["10.10.90.2"], .span = ["testNode-90"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "11eb7cdf-3508-5ff9-8e09-41e573ddbc8d"}, .name = "11eb7cdf-3508-5ff9-8e09-41e573ddbc8d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-926]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-926")], .matchExpressions = []}}}}, .addresses = ["10.10.92.6"], .span = ["testNode-92"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1717d5d7-4e0d-5930-8270-218ea2d38527"}, .name = "1717d5d7-4e0d-5930-8270-218ea2d38527", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-912]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-912")], .matchExpressions = []}}}}, .addresses = ["10.10.91.2"], .span = ["testNode-91"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1918d2a7-8005-55aa-b506-521184923d98"}, .name = "1918d2a7-8005-55aa-b506-521184923d98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-908]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-908")], .matchExpressions = []}}}}, .addresses = ["10.10.90.8"], .span = ["testNode-90"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "225094da-f449-5e13-928b-c8bbaef749ae"}, .name = "225094da-f449-5e13-928b-c8bbaef749ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-899]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-899")], .matchExpressions = []}}}}, .addresses = ["10.10.89.9"], .span = ["testNode-89"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2720a763-7cdf-5fdd-ad3e-af54d337714e"}, .name = "2720a763-7cdf-5fdd-ad3e-af54d337714e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-914]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-914")], .matchExpressions = []}}}}, .addresses = ["10.10.91.4"], .span = ["testNode-91"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2ebe1a50-8580-5c80-b944-cd3bf7b2d3f7"}, .name = "2ebe1a50-8580-5c80-b944-cd3bf7b2d3f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-928]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-928")], .matchExpressions = []}}}}, .addresses = ["10.10.92.8"], .span = ["testNode-92"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3568a811-4a06-515d-a03c-a79ef93a44f9"}, .name = "3568a811-4a06-515d-a03c-a79ef93a44f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-901]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-901")], .matchExpressions = []}}}}, .addresses = ["10.10.90.1"], .span = ["testNode-90"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3f63b4d0-d681-5dd2-94c2-3587ab090fea"}, .name = "3f63b4d0-d681-5dd2-94c2-3587ab090fea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-918]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-918")], .matchExpressions = []}}}}, .addresses = ["10.10.91.8"], .span = ["testNode-91"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "43911beb-59cc-5988-bb3b-af6aae148d95"}, .name = "43911beb-59cc-5988-bb3b-af6aae148d95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-911]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-911")], .matchExpressions = []}}}}, .addresses = ["10.10.91.1"], .span = ["testNode-91"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4560caa7-4bfa-5621-8e1e-d35a85c39924"}, .name = "4560caa7-4bfa-5621-8e1e-d35a85c39924", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-916]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-916")], .matchExpressions = []}}}}, .addresses = ["10.10.91.6"], .span = ["testNode-91"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5bbd7489-83af-58ec-b085-f1b12910a84f"}, .name = "5bbd7489-83af-58ec-b085-f1b12910a84f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-920]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-920")], .matchExpressions = []}}}}, .addresses = ["10.10.92.0"], .span = ["testNode-91"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6abb6004-5aed-5881-a895-2e7ae6d22706"}, .name = "6abb6004-5aed-5881-a895-2e7ae6d22706", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-907]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-907")], .matchExpressions = []}}}}, .addresses = ["10.10.90.7"], .span = ["testNode-90"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6dd4e049-f2f0-53dc-a992-5c0f91821fb2"}, .name = "6dd4e049-f2f0-53dc-a992-5c0f91821fb2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-904]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-904")], .matchExpressions = []}}}}, .addresses = ["10.10.90.4"], .span = ["testNode-90"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6e39a276-e0ea-57fb-97ab-c913d427e7df"}, .name = "6e39a276-e0ea-57fb-97ab-c913d427e7df", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-903]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-903")], .matchExpressions = []}}}}, .addresses = ["10.10.90.3"], .span = ["testNode-90"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "70e19acf-a83e-5c16-bd42-a45a4f48a194"}, .name = "70e19acf-a83e-5c16-bd42-a45a4f48a194", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-921]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-921")], .matchExpressions = []}}}}, .addresses = ["10.10.92.1"], .span = ["testNode-92"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7271050c-dfc9-5fc8-aec1-8d8633282dba"}, .name = "7271050c-dfc9-5fc8-aec1-8d8633282dba", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-915]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-915")], .matchExpressions = []}}}}, .addresses = ["10.10.91.5"], .span = ["testNode-91"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7e579803-3f5f-5e8c-b0f4-447b4b5b0157"}, .name = "7e579803-3f5f-5e8c-b0f4-447b4b5b0157", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-906]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-906")], .matchExpressions = []}}}}, .addresses = ["10.10.90.6"], .span = ["testNode-90"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8c2fc324-8113-5345-bf12-c53be5ee8b6d"}, .name = "8c2fc324-8113-5345-bf12-c53be5ee8b6d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-919]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-919")], .matchExpressions = []}}}}, .addresses = ["10.10.91.9"], .span = ["testNode-91"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8d11b2b1-faff-5fee-8127-7656c3ded4e1"}, .name = "8d11b2b1-faff-5fee-8127-7656c3ded4e1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-909]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-909")], .matchExpressions = []}}}}, .addresses = ["10.10.90.9"], .span = ["testNode-90"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9a8f8fad-2ec7-59a9-b2cc-91f5f0029650"}, .name = "9a8f8fad-2ec7-59a9-b2cc-91f5f0029650", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-905]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-905")], .matchExpressions = []}}}}, .addresses = ["10.10.90.5"], .span = ["testNode-90"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a251ff50-c398-5a13-a17c-ddc9f0b08b2a"}, .name = "a251ff50-c398-5a13-a17c-ddc9f0b08b2a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-900]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-900")], .matchExpressions = []}}}}, .addresses = ["10.10.90.0"], .span = ["testNode-89"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a67fc880-3c0d-577d-a4c8-36d949723a6c"}, .name = "a67fc880-3c0d-577d-a4c8-36d949723a6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-917]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-917")], .matchExpressions = []}}}}, .addresses = ["10.10.91.7"], .span = ["testNode-91"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b984a6be-b45c-5405-ab16-d94c807b6601"}, .name = "b984a6be-b45c-5405-ab16-d94c807b6601", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-923]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-923")], .matchExpressions = []}}}}, .addresses = ["10.10.92.3"], .span = ["testNode-92"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bcd40813-2c4e-5f33-b964-8bcae036383a"}, .name = "bcd40813-2c4e-5f33-b964-8bcae036383a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-924]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-924")], .matchExpressions = []}}}}, .addresses = ["10.10.92.4"], .span = ["testNode-92"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "bf7abd2d-7819-5f74-afb5-50977a8bdda7"}, .name = "bf7abd2d-7819-5f74-afb5-50977a8bdda7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-910]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-910")], .matchExpressions = []}}}}, .addresses = ["10.10.91.0"], .span = ["testNode-90"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c1a4ee88-b63e-53c3-aeee-6461eda4ddbb"}, .name = "c1a4ee88-b63e-53c3-aeee-6461eda4ddbb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-927]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-927")], .matchExpressions = []}}}}, .addresses = ["10.10.92.7"], .span = ["testNode-92"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d9811ed8-34e4-5d7f-b1d7-292aee68b40d"}, .name = "d9811ed8-34e4-5d7f-b1d7-292aee68b40d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-898]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-898")], .matchExpressions = []}}}}, .addresses = ["10.10.89.8"], .span = ["testNode-89"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e30e99e2-29cd-5fe8-83fb-c5bf3bba56bc"}, .name = "e30e99e2-29cd-5fe8-83fb-c5bf3bba56bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-913]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-913")], .matchExpressions = []}}}}, .addresses = ["10.10.91.3"], .span = ["testNode-91"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "00e2f0e4-2164-5b09-bfe7-9adb0ce43cdd"}, .name = "00e2f0e4-2164-5b09-bfe7-9adb0ce43cdd", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-897]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-897")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-897", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0403956a-38b3-5303-807f-15089fc71b22"}, .name = "0403956a-38b3-5303-807f-15089fc71b22", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-922]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-922")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-922", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "065b2a74-f9ff-50df-a81a-2c73d4b0bfd6"}, .name = "065b2a74-f9ff-50df-a81a-2c73d4b0bfd6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-925]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-925")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-925", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0eddb568-45d7-5c98-85ed-15bb7b617b32"}, .name = "0eddb568-45d7-5c98-85ed-15bb7b617b32", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-902]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-902")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-902", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "11eb7cdf-3508-5ff9-8e09-41e573ddbc8d"}, .name = "11eb7cdf-3508-5ff9-8e09-41e573ddbc8d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-926]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-926")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-926", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1717d5d7-4e0d-5930-8270-218ea2d38527"}, .name = "1717d5d7-4e0d-5930-8270-218ea2d38527", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-912]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-912")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-912", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1918d2a7-8005-55aa-b506-521184923d98"}, .name = "1918d2a7-8005-55aa-b506-521184923d98", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-908]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-908")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-908", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "225094da-f449-5e13-928b-c8bbaef749ae"}, .name = "225094da-f449-5e13-928b-c8bbaef749ae", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-899]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-899")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-899", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2720a763-7cdf-5fdd-ad3e-af54d337714e"}, .name = "2720a763-7cdf-5fdd-ad3e-af54d337714e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-914]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-914")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-914", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3568a811-4a06-515d-a03c-a79ef93a44f9"}, .name = "3568a811-4a06-515d-a03c-a79ef93a44f9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-901]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-901")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-901", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3f63b4d0-d681-5dd2-94c2-3587ab090fea"}, .name = "3f63b4d0-d681-5dd2-94c2-3587ab090fea", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-918]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-918")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-918", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "43911beb-59cc-5988-bb3b-af6aae148d95"}, .name = "43911beb-59cc-5988-bb3b-af6aae148d95", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-911]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-911")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-911", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4560caa7-4bfa-5621-8e1e-d35a85c39924"}, .name = "4560caa7-4bfa-5621-8e1e-d35a85c39924", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-916]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-916")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-916", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5bbd7489-83af-58ec-b085-f1b12910a84f"}, .name = "5bbd7489-83af-58ec-b085-f1b12910a84f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-920]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-920")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-920", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6abb6004-5aed-5881-a895-2e7ae6d22706"}, .name = "6abb6004-5aed-5881-a895-2e7ae6d22706", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-907]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-907")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-907", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6dd4e049-f2f0-53dc-a992-5c0f91821fb2"}, .name = "6dd4e049-f2f0-53dc-a992-5c0f91821fb2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-904]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-904")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-904", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6e39a276-e0ea-57fb-97ab-c913d427e7df"}, .name = "6e39a276-e0ea-57fb-97ab-c913d427e7df", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-903]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-903")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-903", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "70e19acf-a83e-5c16-bd42-a45a4f48a194"}, .name = "70e19acf-a83e-5c16-bd42-a45a4f48a194", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-921]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-921")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-921", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7271050c-dfc9-5fc8-aec1-8d8633282dba"}, .name = "7271050c-dfc9-5fc8-aec1-8d8633282dba", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-915]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-915")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-915", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7e579803-3f5f-5e8c-b0f4-447b4b5b0157"}, .name = "7e579803-3f5f-5e8c-b0f4-447b4b5b0157", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-906]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-906")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-906", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8c2fc324-8113-5345-bf12-c53be5ee8b6d"}, .name = "8c2fc324-8113-5345-bf12-c53be5ee8b6d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-919]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-919")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-919", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8d11b2b1-faff-5fee-8127-7656c3ded4e1"}, .name = "8d11b2b1-faff-5fee-8127-7656c3ded4e1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-909]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-909")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-909", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9a8f8fad-2ec7-59a9-b2cc-91f5f0029650"}, .name = "9a8f8fad-2ec7-59a9-b2cc-91f5f0029650", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-905]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-905")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-905", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a251ff50-c398-5a13-a17c-ddc9f0b08b2a"}, .name = "a251ff50-c398-5a13-a17c-ddc9f0b08b2a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-900]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-900")], .matchExpressions = []}}}}, .podsByNode = [("testNode-90", [k8spolicy.PodReference{.name = "testPod-900", .namespace = "testNamespace"}])], .span = ["testNode-90"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a67fc880-3c0d-577d-a4c8-36d949723a6c"}, .name = "a67fc880-3c0d-577d-a4c8-36d949723a6c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-917]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-917")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-917", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ab13ed9c-243c-5eee-ade8-cb91f15d3568"}, .name = "ab13ed9c-243c-5eee-ade8-cb91f15d3568", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-896]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-896")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-896", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b984a6be-b45c-5405-ab16-d94c807b6601"}, .name = "b984a6be-b45c-5405-ab16-d94c807b6601", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-923]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-923")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-923", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bcd40813-2c4e-5f33-b964-8bcae036383a"}, .name = "bcd40813-2c4e-5f33-b964-8bcae036383a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-924]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-924")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-924", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "bf7abd2d-7819-5f74-afb5-50977a8bdda7"}, .name = "bf7abd2d-7819-5f74-afb5-50977a8bdda7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-910]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-910")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-910", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c1a4ee88-b63e-53c3-aeee-6461eda4ddbb"}, .name = "c1a4ee88-b63e-53c3-aeee-6461eda4ddbb", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-927]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-927")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-927", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d9811ed8-34e4-5d7f-b1d7-292aee68b40d"}, .name = "d9811ed8-34e4-5d7f-b1d7-292aee68b40d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-898]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-898")], .matchExpressions = []}}}}, .podsByNode = [("testNode-89", [k8spolicy.PodReference{.name = "testPod-898", .namespace = "testNamespace"}])], .span = ["testNode-89"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e30e99e2-29cd-5fe8-83fb-c5bf3bba56bc"}, .name = "e30e99e2-29cd-5fe8-83fb-c5bf3bba56bc", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-913]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-913")], .matchExpressions = []}}}}, .podsByNode = [("testNode-91", [k8spolicy.PodReference{.name = "testPod-913", .namespace = "testNamespace"}])], .span = ["testNode-91"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-896"}, .name = "testNP-896", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["00e2f0e4-2164-5b09-bfe7-9adb0ce43cdd"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ab13ed9c-243c-5eee-ade8-cb91f15d3568"]}, .span = ["testNode-89"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-897"}, .name = "testNP-897", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d9811ed8-34e4-5d7f-b1d7-292aee68b40d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["00e2f0e4-2164-5b09-bfe7-9adb0ce43cdd"]}, .span = ["testNode-89"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-898"}, .name = "testNP-898", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["225094da-f449-5e13-928b-c8bbaef749ae"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d9811ed8-34e4-5d7f-b1d7-292aee68b40d"]}, .span = ["testNode-89"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-899"}, .name = "testNP-899", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a251ff50-c398-5a13-a17c-ddc9f0b08b2a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["225094da-f449-5e13-928b-c8bbaef749ae"]}, .span = ["testNode-89"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-900"}, .name = "testNP-900", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3568a811-4a06-515d-a03c-a79ef93a44f9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a251ff50-c398-5a13-a17c-ddc9f0b08b2a"]}, .span = ["testNode-90"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-901"}, .name = "testNP-901", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0eddb568-45d7-5c98-85ed-15bb7b617b32"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3568a811-4a06-515d-a03c-a79ef93a44f9"]}, .span = ["testNode-90"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-902"}, .name = "testNP-902", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6e39a276-e0ea-57fb-97ab-c913d427e7df"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0eddb568-45d7-5c98-85ed-15bb7b617b32"]}, .span = ["testNode-90"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-903"}, .name = "testNP-903", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6dd4e049-f2f0-53dc-a992-5c0f91821fb2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6e39a276-e0ea-57fb-97ab-c913d427e7df"]}, .span = ["testNode-90"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-904"}, .name = "testNP-904", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9a8f8fad-2ec7-59a9-b2cc-91f5f0029650"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6dd4e049-f2f0-53dc-a992-5c0f91821fb2"]}, .span = ["testNode-90"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-905"}, .name = "testNP-905", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7e579803-3f5f-5e8c-b0f4-447b4b5b0157"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9a8f8fad-2ec7-59a9-b2cc-91f5f0029650"]}, .span = ["testNode-90"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-906"}, .name = "testNP-906", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6abb6004-5aed-5881-a895-2e7ae6d22706"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7e579803-3f5f-5e8c-b0f4-447b4b5b0157"]}, .span = ["testNode-90"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-907"}, .name = "testNP-907", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1918d2a7-8005-55aa-b506-521184923d98"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6abb6004-5aed-5881-a895-2e7ae6d22706"]}, .span = ["testNode-90"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-908"}, .name = "testNP-908", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8d11b2b1-faff-5fee-8127-7656c3ded4e1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1918d2a7-8005-55aa-b506-521184923d98"]}, .span = ["testNode-90"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-909"}, .name = "testNP-909", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bf7abd2d-7819-5f74-afb5-50977a8bdda7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8d11b2b1-faff-5fee-8127-7656c3ded4e1"]}, .span = ["testNode-90"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-910"}, .name = "testNP-910", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["43911beb-59cc-5988-bb3b-af6aae148d95"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bf7abd2d-7819-5f74-afb5-50977a8bdda7"]}, .span = ["testNode-91"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-911"}, .name = "testNP-911", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1717d5d7-4e0d-5930-8270-218ea2d38527"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["43911beb-59cc-5988-bb3b-af6aae148d95"]}, .span = ["testNode-91"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-912"}, .name = "testNP-912", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e30e99e2-29cd-5fe8-83fb-c5bf3bba56bc"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1717d5d7-4e0d-5930-8270-218ea2d38527"]}, .span = ["testNode-91"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-913"}, .name = "testNP-913", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2720a763-7cdf-5fdd-ad3e-af54d337714e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e30e99e2-29cd-5fe8-83fb-c5bf3bba56bc"]}, .span = ["testNode-91"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-914"}, .name = "testNP-914", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7271050c-dfc9-5fc8-aec1-8d8633282dba"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2720a763-7cdf-5fdd-ad3e-af54d337714e"]}, .span = ["testNode-91"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-915"}, .name = "testNP-915", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4560caa7-4bfa-5621-8e1e-d35a85c39924"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7271050c-dfc9-5fc8-aec1-8d8633282dba"]}, .span = ["testNode-91"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-916"}, .name = "testNP-916", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a67fc880-3c0d-577d-a4c8-36d949723a6c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4560caa7-4bfa-5621-8e1e-d35a85c39924"]}, .span = ["testNode-91"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-917"}, .name = "testNP-917", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3f63b4d0-d681-5dd2-94c2-3587ab090fea"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a67fc880-3c0d-577d-a4c8-36d949723a6c"]}, .span = ["testNode-91"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-918"}, .name = "testNP-918", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8c2fc324-8113-5345-bf12-c53be5ee8b6d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3f63b4d0-d681-5dd2-94c2-3587ab090fea"]}, .span = ["testNode-91"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-919"}, .name = "testNP-919", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5bbd7489-83af-58ec-b085-f1b12910a84f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8c2fc324-8113-5345-bf12-c53be5ee8b6d"]}, .span = ["testNode-91"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-920"}, .name = "testNP-920", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["70e19acf-a83e-5c16-bd42-a45a4f48a194"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5bbd7489-83af-58ec-b085-f1b12910a84f"]}, .span = ["testNode-92"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-921"}, .name = "testNP-921", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0403956a-38b3-5303-807f-15089fc71b22"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["70e19acf-a83e-5c16-bd42-a45a4f48a194"]}, .span = ["testNode-92"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-922"}, .name = "testNP-922", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b984a6be-b45c-5405-ab16-d94c807b6601"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0403956a-38b3-5303-807f-15089fc71b22"]}, .span = ["testNode-92"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-923"}, .name = "testNP-923", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["bcd40813-2c4e-5f33-b964-8bcae036383a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b984a6be-b45c-5405-ab16-d94c807b6601"]}, .span = ["testNode-92"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-924"}, .name = "testNP-924", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["065b2a74-f9ff-50df-a81a-2c73d4b0bfd6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["bcd40813-2c4e-5f33-b964-8bcae036383a"]}, .span = ["testNode-92"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-925"}, .name = "testNP-925", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["11eb7cdf-3508-5ff9-8e09-41e573ddbc8d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["065b2a74-f9ff-50df-a81a-2c73d4b0bfd6"]}, .span = ["testNode-92"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-926"}, .name = "testNP-926", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c1a4ee88-b63e-53c3-aeee-6461eda4ddbb"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["11eb7cdf-3508-5ff9-8e09-41e573ddbc8d"]}, .span = ["testNode-92"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-927"}, .name = "testNP-927", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2ebe1a50-8580-5c80-b944-cd3bf7b2d3f7"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c1a4ee88-b63e-53c3-aeee-6461eda4ddbb"]}, .span = ["testNode-92"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "11091fe7-de5c-5447-9a4c-798bf9ca054c"}, .name = "11091fe7-de5c-5447-9a4c-798bf9ca054c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-936]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-936")], .matchExpressions = []}}}}, .addresses = ["10.10.93.6"], .span = ["testNode-93"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "15177777-9707-58fb-9156-86d565a89a19"}, .name = "15177777-9707-58fb-9156-86d565a89a19", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-945]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-945")], .matchExpressions = []}}}}, .addresses = ["10.10.94.5"], .span = ["testNode-94"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "1f03374c-e2d1-5e42-bf57-27f78bf217c5"}, .name = "1f03374c-e2d1-5e42-bf57-27f78bf217c5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-951]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-951")], .matchExpressions = []}}}}, .addresses = ["10.10.95.1"], .span = ["testNode-95"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "327a9e3a-4ad5-5842-a95c-df59834e40d2"}, .name = "327a9e3a-4ad5-5842-a95c-df59834e40d2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-932]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-932")], .matchExpressions = []}}}}, .addresses = ["10.10.93.2"], .span = ["testNode-93"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3b340918-7875-5eed-af0e-e2d05a2f5eb1"}, .name = "3b340918-7875-5eed-af0e-e2d05a2f5eb1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-958]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-958")], .matchExpressions = []}}}}, .addresses = ["10.10.95.8"], .span = ["testNode-95"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "44a486b4-08fa-5d04-8395-ae9f858dae71"}, .name = "44a486b4-08fa-5d04-8395-ae9f858dae71", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-952]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-952")], .matchExpressions = []}}}}, .addresses = ["10.10.95.2"], .span = ["testNode-95"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4b90ebf9-b9f9-5e5c-bc9c-bb4fc077b962"}, .name = "4b90ebf9-b9f9-5e5c-bc9c-bb4fc077b962", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-953]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-953")], .matchExpressions = []}}}}, .addresses = ["10.10.95.3"], .span = ["testNode-95"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "664af069-b28d-5f5d-976a-a6316cf5a57c"}, .name = "664af069-b28d-5f5d-976a-a6316cf5a57c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-954]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-954")], .matchExpressions = []}}}}, .addresses = ["10.10.95.4"], .span = ["testNode-95"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "68c40fce-3187-554d-a351-8dfd5702ad84"}, .name = "68c40fce-3187-554d-a351-8dfd5702ad84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-957]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-957")], .matchExpressions = []}}}}, .addresses = ["10.10.95.7"], .span = ["testNode-95"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6b09ef30-cc39-54ff-8316-eaee4792d66f"}, .name = "6b09ef30-cc39-54ff-8316-eaee4792d66f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-935]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-935")], .matchExpressions = []}}}}, .addresses = ["10.10.93.5"], .span = ["testNode-93"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6cd84c3a-20eb-577a-83ab-6d8c386b56b3"}, .name = "6cd84c3a-20eb-577a-83ab-6d8c386b56b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-947]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-947")], .matchExpressions = []}}}}, .addresses = ["10.10.94.7"], .span = ["testNode-94"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "76bd6cc8-46e5-5304-886c-914de4703352"}, .name = "76bd6cc8-46e5-5304-886c-914de4703352", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-959]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-959")], .matchExpressions = []}}}}, .addresses = ["10.10.95.9"], .span = ["testNode-95"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "7cd9d1b3-9a5b-5a9e-83d0-e291784a8f60"}, .name = "7cd9d1b3-9a5b-5a9e-83d0-e291784a8f60", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-960]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-960")], .matchExpressions = []}}}}, .addresses = ["10.10.96.0"], .span = ["testNode-95"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "80077af4-c0d0-5ca1-b0c5-b03ca4f7e3cf"}, .name = "80077af4-c0d0-5ca1-b0c5-b03ca4f7e3cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-939]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-939")], .matchExpressions = []}}}}, .addresses = ["10.10.93.9"], .span = ["testNode-93"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "898cd4e5-11a6-53d6-b5a9-a15a13cb03a0"}, .name = "898cd4e5-11a6-53d6-b5a9-a15a13cb03a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-929]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-929")], .matchExpressions = []}}}}, .addresses = ["10.10.92.9"], .span = ["testNode-92"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "8f45a19b-25b8-53c9-bde8-660e583f892f"}, .name = "8f45a19b-25b8-53c9-bde8-660e583f892f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-931]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-931")], .matchExpressions = []}}}}, .addresses = ["10.10.93.1"], .span = ["testNode-93"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9480cdcf-42f4-5145-936c-f142ac7d015a"}, .name = "9480cdcf-42f4-5145-936c-f142ac7d015a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-946]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-946")], .matchExpressions = []}}}}, .addresses = ["10.10.94.6"], .span = ["testNode-94"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9c181f04-663a-5c47-83fc-ef4ba644e415"}, .name = "9c181f04-663a-5c47-83fc-ef4ba644e415", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-948]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-948")], .matchExpressions = []}}}}, .addresses = ["10.10.94.8"], .span = ["testNode-94"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9f8158db-4ae3-5689-9fc7-d219f8de62b5"}, .name = "9f8158db-4ae3-5689-9fc7-d219f8de62b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-956]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-956")], .matchExpressions = []}}}}, .addresses = ["10.10.95.6"], .span = ["testNode-95"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a22300db-2ae2-54df-afa2-0d2fc5bdd332"}, .name = "a22300db-2ae2-54df-afa2-0d2fc5bdd332", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-930]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-930")], .matchExpressions = []}}}}, .addresses = ["10.10.93.0"], .span = ["testNode-92"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a8f25465-f134-52e0-bca1-5a9d16c463f3"}, .name = "a8f25465-f134-52e0-bca1-5a9d16c463f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-949]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-949")], .matchExpressions = []}}}}, .addresses = ["10.10.94.9"], .span = ["testNode-94"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "aa4b093f-ffd9-5490-9e4a-66b74d9c0ea3"}, .name = "aa4b093f-ffd9-5490-9e4a-66b74d9c0ea3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-940]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-940")], .matchExpressions = []}}}}, .addresses = ["10.10.94.0"], .span = ["testNode-93"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ac435a05-1fb1-50d4-bf31-20ac6ab2ea93"}, .name = "ac435a05-1fb1-50d4-bf31-20ac6ab2ea93", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-950]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-950")], .matchExpressions = []}}}}, .addresses = ["10.10.95.0"], .span = ["testNode-94"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "aedda896-4265-5fdc-8ca3-ff38691e7c0b"}, .name = "aedda896-4265-5fdc-8ca3-ff38691e7c0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-934]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-934")], .matchExpressions = []}}}}, .addresses = ["10.10.93.4"], .span = ["testNode-93"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b373361a-ddd5-5382-932b-3e85eaeb56d9"}, .name = "b373361a-ddd5-5382-932b-3e85eaeb56d9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-955]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-955")], .matchExpressions = []}}}}, .addresses = ["10.10.95.5"], .span = ["testNode-95"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b457c8ff-44a4-5b41-a4bd-c84d79505043"}, .name = "b457c8ff-44a4-5b41-a4bd-c84d79505043", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-937]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-937")], .matchExpressions = []}}}}, .addresses = ["10.10.93.7"], .span = ["testNode-93"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d5ddb8fc-c0b8-5f52-a656-937f1314be1f"}, .name = "d5ddb8fc-c0b8-5f52-a656-937f1314be1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-941]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-941")], .matchExpressions = []}}}}, .addresses = ["10.10.94.1"], .span = ["testNode-94"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d6edfef5-dedc-5d1d-8b89-9e59d603df79"}, .name = "d6edfef5-dedc-5d1d-8b89-9e59d603df79", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-938]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-938")], .matchExpressions = []}}}}, .addresses = ["10.10.93.8"], .span = ["testNode-93"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d88e08f2-9454-5cc4-9d72-ac18e0f1f8e0"}, .name = "d88e08f2-9454-5cc4-9d72-ac18e0f1f8e0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-933]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-933")], .matchExpressions = []}}}}, .addresses = ["10.10.93.3"], .span = ["testNode-93"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e6d55e7a-684c-5439-af68-04096cd02c9e"}, .name = "e6d55e7a-684c-5439-af68-04096cd02c9e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-944]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-944")], .matchExpressions = []}}}}, .addresses = ["10.10.94.4"], .span = ["testNode-94"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e7e5f73f-fa9d-50c2-9fc7-c4260b1e57f8"}, .name = "e7e5f73f-fa9d-50c2-9fc7-c4260b1e57f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-943]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-943")], .matchExpressions = []}}}}, .addresses = ["10.10.94.3"], .span = ["testNode-94"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f9b14591-2c15-52f1-b40b-7126f31ec92b"}, .name = "f9b14591-2c15-52f1-b40b-7126f31ec92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-942]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-942")], .matchExpressions = []}}}}, .addresses = ["10.10.94.2"], .span = ["testNode-94"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "11091fe7-de5c-5447-9a4c-798bf9ca054c"}, .name = "11091fe7-de5c-5447-9a4c-798bf9ca054c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-936]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-936")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-936", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "15177777-9707-58fb-9156-86d565a89a19"}, .name = "15177777-9707-58fb-9156-86d565a89a19", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-945]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-945")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-945", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "1f03374c-e2d1-5e42-bf57-27f78bf217c5"}, .name = "1f03374c-e2d1-5e42-bf57-27f78bf217c5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-951]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-951")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-951", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2ebe1a50-8580-5c80-b944-cd3bf7b2d3f7"}, .name = "2ebe1a50-8580-5c80-b944-cd3bf7b2d3f7", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-928]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-928")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-928", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "327a9e3a-4ad5-5842-a95c-df59834e40d2"}, .name = "327a9e3a-4ad5-5842-a95c-df59834e40d2", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-932]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-932")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-932", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3b340918-7875-5eed-af0e-e2d05a2f5eb1"}, .name = "3b340918-7875-5eed-af0e-e2d05a2f5eb1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-958]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-958")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-958", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "44a486b4-08fa-5d04-8395-ae9f858dae71"}, .name = "44a486b4-08fa-5d04-8395-ae9f858dae71", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-952]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-952")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-952", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4b90ebf9-b9f9-5e5c-bc9c-bb4fc077b962"}, .name = "4b90ebf9-b9f9-5e5c-bc9c-bb4fc077b962", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-953]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-953")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-953", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "664af069-b28d-5f5d-976a-a6316cf5a57c"}, .name = "664af069-b28d-5f5d-976a-a6316cf5a57c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-954]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-954")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-954", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "68c40fce-3187-554d-a351-8dfd5702ad84"}, .name = "68c40fce-3187-554d-a351-8dfd5702ad84", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-957]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-957")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-957", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6b09ef30-cc39-54ff-8316-eaee4792d66f"}, .name = "6b09ef30-cc39-54ff-8316-eaee4792d66f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-935]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-935")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-935", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6cd84c3a-20eb-577a-83ab-6d8c386b56b3"}, .name = "6cd84c3a-20eb-577a-83ab-6d8c386b56b3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-947]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-947")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-947", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "76bd6cc8-46e5-5304-886c-914de4703352"}, .name = "76bd6cc8-46e5-5304-886c-914de4703352", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-959]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-959")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-959", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "80077af4-c0d0-5ca1-b0c5-b03ca4f7e3cf"}, .name = "80077af4-c0d0-5ca1-b0c5-b03ca4f7e3cf", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-939]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-939")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-939", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "898cd4e5-11a6-53d6-b5a9-a15a13cb03a0"}, .name = "898cd4e5-11a6-53d6-b5a9-a15a13cb03a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-929]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-929")], .matchExpressions = []}}}}, .podsByNode = [("testNode-92", [k8spolicy.PodReference{.name = "testPod-929", .namespace = "testNamespace"}])], .span = ["testNode-92"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "8f45a19b-25b8-53c9-bde8-660e583f892f"}, .name = "8f45a19b-25b8-53c9-bde8-660e583f892f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-931]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-931")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-931", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9480cdcf-42f4-5145-936c-f142ac7d015a"}, .name = "9480cdcf-42f4-5145-936c-f142ac7d015a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-946]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-946")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-946", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9c181f04-663a-5c47-83fc-ef4ba644e415"}, .name = "9c181f04-663a-5c47-83fc-ef4ba644e415", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-948]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-948")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-948", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9f8158db-4ae3-5689-9fc7-d219f8de62b5"}, .name = "9f8158db-4ae3-5689-9fc7-d219f8de62b5", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-956]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-956")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-956", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a22300db-2ae2-54df-afa2-0d2fc5bdd332"}, .name = "a22300db-2ae2-54df-afa2-0d2fc5bdd332", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-930]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-930")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-930", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a8f25465-f134-52e0-bca1-5a9d16c463f3"}, .name = "a8f25465-f134-52e0-bca1-5a9d16c463f3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-949]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-949")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-949", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "aa4b093f-ffd9-5490-9e4a-66b74d9c0ea3"}, .name = "aa4b093f-ffd9-5490-9e4a-66b74d9c0ea3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-940]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-940")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-940", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ac435a05-1fb1-50d4-bf31-20ac6ab2ea93"}, .name = "ac435a05-1fb1-50d4-bf31-20ac6ab2ea93", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-950]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-950")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-950", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "aedda896-4265-5fdc-8ca3-ff38691e7c0b"}, .name = "aedda896-4265-5fdc-8ca3-ff38691e7c0b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-934]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-934")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-934", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b373361a-ddd5-5382-932b-3e85eaeb56d9"}, .name = "b373361a-ddd5-5382-932b-3e85eaeb56d9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-955]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-955")], .matchExpressions = []}}}}, .podsByNode = [("testNode-95", [k8spolicy.PodReference{.name = "testPod-955", .namespace = "testNamespace"}])], .span = ["testNode-95"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b457c8ff-44a4-5b41-a4bd-c84d79505043"}, .name = "b457c8ff-44a4-5b41-a4bd-c84d79505043", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-937]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-937")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-937", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d5ddb8fc-c0b8-5f52-a656-937f1314be1f"}, .name = "d5ddb8fc-c0b8-5f52-a656-937f1314be1f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-941]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-941")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-941", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d6edfef5-dedc-5d1d-8b89-9e59d603df79"}, .name = "d6edfef5-dedc-5d1d-8b89-9e59d603df79", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-938]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-938")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-938", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d88e08f2-9454-5cc4-9d72-ac18e0f1f8e0"}, .name = "d88e08f2-9454-5cc4-9d72-ac18e0f1f8e0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-933]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-933")], .matchExpressions = []}}}}, .podsByNode = [("testNode-93", [k8spolicy.PodReference{.name = "testPod-933", .namespace = "testNamespace"}])], .span = ["testNode-93"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e6d55e7a-684c-5439-af68-04096cd02c9e"}, .name = "e6d55e7a-684c-5439-af68-04096cd02c9e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-944]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-944")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-944", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e7e5f73f-fa9d-50c2-9fc7-c4260b1e57f8"}, .name = "e7e5f73f-fa9d-50c2-9fc7-c4260b1e57f8", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-943]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-943")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-943", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f9b14591-2c15-52f1-b40b-7126f31ec92b"}, .name = "f9b14591-2c15-52f1-b40b-7126f31ec92b", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-942]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-942")], .matchExpressions = []}}}}, .podsByNode = [("testNode-94", [k8spolicy.PodReference{.name = "testPod-942", .namespace = "testNamespace"}])], .span = ["testNode-94"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-928"}, .name = "testNP-928", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["898cd4e5-11a6-53d6-b5a9-a15a13cb03a0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2ebe1a50-8580-5c80-b944-cd3bf7b2d3f7"]}, .span = ["testNode-92"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-929"}, .name = "testNP-929", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a22300db-2ae2-54df-afa2-0d2fc5bdd332"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["898cd4e5-11a6-53d6-b5a9-a15a13cb03a0"]}, .span = ["testNode-92"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-930"}, .name = "testNP-930", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["8f45a19b-25b8-53c9-bde8-660e583f892f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a22300db-2ae2-54df-afa2-0d2fc5bdd332"]}, .span = ["testNode-93"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-931"}, .name = "testNP-931", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["327a9e3a-4ad5-5842-a95c-df59834e40d2"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["8f45a19b-25b8-53c9-bde8-660e583f892f"]}, .span = ["testNode-93"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-932"}, .name = "testNP-932", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d88e08f2-9454-5cc4-9d72-ac18e0f1f8e0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["327a9e3a-4ad5-5842-a95c-df59834e40d2"]}, .span = ["testNode-93"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-933"}, .name = "testNP-933", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["aedda896-4265-5fdc-8ca3-ff38691e7c0b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d88e08f2-9454-5cc4-9d72-ac18e0f1f8e0"]}, .span = ["testNode-93"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-934"}, .name = "testNP-934", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6b09ef30-cc39-54ff-8316-eaee4792d66f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["aedda896-4265-5fdc-8ca3-ff38691e7c0b"]}, .span = ["testNode-93"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-935"}, .name = "testNP-935", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["11091fe7-de5c-5447-9a4c-798bf9ca054c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6b09ef30-cc39-54ff-8316-eaee4792d66f"]}, .span = ["testNode-93"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-936"}, .name = "testNP-936", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b457c8ff-44a4-5b41-a4bd-c84d79505043"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["11091fe7-de5c-5447-9a4c-798bf9ca054c"]}, .span = ["testNode-93"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-937"}, .name = "testNP-937", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d6edfef5-dedc-5d1d-8b89-9e59d603df79"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b457c8ff-44a4-5b41-a4bd-c84d79505043"]}, .span = ["testNode-93"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-938"}, .name = "testNP-938", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["80077af4-c0d0-5ca1-b0c5-b03ca4f7e3cf"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d6edfef5-dedc-5d1d-8b89-9e59d603df79"]}, .span = ["testNode-93"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-939"}, .name = "testNP-939", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["aa4b093f-ffd9-5490-9e4a-66b74d9c0ea3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["80077af4-c0d0-5ca1-b0c5-b03ca4f7e3cf"]}, .span = ["testNode-93"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-940"}, .name = "testNP-940", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d5ddb8fc-c0b8-5f52-a656-937f1314be1f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["aa4b093f-ffd9-5490-9e4a-66b74d9c0ea3"]}, .span = ["testNode-94"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-941"}, .name = "testNP-941", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f9b14591-2c15-52f1-b40b-7126f31ec92b"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d5ddb8fc-c0b8-5f52-a656-937f1314be1f"]}, .span = ["testNode-94"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-942"}, .name = "testNP-942", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e7e5f73f-fa9d-50c2-9fc7-c4260b1e57f8"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f9b14591-2c15-52f1-b40b-7126f31ec92b"]}, .span = ["testNode-94"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-943"}, .name = "testNP-943", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e6d55e7a-684c-5439-af68-04096cd02c9e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e7e5f73f-fa9d-50c2-9fc7-c4260b1e57f8"]}, .span = ["testNode-94"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-944"}, .name = "testNP-944", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["15177777-9707-58fb-9156-86d565a89a19"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e6d55e7a-684c-5439-af68-04096cd02c9e"]}, .span = ["testNode-94"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-945"}, .name = "testNP-945", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9480cdcf-42f4-5145-936c-f142ac7d015a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["15177777-9707-58fb-9156-86d565a89a19"]}, .span = ["testNode-94"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-946"}, .name = "testNP-946", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6cd84c3a-20eb-577a-83ab-6d8c386b56b3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9480cdcf-42f4-5145-936c-f142ac7d015a"]}, .span = ["testNode-94"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-947"}, .name = "testNP-947", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9c181f04-663a-5c47-83fc-ef4ba644e415"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6cd84c3a-20eb-577a-83ab-6d8c386b56b3"]}, .span = ["testNode-94"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-948"}, .name = "testNP-948", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a8f25465-f134-52e0-bca1-5a9d16c463f3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9c181f04-663a-5c47-83fc-ef4ba644e415"]}, .span = ["testNode-94"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-949"}, .name = "testNP-949", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ac435a05-1fb1-50d4-bf31-20ac6ab2ea93"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a8f25465-f134-52e0-bca1-5a9d16c463f3"]}, .span = ["testNode-94"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-950"}, .name = "testNP-950", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["1f03374c-e2d1-5e42-bf57-27f78bf217c5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ac435a05-1fb1-50d4-bf31-20ac6ab2ea93"]}, .span = ["testNode-95"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-951"}, .name = "testNP-951", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["44a486b4-08fa-5d04-8395-ae9f858dae71"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["1f03374c-e2d1-5e42-bf57-27f78bf217c5"]}, .span = ["testNode-95"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-952"}, .name = "testNP-952", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4b90ebf9-b9f9-5e5c-bc9c-bb4fc077b962"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["44a486b4-08fa-5d04-8395-ae9f858dae71"]}, .span = ["testNode-95"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-953"}, .name = "testNP-953", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["664af069-b28d-5f5d-976a-a6316cf5a57c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4b90ebf9-b9f9-5e5c-bc9c-bb4fc077b962"]}, .span = ["testNode-95"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-954"}, .name = "testNP-954", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b373361a-ddd5-5382-932b-3e85eaeb56d9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["664af069-b28d-5f5d-976a-a6316cf5a57c"]}, .span = ["testNode-95"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-955"}, .name = "testNP-955", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9f8158db-4ae3-5689-9fc7-d219f8de62b5"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b373361a-ddd5-5382-932b-3e85eaeb56d9"]}, .span = ["testNode-95"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-956"}, .name = "testNP-956", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["68c40fce-3187-554d-a351-8dfd5702ad84"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9f8158db-4ae3-5689-9fc7-d219f8de62b5"]}, .span = ["testNode-95"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-957"}, .name = "testNP-957", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3b340918-7875-5eed-af0e-e2d05a2f5eb1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["68c40fce-3187-554d-a351-8dfd5702ad84"]}, .span = ["testNode-95"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-958"}, .name = "testNP-958", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["76bd6cc8-46e5-5304-886c-914de4703352"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3b340918-7875-5eed-af0e-e2d05a2f5eb1"]}, .span = ["testNode-95"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-959"}, .name = "testNP-959", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["7cd9d1b3-9a5b-5a9e-83d0-e291784a8f60"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["76bd6cc8-46e5-5304-886c-914de4703352"]}, .span = ["testNode-95"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "053b911e-f779-5223-88ad-adeacd6ac46d"}, .name = "053b911e-f779-5223-88ad-adeacd6ac46d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-977]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-977")], .matchExpressions = []}}}}, .addresses = ["10.10.97.7"], .span = ["testNode-97"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "09c365f6-b998-5c6a-ba07-88aa29b9025d"}, .name = "09c365f6-b998-5c6a-ba07-88aa29b9025d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-963]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-963")], .matchExpressions = []}}}}, .addresses = ["10.10.96.3"], .span = ["testNode-96"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "0ee1add2-7289-5b58-aae3-e5794b840d69"}, .name = "0ee1add2-7289-5b58-aae3-e5794b840d69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-988]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-988")], .matchExpressions = []}}}}, .addresses = ["10.10.98.8"], .span = ["testNode-98"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "151d9a1e-9621-5138-bcb3-e1ad3cbd4073"}, .name = "151d9a1e-9621-5138-bcb3-e1ad3cbd4073", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-978]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-978")], .matchExpressions = []}}}}, .addresses = ["10.10.97.8"], .span = ["testNode-97"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "2c124475-1012-52ee-b743-a9c0fe4b2c39"}, .name = "2c124475-1012-52ee-b743-a9c0fe4b2c39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-983]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-983")], .matchExpressions = []}}}}, .addresses = ["10.10.98.3"], .span = ["testNode-98"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3b147d3a-c6eb-58d9-b74c-268660681262"}, .name = "3b147d3a-c6eb-58d9-b74c-268660681262", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-991]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-991")], .matchExpressions = []}}}}, .addresses = ["10.10.99.1"], .span = ["testNode-99"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "3e501e31-92ce-52dc-8056-5a4609d68a1a"}, .name = "3e501e31-92ce-52dc-8056-5a4609d68a1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-972]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-972")], .matchExpressions = []}}}}, .addresses = ["10.10.97.2"], .span = ["testNode-97"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "441b4612-b19a-57d1-a51d-987a11f82cb6"}, .name = "441b4612-b19a-57d1-a51d-987a11f82cb6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-967]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-967")], .matchExpressions = []}}}}, .addresses = ["10.10.96.7"], .span = ["testNode-96"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4946277f-112c-5c0a-b567-7dbf39c25f99"}, .name = "4946277f-112c-5c0a-b567-7dbf39c25f99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-982]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-982")], .matchExpressions = []}}}}, .addresses = ["10.10.98.2"], .span = ["testNode-98"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4e12a308-a5b9-5a87-8bf5-007597bc8ca4"}, .name = "4e12a308-a5b9-5a87-8bf5-007597bc8ca4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-969]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-969")], .matchExpressions = []}}}}, .addresses = ["10.10.96.9"], .span = ["testNode-96"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5c58d104-083b-5905-becc-0fb8a350b32d"}, .name = "5c58d104-083b-5905-becc-0fb8a350b32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-974]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-974")], .matchExpressions = []}}}}, .addresses = ["10.10.97.4"], .span = ["testNode-97"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5d845c29-e8a6-5b71-a48a-d6f40ef0a1e9"}, .name = "5d845c29-e8a6-5b71-a48a-d6f40ef0a1e9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-981]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-981")], .matchExpressions = []}}}}, .addresses = ["10.10.98.1"], .span = ["testNode-98"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "5e62393f-49b9-57d7-8f57-b8d07ac308c1"}, .name = "5e62393f-49b9-57d7-8f57-b8d07ac308c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-985]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-985")], .matchExpressions = []}}}}, .addresses = ["10.10.98.5"], .span = ["testNode-98"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "6f102093-a719-56d9-9715-f985470613a0"}, .name = "6f102093-a719-56d9-9715-f985470613a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-979]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-979")], .matchExpressions = []}}}}, .addresses = ["10.10.97.9"], .span = ["testNode-97"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "710f331c-7055-5ef5-9a3e-e183984b3fa4"}, .name = "710f331c-7055-5ef5-9a3e-e183984b3fa4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-964]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-964")], .matchExpressions = []}}}}, .addresses = ["10.10.96.4"], .span = ["testNode-96"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9871a4f9-437b-5129-9d0c-732851248c55"}, .name = "9871a4f9-437b-5129-9d0c-732851248c55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-987]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-987")], .matchExpressions = []}}}}, .addresses = ["10.10.98.7"], .span = ["testNode-98"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9a7755fa-d2bf-5708-bdd0-2558b81deca4"}, .name = "9a7755fa-d2bf-5708-bdd0-2558b81deca4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-980]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-980")], .matchExpressions = []}}}}, .addresses = ["10.10.98.0"], .span = ["testNode-97"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "9d3406e4-cce3-549e-bf12-0dbf95c6d493"}, .name = "9d3406e4-cce3-549e-bf12-0dbf95c6d493", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-968]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-968")], .matchExpressions = []}}}}, .addresses = ["10.10.96.8"], .span = ["testNode-96"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a1625391-7909-5d71-af5f-21316088012f"}, .name = "a1625391-7909-5d71-af5f-21316088012f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-989]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-989")], .matchExpressions = []}}}}, .addresses = ["10.10.98.9"], .span = ["testNode-98"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "aa616b38-d052-517d-abcd-a27f5a00267e"}, .name = "aa616b38-d052-517d-abcd-a27f5a00267e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-970]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-970")], .matchExpressions = []}}}}, .addresses = ["10.10.97.0"], .span = ["testNode-96"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ad5dc842-e9b1-594a-acc0-da13e87f70de"}, .name = "ad5dc842-e9b1-594a-acc0-da13e87f70de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-992]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-992")], .matchExpressions = []}}}}, .addresses = ["10.10.99.2"], .span = ["testNode-99"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ae1590d0-d91f-516f-8406-da4fd6b6703c"}, .name = "ae1590d0-d91f-516f-8406-da4fd6b6703c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-984]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-984")], .matchExpressions = []}}}}, .addresses = ["10.10.98.4"], .span = ["testNode-98"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b602a98f-75dd-5ff8-bca1-34374622ca3e"}, .name = "b602a98f-75dd-5ff8-bca1-34374622ca3e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-976]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-976")], .matchExpressions = []}}}}, .addresses = ["10.10.97.6"], .span = ["testNode-97"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "c79967df-d6ae-5625-b615-50e91452308a"}, .name = "c79967df-d6ae-5625-b615-50e91452308a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-966]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-966")], .matchExpressions = []}}}}, .addresses = ["10.10.96.6"], .span = ["testNode-96"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "d04cdbb6-065a-5ae0-84db-719000c6f354"}, .name = "d04cdbb6-065a-5ae0-84db-719000c6f354", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-965]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-965")], .matchExpressions = []}}}}, .addresses = ["10.10.96.5"], .span = ["testNode-96"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "dd9ebacf-29d0-5cfd-adb2-e690e57fc751"}, .name = "dd9ebacf-29d0-5cfd-adb2-e690e57fc751", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-973]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-973")], .matchExpressions = []}}}}, .addresses = ["10.10.97.3"], .span = ["testNode-97"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "e37fbe64-4268-584d-b541-f2c27d8d7d8c"}, .name = "e37fbe64-4268-584d-b541-f2c27d8d7d8c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-986]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-986")], .matchExpressions = []}}}}, .addresses = ["10.10.98.6"], .span = ["testNode-98"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f70694b4-9442-56ed-80aa-096d94a52960"}, .name = "f70694b4-9442-56ed-80aa-096d94a52960", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-971]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-971")], .matchExpressions = []}}}}, .addresses = ["10.10.97.1"], .span = ["testNode-97"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "f78fc18a-9f59-51f8-a488-261ae966e239"}, .name = "f78fc18a-9f59-51f8-a488-261ae966e239", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-961]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-961")], .matchExpressions = []}}}}, .addresses = ["10.10.96.1"], .span = ["testNode-96"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ff174ecf-ef7b-5f5f-b5e9-4d9508d26a4f"}, .name = "ff174ecf-ef7b-5f5f-b5e9-4d9508d26a4f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-990]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-990")], .matchExpressions = []}}}}, .addresses = ["10.10.99.0"], .span = ["testNode-98"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ff4623f5-131b-5aca-a81a-3ecf31283419"}, .name = "ff4623f5-131b-5aca-a81a-3ecf31283419", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-962]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-962")], .matchExpressions = []}}}}, .addresses = ["10.10.96.2"], .span = ["testNode-96"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ff4f1351-b9d3-5650-8c86-db65f6388989"}, .name = "ff4f1351-b9d3-5650-8c86-db65f6388989", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-975]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-975")], .matchExpressions = []}}}}, .addresses = ["10.10.97.5"], .span = ["testNode-97"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "053b911e-f779-5223-88ad-adeacd6ac46d"}, .name = "053b911e-f779-5223-88ad-adeacd6ac46d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-977]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-977")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-977", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "09c365f6-b998-5c6a-ba07-88aa29b9025d"}, .name = "09c365f6-b998-5c6a-ba07-88aa29b9025d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-963]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-963")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-963", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "0ee1add2-7289-5b58-aae3-e5794b840d69"}, .name = "0ee1add2-7289-5b58-aae3-e5794b840d69", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-988]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-988")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-988", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "151d9a1e-9621-5138-bcb3-e1ad3cbd4073"}, .name = "151d9a1e-9621-5138-bcb3-e1ad3cbd4073", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-978]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-978")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-978", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "2c124475-1012-52ee-b743-a9c0fe4b2c39"}, .name = "2c124475-1012-52ee-b743-a9c0fe4b2c39", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-983]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-983")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-983", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3b147d3a-c6eb-58d9-b74c-268660681262"}, .name = "3b147d3a-c6eb-58d9-b74c-268660681262", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-991]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-991")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-991", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "3e501e31-92ce-52dc-8056-5a4609d68a1a"}, .name = "3e501e31-92ce-52dc-8056-5a4609d68a1a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-972]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-972")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-972", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "441b4612-b19a-57d1-a51d-987a11f82cb6"}, .name = "441b4612-b19a-57d1-a51d-987a11f82cb6", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-967]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-967")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-967", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4946277f-112c-5c0a-b567-7dbf39c25f99"}, .name = "4946277f-112c-5c0a-b567-7dbf39c25f99", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-982]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-982")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-982", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4e12a308-a5b9-5a87-8bf5-007597bc8ca4"}, .name = "4e12a308-a5b9-5a87-8bf5-007597bc8ca4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-969]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-969")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-969", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5c58d104-083b-5905-becc-0fb8a350b32d"}, .name = "5c58d104-083b-5905-becc-0fb8a350b32d", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-974]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-974")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-974", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5d845c29-e8a6-5b71-a48a-d6f40ef0a1e9"}, .name = "5d845c29-e8a6-5b71-a48a-d6f40ef0a1e9", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-981]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-981")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-981", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "5e62393f-49b9-57d7-8f57-b8d07ac308c1"}, .name = "5e62393f-49b9-57d7-8f57-b8d07ac308c1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-985]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-985")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-985", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "6f102093-a719-56d9-9715-f985470613a0"}, .name = "6f102093-a719-56d9-9715-f985470613a0", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-979]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-979")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-979", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "710f331c-7055-5ef5-9a3e-e183984b3fa4"}, .name = "710f331c-7055-5ef5-9a3e-e183984b3fa4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-964]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-964")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-964", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "7cd9d1b3-9a5b-5a9e-83d0-e291784a8f60"}, .name = "7cd9d1b3-9a5b-5a9e-83d0-e291784a8f60", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-960]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-960")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-960", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9871a4f9-437b-5129-9d0c-732851248c55"}, .name = "9871a4f9-437b-5129-9d0c-732851248c55", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-987]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-987")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-987", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9a7755fa-d2bf-5708-bdd0-2558b81deca4"}, .name = "9a7755fa-d2bf-5708-bdd0-2558b81deca4", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-980]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-980")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-980", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "9d3406e4-cce3-549e-bf12-0dbf95c6d493"}, .name = "9d3406e4-cce3-549e-bf12-0dbf95c6d493", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-968]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-968")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-968", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a1625391-7909-5d71-af5f-21316088012f"}, .name = "a1625391-7909-5d71-af5f-21316088012f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-989]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-989")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-989", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "aa616b38-d052-517d-abcd-a27f5a00267e"}, .name = "aa616b38-d052-517d-abcd-a27f5a00267e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-970]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-970")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-970", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ae1590d0-d91f-516f-8406-da4fd6b6703c"}, .name = "ae1590d0-d91f-516f-8406-da4fd6b6703c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-984]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-984")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-984", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b602a98f-75dd-5ff8-bca1-34374622ca3e"}, .name = "b602a98f-75dd-5ff8-bca1-34374622ca3e", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-976]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-976")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-976", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "c79967df-d6ae-5625-b615-50e91452308a"}, .name = "c79967df-d6ae-5625-b615-50e91452308a", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-966]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-966")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-966", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "d04cdbb6-065a-5ae0-84db-719000c6f354"}, .name = "d04cdbb6-065a-5ae0-84db-719000c6f354", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-965]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-965")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-965", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "dd9ebacf-29d0-5cfd-adb2-e690e57fc751"}, .name = "dd9ebacf-29d0-5cfd-adb2-e690e57fc751", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-973]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-973")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-973", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "e37fbe64-4268-584d-b541-f2c27d8d7d8c"}, .name = "e37fbe64-4268-584d-b541-f2c27d8d7d8c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-986]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-986")], .matchExpressions = []}}}}, .podsByNode = [("testNode-98", [k8spolicy.PodReference{.name = "testPod-986", .namespace = "testNamespace"}])], .span = ["testNode-98"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f70694b4-9442-56ed-80aa-096d94a52960"}, .name = "f70694b4-9442-56ed-80aa-096d94a52960", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-971]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-971")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-971", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "f78fc18a-9f59-51f8-a488-261ae966e239"}, .name = "f78fc18a-9f59-51f8-a488-261ae966e239", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-961]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-961")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-961", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ff174ecf-ef7b-5f5f-b5e9-4d9508d26a4f"}, .name = "ff174ecf-ef7b-5f5f-b5e9-4d9508d26a4f", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-990]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-990")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-990", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ff4623f5-131b-5aca-a81a-3ecf31283419"}, .name = "ff4623f5-131b-5aca-a81a-3ecf31283419", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-962]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-962")], .matchExpressions = []}}}}, .podsByNode = [("testNode-96", [k8spolicy.PodReference{.name = "testPod-962", .namespace = "testNamespace"}])], .span = ["testNode-96"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ff4f1351-b9d3-5650-8c86-db65f6388989"}, .name = "ff4f1351-b9d3-5650-8c86-db65f6388989", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-975]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-975")], .matchExpressions = []}}}}, .podsByNode = [("testNode-97", [k8spolicy.PodReference{.name = "testPod-975", .namespace = "testNamespace"}])], .span = ["testNode-97"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-960"}, .name = "testNP-960", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f78fc18a-9f59-51f8-a488-261ae966e239"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["7cd9d1b3-9a5b-5a9e-83d0-e291784a8f60"]}, .span = ["testNode-96"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-961"}, .name = "testNP-961", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ff4623f5-131b-5aca-a81a-3ecf31283419"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f78fc18a-9f59-51f8-a488-261ae966e239"]}, .span = ["testNode-96"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-962"}, .name = "testNP-962", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["09c365f6-b998-5c6a-ba07-88aa29b9025d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ff4623f5-131b-5aca-a81a-3ecf31283419"]}, .span = ["testNode-96"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-963"}, .name = "testNP-963", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["710f331c-7055-5ef5-9a3e-e183984b3fa4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["09c365f6-b998-5c6a-ba07-88aa29b9025d"]}, .span = ["testNode-96"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-964"}, .name = "testNP-964", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["d04cdbb6-065a-5ae0-84db-719000c6f354"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["710f331c-7055-5ef5-9a3e-e183984b3fa4"]}, .span = ["testNode-96"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-965"}, .name = "testNP-965", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["c79967df-d6ae-5625-b615-50e91452308a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["d04cdbb6-065a-5ae0-84db-719000c6f354"]}, .span = ["testNode-96"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-966"}, .name = "testNP-966", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["441b4612-b19a-57d1-a51d-987a11f82cb6"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["c79967df-d6ae-5625-b615-50e91452308a"]}, .span = ["testNode-96"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-967"}, .name = "testNP-967", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9d3406e4-cce3-549e-bf12-0dbf95c6d493"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["441b4612-b19a-57d1-a51d-987a11f82cb6"]}, .span = ["testNode-96"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-968"}, .name = "testNP-968", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4e12a308-a5b9-5a87-8bf5-007597bc8ca4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9d3406e4-cce3-549e-bf12-0dbf95c6d493"]}, .span = ["testNode-96"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-969"}, .name = "testNP-969", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["aa616b38-d052-517d-abcd-a27f5a00267e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4e12a308-a5b9-5a87-8bf5-007597bc8ca4"]}, .span = ["testNode-96"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-970"}, .name = "testNP-970", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["f70694b4-9442-56ed-80aa-096d94a52960"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["aa616b38-d052-517d-abcd-a27f5a00267e"]}, .span = ["testNode-97"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-971"}, .name = "testNP-971", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3e501e31-92ce-52dc-8056-5a4609d68a1a"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["f70694b4-9442-56ed-80aa-096d94a52960"]}, .span = ["testNode-97"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-972"}, .name = "testNP-972", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["dd9ebacf-29d0-5cfd-adb2-e690e57fc751"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3e501e31-92ce-52dc-8056-5a4609d68a1a"]}, .span = ["testNode-97"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-973"}, .name = "testNP-973", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5c58d104-083b-5905-becc-0fb8a350b32d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["dd9ebacf-29d0-5cfd-adb2-e690e57fc751"]}, .span = ["testNode-97"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-974"}, .name = "testNP-974", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ff4f1351-b9d3-5650-8c86-db65f6388989"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5c58d104-083b-5905-becc-0fb8a350b32d"]}, .span = ["testNode-97"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-975"}, .name = "testNP-975", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b602a98f-75dd-5ff8-bca1-34374622ca3e"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ff4f1351-b9d3-5650-8c86-db65f6388989"]}, .span = ["testNode-97"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-976"}, .name = "testNP-976", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["053b911e-f779-5223-88ad-adeacd6ac46d"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b602a98f-75dd-5ff8-bca1-34374622ca3e"]}, .span = ["testNode-97"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-977"}, .name = "testNP-977", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["151d9a1e-9621-5138-bcb3-e1ad3cbd4073"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["053b911e-f779-5223-88ad-adeacd6ac46d"]}, .span = ["testNode-97"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-978"}, .name = "testNP-978", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["6f102093-a719-56d9-9715-f985470613a0"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["151d9a1e-9621-5138-bcb3-e1ad3cbd4073"]}, .span = ["testNode-97"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-979"}, .name = "testNP-979", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9a7755fa-d2bf-5708-bdd0-2558b81deca4"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["6f102093-a719-56d9-9715-f985470613a0"]}, .span = ["testNode-97"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-980"}, .name = "testNP-980", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5d845c29-e8a6-5b71-a48a-d6f40ef0a1e9"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9a7755fa-d2bf-5708-bdd0-2558b81deca4"]}, .span = ["testNode-98"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-981"}, .name = "testNP-981", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4946277f-112c-5c0a-b567-7dbf39c25f99"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5d845c29-e8a6-5b71-a48a-d6f40ef0a1e9"]}, .span = ["testNode-98"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-982"}, .name = "testNP-982", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["2c124475-1012-52ee-b743-a9c0fe4b2c39"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4946277f-112c-5c0a-b567-7dbf39c25f99"]}, .span = ["testNode-98"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-983"}, .name = "testNP-983", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ae1590d0-d91f-516f-8406-da4fd6b6703c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["2c124475-1012-52ee-b743-a9c0fe4b2c39"]}, .span = ["testNode-98"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-984"}, .name = "testNP-984", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["5e62393f-49b9-57d7-8f57-b8d07ac308c1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ae1590d0-d91f-516f-8406-da4fd6b6703c"]}, .span = ["testNode-98"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-985"}, .name = "testNP-985", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["e37fbe64-4268-584d-b541-f2c27d8d7d8c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["5e62393f-49b9-57d7-8f57-b8d07ac308c1"]}, .span = ["testNode-98"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-986"}, .name = "testNP-986", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["9871a4f9-437b-5129-9d0c-732851248c55"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["e37fbe64-4268-584d-b541-f2c27d8d7d8c"]}, .span = ["testNode-98"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-987"}, .name = "testNP-987", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["0ee1add2-7289-5b58-aae3-e5794b840d69"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["9871a4f9-437b-5129-9d0c-732851248c55"]}, .span = ["testNode-98"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-988"}, .name = "testNP-988", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a1625391-7909-5d71-af5f-21316088012f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["0ee1add2-7289-5b58-aae3-e5794b840d69"]}, .span = ["testNode-98"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-989"}, .name = "testNP-989", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ff174ecf-ef7b-5f5f-b5e9-4d9508d26a4f"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a1625391-7909-5d71-af5f-21316088012f"]}, .span = ["testNode-98"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-990"}, .name = "testNP-990", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["3b147d3a-c6eb-58d9-b74c-268660681262"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ff174ecf-ef7b-5f5f-b5e9-4d9508d26a4f"]}, .span = ["testNode-99"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-991"}, .name = "testNP-991", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ad5dc842-e9b1-594a-acc0-da13e87f70de"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["3b147d3a-c6eb-58d9-b74c-268660681262"]}, .span = ["testNode-99"]}: -1
AddressGroup:
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "139204dd-0667-5289-9758-35e557541c67"}, .name = "139204dd-0667-5289-9758-35e557541c67", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-994]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-994")], .matchExpressions = []}}}}, .addresses = ["10.10.99.4"], .span = ["testNode-99"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4ea23e82-39c7-5c27-beb4-60d8c278da12"}, .name = "4ea23e82-39c7-5c27-beb4-60d8c278da12", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-995]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-995")], .matchExpressions = []}}}}, .addresses = ["10.10.99.5"], .span = ["testNode-99"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "4fd8dd76-8a86-5dfc-8d03-690d43e9169c"}, .name = "4fd8dd76-8a86-5dfc-8d03-690d43e9169c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-0]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-0")], .matchExpressions = []}}}}, .addresses = ["10.10.0.0"], .span = ["testNode-99"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "a1699d64-1b1e-5f4e-8b14-aea884b85fb1"}, .name = "a1699d64-1b1e-5f4e-8b14-aea884b85fb1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-997]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-997")], .matchExpressions = []}}}}, .addresses = ["10.10.99.7"], .span = ["testNode-99"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ae523f8f-2fae-5a35-8da4-01bc8ab1c111"}, .name = "ae523f8f-2fae-5a35-8da4-01bc8ab1c111", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-996]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-996")], .matchExpressions = []}}}}, .addresses = ["10.10.99.6"], .span = ["testNode-99"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "b34f72a0-4572-56f0-8824-233988fed91c"}, .name = "b34f72a0-4572-56f0-8824-233988fed91c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-998]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-998")], .matchExpressions = []}}}}, .addresses = ["10.10.99.8"], .span = ["testNode-99"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "ef9920d6-2b33-52b0-8c61-8c9a61ee39e3"}, .name = "ef9920d6-2b33-52b0-8c61-8c9a61ee39e3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-993]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-993")], .matchExpressions = []}}}}, .addresses = ["10.10.99.3"], .span = ["testNode-99"]}: -1
AddressGroup{.descr = AddressGroupDescr{.uid = k8spolicy.UID{.uid = "fb2c68c4-3797-5ee0-9955-6f457273a8da"}, .name = "fb2c68c4-3797-5ee0-9955-6f457273a8da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-999]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-999")], .matchExpressions = []}}}}, .addresses = ["10.10.99.9"], .span = ["testNode-99"]}: -1
AppliedToGroup:
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "139204dd-0667-5289-9758-35e557541c67"}, .name = "139204dd-0667-5289-9758-35e557541c67", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-994]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-994")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-994", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "4ea23e82-39c7-5c27-beb4-60d8c278da12"}, .name = "4ea23e82-39c7-5c27-beb4-60d8c278da12", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-995]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-995")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-995", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "a1699d64-1b1e-5f4e-8b14-aea884b85fb1"}, .name = "a1699d64-1b1e-5f4e-8b14-aea884b85fb1", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-997]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-997")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-997", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ad5dc842-e9b1-594a-acc0-da13e87f70de"}, .name = "ad5dc842-e9b1-594a-acc0-da13e87f70de", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-992]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-992")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-992", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ae523f8f-2fae-5a35-8da4-01bc8ab1c111"}, .name = "ae523f8f-2fae-5a35-8da4-01bc8ab1c111", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-996]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-996")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-996", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "b34f72a0-4572-56f0-8824-233988fed91c"}, .name = "b34f72a0-4572-56f0-8824-233988fed91c", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-998]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-998")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-998", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "ef9920d6-2b33-52b0-8c61-8c9a61ee39e3"}, .name = "ef9920d6-2b33-52b0-8c61-8c9a61ee39e3", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-993]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-993")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-993", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: -1
AppliedToGroup{.descr = AppliedToGroupDescr{.uid = k8spolicy.UID{.uid = "fb2c68c4-3797-5ee0-9955-6f457273a8da"}, .name = "fb2c68c4-3797-5ee0-9955-6f457273a8da", .selector = types.GroupSelector{.normalizedName = "namespace=testNamespace And podSelector=pod-name In [testPod-999]", .nsSelector = types.NSSelectorNS{.ns = "testNamespace"}, .podSelector = std.Some{.x = k8spolicy.LabelSelector{.matchLabels = [("pod-name", "testPod-999")], .matchExpressions = []}}}}, .podsByNode = [("testNode-99", [k8spolicy.PodReference{.name = "testPod-999", .namespace = "testNamespace"}])], .span = ["testNode-99"]}: -1
NetworkPolicy:
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-992"}, .name = "testNP-992", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ef9920d6-2b33-52b0-8c61-8c9a61ee39e3"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ad5dc842-e9b1-594a-acc0-da13e87f70de"]}, .span = ["testNode-99"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-993"}, .name = "testNP-993", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["139204dd-0667-5289-9758-35e557541c67"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ef9920d6-2b33-52b0-8c61-8c9a61ee39e3"]}, .span = ["testNode-99"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-994"}, .name = "testNP-994", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4ea23e82-39c7-5c27-beb4-60d8c278da12"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["139204dd-0667-5289-9758-35e557541c67"]}, .span = ["testNode-99"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-995"}, .name = "testNP-995", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["ae523f8f-2fae-5a35-8da4-01bc8ab1c111"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["4ea23e82-39c7-5c27-beb4-60d8c278da12"]}, .span = ["testNode-99"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-996"}, .name = "testNP-996", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["a1699d64-1b1e-5f4e-8b14-aea884b85fb1"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["ae523f8f-2fae-5a35-8da4-01bc8ab1c111"]}, .span = ["testNode-99"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-997"}, .name = "testNP-997", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["b34f72a0-4572-56f0-8824-233988fed91c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["a1699d64-1b1e-5f4e-8b14-aea884b85fb1"]}, .span = ["testNode-99"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-998"}, .name = "testNP-998", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["fb2c68c4-3797-5ee0-9955-6f457273a8da"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["b34f72a0-4572-56f0-8824-233988fed91c"]}, .span = ["testNode-99"]}: -1
NetworkPolicy{.descr = NetworkPolicyDescr{.uid = k8spolicy.UID{.uid = "testNP-999"}, .name = "testNP-999", .namespace = "testNamespace", .rules = [types.NetworkPolicyRule{.direction = types.DirectionIn{}, .from = types.NetworkPolicyPeer{.addressGroups = ["4fd8dd76-8a86-5dfc-8d03-690d43e9169c"], .ipBlocks = []}, .to = types.NetworkPolicyPeer{.addressGroups = [], .ipBlocks = []}, .services = [types.Service{.protocol = "TCP", .port = std.Some{.x = 80}}]}], .appliedToGroups = ["fb2c68c4-3797-5ee0-9955-6f457273a8da"]}, .span = ["testNode-99"]}: -1
Profile:

Arrangement size profile
2002      Arrange: arrange AddressGroupDescr[(descr@ AddressGroupDescr{.uid=_, .name=_, .selector=_})], AddressGroupAddresses(.addressGroup=descr.uid, .addresses=addresses) by (descr.uid) 368
2002      Arrange: AddressGroupAddresses{.addressGroup=_0, .addresses=_} 166
2002      Arrange: AddressGroup.threshold_total 378
2000      Arrange: k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_} 101
2000      Arrange: AppliedToGroupSpan{.appliedToGroup=_0, .span=_} 259
2000      Arrange: arrange AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup) by (np) 323
2000      Arrange: NetworkPolicyDescr{.uid=_0, .name=_, .namespace=_, .rules=_, .appliedToGroups=_} 70
2000      Arrange: arrange AppliedToGroupDescr[(descr@ AppliedToGroupDescr{.uid=_, .name=_, .selector=_})], AppliedToGroupPodsByNode(.appliedToGroup=descr.uid, .podsByNode=podsByNode) by (descr.uid) 271
2000      Arrange: arrange NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=appliedToGroups), var appliedToGroup = FlatMap(appliedToGroups) by (appliedToGroup) 290
2000      Reduce: AddressGroupAddress(.addressGroup=addressGroup, .address=address), var addresses = Aggregate((addressGroup), std.group2set(address)) 138
2000      Arrange: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_} 181
2000      Arrange: AddressGroupSpan{.addressGroup=_0, .span=_} 360
2000      Reduce: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var podsOnNode = Aggregate((appliedToGroup,                                                                                                              nodeName), std.group2set(pod)) 214
2000      Arrange: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_1} 177
2000      Reduce: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=_, .nodeName=nodeName), var span = Aggregate((appliedToGroup), std.group2set(nodeName)) 243
2000      Arrange: NetworkPolicyAddressGroup{.np=_, .addressGroup=_0} 82
2000      Arrange: AppliedToGroup.threshold_total 281
2000      Arrange: arrange AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var podsOnNode = Aggregate((appliedToGroup,                                                                                                                      nodeName), std.group2set(pod)) by (appliedToGroup) 222
2000      Arrange: AppliedToGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=_0}, .podSelector=_}} 30
2000      Arrange: NetworkPolicyAddressGroup{.np=_, .addressGroup=_0} 94
2000      Arrange: AddressGroupAddress{.addressGroup=_0, .address=_} 123
2000      Arrange: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_} 187
2000      Arrange: NetworkPolicyAddressGroup{.np=_, .addressGroup=_0} 88
2000      Arrange: AppliedToGroupDescr{.uid=_0, .name=_, .selector=_} 26
2000      Arrange: AddressGroupAddress{.addressGroup=_0, .address=_} 135
2000      Arrange: AddressGroupAddress{.addressGroup=_0, .address=_} 129
2000      Arrange: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_} 193
2000      Reduce: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var podsOnNode = Aggregate((appliedToGroup,                                                                                                              nodeName), std.group2set(pod)), var podsByNode = Aggregate((appliedToGroup), std.group2map((nodeName, podsOnNode))) 224
2000      Arrange: arrange NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=appliedToGroups), var appliedToGroup = FlatMap(appliedToGroups), AppliedToGroupSpan(.appliedToGroup=k8spolicy.UID{.uid=appliedToGroup}, .span=groupSpan) by (policy) 297
2000      Reduce: NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=appliedToGroups), var appliedToGroup = FlatMap(appliedToGroups), AppliedToGroupSpan(.appliedToGroup=k8spolicy.UID{.uid=appliedToGroup}, .span=groupSpan), var span = Aggregate((policy), std.group_set_unions(groupSpan)) 299
2000      Reduce: AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup), NetworkPolicySpan(.policy=np, .span=npSpan), var span = Aggregate((addressGroup), std.group_set_unions(npSpan)) 332
2000      Arrange: AddressGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=_0}, .podSelector=_}} 52
2000      Arrange: arrange AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup), NetworkPolicySpan(.policy=np, .span=npSpan) by (addressGroup) 330
2000      Arrange: AddressGroupDescr{.uid=_0, .name=_, .selector=_} 48
2000      Arrange: AppliedToGroupPodsByNode{.appliedToGroup=_0, .podsByNode=_} 240
2000      Arrange: AddressGroupDescr{.uid=k8spolicy.UID{.uid=_0}, .name=_, .selector=_} 60
2000      Arrange: NetworkPolicySpan{.policy=_0, .span=_} 315
2000      Arrange: AppliedToGroupSpan{.appliedToGroup=k8spolicy.UID{.uid=_0}, .span=_} 263
2000      Arrange: NetworkPolicy.threshold_total 391
2      Arrange: _ 13
0      Arrange: _ 6
0      Arrange: arrange AddressGroupDescr[(addressGroup@ AddressGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=podSelector}})], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})], k8spolicy.labelSelectorMatches(std.Some{.x=namespaceSelector}, namespace.labels) by (namespace.name) 112
0      Arrange: AddressGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=_}, .podSelector=_}} 56

Arrangement peak sizes
2002      Arrange: arrange AddressGroupDescr[(descr@ AddressGroupDescr{.uid=_, .name=_, .selector=_})], AddressGroupAddresses(.addressGroup=descr.uid, .addresses=addresses) by (descr.uid) 368
2002      Arrange: AddressGroupAddresses{.addressGroup=_0, .addresses=_} 166
2002      Arrange: AddressGroup.threshold_total 378
2000      Arrange: k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_} 101
2000      Arrange: AppliedToGroupSpan{.appliedToGroup=_0, .span=_} 259
2000      Arrange: arrange AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup) by (np) 323
2000      Arrange: NetworkPolicyDescr{.uid=_0, .name=_, .namespace=_, .rules=_, .appliedToGroups=_} 70
2000      Arrange: arrange AppliedToGroupDescr[(descr@ AppliedToGroupDescr{.uid=_, .name=_, .selector=_})], AppliedToGroupPodsByNode(.appliedToGroup=descr.uid, .podsByNode=podsByNode) by (descr.uid) 271
2000      Arrange: arrange NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=appliedToGroups), var appliedToGroup = FlatMap(appliedToGroups) by (appliedToGroup) 290
2000      Reduce: AddressGroupAddress(.addressGroup=addressGroup, .address=address), var addresses = Aggregate((addressGroup), std.group2set(address)) 138
2000      Arrange: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_} 181
2000      Arrange: AddressGroupSpan{.addressGroup=_0, .span=_} 360
2000      Reduce: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var podsOnNode = Aggregate((appliedToGroup,                                                                                                              nodeName), std.group2set(pod)) 214
2000      Arrange: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_1} 177
2000      Reduce: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=_, .nodeName=nodeName), var span = Aggregate((appliedToGroup), std.group2set(nodeName)) 243
2000      Arrange: NetworkPolicyAddressGroup{.np=_, .addressGroup=_0} 82
2000      Arrange: AppliedToGroup.threshold_total 281
2000      Arrange: arrange AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var podsOnNode = Aggregate((appliedToGroup,                                                                                                                      nodeName), std.group2set(pod)) by (appliedToGroup) 222
2000      Arrange: AppliedToGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=_0}, .podSelector=_}} 30
2000      Arrange: NetworkPolicyAddressGroup{.np=_, .addressGroup=_0} 94
2000      Arrange: AddressGroupAddress{.addressGroup=_0, .address=_} 123
2000      Arrange: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_} 187
2000      Arrange: NetworkPolicyAddressGroup{.np=_, .addressGroup=_0} 88
2000      Arrange: AppliedToGroupDescr{.uid=_0, .name=_, .selector=_} 26
2000      Arrange: AddressGroupAddress{.addressGroup=_0, .address=_} 135
2000      Arrange: AddressGroupAddress{.addressGroup=_0, .address=_} 129
2000      Arrange: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_} 193
2000      Reduce: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var podsOnNode = Aggregate((appliedToGroup,                                                                                                              nodeName), std.group2set(pod)), var podsByNode = Aggregate((appliedToGroup), std.group2map((nodeName, podsOnNode))) 224
2000      Arrange: arrange NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=appliedToGroups), var appliedToGroup = FlatMap(appliedToGroups), AppliedToGroupSpan(.appliedToGroup=k8spolicy.UID{.uid=appliedToGroup}, .span=groupSpan) by (policy) 297
2000      Reduce: NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=appliedToGroups), var appliedToGroup = FlatMap(appliedToGroups), AppliedToGroupSpan(.appliedToGroup=k8spolicy.UID{.uid=appliedToGroup}, .span=groupSpan), var span = Aggregate((policy), std.group_set_unions(groupSpan)) 299
2000      Reduce: AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup), NetworkPolicySpan(.policy=np, .span=npSpan), var span = Aggregate((addressGroup), std.group_set_unions(npSpan)) 332
2000      Arrange: AddressGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=_0}, .podSelector=_}} 52
2000      Arrange: arrange AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup), NetworkPolicySpan(.policy=np, .span=npSpan) by (addressGroup) 330
2000      Arrange: AddressGroupDescr{.uid=_0, .name=_, .selector=_} 48
2000      Arrange: AppliedToGroupPodsByNode{.appliedToGroup=_0, .podsByNode=_} 240
2000      Arrange: AddressGroupDescr{.uid=k8spolicy.UID{.uid=_0}, .name=_, .selector=_} 60
2000      Arrange: NetworkPolicySpan{.policy=_0, .span=_} 315
2000      Arrange: AppliedToGroupSpan{.appliedToGroup=k8spolicy.UID{.uid=_0}, .span=_} 263
2000      Arrange: NetworkPolicy.threshold_total 391
2      Arrange: _ 13
0      Arrange: _ 6
0      Arrange: arrange AddressGroupDescr[(addressGroup@ AddressGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=podSelector}})], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})], k8spolicy.labelSelectorMatches(std.Some{.x=namespaceSelector}, namespace.labels) by (namespace.name) 112
0      Arrange: AddressGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=_}, .podSelector=_}} 56

CPU profile
     0s955631us (     1080calls)     Dataflow:  0
       0s339844us (      252calls)     Join: AddressGroupDescr[(addressGroup@ AddressGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=ns}, .podSelector=_}})], k8spolicy.Pod[(pod@ k8spolicy.Pod{.name=_, .namespace=ns, .uid=_, .labels=_, .spec=_, .status=_})] 104
       0s334871us (      252calls)     Join: AppliedToGroupDescr(.uid=appliedToGroup, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=namespace}, .podSelector=podSelector}), k8spolicy.Pod[(pod@ k8spolicy.Pod{.name=_, .namespace=namespace, .uid=_, .labels=_, .spec=_, .status=_})] 169
       0s011578us (      254calls)     Join: AppliedToGroupDescr[(descr@ AppliedToGroupDescr{.uid=_, .name=_, .selector=_})], AppliedToGroupPodsByNode(.appliedToGroup=descr.uid, .podsByNode=podsByNode), AppliedToGroupSpan(.appliedToGroup=descr.uid, .span=span) 273
       0s011395us (      128calls)     FlatMap: head of AppliedToGroupDescr[appliedTo] :- k8spolicy.NetworkPolicy[policy], (var internalPolicy, var appliedTo, var addrGroups) = processNetworkPolicy(policy). 19
       0s011277us (      128calls)     FlatMap: head of NetworkPolicyExt(.policy=internalPolicy, .addressGroups=addrGroups) :- k8spolicy.NetworkPolicy[policy], (var internalPolicy, var appliedTo, var addrGroups) = processNetworkPolicy(policy). 33
       0s010728us (      318calls)     Join: AddressGroupDescr[(descr@ AddressGroupDescr{.uid=_, .name=_, .selector=_})], AddressGroupAddresses(.addressGroup=descr.uid, .addresses=addresses), AddressGroupSpan(.addressGroup=descr.uid, .span=span) 370
       0s009857us (      380calls)     Join: AppliedToGroupDescr[(descr@ AppliedToGroupDescr{.uid=_, .name=_, .selector=_})], AppliedToGroupPodsByNode(.appliedToGroup=descr.uid, .podsByNode=podsByNode) 266
       0s009674us (      380calls)     Join: NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=appliedToGroups), var appliedToGroup = FlatMap(appliedToGroups), AppliedToGroupSpan(.appliedToGroup=k8spolicy.UID{.uid=appliedToGroup}, .span=groupSpan) 292
       0s009137us (      190calls)     Reduce: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var podsOnNode = Aggregate((appliedToGroup,                                                                                                              nodeName), std.group2set(pod)), var podsByNode = Aggregate((appliedToGroup), std.group2map((nodeName, podsOnNode))) 224
       0s008712us (      190calls)     Reduce: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var podsOnNode = Aggregate((appliedToGroup,                                                                                                              nodeName), std.group2set(pod)) 214
       0s008519us (      190calls)     Reduce: AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup), NetworkPolicySpan(.policy=np, .span=npSpan), var span = Aggregate((addressGroup), std.group_set_unions(npSpan)) 332
       0s008464us (      380calls)     Join: AddressGroupDescr[(descr@ AddressGroupDescr{.uid=_, .name=_, .selector=_})], AddressGroupAddresses(.addressGroup=descr.uid, .addresses=addresses) 363
       0s007839us (      190calls)     Reduce: AddressGroupAddress(.addressGroup=addressGroup, .address=address), var addresses = Aggregate((addressGroup), std.group2set(address)) 138
       0s007474us (      190calls)     Join: AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup) 318
       0s007147us (      190calls)     Reduce: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=_, .nodeName=nodeName), var span = Aggregate((appliedToGroup), std.group2set(nodeName)) 243
       0s006414us (      380calls)     Join: NetworkPolicyDescr[(descr@ NetworkPolicyDescr{.uid=_, .name=_, .namespace=_, .rules=_, .appliedToGroups=_})], NetworkPolicySpan(.policy=descr.uid, .span=span) 383
       0s006030us (      254calls)     Join: AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), not NetworkPolicyAddressGroup(.np=_, .addressGroup=addressGroup) 342
       0s005717us (      380calls)     Join: AppliedToGroupDescr(.uid=uid, .name=_, .selector=_), not AppliedToGroupPod(.appliedToGroup=uid, .pod=_, .nodeName=_) 198
       0s005652us (      380calls)     Join: AddressGroupDescr(.uid=gid, .name=_, .selector=_), not AddressGroupAddress(.addressGroup=gid, .address=_) 148
       0s005478us (      190calls)     Reduce: NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=appliedToGroups), var appliedToGroup = FlatMap(appliedToGroups), AppliedToGroupSpan(.appliedToGroup=k8spolicy.UID{.uid=appliedToGroup}, .span=groupSpan), var span = Aggregate((policy), std.group_set_unions(groupSpan)) 299
       0s004395us (      190calls)     ThresholdTotal: AppliedToGroup.threshold_total 283
       0s004084us (      190calls)     ThresholdTotal: AddressGroup.threshold_total 380
       0s004059us (      380calls)     Join: AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup), NetworkPolicySpan(.policy=np, .span=npSpan) 325
       0s002722us (      190calls)     ThresholdTotal: NetworkPolicyAddressGroup{.np=_, .addressGroup=_0} 90
       0s002337us (      190calls)     ThresholdTotal: AddressGroupAddress{.addressGroup=_0, .address=_} 131
       0s002163us (      190calls)     ThresholdTotal: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_} 189
       0s002009us (      190calls)     ThresholdTotal: NetworkPolicy.threshold_total 393
       0s001595us (      128calls)     FlatMap: k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_} 99
       0s001465us (      318calls)     Arrange: AddressGroupAddresses{.addressGroup=_0, .addresses=_} 166
       0s001384us (      318calls)     Arrange: AppliedToGroupPodsByNode{.appliedToGroup=_0, .podsByNode=_} 240
       0s001381us (      256calls)     FlatMap: AppliedToGroupPodsByNode{.appliedToGroup=_0, .podsByNode=_} 238
       0s001369us (      190calls)     Arrange: k8spolicy.Pod{.name=_, .namespace=_0, .uid=_, .labels=_, .spec=_, .status=_} 101
       0s001335us (      350calls)     Arrange: AddressGroupSpan{.addressGroup=_0, .span=_} 360
       0s001279us (      225calls)     FlatMap: AddressGroupAddresses{.addressGroup=_0, .addresses=_} 164
       0s001225us (      288calls)     FlatMap: AddressGroupSpan{.addressGroup=_0, .span=_} 358
       0s001093us (      224calls)     FlatMap: AppliedToGroupSpan{.appliedToGroup=k8spolicy.UID{.uid=_0}, .span=_} 261
       0s001089us (      318calls)     Arrange: AppliedToGroupSpan{.appliedToGroup=_0, .span=_} 259
       0s001070us (      318calls)     Arrange: AppliedToGroupSpan{.appliedToGroup=k8spolicy.UID{.uid=_0}, .span=_} 263
       0s001063us (      128calls)     FlatMap: arrange AppliedToGroupDescr[(descr@ AppliedToGroupDescr{.uid=_, .name=_, .selector=_})], AppliedToGroupPodsByNode(.appliedToGroup=descr.uid, .podsByNode=podsByNode) by (descr.uid) 269
       0s001061us (      224calls)     FlatMap: AppliedToGroupSpan{.appliedToGroup=_0, .span=_} 257
       0s001004us (      128calls)     FlatMap: arrange AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var podsOnNode = Aggregate((appliedToGroup,                                                                                                                      nodeName), std.group2set(pod)) by (appliedToGroup) 220
       0s000994us (      128calls)     FlatMap: head of AppliedToGroupPodsByNode(.appliedToGroup=appliedToGroup, .podsByNode=podsByNode) :- AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var podsOnNode = Aggregate((appliedToGroup,                                                                                                                                                                                                          nodeName), std.group2set(pod)), var podsByNode = Aggregate((appliedToGroup), std.group2map((nodeName, podsOnNode))). 230
       0s000955us (      128calls)     FlatMap: head of NetworkPolicyDescr[policy] :- NetworkPolicyExt(.policy=policy, .addressGroups=_). 63
       0s000911us (      128calls)     FlatMap: NetworkPolicyDescr{.uid=_0, .name=_, .namespace=_, .rules=_, .appliedToGroups=_} 68
       0s000892us (      190calls)     Join: AddressGroupDescr[(addressGroup@ AddressGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=podSelector}})], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})], k8spolicy.labelSelectorMatches(std.Some{.x=namespaceSelector}, namespace.labels), k8spolicy.Pod[(pod@ k8spolicy.Pod{.name=_, .namespace=namespace.name, .uid=_, .labels=_, .spec=_, .status=_})] 114
       0s000887us (      190calls)     Arrange: AppliedToGroupDescr{.uid=_0, .name=_, .selector=_} 26
       0s000875us (      190calls)     Arrange: AppliedToGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=_0}, .podSelector=_}} 30
       0s000860us (      190calls)     Arrange: NetworkPolicyAddressGroup{.np=_, .addressGroup=_0} 88
       0s000845us (      128calls)     FlatMap: NetworkPolicyExt(.policy=_, .addressGroups=groups), var group = FlatMap(groups) 39
       0s000815us (      190calls)     Arrange: AddressGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=_0}, .podSelector=_}} 52
       0s000811us (      190calls)     Arrange: arrange NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=appliedToGroups), var appliedToGroup = FlatMap(appliedToGroups) by (appliedToGroup) 290
       0s000800us (      128calls)     Join: AddressGroupDescr[(addressGroup@ AddressGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=podSelector}})], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})] 107
       0s000794us (      128calls)     FlatMap: NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=appliedToGroups), var appliedToGroup = FlatMap(appliedToGroups) 286
       0s000772us (      190calls)     Arrange: NetworkPolicyAddressGroup{.np=_, .addressGroup=_0} 94
       0s000763us (      190calls)     Arrange: arrange AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup) by (np) 323
       0s000762us (      222calls)     Arrange: arrange NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=appliedToGroups), var appliedToGroup = FlatMap(appliedToGroups), AppliedToGroupSpan(.appliedToGroup=k8spolicy.UID{.uid=appliedToGroup}, .span=groupSpan) by (policy) 297
       0s000761us (      222calls)     Arrange: arrange AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup), NetworkPolicySpan(.policy=np, .span=npSpan) by (addressGroup) 330
       0s000759us (      190calls)     Arrange: AddressGroupAddress{.addressGroup=_0, .address=_} 123
       0s000757us (      190calls)     Arrange: AddressGroupDescr{.uid=_0, .name=_, .selector=_} 48
       0s000744us (      128calls)     FlatMap: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_1} 175
       0s000735us (      128calls)     FlatMap: arrange NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=appliedToGroups), var appliedToGroup = FlatMap(appliedToGroups), AppliedToGroupSpan(.appliedToGroup=k8spolicy.UID{.uid=appliedToGroup}, .span=groupSpan) by (policy) 295
       0s000720us (      130calls)     FlatMap: arrange AddressGroupDescr[(descr@ AddressGroupDescr{.uid=_, .name=_, .selector=_})], AddressGroupAddresses(.addressGroup=descr.uid, .addresses=addresses) by (descr.uid) 366
       0s000713us (      190calls)     Arrange: AddressGroupAddress{.addressGroup=_0, .address=_} 135
       0s000712us (      190calls)     Arrange: NetworkPolicySpan{.policy=_0, .span=_} 315
       0s000708us (      190calls)     Arrange: AddressGroupDescr{.uid=k8spolicy.UID{.uid=_0}, .name=_, .selector=_} 60
       0s000694us (      190calls)     Arrange: arrange AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var podsOnNode = Aggregate((appliedToGroup,                                                                                                                      nodeName), std.group2set(pod)) by (appliedToGroup) 222
       0s000682us (      222calls)     Arrange: NetworkPolicy.threshold_total 391
       0s000680us (      128calls)     FlatMap: NetworkPolicyDescr(.uid=np, .name=_, .namespace=_, .rules=rules, .appliedToGroups=_), var addressGroups = ((var addressGroups: std.Vec<string>) = std.vec_empty();                                                                                                            (for (rule in rules) {                                                                                                                 (std.vec_append(addressGroups, rule.from.addressGroups);                                                                                                                  std.vec_append(addressGroups, rule.to.addressGroups))                                                                                                             };                                                                                                             addressGroups)), var addressGroup = FlatMap(addressGroups) 73
       0s000674us (      222calls)     Arrange: AppliedToGroup.threshold_total 281
       0s000663us (      222calls)     Arrange: arrange AppliedToGroupDescr[(descr@ AppliedToGroupDescr{.uid=_, .name=_, .selector=_})], AppliedToGroupPodsByNode(.appliedToGroup=descr.uid, .podsByNode=podsByNode) by (descr.uid) 271
       0s000632us (      128calls)     FlatMap: arrange NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=appliedToGroups), var appliedToGroup = FlatMap(appliedToGroups) by (appliedToGroup) 288
       0s000628us (      190calls)     Arrange: AddressGroupAddress{.addressGroup=_0, .address=_} 129
       0s000612us (      190calls)     Arrange: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_1} 177
       0s000611us (      190calls)     Arrange: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_} 187
       0s000606us (      128calls)     FlatMap: arrange AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup), NetworkPolicySpan(.policy=np, .span=npSpan) by (addressGroup) 328
       0s000602us (      223calls)     Arrange: arrange AddressGroupDescr[(descr@ AddressGroupDescr{.uid=_, .name=_, .selector=_})], AddressGroupAddresses(.addressGroup=descr.uid, .addresses=addresses) by (descr.uid) 368
       0s000589us (      128calls)     FlatMap: AddressGroupDescr{.uid=_0, .name=_, .selector=_} 46
       0s000587us (      128calls)     FlatMap: AppliedToGroupDescr{.uid=_0, .name=_, .selector=_} 24
       0s000583us (      190calls)     Arrange: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_} 193
       0s000576us (      128calls)     FlatMap: AddressGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=_0}, .podSelector=_}} 50
       0s000568us (      190calls)     Arrange: NetworkPolicyAddressGroup{.np=_, .addressGroup=_0} 82
       0s000562us (      190calls)     Arrange: NetworkPolicyDescr{.uid=_0, .name=_, .namespace=_, .rules=_, .appliedToGroups=_} 70
       0s000556us (      128calls)     FlatMap: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_} 179
       0s000556us (      192calls)     FlatMap: head of AppliedToGroupSpan(.appliedToGroup=uid, .span=std.set_empty()) :- __MultiHead_16[uid]. 251
       0s000556us (      222calls)     Arrange: AddressGroup.threshold_total 378
       0s000550us (      128calls)     FlatMap: arrange AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup) by (np) 321
       0s000545us (      128calls)     FlatMap: head of AddressGroupAddresses(.addressGroup=addressGroup, .addresses=addresses) :- AddressGroupAddress(.addressGroup=addressGroup, .address=address), var addresses = Aggregate((addressGroup), std.group2set(address)). 144
       0s000539us (      190calls)     Arrange: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_} 181
       0s000538us (      128calls)     FlatMap: AddressGroupDescr{.uid=k8spolicy.UID{.uid=_0}, .name=_, .selector=_} 58
       0s000530us (      194calls)     FlatMap: head of AddressGroupAddresses(.addressGroup=gid, .addresses=std.set_empty()) :- AddressGroupDescr(.uid=gid, .name=_, .selector=_), not AddressGroupAddress(.addressGroup=gid, .address=_). 158
       0s000529us (      128calls)     FlatMap: head of AddressGroupSpan(.addressGroup=k8spolicy.UID{.uid=addressGroup}, .span=span) :- AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup), NetworkPolicySpan(.policy=np, .span=npSpan), var span = Aggregate((addressGroup), std.group_set_unions(npSpan)). 338
       0s000526us (      128calls)     FlatMap: head of AppliedToGroupSpan(.appliedToGroup=appliedToGroup, .span=span) :- AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=_, .nodeName=nodeName), var span = Aggregate((appliedToGroup), std.group2set(nodeName)). 249
       0s000526us (      190calls)     Consolidate:  417
       0s000526us (      128calls)     FlatMap: AddressGroupAddress{.addressGroup=_0, .address=_} 121
       0s000524us (      160calls)     FlatMap: head of AddressGroupSpan(.addressGroup=k8spolicy.UID{.uid=addressGroup}, .span=std.set_empty()) :- AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), not NetworkPolicyAddressGroup(.np=_, .addressGroup=addressGroup). 352
       0s000524us (      128calls)     FlatMap: head of NetworkPolicySpan(.policy=policy, .span=span) :- NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=appliedToGroups), var appliedToGroup = FlatMap(appliedToGroups), AppliedToGroupSpan(.appliedToGroup=k8spolicy.UID{.uid=appliedToGroup}, .span=groupSpan), var span = Aggregate((policy), std.group_set_unions(groupSpan)). 305
       0s000519us (      128calls)     FlatMap: NetworkPolicySpan{.policy=_0, .span=_} 313
       0s000511us (      128calls)     FlatMap: NetworkPolicyAddressGroup{.np=_, .addressGroup=_0} 80
       0s000504us (      128calls)     FlatMap: AppliedToGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorNS{.ns=_0}, .podSelector=_}} 28
       0s000501us (      192calls)     FlatMap: head of AppliedToGroupPodsByNode(.appliedToGroup=uid, .podsByNode=std.map_empty()) :- __MultiHead_16[uid]. 232
       0s000500us (      192calls)     FlatMap: head of __MultiHead_16[uid] :- AppliedToGroupDescr(.uid=uid, .name=_, .selector=_), not AppliedToGroupPod(.appliedToGroup=uid, .pod=_, .nodeName=_). 208
       0s000486us (      128calls)     Arrange: _ 13
       0s000480us (      190calls)     Consolidate:  397
       0s000452us (      126calls)     Arrange: arrange AddressGroupDescr[(addressGroup@ AddressGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=podSelector}})], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})], k8spolicy.labelSelectorMatches(std.Some{.x=namespaceSelector}, namespace.labels) by (namespace.name) 112
       0s000445us (      190calls)     Consolidate:  407
       0s000439us (      128calls)     FlatMap: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_} 183
       0s000411us (      318calls)     Concatenate: concatenate rules for AppliedToGroupSpan 253
       0s000395us (      190calls)     Concatenate: concatenate rules for AddressGroupDescr 43
       0s000384us (      128calls)     FlatMap: NetworkPolicyAddressGroup{.np=_, .addressGroup=_0} 84
       0s000363us (      128calls)     FlatMap: AddressGroupAddress{.addressGroup=_0, .address=_} 125
       0s000361us (      190calls)     Concatenate: concatenate rules for AppliedToGroupPod 172
       0s000360us (      128calls)     InspectBatch:  401
       0s000352us (      128calls)     AsCollection: AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), not NetworkPolicyAddressGroup(.np=_, .addressGroup=addressGroup) 340
       0s000350us (      128calls)     FlatMap: head of AddressGroupDescr[group] :- NetworkPolicyExt(.policy=_, .addressGroups=groups), var group = FlatMap(groups). 41
       0s000349us (      128calls)     AsCollection: AppliedToGroupDescr(.uid=uid, .name=_, .selector=_), not AppliedToGroupPod(.appliedToGroup=uid, .pod=_, .nodeName=_) 196
       0s000339us (      444calls)     Concatenate: concatenate rules for AddressGroupSpan 354
       0s000319us (      349calls)     Concatenate: AddressGroupDescr(.uid=gid, .name=_, .selector=_), not AddressGroupAddress(.addressGroup=gid, .address=_) 153
       0s000316us (      190calls)     Concatenate: concatenate rules for AddressGroupAddress 117
       0s000294us (      128calls)     FlatMap: AddressGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=_}, .podSelector=_}} 54
       0s000293us (      348calls)     Concatenate: AppliedToGroupDescr(.uid=uid, .name=_, .selector=_), not AppliedToGroupPod(.appliedToGroup=uid, .pod=_, .nodeName=_) 203
       0s000292us (      128calls)     AsCollection: AddressGroupDescr(.uid=gid, .name=_, .selector=_), not AddressGroupAddress(.addressGroup=gid, .address=_) 146
       0s000289us (      128calls)     InspectBatch:  421
       0s000276us (      316calls)     Concatenate: concatenate rules for NetworkPolicySpan 309
       0s000271us (      318calls)     Concatenate: concatenate rules for AddressGroupAddresses 160
       0s000270us (      190calls)     Concatenate: concatenate rules for AppliedToGroupDescr 21
       0s000265us (      128calls)     FlatMap: head of NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup) :- NetworkPolicyDescr(.uid=np, .name=_, .namespace=_, .rules=rules, .appliedToGroups=_), var addressGroups = ((var addressGroups: std.Vec<string>) = std.vec_empty();                                                                                                                                                                                     (for (rule in rules) {                                                                                                                                                                                          (std.vec_append(addressGroups, rule.from.addressGroups);                                                                                                                                                                                           std.vec_append(addressGroups, rule.to.addressGroups))                                                                                                                                                                                      };                                                                                                                                                                                      addressGroups)), var addressGroup = FlatMap(addressGroups). 75
       0s000264us (      190calls)     Concatenate: concatenate rules for k8spolicy.Pod 97
       0s000263us (      254calls)     Concatenate: AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), not NetworkPolicyAddressGroup(.np=_, .addressGroup=addressGroup) 347
       0s000256us (      128calls)     AsCollection: AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup), NetworkPolicySpan(.policy=np, .span=npSpan), var span = Aggregate((addressGroup), std.group_set_unions(npSpan)) 334
       0s000254us (      128calls)     AsCollection: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var podsOnNode = Aggregate((appliedToGroup,                                                                                                              nodeName), std.group2set(pod)) 216
       0s000254us (      190calls)     Concatenate: concatenate rules for NetworkPolicyDescr 65
       0s000252us (      128calls)     InspectBatch:  411
       0s000247us (      128calls)     AsCollection: AddressGroupAddress(.addressGroup=addressGroup, .address=address), var addresses = Aggregate((addressGroup), std.group2set(address)) 140
       0s000243us (      128calls)     AsCollection: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var podsOnNode = Aggregate((appliedToGroup,                                                                                                              nodeName), std.group2set(pod)), var podsByNode = Aggregate((appliedToGroup), std.group2map((nodeName, podsOnNode))) 226
       0s000237us (      318calls)     Concatenate: concatenate rules for AppliedToGroupPodsByNode 234
       0s000233us (      128calls)     AsCollection: NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=appliedToGroups), var appliedToGroup = FlatMap(appliedToGroups), AppliedToGroupSpan(.appliedToGroup=k8spolicy.UID{.uid=appliedToGroup}, .span=groupSpan), var span = Aggregate((policy), std.group_set_unions(groupSpan)) 301
       0s000227us (      194calls)     Map: AddressGroupDescr(.uid=gid, .name=_, .selector=_), not AddressGroupAddress(.addressGroup=gid, .address=_) 156
       0s000220us (      128calls)     AsCollection: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=_, .nodeName=nodeName), var span = Aggregate((appliedToGroup), std.group2set(nodeName)) 245
       0s000220us (      190calls)     Concatenate: concatenate rules for k8spolicy.NetworkPolicy 16
       0s000219us (      286calls)     Concatenate: concatenate rules for __MultiHead_16 210
       0s000209us (      126calls)     Arrange: AddressGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=_}, .podSelector=_}} 56
       0s000199us (      222calls)     Concatenate: concatenate rules for AppliedToGroup 276
       0s000188us (      160calls)     Map: AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), not NetworkPolicyAddressGroup(.np=_, .addressGroup=addressGroup) 350
       0s000184us (      192calls)     Map: AppliedToGroupDescr(.uid=uid, .name=_, .selector=_), not AppliedToGroupPod(.appliedToGroup=uid, .pod=_, .nodeName=_) 206
       0s000183us (      128calls)     AsCollection:  419
       0s000180us (      190calls)     Concatenate: concatenate rules for NetworkPolicyExt 35
       0s000175us (      128calls)     AsCollection:  409
       0s000171us (      128calls)     AsCollection:  399
       0s000170us (      128calls)     Map: AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), NetworkPolicyAddressGroup(.np=np, .addressGroup=addressGroup), NetworkPolicySpan(.policy=np, .span=npSpan), var span = Aggregate((addressGroup), std.group_set_unions(npSpan)) 336
       0s000165us (      222calls)     Concatenate: concatenate rules for AddressGroup 373
       0s000164us (      128calls)     MapInPlace: AppliedToGroupDescr(.uid=uid, .name=_, .selector=_), not AppliedToGroupPod(.appliedToGroup=uid, .pod=_, .nodeName=_) 201
       0s000162us (      190calls)     Concatenate: concatenate rules for NetworkPolicyAddressGroup 77
       0s000162us (      130calls)     MapInPlace: AddressGroupDescr(.uid=gid, .name=_, .selector=_), not AddressGroupAddress(.addressGroup=gid, .address=_) 151
       0s000161us (      222calls)     Concatenate: concatenate rules for NetworkPolicy 386
       0s000154us (      128calls)     Map:  395
       0s000149us (      128calls)     Map: AppliedToGroup.threshold_total 279
       0s000146us (      128calls)     Map: NetworkPolicyAddressGroup{.np=_, .addressGroup=_0} 86
       0s000145us (      128calls)     Map: NetworkPolicyAddressGroup{.np=_, .addressGroup=_0} 92
       0s000142us (      128calls)     Map: AddressGroupAddress{.addressGroup=_0, .address=_} 133
       0s000137us (      128calls)     Map: AddressGroup.threshold_total 376
       0s000137us (      128calls)     Map: NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=appliedToGroups), var appliedToGroup = FlatMap(appliedToGroups), AppliedToGroupSpan(.appliedToGroup=k8spolicy.UID{.uid=appliedToGroup}, .span=groupSpan), var span = Aggregate((policy), std.group_set_unions(groupSpan)) 303
       0s000136us (      128calls)     MapInPlace: AddressGroupDescr(.uid=k8spolicy.UID{.uid=addressGroup}, .name=_, .selector=_), not NetworkPolicyAddressGroup(.np=_, .addressGroup=addressGroup) 345
       0s000132us (      128calls)     Map: AddressGroupAddress(.addressGroup=addressGroup, .address=address), var addresses = Aggregate((addressGroup), std.group2set(address)) 142
       0s000128us (      128calls)     Map: NetworkPolicy.threshold_total 389
       0s000126us (      128calls)     Map:  405
       0s000126us (      128calls)     Map: AddressGroupAddress{.addressGroup=_0, .address=_} 127
       0s000123us (      128calls)     Map: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var podsOnNode = Aggregate((appliedToGroup,                                                                                                              nodeName), std.group2set(pod)) 218
       0s000122us (      128calls)     Map:  415
       0s000119us (      128calls)     Map: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_} 185
       0s000119us (      190calls)     Probe:  403
       0s000118us (      128calls)     Map: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=_, .nodeName=nodeName), var span = Aggregate((appliedToGroup), std.group2set(nodeName)) 247
       0s000118us (      128calls)     Map: AppliedToGroupPod(.appliedToGroup=appliedToGroup, .pod=pod, .nodeName=nodeName), var podsOnNode = Aggregate((appliedToGroup,                                                                                                              nodeName), std.group2set(pod)), var podsByNode = Aggregate((appliedToGroup), std.group2map((nodeName, podsOnNode))) 228
       0s000115us (      128calls)     Map: AppliedToGroupPod{.appliedToGroup=_0, .pod=_, .nodeName=_} 191
       0s000111us (      128calls)     FlatMap: head of NetworkPolicySpan(.policy=policy, .span=std.set_empty()) :- NetworkPolicyDescr(.uid=policy, .name=_, .namespace=_, .rules=_, .appliedToGroups=std.vec_empty()). 307
       0s000105us (      128calls)     Concatenate: concatenate rules for k8spolicy.Namespace 9
       0s000096us (      190calls)     Probe:  423
       0s000086us (      190calls)     Probe:  413
       0s000047us (      126calls)     Input:  8
       0s000018us (      126calls)     Input:  96
       0s000018us (      126calls)     Input:  15
       0s000009us (        4calls)     FlatMap: _ 11
       0s000000us (        0calls)     FlatMap: _ 4
       0s000000us (        0calls)     Input:  137
       0s000000us (        0calls)     Input:  168
       0s000000us (        0calls)     Input:  103
       0s000000us (        0calls)     Input:  18
       0s000000us (        0calls)     Input:  242
       0s000000us (        0calls)     Input:  62
       0s000000us (        0calls)     Input:  265
       0s000000us (        0calls)     Input:  317
       0s000000us (        0calls)     Probe:  427
       0s000000us (        0calls)     FlatMap: arrange AddressGroupDescr[(addressGroup@ AddressGroupDescr{.uid=_, .name=_, .selector=types.GroupSelector{.normalizedName=_, .nsSelector=types.NSSelectorLS{.selector=namespaceSelector}, .podSelector=podSelector}})], k8spolicy.Namespace[(namespace@ k8spolicy.Namespace{.name=_, .uid=_, .labels=_})], k8spolicy.labelSelectorMatches(std.Some{.x=namespaceSelector}, namespace.labels) by (namespace.name) 110
       0s000000us (        0calls)     Input:  1
       0s000000us (        0calls)     Input:  285
       0s000000us (        0calls)     Input:  32
       0s000000us (        0calls)     Input:  38
       0s000000us (        0calls)     Input:  362
       0s000000us (        0calls)     Input:  195
       0s000000us (        0calls)     Input:  213
       0s000000us (        0calls)     Input:  382
       0s000000us (        0calls)     Input:  72
       0s000000us (        0calls)     AsCollection:  425
       0s000000us (        0calls)     Arrange: _ 6
       0s000000us (        0calls)     Concatenate: concatenate rules for __Null 2

